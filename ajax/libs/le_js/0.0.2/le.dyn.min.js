var XMLHttpRequest=function(){var _channel=java.nio.channels.AsynchronousSocketChannel.open();var _method=null;var _address=null;var _path=null;var _headers={"User-Agent":"dyn.xhr/0.0.1"};var _encoder=java.nio.charset.Charset.forName("US-ASCII").newEncoder();_encoder.reset();this.readyState=0;this.onreadystatechange=function(){};this.open=function(method,url,async){_method=method;var uri=new java.net.URI(url);var port=uri.getPort()===-1?80:uri.getPort();_address=new java.net.InetSocketAddress(uri.getHost(),port);_path=uri.getPath()};this.setRequestHeader=function(key,value){_headers[key]=value};var _buildRequest=function(data){var request=_method+" "+_path+" HTTP/1.1\r\n";_headers["Content-Length"]=data.length;_headers["Accept"]="*/*";_headers["Host"]="localhost:8080";for(var k in _headers){request+=k+": "+_headers[k]+"\r\n"}request+="\r\n"+data;return request};var _parseResponse=function(data){var resp=data.split("\r\n");that.status=resp[0].split(" ")[1]};this.status=0;var that=this;this.send=function(data){var req=_buildRequest(data);var cb=java.nio.CharBuffer.wrap(req);var bb=_encoder.encode(cb);_channel.connect(_address,null,new java.nio.channels.CompletionHandler({completed:function(result,attachment){that.readyState=1;_channel.write(bb,null,new java.nio.channels.CompletionHandler({completed:function(result,attachment){var bb=java.nio.ByteBuffer.allocate(4096);_channel.read(bb,null,new java.nio.channels.CompletionHandler({completed:function(result,attachment){var str=new java.lang.String(bb.array());var resp=_parseResponse(str);_channel.close();that.readyState=4;that.onreadystatechange()}}))},failed:function(err,attachment){print(err);_channel.close()}}))},failed:function(err,attachment){print(err);_channel.close()}}))}}(function(root,factory){if(typeof define==="function"&&define.amd){define([root],factory)}else if(typeof exports==="object"){module.exports=factory(root)}else{root.LE=factory(root)}}(this,function(window){"use strict";function LogStream(options){var _traceCode=(Math.random()+Math.PI).toString(36).substring(2,10);var _doTrace=options.trace;var _pageInfo=options.page_info;var _token=options.token;var _print=options.print;var _endpoint="js.logentries.com/v1";var _shouldCall=true;var _SSL=function(){if(typeof XDomainRequest==="undefined"){return options.ssl}return window.location.protocol==="https:"?true:false}();var _backlog=[];var _active=false;var _sentPageInfo=false;if(options.catchall){var oldHandler=window.onerror;var newHandler=function(msg,url,line){_rawLog({error:msg,line:line,location:url}).level("ERROR").send();if(oldHandler){return oldHandler(msg,url,line)}else{return false}};window.onerror=newHandler}var _agentInfo=function(){var nav=window.navigator||{doNotTrack:undefined};var screen=window.screen||{};var location=window.location||{};return{url:location.pathname,referrer:document.referrer,screen:{width:screen.width,height:screen.height},window:{width:window.innerWidth,height:window.innerHeight},browser:{name:nav.appName,version:nav.appVersion,cookie_enabled:nav.cookieEnabled,do_not_track:nav.doNotTrack},platform:nav.platform}};var _getEvent=function(){var raw=null;var args=Array.prototype.slice.call(arguments);if(args.length===0){throw new Error("No arguments!")}else if(args.length===1){raw=args[0]}else{raw=args}return raw};var _rawLog=function(msg){var event=_getEvent.apply(this,arguments);var data={event:event};if(_pageInfo!=="never"){if(!_sentPageInfo||_pageInfo==="per-entry"){_sentPageInfo=true;if(typeof event.screen==="undefined"&&typeof event.browser==="undefined")_rawLog(_agentInfo()).level("PAGE").send()}}if(_doTrace){data.trace=_traceCode}return{level:function(l){if(_print&&typeof console!=="undefined"&&l!=="PAGE"){try{console[l.toLowerCase()].call(console,data)}catch(ex){console.log(data)}}data.level=l;return{send:function(){var cache=[];var serialized=JSON.stringify(data,function(key,value){var _indexOf=function(array,obj){for(var i=0;i<array.length;i++){if(obj===array[i]){return i}}return-1};if(typeof value==="undefined"){return"undefined"}else if(typeof value==="object"&&value!==null){if(_indexOf(cache,value)!==-1){return"<?>"}cache.push(value)}return value});if(_active){_backlog.push(serialized)}else{_apiCall(_token,serialized)}}}}}};this.log=_rawLog;var _apiCall=function(token,data){_active=true;var _getAjaxObject=function(){if(typeof XDomainRequest!=="undefined"){return new XDomainRequest}return new XMLHttpRequest};var request=_getAjaxObject();if(_shouldCall){if(request.constructor===XMLHttpRequest){request.onreadystatechange=function(){if(request.readyState===4){if(request.status>=400){console.error("Couldn't submit events.");if(request.status===410){console.warn("This version of le_js is no longer supported!")}}else{if(request.status===301){console.warn("This version of le_js is deprecated! Consider upgrading.")}if(_backlog.length>0){_apiCall(token,_backlog.shift())}else{_active=false}}}}}else{request.onload=function(){if(_backlog.length>0){_apiCall(token,_backlog.shift())}else{_active=false}}}var uri=(_SSL?"https://":"http://")+_endpoint+"/logs/"+_token;request.open("POST",uri,true);if(request.constructor===XMLHttpRequest){request.setRequestHeader("X-Requested-With","XMLHttpRequest");request.setRequestHeader("Content-type","text/json")}request.send(data)}}}function Logger(options){var logger;var dict={ssl:true,catchall:false,trace:true,page_info:"never",print:false,token:null};if(typeof options==="object")for(var k in options)dict[k]=options[k];else throw new Error("Invalid parameters for createLogStream()");if(dict.token===null){throw new Error("Token not present.")}else{logger=new LogStream(dict)}var _log=function(msg){if(logger){return logger.log.apply(this,arguments)}else throw new Error("You must call LE.init(...) first.")};return{log:function(){_log.apply(this,arguments).level("LOG").send()},warn:function(){_log.apply(this,arguments).level("WARN").send()},error:function(){_log.apply(this,arguments).level("ERROR").send()},info:function(){_log.apply(this,arguments).level("INFO").send()}}}var loggers={};var _getLogger=function(name){if(!loggers.hasOwnProperty(name))throw new Error("Invalid name for logStream");return loggers[name]};var _createLogStream=function(options){if(typeof options.name!=="string")throw new Error("Name not present.");else if(loggers.hasOwnProperty(options.name))throw new Error("Alrready exist this name for a logStream");loggers[options.name]=new Logger(options);return true};var _deprecatedInit=function(options){var dict={name:"default"};if(typeof options==="object")for(var k in options)dict[k]=options[k];else if(typeof options==="string")dict.token=options;else throw new Error("Invalid parameters for init()");return _createLogStream(dict)};return{init:_deprecatedInit,createLogStream:_createLogStream,to:_getLogger,log:function(){for(var k in loggers)loggers[k].log.apply(this,arguments)},warn:function(){for(var k in loggers)loggers[k].warn.apply(this,arguments)},error:function(){for(var k in loggers)loggers[k].error.apply(this,arguments)},info:function(){for(var k in loggers)loggers[k].info.apply(this,arguments)}}}));
