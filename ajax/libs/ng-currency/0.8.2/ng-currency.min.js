angular.module("ng-currency",[]).directive("ngCurrency",["$filter","$locale",function(b,a){return{require:"ngModel",scope:{min:"=min",max:"=max",currencySymbol:"@",ngRequired:"=ngRequired"},link:function(h,g,f,j){function d(k){return RegExp("\\d|\\-|\\"+k,"g")}function i(k){return RegExp("\\-{0,1}((\\"+k+")|([0-9]{1,}\\"+k+"?))&?[0-9]{0,2}","g")}function c(m){m=String(m);var l=a.NUMBER_FORMATS.DECIMAL_SEP;var k=null;if(RegExp("^-[\\s]*$","g").test(m)){m="-0"}if(d(l).test(m)){k=m.match(d(l)).join("").match(i(l));k=k?k[0].replace(l,"."):null}else{cleaned=null}return k}function e(){if(angular.isDefined(h.currencySymbol)){return h.currencySymbol}else{return a.NUMBER_FORMATS.CURRENCY_SYM}}j.$parsers.push(function(l){var k=c(l);return parseFloat(k)});g.on("blur",function(){j.$commitViewValue();g.val(b("currency")(j.$modelValue,e()))});j.$formatters.unshift(function(k){return b("currency")(k,e())});j.$validators.min=function(k){if(!h.ngRequired&&isNaN(k)){return true}if(h.min){return k>=parseFloat(h.min)}return true};j.$validators.max=function(k){if(!h.ngRequired&&isNaN(k)){return true}if(h.max){return k<=parseFloat(h.max)}return true}}}}]);