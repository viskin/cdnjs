(function(window,undefined){if(!window.jQuery){throw"agility.js: jQuery not found"}var document=window.document,location=window.location,$=jQuery,agility,util={},defaultPrototype={},idCounter=0,ROOT_SELECTOR="&";if(!Object.create||Object.create.toString().search(/native code/i)<0){Object.create=function(obj){var Aux=function(){};$.extend(Aux.prototype,obj);return new Aux}}if(!Object.getPrototypeOf||Object.getPrototypeOf.toString().search(/native code/i)<0){if(typeof"test".__proto__==="object"){Object.getPrototypeOf=function(object){return object.__proto__}}else{Object.getPrototypeOf=function(object){return object.constructor.prototype}}}util.isAgility=function(obj){return obj._agility===true};util.proxyAll=function(obj,dest){if(!obj||!dest){throw"agility.js: util.proxyAll needs two arguments"}for(var attr1 in obj){var proxied=obj[attr1];if(typeof obj[attr1]==="function"){proxied=obj[attr1]._noProxy?obj[attr1]:$.proxy(obj[attr1]._preProxy||obj[attr1],dest);proxied._preProxy=obj[attr1]._noProxy?undefined:obj[attr1]._preProxy||obj[attr1];obj[attr1]=proxied}else if(typeof obj[attr1]==="object"){for(var attr2 in obj[attr1]){var proxied2=obj[attr1][attr2];if(typeof obj[attr1][attr2]==="function"){proxied2=obj[attr1][attr2]._noProxy?obj[attr1][attr2]:$.proxy(obj[attr1][attr2]._preProxy||obj[attr1][attr2],dest);proxied2._preProxy=obj[attr1][attr2]._noProxy?undefined:obj[attr1][attr2]._preProxy||obj[attr1][attr2];proxied[attr2]=proxied2}}obj[attr1]=proxied}}};util.size=function(obj){var size=0,key;for(key in obj){size++}return size};defaultPrototype={_agility:true,_container:{append:function(obj,selector){var self=this;if(!util.isAgility(obj)){throw"agility.js: append argument is not an agility object"}this._container.children[obj._id]=obj;this.trigger("append",[obj,selector]);obj.bind("destroy",function(event,id){self._container.remove(id)});return this},prepend:function(obj,selector){var self=this;if(!util.isAgility(obj)){throw"agility.js: prepend argument is not an agility object"}this._container.children[obj._id]=obj;this.trigger("prepend",[obj,selector]);obj.bind("destroy",function(event,id){self._container.remove(id)});return this},remove:function(id){delete this._container.children[id];this.trigger("remove",id);return this},each:function(fn){$.each(this._container.children,fn);return this},empty:function(){this.each(function(){this.destroy()});return this},size:function(){return util.size(this._container.children)}},_events:{parseEventStr:function(eventStr){var eventObj={type:eventStr},spacePos=eventStr.search(/\s/);if(spacePos>-1){eventObj.type=eventStr.substr(0,spacePos);eventObj.selector=eventStr.substr(spacePos+1)}return eventObj},bind:function(eventStr,fn){var eventObj=this._events.parseEventStr(eventStr);if(eventObj.selector){if(eventObj.selector===ROOT_SELECTOR){this.view.$root.bind(eventObj.type,fn)}else{this.view.$root.delegate(eventObj.selector,eventObj.type,fn)}}else{$(this._events.data).bind(eventObj.type,fn)}return this},trigger:function(eventStr,params){var eventObj=this._events.parseEventStr(eventStr);if(eventObj.selector){if(eventObj.selector===ROOT_SELECTOR){this.view.$root.trigger(eventObj.type,params)}else{this.view.$root.find(eventObj.selector).trigger(eventObj.type,params)}}else{$(this._events.data).trigger("_"+eventObj.type,params);$(this._events.data).trigger(eventObj.type,params)}return this}},model:{set:function(arg,params){var self=this;var modified=[];if(typeof arg==="string"){this.model._data.text=arg;modified.push("text")}else if(typeof arg==="object"){if(params&&params.reset){this.model._data=$.extend({},arg)}else{$.extend(this.model._data,arg)}for(var key in arg){modified.push(key)}}else{throw"agility.js: unknown argument type in model.set()"}if(params&&params.silent===true)return this;this.trigger("change");$.each(modified,function(index,val){self.trigger("change:"+val)});return this},get:function(arg){if(arg===undefined){return this.model._data}if(typeof arg==="string"){return this.model._data[arg]}throw"agility.js: unknown argument for getter"},reset:function(){this.model.set(this.model._initData,{reset:true});return this},size:function(){return util.size(this.model._data)},each:function(fn){$.each(this.model._data,fn);return this}},view:{format:'<div data-bind="text"></div>',style:"",$:function(selector){return!selector||selector===ROOT_SELECTOR?this.view.$root:this.view.$root.find(selector)},render:function(){if(this.view.format.length===0){throw"agility.js: empty format in view.render()"}if(this.view.$root.size()===0){this.view.$root=$(this.view.format)}else{this.view.$root.html($(this.view.format).html())}if(this.view.$root.size()===0){throw"agility.js: could not generate html from format"}return this},_parseBindStr:function(str){var obj={key:str},spacePos=str.search(/\s/);if(spacePos>-1){obj.attr=str.substr(0,spacePos);obj.key=str.substr(spacePos+1)}return obj},bindings:function(){var self=this;var $rootNode=this.view.$().filter("[data-bind]");var $childNodes=this.view.$("[data-bind]");$rootNode.add($childNodes).each(function(){var $node=$(this);var bindData=self.view._parseBindStr($node.data("bind"));if($node.is('input[type="checkbox"]')){self.bind("_change:"+bindData.key,function(){$node.prop("checked",self.model.get(bindData.key))});$node.change(function(){var obj={};obj[bindData.key]=$(this).prop("checked");self.model.set(obj)})}else if($node.is("select")){self.bind("_change:"+bindData.key,function(){var nodeName=$node.attr("name");var modelValue=self.model.get(bindData.key);$node.val(modelValue)});$node.change(function(){var obj={};obj[bindData.key]=$node.val();self.model.set(obj)})}else if($node.is('input[type="radio"]')){self.bind("_change:"+bindData.key,function(){var nodeName=$node.attr("name");var modelValue=self.model.get(bindData.key);$node.siblings('input[name="'+nodeName+'"]').filter('[value="'+modelValue+'"]').prop("checked",true)});$node.change(function(){if(!$node.prop("checked"))return;var obj={};obj[bindData.key]=$node.val();self.model.set(obj)})}else if($node.is('input[type="search"]')){self.bind("_change:"+bindData.key,function(){$node.val(self.model.get(bindData.key))});$node.keypress(function(){setTimeout(function(){var obj={};obj[bindData.key]=$node.val();self.model.set(obj)},50)})}else if($node.is('input[type="text"], textarea')){self.bind("_change:"+bindData.key,function(){$node.val(self.model.get(bindData.key))});$node.change(function(){var obj={};obj[bindData.key]=$(this).val();self.model.set(obj)})}else{if(bindData.attr){self.bind("_change:"+bindData.key,function(){$node.attr(bindData.attr,self.model.get(bindData.key))})}else{self.bind("_change:"+bindData.key,function(){$node.text(self.model.get(bindData.key).toString())})}}});return this},sync:function(){var self=this;this.model.each(function(key,val){self.trigger("_change:"+key)});if(this.model.size()>0){this.trigger("_change")}return this},stylize:function(){var objClass,regex=new RegExp(ROOT_SELECTOR,"g");if(this.view.style.length===0||this.view.$root.size()===0){return}if(this.view.hasOwnProperty("style")){objClass="agility_"+this._id;var styleStr=this.view.style.replace(regex,"."+objClass);$("head",window.document).append('<style type="text/css">'+styleStr+"</style>");this.view.$root.addClass(objClass)}else{var ancestorWithStyle=function(object){while(object!==null){object=Object.getPrototypeOf(object);if(object.view.hasOwnProperty("style"))return object._id}return undefined};var ancestorId=ancestorWithStyle(this);objClass="agility_"+ancestorId;this.view.$root.addClass(objClass)}return this}},controller:{_create:function(event){this.view.stylize();this.view.bindings();this.view.sync()},_destroy:function(event){this.view.$().remove()},_append:function(event,obj,selector){this.view.$(selector).append(obj.view.$root)},_prepend:function(event,obj,selector){this.view.$(selector).prepend(obj.view.$root)},_remove:function(event,id){},_change:function(event){}},destroy:function(){this.trigger("destroy",this._id)},append:function(){this._container.append.apply(this,arguments);return this},prepend:function(){this._container.prepend.apply(this,arguments);return this},remove:function(){this._container.remove.apply(this,arguments);return this},size:function(){return this._container.size.apply(this,arguments)},each:function(){return this._container.each.apply(this,arguments)},empty:function(){return this._container.empty.apply(this,arguments)},bind:function(){this._events.bind.apply(this,arguments);return this},trigger:function(){this._events.trigger.apply(this,arguments);return this}};agility=function(){var args=Array.prototype.slice.call(arguments,0),object={},prototype=defaultPrototype;if(typeof args[0]==="object"&&util.isAgility(args[0])){prototype=args[0];args.shift()}object=Object.create(prototype);object.model=Object.create(prototype.model);object.view=Object.create(prototype.view);object.controller=Object.create(prototype.controller);object._container=Object.create(prototype._container);object._events=Object.create(prototype._events);object._id=idCounter++;object._data={};object._events.data={};object._container.children={};object.view.$root=$();object.model._data=object.model._data?$.extend({},object.model._data):{};if(args.length===0){}else if(args.length===1&&typeof args[0]==="object"&&(args[0].model||args[0].view||args[0].controller)){for(var prop in args[0]){if(prop==="model"){$.extend(object.model._data,args[0][prop])}else if(prop==="view"){$.extend(object.view,args[0][prop])}else if(prop==="controller"){$.extend(object.controller,args[0][prop])}else{object[prop]=args[0][prop]}}}else{if(typeof args[0]==="string"){$.extend(object.model._data,{text:args[0]})}else if(typeof args[0]==="object"){$.extend(object.model._data,args[0])}else if(args[0]){throw"agility.js: unknown argument type (model)"}if(typeof args[1]==="string"){object.view.format=args[1]}else if(typeof args[1]==="object"){$.extend(object.view,args[1])}else if(args[1]){throw"agility.js: unknown argument type (view)"}if(typeof args[2]==="string"){object.view.style=args[2];args.splice(2,1)}if(typeof args[2]==="object"){$.extend(object.controller,args[2])}else if(args[2]){throw"agility.js: unknown argument type (controller)"}}object.model._initData=$.extend({},object.model._data);util.proxyAll(object,object);object.view.render();for(var ev in object.controller){if(typeof object.controller[ev]==="function"){object.bind(ev,object.controller[ev])}}object.trigger("create");return object};agility.document=agility({},{},{create:function(){this.view.$root=$("body")}});agility.fn=defaultPrototype;window.agility=window.$$=agility;agility.fn.persist=function(adapter,params){var self=this;self._data.persist=$.extend({adapter:adapter},params);self._data.persist.openRequests=0;this.save=function(){if(self._data.persist.openRequests===0){self.trigger("persist:start")}self._data.persist.openRequests++;this._data.persist.adapter.call(this,{type:self.model.get("id")?"PUT":"POST",id:self.model.get("id"),data:self.model.get(),complete:function(){self._data.persist.openRequests--;if(self._data.persist.openRequests===0){self.trigger("persist:stop")}},success:function(data,textStatus,jqXHR){if(data.id){self.model.set({id:data.id},{silent:true})}else if(jqXHR.getResponseHeader("Location")){self.model.set({id:jqXHR.getResponseHeader("Location").match(/\/([0-9]+)$/)[1]},{silent:true})}self.trigger("persist:save:success")},error:function(){self.trigger("persist:error");self.trigger("persist:save:error")}});return this};this.load=function(){if(this.model.get("id")===undefined)throw"agility.js: load() needs model id";if(self._data.persist.openRequests===0){self.trigger("persist:start")}self._data.persist.openRequests++;this._data.persist.adapter.call(this,{type:"GET",id:this.model.get("id"),complete:function(){self._data.persist.openRequests--;if(self._data.persist.openRequests===0){self.trigger("persist:stop")}},success:function(data,textStatus,jqXHR){self.model.set(data);self.trigger("persist:load:success")},error:function(){self.trigger("persist:error");self.trigger("persist:load:error")}});return this};this.erase=function(){if(this.model.get("id")===undefined)throw"agility.js: erase() needs model id";if(self._data.persist.openRequests===0){self.trigger("persist:start")}self._data.persist.openRequests++;this._data.persist.adapter.call(this,{type:"DELETE",id:this.model.get("id"),complete:function(){self._data.persist.openRequests--;if(self._data.persist.openRequests===0){self.trigger("persist:stop")}},success:function(data,textStatus,jqXHR){self.destroy();self.trigger("persist:erase:success")},error:function(){self.trigger("persist:error");self.trigger("persist:erase:error")}});return this};this.gather=function(proto,method,selectorOrQuery,query){var selector;if(!proto)throw"agility.js plugin persist: gather() needs object prototype";if(!proto._data.persist)throw"agility.js plugin persist: prototype doesn't seem to contain persist() data";if(query){selector=selectorOrQuery}else{if(typeof selectorOrQuery==="string"){selector=selectorOrQuery}else{selector=undefined;query=selectorOrQuery}}if(self._data.persist.openRequests===0){self.trigger("persist:start")}self._data.persist.openRequests++;proto._data.persist.adapter.call(proto,{type:"GET",data:query,complete:function(){self._data.persist.openRequests--;if(self._data.persist.openRequests===0){self.trigger("persist:stop")}},success:function(data){$.each(data,function(index,entry){var obj=$$(proto,entry);if(typeof method==="string"){self[method](obj,selector)}});self.trigger("persist:gather:success",{data:data})},error:function(){self.trigger("persist:error");self.trigger("persist:gather:error")}});return this};return this};agility.adapter={};agility.adapter.restful=function(_params){var params=$.extend({dataType:"json",url:(this._data.persist.baseUrl||"api/")+this._data.persist.collection+(_params.id?"/"+_params.id:"")},_params);$.ajax(params)}})(window);