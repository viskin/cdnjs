{"version":3,"sources":["modules/dropdown.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","placement","bodyEl","matchesSelector","DropdownFactory","$dropdown","options","element","evt","keyCode","onBodyClick","directive","target","hide","stopPropagation","scope","items","$element","querySelectorAll","$rootScope","$new","parentEl","index","forEach","preventDefault","focus","length","show","el","i","call","$timeout","isUndefined","hasClass","content","$isShown","on","$onKeyDown","removeClass","destroy","off","parent","prototype","$window","$sce","restrict","link","falseValueRegExp","attr","transclusion","bsDropdown","$watch","newValue","oldValue","dropdown","key","isString","match","bsShow","isDefined","$on"],"mappings":"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","file":"modules/dropdown.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory(element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function(evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if(!items.length) return;\n          var index;\n          angular.forEach(items, function(el, i) {\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if(evt.keyCode === 38 && index > 0) index--;\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\n          else if(angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function() {\n          if(!scope.content) return;\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            options.keyboard && $dropdown.$element && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function() {\n          if(!$dropdown.$isShown) return;\n          options.keyboard && $dropdown.$element && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function() {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick(evt) {\n          if(evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container'], function(key) {\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\n            options[key] = false;\n        });\n\n        // Support scope as an object\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\n          scope.content = newValue;\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!dropdown || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n          newValue === true ? dropdown.show() : dropdown.hide();\n        });\n\n        // Initialize dropdown\n        var dropdown = $dropdown(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (dropdown) dropdown.destroy();\n          options = null;\n          dropdown = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}