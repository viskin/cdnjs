{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-formly-templates-bootstrap.min.js","webpack:///webpack/bootstrap 65f4cf1d593cbb1555c9","webpack:///./index.js","webpack:///./angular-fix/index.js","webpack:///./index.common.js","webpack:///./run/addons.js","webpack:///./run/description.js","webpack:///./run/index.js","webpack:///./types/checkbox.js","webpack:///./types/index.js","webpack:///./types/input.js","webpack:///./types/multiCheckbox.js","webpack:///./types/radio.js","webpack:///./types/select.js","webpack:///./types/textarea.js","webpack:///./wrappers/index.js","webpack:///./run/addons.html","webpack:///./types/checkbox.html","webpack:///./types/multiCheckbox.html","webpack:///./types/radio.html","webpack:///./types/select.html","webpack:///./wrappers/has-error.html","webpack:///./wrappers/label.html","webpack:///external \"angular\"","webpack:///external {\"root\":\"apiCheck\",\"amd\":\"api-check\",\"commonjs2\":\"api-check\",\"commonjs\":\"api-check\"}","webpack:///external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_21__","__WEBPACK_EXTERNAL_MODULE_22__","__WEBPACK_EXTERNAL_MODULE_23__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","angular","version","window","ngModuleName","ngModule","constant","output","prefix","addAddonsManipulator","formlyConfig","formlyBootstrapApiCheck","addonTemplate","addonChecker","shape","class","string","optional","text","strict","api","templateOptions","addonLeft","addonRight","templateManipulators","preWrapper","push","template","options","type","warn","replace","run","$inject","addDescriptionManipulator","scope","isDefined","description","el","document","createElement","appendChild","element","modelEls","querySelectorAll","attr","innerHTML","_interopRequire","obj","__esModule","addons","addCheckboxType","formlyConfigProvider","setType","name","wrapper","apiCheck","label","apiCheckInstance","config","addInputType","arrayOf","object","labelProp","valueProp","controller","$scope","setModel","model","opts","key","forEach","multiCheckbox","checked","checkbox","index","to","change","modelValue","isArray","v","indexOf","addRadioType","addSelectType","groupProp","addTextareaType","defaultOptions","ngModelAttrs","rows","attribute","cols","number","addWrappers","setWrapper","required","bool"],"mappings":"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","file":"angular-formly-templates-bootstrap.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"api-check\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesBootstrap\"] = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTemplatesBootstrap\"] = factory(root[\"angular\"], root[\"apiCheck\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"api-check\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesBootstrap\"] = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTemplatesBootstrap\"] = factory(root[\"angular\"], root[\"apiCheck\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = __webpack_require__(2);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// some versions of angular don't export the angular module properly,\n\t// so we get it from window in this case.\n\t\"use strict\";\n\t\n\tvar angular = __webpack_require__(21);\n\tif (!angular.version) {\n\t  angular = window.angular;\n\t}\n\tmodule.exports = angular;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar ngModuleName = \"formlyBootstrap\";\n\tvar angular = __webpack_require__(1);\n\tvar ngModule = angular.module(ngModuleName, [__webpack_require__(23)]);\n\tngModule.constant(\"formlyBootstrapApiCheck\", __webpack_require__(22)({\n\t  output: {\n\t    prefix: \"angular-formly-bootstrap\"\n\t  }\n\t}));\n\tngModule.constant(\"formlyBootstrapVersion\", (\"4.0.7\"));\n\t\n\t__webpack_require__(13)(ngModule);\n\t__webpack_require__(7)(ngModule);\n\t__webpack_require__(5)(ngModule);\n\t\n\tmodule.exports = ngModuleName;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.run(addAddonsManipulator);\n\t\n\t  function addAddonsManipulator(formlyConfig, formlyBootstrapApiCheck) {\n\t    var addonTemplate = __webpack_require__(14);\n\t    var addonChecker = formlyBootstrapApiCheck.shape({\n\t      \"class\": formlyBootstrapApiCheck.string.optional,\n\t      text: formlyBootstrapApiCheck.string.optional\n\t    }).strict.optional;\n\t    var api = formlyBootstrapApiCheck.shape({\n\t      templateOptions: formlyBootstrapApiCheck.shape({\n\t        addonLeft: addonChecker,\n\t        addonRight: addonChecker\n\t      })\n\t    });\n\t    formlyConfig.templateManipulators.preWrapper.push(function (template, options) {\n\t      if (options.type !== \"input\" || !options.templateOptions.addonLeft && !options.templateOptions.addonRight) {\n\t        return template;\n\t      }\n\t      formlyBootstrapApiCheck.warn([api], [options]);\n\t      return addonTemplate.replace(\"<formly-transclude></formly-transclude>\", template);\n\t    });\n\t  }\n\t  addAddonsManipulator.$inject = [\"formlyConfig\", \"formlyBootstrapApiCheck\"];\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.run(addDescriptionManipulator);\n\t\n\t  function addDescriptionManipulator(formlyConfig) {\n\t    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n\t      if (angular.isDefined(options.templateOptions.description) && options.type !== \"radio\" && options.type !== \"checkbox\") {\n\t        var el = document.createElement(\"div\");\n\t        el.appendChild(angular.element(template)[0]);\n\t        var modelEls = angular.element(el.querySelectorAll(\"[ng-model]\"));\n\t        if (modelEls) {\n\t          el.appendChild(angular.element(\"<p id=\\\"\" + scope.id + \"_description\\\"\" + \"class=\\\"help-block\\\"\" + \"ng-if=\\\"to.description\\\">\" + \"{{to.description}}\" + \"</p>\")[0]);\n\t          modelEls.attr(\"aria-describedby\", scope.id + \"_description\");\n\t          return el.innerHTML;\n\t        } else {\n\t          return template;\n\t        }\n\t      } else {\n\t        return template;\n\t      }\n\t    });\n\t  }\n\t  addDescriptionManipulator.$inject = [\"formlyConfig\"];\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar addons = _interopRequire(__webpack_require__(3));\n\t\n\tvar description = _interopRequire(__webpack_require__(4));\n\t\n\tmodule.exports = function (ngModule) {\n\t  addons(ngModule);\n\t  description(ngModule);\n\t};\n\t\n\t//export default ngModule => {\n\t//  require('./addons')(ngModule);\n\t//  require('./description')(ngModule);\n\t//};\n\t//\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: \"checkbox\",\n\t      template: __webpack_require__(15),\n\t      wrapper: [\"bootstrapHasError\"],\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          label: c.string\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  __webpack_require__(6)(ngModule);\n\t  __webpack_require__(9)(ngModule);\n\t  __webpack_require__(8)(ngModule);\n\t  __webpack_require__(10)(ngModule);\n\t  __webpack_require__(11)(ngModule);\n\t  __webpack_require__(12)(ngModule);\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.config(addInputType);\n\t\n\t  function addInputType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: \"input\",\n\t      template: \"<input class=\\\"form-control\\\" ng-model=\\\"model[options.key]\\\">\",\n\t      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"]\n\t    });\n\t  }\n\t  addInputType.$inject = [\"formlyConfigProvider\"];\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: \"multiCheckbox\",\n\t      template: __webpack_require__(16),\n\t      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"],\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c,\n\t      controller: /* @ngInject */[\"$scope\", function controller($scope) {\n\t        var to = $scope.to;\n\t        var opts = $scope.options;\n\t        $scope.multiCheckbox = {\n\t          checked: [],\n\t          change: setModel\n\t        };\n\t\n\t        // initialize the checkboxes check property\n\t        var modelValue = $scope.model[opts.key];\n\t        if (angular.isArray(modelValue)) {\n\t          (function () {\n\t            var valueProp = to.valueProp || \"value\";\n\t            angular.forEach(to.options, function (v, index) {\n\t              $scope.multiCheckbox.checked[index] = modelValue.indexOf(v[valueProp]) !== -1;\n\t            });\n\t          })();\n\t        }\n\t\n\t        function setModel() {\n\t          $scope.model[opts.key] = [];\n\t          angular.forEach($scope.multiCheckbox.checked, function (checkbox, index) {\n\t            if (checkbox) {\n\t              $scope.model[opts.key].push(to.options[index][to.valueProp || \"value\"]);\n\t            }\n\t          });\n\t        }\n\t      }]\n\t    });\n\t  }\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.config(addRadioType);\n\t\n\t  function addRadioType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: \"radio\",\n\t      template: __webpack_require__(17),\n\t      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"],\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addRadioType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.config(addSelectType);\n\t\n\t  function addSelectType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: \"select\",\n\t      template: __webpack_require__(18),\n\t      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"],\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional,\n\t          groupProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addSelectType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.config(addTextareaType);\n\t\n\t  function addTextareaType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: \"textarea\",\n\t      template: \"<textarea class=\\\"form-control\\\" ng-model=\\\"model[options.key]\\\"></textarea>\",\n\t      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"],\n\t      defaultOptions: {\n\t        ngModelAttrs: {\n\t          rows: { attribute: \"rows\" },\n\t          cols: { attribute: \"cols\" }\n\t        }\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          rows: c.number.optional,\n\t          cols: c.number.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addTextareaType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  ngModule.config(addWrappers);\n\t\n\t  function addWrappers(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setWrapper([{\n\t      name: \"bootstrapLabel\",\n\t      template: __webpack_require__(20),\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          label: c.string,\n\t          required: c.bool.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    }, { name: \"bootstrapHasError\", template: __webpack_require__(19) }]);\n\t  }\n\t  addWrappers.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div ng-class=\\\"{'input-group': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonLeft\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonRight\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\"\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n             ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n    <label>\\n      <input type=\\\"radio\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             tabindex=\\\"0\\\"\\n             ng-value=\\\"option[to.valueProp || 'value']\\\"\\n             ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<select class=\\\"form-control\\\"\\n        ng-model=\\\"model[options.key]\\\"\\n        ng-options=\\\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\\\">\\n</select>\\n\"\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"form-group\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div>\\n  <label for=\\\"{{id}}\\\" class=\\\"control-label\\\">\\n    {{to.label}}\\n    {{to.required ? '*' : ''}}\\n  </label>\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-formly-templates-bootstrap.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 65f4cf1d593cbb1555c9\n **/","\"use strict\";\n\nmodule.exports = require(\"./index.common\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","// some versions of angular don't export the angular module properly,\n// so we get it from window in this case.\n\"use strict\";\n\nvar angular = require(\"angular\");\nif (!angular.version) {\n  angular = window.angular;\n}\nmodule.exports = angular;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./angular-fix/index.js\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\n\nvar ngModuleName = \"formlyBootstrap\";\nvar angular = require(\"./angular-fix\");\nvar ngModule = angular.module(ngModuleName, [require(\"angular-formly\")]);\nngModule.constant(\"formlyBootstrapApiCheck\", require(\"api-check\")({\n  output: {\n    prefix: \"angular-formly-bootstrap\"\n  }\n}));\nngModule.constant(\"formlyBootstrapVersion\", VERSION);\n\nrequire(\"./wrappers\")(ngModule);\nrequire(\"./types\")(ngModule);\nrequire(\"./run\")(ngModule);\n\nmodule.exports = ngModuleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.common.js\n ** module id = 2\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.run(addAddonsManipulator);\n\n  function addAddonsManipulator(formlyConfig, formlyBootstrapApiCheck) {\n    var addonTemplate = require(\"./addons.html\");\n    var addonChecker = formlyBootstrapApiCheck.shape({\n      \"class\": formlyBootstrapApiCheck.string.optional,\n      text: formlyBootstrapApiCheck.string.optional\n    }).strict.optional;\n    var api = formlyBootstrapApiCheck.shape({\n      templateOptions: formlyBootstrapApiCheck.shape({\n        addonLeft: addonChecker,\n        addonRight: addonChecker\n      })\n    });\n    formlyConfig.templateManipulators.preWrapper.push(function (template, options) {\n      if (options.type !== \"input\" || !options.templateOptions.addonLeft && !options.templateOptions.addonRight) {\n        return template;\n      }\n      formlyBootstrapApiCheck.warn([api], [options]);\n      return addonTemplate.replace(\"<formly-transclude></formly-transclude>\", template);\n    });\n  }\n  addAddonsManipulator.$inject = [\"formlyConfig\", \"formlyBootstrapApiCheck\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./run/addons.js\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.run(addDescriptionManipulator);\n\n  function addDescriptionManipulator(formlyConfig) {\n    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n      if (angular.isDefined(options.templateOptions.description) && options.type !== \"radio\" && options.type !== \"checkbox\") {\n        var el = document.createElement(\"div\");\n        el.appendChild(angular.element(template)[0]);\n        var modelEls = angular.element(el.querySelectorAll(\"[ng-model]\"));\n        if (modelEls) {\n          el.appendChild(angular.element(\"<p id=\\\"\" + scope.id + \"_description\\\"\" + \"class=\\\"help-block\\\"\" + \"ng-if=\\\"to.description\\\">\" + \"{{to.description}}\" + \"</p>\")[0]);\n          modelEls.attr(\"aria-describedby\", scope.id + \"_description\");\n          return el.innerHTML;\n        } else {\n          return template;\n        }\n      } else {\n        return template;\n      }\n    });\n  }\n  addDescriptionManipulator.$inject = [\"formlyConfig\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./run/description.js\n ** module id = 4\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar addons = _interopRequire(require(\"./addons\"));\n\nvar description = _interopRequire(require(\"./description\"));\n\nmodule.exports = function (ngModule) {\n  addons(ngModule);\n  description(ngModule);\n};\n\n//export default ngModule => {\n//  require('./addons')(ngModule);\n//  require('./description')(ngModule);\n//};\n//\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./run/index.js\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    var c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: \"checkbox\",\n      template: require(\"./checkbox.html\"),\n      wrapper: [\"bootstrapHasError\"],\n      apiCheck: {\n        templateOptions: c.shape({\n          label: c.string\n        })\n      },\n      apiCheckInstance: c\n    });\n  }\n  addCheckboxType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/checkbox.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  require(\"./checkbox\")(ngModule);\n  require(\"./multiCheckbox\")(ngModule);\n  require(\"./input\")(ngModule);\n  require(\"./radio\")(ngModule);\n  require(\"./select\")(ngModule);\n  require(\"./textarea\")(ngModule);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/index.js\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addInputType);\n\n  function addInputType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: \"input\",\n      template: \"<input class=\\\"form-control\\\" ng-model=\\\"model[options.key]\\\">\",\n      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"]\n    });\n  }\n  addInputType.$inject = [\"formlyConfigProvider\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/input.js\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    var c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: \"multiCheckbox\",\n      template: require(\"./multiCheckbox.html\"),\n      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"],\n      apiCheck: {\n        templateOptions: c.shape({\n          options: c.arrayOf(c.object),\n          labelProp: c.string.optional,\n          valueProp: c.string.optional\n        })\n      },\n      apiCheckInstance: c,\n      controller: /* @ngInject */[\"$scope\", function controller($scope) {\n        var to = $scope.to;\n        var opts = $scope.options;\n        $scope.multiCheckbox = {\n          checked: [],\n          change: setModel\n        };\n\n        // initialize the checkboxes check property\n        var modelValue = $scope.model[opts.key];\n        if (angular.isArray(modelValue)) {\n          (function () {\n            var valueProp = to.valueProp || \"value\";\n            angular.forEach(to.options, function (v, index) {\n              $scope.multiCheckbox.checked[index] = modelValue.indexOf(v[valueProp]) !== -1;\n            });\n          })();\n        }\n\n        function setModel() {\n          $scope.model[opts.key] = [];\n          angular.forEach($scope.multiCheckbox.checked, function (checkbox, index) {\n            if (checkbox) {\n              $scope.model[opts.key].push(to.options[index][to.valueProp || \"value\"]);\n            }\n          });\n        }\n      }]\n    });\n  }\n  addCheckboxType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/multiCheckbox.js\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addRadioType);\n\n  function addRadioType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    var c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: \"radio\",\n      template: require(\"./radio.html\"),\n      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"],\n      apiCheck: {\n        templateOptions: c.shape({\n          options: c.arrayOf(c.object),\n          labelProp: c.string.optional,\n          valueProp: c.string.optional\n        })\n      },\n      apiCheckInstance: c\n    });\n  }\n  addRadioType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/radio.js\n ** module id = 10\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addSelectType);\n\n  function addSelectType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    var c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: \"select\",\n      template: require(\"./select.html\"),\n      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"],\n      apiCheck: {\n        templateOptions: c.shape({\n          options: c.arrayOf(c.object),\n          labelProp: c.string.optional,\n          valueProp: c.string.optional,\n          groupProp: c.string.optional\n        })\n      },\n      apiCheckInstance: c\n    });\n  }\n  addSelectType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/select.js\n ** module id = 11\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addTextareaType);\n\n  function addTextareaType(formlyConfigProvider, formlyBootstrapApiCheck) {\n    var c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setType({\n      name: \"textarea\",\n      template: \"<textarea class=\\\"form-control\\\" ng-model=\\\"model[options.key]\\\"></textarea>\",\n      wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"],\n      defaultOptions: {\n        ngModelAttrs: {\n          rows: { attribute: \"rows\" },\n          cols: { attribute: \"cols\" }\n        }\n      },\n      apiCheck: {\n        templateOptions: c.shape({\n          rows: c.number.optional,\n          cols: c.number.optional\n        })\n      },\n      apiCheckInstance: c\n    });\n  }\n  addTextareaType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/textarea.js\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addWrappers);\n\n  function addWrappers(formlyConfigProvider, formlyBootstrapApiCheck) {\n    var c = formlyBootstrapApiCheck;\n    formlyConfigProvider.setWrapper([{\n      name: \"bootstrapLabel\",\n      template: require(\"./label.html\"),\n      apiCheck: {\n        templateOptions: c.shape({\n          label: c.string,\n          required: c.bool.optional\n        })\n      },\n      apiCheckInstance: c\n    }, { name: \"bootstrapHasError\", template: require(\"./has-error.html\") }]);\n  }\n  addWrappers.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/index.js\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = \"<div ng-class=\\\"{'input-group': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonLeft\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonRight\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./run/addons.html\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/checkbox.html\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n             ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/multiCheckbox.html\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n    <label>\\n      <input type=\\\"radio\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             tabindex=\\\"0\\\"\\n             ng-value=\\\"option[to.valueProp || 'value']\\\"\\n             ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/radio.html\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = \"<select class=\\\"form-control\\\"\\n        ng-model=\\\"model[options.key]\\\"\\n        ng-options=\\\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\\\">\\n</select>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/select.html\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"form-group\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/has-error.html\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = \"<div>\\n  <label for=\\\"{{id}}\\\" class=\\\"control-label\\\">\\n    {{to.label}}\\n    {{to.required ? '*' : ''}}\\n  </label>\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/label.html\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"apiCheck\",\"amd\":\"api-check\",\"commonjs2\":\"api-check\",\"commonjs\":\"api-check\"}\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}\n ** module id = 23\n ** module chunks = 0\n **/"],"sourceRoot":""}