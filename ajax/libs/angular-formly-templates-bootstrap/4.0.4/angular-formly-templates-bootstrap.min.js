// angular-formly-templates-bootstrap version 4.0.4 built with ♥ by Astrism <astrisms@gmail.com>, Kent C. Dodds <kent@doddsfamily.us> (ó ì_í)=óò=(ì_í ò)

!function(o,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("angular"),require("api-check"),require("angular-formly")):"function"==typeof define&&define.amd?define(["angular","api-check","angular-formly"],t):"object"==typeof exports?exports.ngFormlyTemplatesBootstrap=t(require("angular"),require("api-check"),require("angular-formly")):o.ngFormlyTemplatesBootstrap=t(o.angular,o.apiCheck,o.ngFormly)}(this,function(o,t,e){return function(o){function t(n){if(e[n])return e[n].exports;var r=e[n]={exports:{},id:n,loaded:!1};return o[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var e={};return t.m=o,t.c=e,t.p="",t(0)}([function(o,t,e){"use strict";o.exports=e(2)},function(o,t,e){"use strict";var n=e(21);n.version||(n=window.angular),o.exports=n},function(o,t,e){"use strict";var n="formlyBootstrap",r=e(1),a=r.module(n,[e(23)]);a.constant("formlyBootstrapApiCheck",e(22)({output:{prefix:"angular-formly-bootstrap"}})),a.constant("formlyBootstrapVersion","4.0.4"),e(13)(a),e(7)(a),e(5)(a),o.exports=n},function(o,t,e){"use strict";o.exports=function(o){function t(o,t){var n=e(14),r=t.shape({"class":t.string.optional,text:t.string.optional}).strict.optional;o.templateManipulators.preWrapper.push(function(o,e){return"input"!==e.type||!e.templateOptions.addonLeft&&!e.templateOptions.addonRight?o:(t.warn(t.shape({templateOptions:t.shape({addonLeft:r,addonRight:r})}),{length:1,0:e}),n.replace("<formly-transclude></formly-transclude>",o))})}o.run(t),t.$inject=["formlyConfig","formlyBootstrapApiCheck"]}},function(o,t,e){"use strict";o.exports=function(o){function t(o){o.templateManipulators.preWrapper.push(function(o,t,e){if(angular.isDefined(t.templateOptions.description)&&"radio"!==t.type&&"checkbox"!==t.type){var n=document.createElement("div");n.appendChild(angular.element(o)[0]);var r=angular.element(n.querySelectorAll("[ng-model]"));return r?(n.appendChild(angular.element('<p id="'+e.id+'_description"class="help-block"ng-if="to.description">{{to.description}}</p>')[0]),r.attr("aria-describedby",e.id+"_description"),n.innerHTML):o}return o})}o.run(t),t.$inject=["formlyConfig"]}},function(o,t,e){"use strict";var n=function(o){return o&&o.__esModule?o["default"]:o},r=n(e(3)),a=n(e(4));o.exports=function(o){r(o),a(o)}},function(o,t,e){"use strict";o.exports=function(o){function t(o,t){var n=t;o.setType({name:"checkbox",template:e(15),wrapper:["bootstrapHasError"],apiCheck:{templateOptions:n.shape({label:n.string})},apiCheckInstance:n})}o.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(o,t,e){"use strict";o.exports=function(o){e(6)(o),e(9)(o),e(8)(o),e(10)(o),e(11)(o),e(12)(o)}},function(o,t,e){"use strict";o.exports=function(o){function t(o){o.setType({name:"input",template:'<input class="form-control" ng-model="model[options.key]">',wrapper:["bootstrapLabel","bootstrapHasError"]})}o.config(t),t.$inject=["formlyConfigProvider"]}},function(o,t,e){"use strict";o.exports=function(o){function t(o,t){var n=t;o.setType({name:"multiCheckbox",template:e(16),wrapper:["bootstrapLabel","bootstrapHasError"],apiCheck:{templateOptions:n.shape({options:n.arrayOf(n.object),labelProp:n.string.optional,valueProp:n.string.optional})},apiCheckInstance:n,controller:["$scope",function(o){function t(){o.model[n.key]=[],angular.forEach(o.multiCheckbox.checked,function(t,r){t&&o.model[n.key].push(e.options[r][e.valueProp||"value"])})}var e=o.to,n=o.options;o.multiCheckbox={checked:[],change:t};var r=o.model[n.key],a=e.valueProp||"value";angular.forEach(e.options,function(t,e){o.multiCheckbox.checked[e]=-1!==r.indexOf(t[a])})}]})}o.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(o,t,e){"use strict";o.exports=function(o){function t(o,t){var n=t;o.setType({name:"radio",template:e(17),wrapper:["bootstrapLabel","bootstrapHasError"],apiCheck:{templateOptions:n.shape({options:n.arrayOf(n.object),labelProp:n.string.optional,valueProp:n.string.optional})},apiCheckInstance:n})}o.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(o,t,e){"use strict";o.exports=function(o){function t(o,t){var n=t;o.setType({name:"select",template:e(18),wrapper:["bootstrapLabel","bootstrapHasError"],apiCheck:{templateOptions:n.shape({options:n.arrayOf(n.object),labelProp:n.string.optional,valueProp:n.string.optional,groupProp:n.string.optional})},apiCheckInstance:n})}o.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(o,t,e){"use strict";o.exports=function(o){function t(o,t){var e=t;o.setType({name:"textarea",template:'<textarea class="form-control" ng-model="model[options.key]"></textarea>',wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:{ngModelAttrs:{rows:{attribute:"rows"},cols:{attribute:"cols"}}},apiCheck:{templateOptions:e.shape({rows:e.number.optional,cols:e.number.optional})},apiCheckInstance:e})}o.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(o,t,e){"use strict";o.exports=function(o){function t(o,t){var n=t;o.setWrapper([{name:"bootstrapLabel",template:e(20),apiCheck:{templateOptions:n.shape({label:n.string,required:n.bool.optional})},apiCheckInstance:n},{name:"bootstrapHasError",template:e(19)}])}o.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(o,t,e){o.exports='<div ng-class="{\'input-group\': to.addonLeft || to.addonRight}">\n    <div class="input-group-addon" ng-if="to.addonLeft">\n        <i class="{{to.addonLeft.class}}" ng-if="to.addonLeft.class"></i>\n        <span ng-if="to.addonLeft.text">{{to.addonLeft.text}}</span>\n    </div>\n    <formly-transclude></formly-transclude>\n    <div class="input-group-addon" ng-if="to.addonRight">\n        <i class="{{to.addonRight.class}}" ng-if="to.addonRight.class"></i>\n        <span ng-if="to.addonRight.text">{{to.addonRight.text}}</span>\n    </div>\n</div>'},function(o,t,e){o.exports='<div class="checkbox">\n	<label>\n		<input type="checkbox"\n           class="formly-field-checkbox"\n		       ng-model="model[options.key]">\n		{{to.label}}\n		{{to.required ? \'*\' : \'\'}}\n	</label>\n</div>\n'},function(o,t,e){o.exports='<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="checkbox">\n    <label>\n      <input type="checkbox"\n             id="{{id + \'_\'+ $index}}"\n             ng-model="multiCheckbox.checked[$index]"\n             ng-change="multiCheckbox.change()">\n      {{option[to.labelProp || \'name\']}}\n    </label>\n  </div>\n</div>\n'},function(o,t,e){o.exports='<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="radio">\n    <label>\n      <input type="radio"\n             id="{{id + \'_\'+ $index}}"\n             tabindex="0"\n             ng-value="option[to.valueProp || \'value\']"\n             ng-model="model[options.key]">\n      {{option[to.labelProp || \'name\']}}\n    </label>\n  </div>\n</div>\n'},function(o,t,e){o.exports="<select class=\"form-control\"\n        ng-model=\"model[options.key]\"\n        ng-options=\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\">\n</select>\n"},function(o,t,e){o.exports='<div class="form-group" ng-class="{\'has-error\': showError}">\n  <formly-transclude></formly-transclude>\n</div>\n'},function(o,t,e){o.exports="<div>\n  <label for=\"{{id}}\" class=\"control-label\">\n    {{to.label}}\n    {{to.required ? '*' : ''}}\n  </label>\n  <formly-transclude></formly-transclude>\n</div>\n"},function(t,e,n){t.exports=o},function(o,e,n){o.exports=t},function(o,t,n){o.exports=e}])});
//# sourceMappingURL=angular-formly-templates-bootstrap.min.js.map