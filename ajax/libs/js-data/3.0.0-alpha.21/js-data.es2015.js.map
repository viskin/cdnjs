{"version":3,"file":"js-data.es2015.js","sources":["../src/utils.js","../src/Component.js","../src/Query.js","../lib/mindex/utils.js","../lib/mindex/index.js","../src/Collection.js","../src/decorators.js","../src/Record.js","../src/Schema.js","../src/Mapper.js","../src/Container.js","../src/LinkedCollection.js","../src/DataStore.js","../src/index.js"],"sourcesContent":["/**\n * @name utils\n * @memberof module:js-data\n * @type {Object}\n * @property {Function} addHiddenPropsToTarget TODO\n * @property {Function} classCallCheck TODO\n * @property {Function} copy TODO\n * @property {Function} deepMixIn TODO\n * @property {Function} eventify TODO\n * @property {Function} extend TODO\n * @property {Function} fillIn TODO\n * @property {Function} fromJson TODO\n * @property {Function} get TODO\n * @property {Function} getSuper TODO\n * @property {Function} intersection TODO\n * @property {Function} isArray TODO\n * @property {Function} isBlacklisted TODO\n * @property {boolean} isBrowser TODO\n * @property {Function} isBoolean TODO\n * @property {Function} isFunction TODO\n * @property {Function} isInteger TODO\n * @property {Function} isNull TODO\n * @property {Function} isNumber TODO\n * @property {Function} isObject TODO\n * @property {Function} isRegExp TODO\n * @property {Function} isSorN TODO\n * @property {Function} isString TODO\n * @property {Function} isUndefined TODO\n * @property {Function} possibleConstructorReturn TODO\n * @property {Function} reject TODO\n * @property {Function} resolve TODO\n * @property {Function} set TODO\n * @property {Function} toJson TODO\n */\n\nconst INFINITY = 1 / 0\nconst MAX_INTEGER = 1.7976931348623157e+308\nconst BOOL_TAG = '[object Boolean]'\nconst DATE_TAG = '[object Date]'\nconst FUNC_TAG = '[object Function]'\nconst NUMBER_TAG = '[object Number]'\nconst OBJECT_TAG = '[object Object]'\nconst REGEXP_TAG = '[object RegExp]'\nconst STRING_TAG = '[object String]'\nconst objToString = Object.prototype.toString\nconst PATH = /^(.+)\\.(.+)$/\n\nconst toInteger = function (value) {\n  if (!value) {\n    return 0\n  }\n  // Coerce to number\n  value = +value\n  if (value === INFINITY || value === -INFINITY) {\n    const sign = (value < 0 ? -1 : 1)\n    return sign * MAX_INTEGER\n  }\n  const remainder = value % 1\n  return value === value ? (remainder ? value - remainder : value) : 0 // eslint-disable-line\n}\n\nconst toStr = function (value) {\n  return objToString.call(value)\n}\n\nconst isPlainObject = function (value) {\n  return (!!value && typeof value === 'object' && value.constructor === Object)\n}\n\nconst mkdirP = function (object, path) {\n  if (!path) {\n    return object\n  }\n  const parts = path.split('.')\n  parts.forEach(function (key) {\n    if (!object[key]) {\n      object[key] = {}\n    }\n    object = object[key]\n  })\n  return object\n}\n\nconst utils = {\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  Promise: Promise,\n\n  /**\n   * Shallow copy properties from src to dest that meet the following criteria:\n   * - own enumerable\n   * - not a function\n   * - does not start with \"_\"\n   *\n   * @ignore\n   * @param {Object} dest Destination object.\n   * @param {Object} src Source object.\n   */\n  _: function (dest, src) {\n    for (var key in dest) {\n      let value = dest[key]\n      if (src[key] === undefined && !utils.isFunction(value) && key && key.indexOf('_') !== 0) {\n        src[key] = value\n      }\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  _forRelation: function (opts, def, fn, ctx) {\n    const relationName = def.relation\n    let containedName = null\n    let index\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    if ((index = utils._getIndex(opts.with, relationName)) >= 0) {\n      containedName = relationName\n    } else if ((index = utils._getIndex(opts.with, def.localField)) >= 0) {\n      containedName = def.localField\n    }\n\n    if (opts.withAll) {\n      fn.call(ctx, def, {})\n      return\n    } else if (!containedName) {\n      return\n    }\n    let optsCopy = {}\n    utils.fillIn(optsCopy, def.getRelation())\n    utils.fillIn(optsCopy, opts)\n    optsCopy.with = opts.with.slice()\n    optsCopy._activeWith = optsCopy.with.splice(index, 1)[0]\n    optsCopy.with.forEach(function (relation, i) {\n      if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\n        optsCopy.with[i] = relation.substr(containedName.length + 1)\n      } else {\n        optsCopy.with[i] = ''\n      }\n    })\n    fn.call(ctx, def, optsCopy)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  _getIndex: function (list, relation) {\n    let index = -1\n    list.forEach(function (_relation, i) {\n      if (_relation === relation) {\n        index = i\n        return false\n      } else if (utils.isObject(_relation)) {\n        if (_relation.relation === relation) {\n          index = i\n          return false\n        }\n      }\n    })\n    return index\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  addHiddenPropsToTarget: function (target, props) {\n    const map = {}\n    utils.forOwn(props, function (value, key) {\n      map[key] = {\n        writable: true,\n        value\n      }\n    })\n    Object.defineProperties(target, map)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  areDifferent: function (a, b, opts) {\n    opts || (opts = {})\n    const diff = utils.diffObjects(a, b, opts)\n    const diffCount = Object.keys(diff.added).length +\n      Object.keys(diff.removed).length +\n      Object.keys(diff.changed).length\n    return diffCount > 0\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  classCallCheck: function (instance, ctor) {\n    if (!(instance instanceof ctor)) {\n      throw new TypeError('Cannot call a class as a function')\n    }\n  },\n\n  /**\n   * Deep copy a value.\n   *\n   * @ignore\n   * @param {*} from Value to deep copy.\n   * @return {*} Deep copy of `from`.\n   */\n  copy: function (from, to, stackFrom, stackTo, blacklist, plain) {\n    if (!to) {\n      to = from\n      if (from) {\n        if (utils.isArray(from)) {\n          to = utils.copy(from, [], stackFrom, stackTo, blacklist, plain)\n        } else if (utils.isDate(from)) {\n          to = new Date(from.getTime())\n        } else if (utils.isRegExp(from)) {\n          to = new RegExp(from.source, from.toString().match(/[^\\/]*$/)[0])\n          to.lastIndex = from.lastIndex\n        } else if (utils.isObject(from)) {\n          if (plain) {\n            to = utils.copy(from, {}, stackFrom, stackTo, blacklist, plain)\n          } else {\n            to = utils.copy(from, Object.create(Object.getPrototypeOf(from)), stackFrom, stackTo, blacklist, plain)\n          }\n        }\n      }\n    } else {\n      if (from === to) {\n        throw new Error('Cannot copy! Source and destination are identical.')\n      }\n\n      stackFrom = stackFrom || []\n      stackTo = stackTo || []\n\n      if (utils.isObject(from)) {\n        let index = stackFrom.indexOf(from)\n        if (index !== -1) {\n          return stackTo[index]\n        }\n\n        stackFrom.push(from)\n        stackTo.push(to)\n      }\n\n      let result\n      if (utils.isArray(from)) {\n        let i\n        to.length = 0\n        for (i = 0; i < from.length; i++) {\n          result = utils.copy(from[i], null, stackFrom, stackTo, blacklist, plain)\n          if (utils.isObject(from[i])) {\n            stackFrom.push(from[i])\n            stackTo.push(result)\n          }\n          to.push(result)\n        }\n      } else {\n        if (utils.isArray(to)) {\n          to.length = 0\n        } else {\n          utils.forOwn(to, function (value, key) {\n            delete to[key]\n          })\n        }\n        for (var key in from) {\n          if (from.hasOwnProperty(key)) {\n            if (utils.isBlacklisted(key, blacklist)) {\n              continue\n            }\n            result = utils.copy(from[key], null, stackFrom, stackTo, blacklist, plain)\n            if (utils.isObject(from[key])) {\n              stackFrom.push(from[key])\n              stackTo.push(result)\n            }\n            to[key] = result\n          }\n        }\n      }\n    }\n    return to\n  },\n\n  /**\n   * Recursively shallow fill in own enumberable properties from `source` to `dest`.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  deepFillIn: function (dest, source) {\n    if (source) {\n      utils.forOwn(source, function (value, key) {\n        const existing = dest[key]\n        if (isPlainObject(value) && isPlainObject(existing)) {\n          utils.deepFillIn(existing, value)\n        } else if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n          dest[key] = value\n        }\n      })\n    }\n    return dest\n  },\n\n  /**\n   * Recursively shallow copy own enumberable properties from `source` to `dest`.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  deepMixIn: function (dest, source) {\n    if (source) {\n      utils.forOwn(source, function (value, key) {\n        const existing = dest[key]\n        if (isPlainObject(value) && isPlainObject(existing)) {\n          utils.deepMixIn(existing, value)\n        } else {\n          dest[key] = value\n        }\n      })\n    }\n    return dest\n  },\n\n  /**\n   * @param {Object} a Base object.\n   * @param {Object} b Comparison object.\n   * @return {Object} Diff.\n   */\n  diffObjects: function (a, b, opts) {\n    opts || (opts = {})\n    let equalsFn = opts.equalsFn\n    let bl = opts.ignore\n    const diff = {\n      added: {},\n      changed: {},\n      removed: {}\n    }\n    if (!utils.isFunction(equalsFn)) {\n      equalsFn = utils.strictEqual\n    }\n\n    utils.forOwn(b, function (oldValue, key) {\n      const newValue = a[key]\n\n      if (utils.isBlacklisted(key, bl) || equalsFn(newValue, oldValue)) {\n        return\n      }\n\n      if (utils.isUndefined(newValue)) {\n        diff.removed[key] = undefined\n      } else if (!equalsFn(newValue, oldValue)) {\n        diff.changed[key] = newValue\n      }\n    })\n\n    utils.forOwn(a, function (newValue, key) {\n      if (!utils.isUndefined(b[key]) || utils.isBlacklisted(key, bl)) {\n        return\n      }\n      diff.added[key] = newValue\n    })\n\n    return diff\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  equal: function (a, b) {\n    return a == b // eslint-disable-line\n  },\n\n  /**\n   * Add eventing capabilities into the target object.\n   *\n   * @ignore\n   * @param {Object} target Target object.\n   * @param {Function} [getter] Custom getter for retrieving the object's event\n   * listeners.\n   * @param {Function} [setter] Custom setter for setting the object's event\n   * listeners.\n   */\n  eventify: function (target, getter, setter, enumerable) {\n    target = target || this\n    let _events = {}\n    if (!getter && !setter) {\n      getter = function () {\n        return _events\n      }\n      setter = function (value) {\n        _events = value\n      }\n    }\n    Object.defineProperties(target, {\n      emit: {\n        enumerable: !!enumerable,\n        value (...args) {\n          const events = getter.call(this) || {}\n          const type = args.shift()\n          let listeners = events[type] || []\n          let i\n          for (i = 0; i < listeners.length; i++) {\n            listeners[i].f.apply(listeners[i].c, args)\n          }\n          listeners = events.all || []\n          args.unshift(type)\n          for (i = 0; i < listeners.length; i++) {\n            listeners[i].f.apply(listeners[i].c, args)\n          }\n        }\n      },\n      off: {\n        enumerable: !!enumerable,\n        value (type, func) {\n          const events = getter.call(this)\n          const listeners = events[type]\n          if (!listeners) {\n            setter.call(this, {})\n          } else if (func) {\n            for (let i = 0; i < listeners.length; i++) {\n              if (listeners[i].f === func) {\n                listeners.splice(i, 1)\n                break\n              }\n            }\n          } else {\n            listeners.splice(0, listeners.length)\n          }\n        }\n      },\n      on: {\n        enumerable: !!enumerable,\n        value (type, func, ctx) {\n          if (!getter.call(this)) {\n            setter.call(this, {})\n          }\n          const events = getter.call(this)\n          events[type] = events[type] || []\n          events[type].push({\n            c: ctx,\n            f: func\n          })\n        }\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  extend: function (props, classProps) {\n    const superClass = this\n    let subClass\n\n    props || (props = {})\n    classProps || (classProps = {})\n\n    if (props.hasOwnProperty('constructor')) {\n      subClass = props.constructor\n      delete props.constructor\n    } else {\n      subClass = function (...args) {\n        utils.classCallCheck(this, subClass)\n        const _this = utils.possibleConstructorReturn(this, (subClass.__super__ || Object.getPrototypeOf(subClass)).apply(this, args))\n        return _this\n      }\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        configurable: true,\n        enumerable: false,\n        value: subClass,\n        writable: true\n      }\n    })\n\n    const obj = Object\n    if (obj.setPrototypeOf) {\n      obj.setPrototypeOf(subClass, superClass)\n    } else if (classProps.strictEs6Class) {\n      subClass.__proto__ = superClass // eslint-disable-line\n    } else {\n      utils.forOwn(superClass, function (value, key) {\n        subClass[key] = value\n      })\n    }\n    Object.defineProperty(subClass, '__super__', {\n      configurable: true,\n      value: superClass\n    })\n\n    utils.addHiddenPropsToTarget(subClass.prototype, props)\n    utils.fillIn(subClass, classProps)\n\n    return subClass\n  },\n\n  /**\n   * Shallow copy own enumerable properties from `src` to `dest` that are on `src`\n   * but are missing from `dest.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  fillIn: function (dest, src) {\n    utils.forOwn(src, function (value, key) {\n      if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n        dest[key] = value\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  forEachRelation: function (mapper, opts, fn, ctx) {\n    const relationList = mapper.relationList || []\n    if (!relationList.length) {\n      return\n    }\n    relationList.forEach(function (def) {\n      utils._forRelation(opts, def, fn, ctx)\n    })\n  },\n\n  /**\n   * Iterate over an object's own enumerable properties.\n   *\n   * @ignore\n   * @param {Object} object The object whose properties are to be enumerated.\n   * @param {Function} fn Iteration function.\n   * @param {Object} [thisArg] Content to which to bind `fn`.\n   */\n  forOwn: function (obj, fn, thisArg) {\n    const keys = Object.keys(obj)\n    const len = keys.length\n    let i\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, obj[keys[i]], keys[i], obj)\n    }\n  },\n\n  /**\n   * Proxy for `JSON.parse`.\n   *\n   * @ignore\n   * @param {string} json JSON to parse.\n   * @return {Object} Parsed object.\n   */\n  fromJson: function (json) {\n    return utils.isString(json) ? JSON.parse(json) : json\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  'get': function (object, prop) {\n    if (!prop) {\n      return\n    }\n    const parts = prop.split('.')\n    const last = parts.pop()\n\n    while (prop = parts.shift()) { // eslint-disable-line\n      object = object[prop]\n      if (object == null) { // eslint-disable-line\n        return\n      }\n    }\n\n    return object[last]\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  getSuper: function (instance, isCtor) {\n    const ctor = isCtor ? instance : instance.constructor\n    return (ctor.__super__ || Object.getPrototypeOf(ctor) || ctor.__proto__) // eslint-disable-line\n  },\n\n  /**\n   * Return the intersection of two arrays.\n   *\n   * @ignore\n   * @param {Array} array1 First array.\n   * @param {Array} array2 Second array.\n   * @return {Array} Array of elements common to both arrays.\n   */\n  intersection: function (array1, array2) {\n    if (!array1 || !array2) {\n      return []\n    }\n    const result = []\n    let item\n    let i\n    const len = array1.length\n    for (i = 0; i < len; i++) {\n      item = array1[i]\n      if (result.indexOf(item) !== -1) {\n        continue\n      }\n      if (array2.indexOf(item) !== -1) {\n        result.push(item)\n      }\n    }\n    return result\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isArray: Array.isArray,\n\n  /**\n   * Return whether `prop` is matched by any string or regular expression in `bl`.\n   *\n   * @ignore\n   * @param {string} prop The name of a property.\n   * @param {Array} bl Array of strings and regular expressions.\n   * @return {boolean} Whether `prop` was matched.\n   */\n  isBlacklisted: function (prop, bl) {\n    if (!bl || !bl.length) {\n      return false\n    }\n    let matches\n    for (var i = 0; i < bl.length; i++) {\n      if ((toStr(bl[i]) === REGEXP_TAG && bl[i].test(prop)) || bl[i] === prop) {\n        matches = prop\n        return matches\n      }\n    }\n    return !!matches\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isBoolean: function (value) {\n    return toStr(value) === BOOL_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isBrowser: false,\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isDate: function (value) {\n    return (value && typeof value === 'object' && toStr(value) === DATE_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isFunction: function (value) {\n    return typeof value === 'function' || (value && toStr(value) === FUNC_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isInteger: function (value) {\n    return toStr(value) === NUMBER_TAG && value == toInteger(value) // eslint-disable-line\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isNull: function (value) {\n    return value === null\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isNumber: function (value) {\n    const type = typeof value\n    return type === 'number' || (value && type === 'object' && toStr(value) === NUMBER_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isObject: function (value) {\n    return toStr(value) === OBJECT_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isRegExp: function (value) {\n    return toStr(value) === REGEXP_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isSorN: function (value) {\n    return utils.isString(value) || utils.isNumber(value)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isString: function (value) {\n    return typeof value === 'string' || (value && typeof value === 'object' && toStr(value) === STRING_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isUndefined: function (value) {\n    return value === undefined\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  logify: function (target) {\n    utils.addHiddenPropsToTarget(target, {\n      dbg (...args) {\n        this.log('debug', ...args)\n      },\n      log (level, ...args) {\n        if (level && !args.length) {\n          args.push(level)\n          level = 'debug'\n        }\n        if (level === 'debug' && !this.debug) {\n          return\n        }\n        const prefix = `${level.toUpperCase()}: (${this.name || this.constructor.name})`\n        if (console[level]) {\n          console[level](prefix, ...args)\n        } else {\n          console.log(prefix, ...args)\n        }\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  omit: function (props, keys) {\n    // Remove relations\n    const _props = {}\n    utils.forOwn(props, function (value, key) {\n      if (keys.indexOf(key) === -1) {\n        _props[key] = value\n      }\n    })\n    return _props\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  plainCopy: function (from) {\n    return utils.copy(from, undefined, undefined, undefined, undefined, true)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  possibleConstructorReturn: function (self, call) {\n    if (!self) {\n      throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called')\n    }\n\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self\n  },\n\n  /**\n   * Proxy for `Promise.reject`.\n   *\n   * @ignore\n   * @param {*} [value] Value with which to reject the Promise.\n   * @return {Promise} Promise reject with `value`.\n   */\n  reject: function (value) {\n    return utils.Promise.reject(value)\n  },\n\n  /**\n   * Proxy for `Promise.resolve`.\n   *\n   * @ignore\n   * @param {*} [value] Value with which to resolve the Promise.\n   * @return {Promise} Promise resolved with `value`.\n   */\n  resolve: function (value) {\n    return utils.Promise.resolve(value)\n  },\n\n  /**\n   * Set the value at the provided key or path.\n   *\n   * @ignore\n   * @param {Object} object The object on which to set a property.\n   * @param {(string|Object)} path The key or path to the property. Can also\n   * pass in an object of path/value pairs, which will all be set on the target\n   * object.\n   * @param {*} [value] The value to set.\n   */\n  set: function (object, path, value) {\n    if (utils.isObject(path)) {\n      utils.forOwn(path, function (value, _path) {\n        utils.set(object, _path, value)\n      })\n    } else {\n      const parts = PATH.exec(path)\n      if (parts) {\n        mkdirP(object, parts[1])[parts[2]] = value\n      } else {\n        object[path] = value\n      }\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  strictEqual: function (a, b) {\n    let _equal = a === b\n    if (!_equal) {\n      if (utils.isObject(a) && utils.isObject(b)) {\n        utils.forOwn(a, function (value, key) {\n          _equal = _equal && utils.strictEqual(value, b[key])\n        })\n        utils.forOwn(b, function (value, key) {\n          _equal = _equal && utils.strictEqual(value, a[key])\n        })\n      } else if (utils.isArray(a) && utils.isArray(b)) {\n        a.forEach(function (value, i) {\n          _equal = _equal && utils.strictEqual(value, b[i])\n        })\n      }\n    }\n    return _equal\n  },\n\n  /**\n   * Proxy for `JSON.stringify`.\n   *\n   * @ignore\n   * @param {*} value Value to serialize to JSON.\n   * @return {string} JSON string.\n   */\n  toJson: JSON.stringify,\n\n  /**\n   * Unset the value at the provided key or path.\n   *\n   * @ignore\n   * @param {Object} object The object from which to delete the property.\n   * @param {string} path The key or path to the property.\n   */\n  unset: function (object, path) {\n    const parts = path.split('.')\n    const last = parts.pop()\n\n    while (path = parts.shift()) { // eslint-disable-line\n      object = object[path]\n      if (object == null) { // eslint-disable-line\n        return\n      }\n    }\n\n    object[last] = undefined\n  }\n}\n\n// Attempt to detect whether we are in the browser.\ntry {\n  utils.isBrowser = !!window\n} catch (e) {\n  utils.isBrowser = false\n}\n\nexport default utils\n","import utils from './utils'\n\nexport default function Component () {\n  /**\n   * Event listeners attached to this Component.\n   *\n   * @name Component#_listeners\n   * @instance\n   * @type {Object}\n   * @private\n   */\n  this._listeners = {}\n}\n\n/**\n * Create a subclass of this component.\n *\n * @name Component.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of this component.\n */\nComponent.extend = utils.extend\n\n/**\n * @name Component#dbg\n * @method\n */\n/**\n * @name Component#log\n * @method\n */\nutils.logify(Component.prototype)\n\n/**\n * Register a new event listener on this Mapper.\n *\n * @name Mapper#on\n * @method\n */\n/**\n * Remove an event listener from this Mapper.\n *\n * @name Mapper#off\n * @method\n */\n/**\n * Trigger an event on this Mapper.\n *\n * @name Mapper#emit\n * @method\n * @param {string} event Name of event to emit.\n */\nutils.eventify(\n  Component.prototype,\n  function () {\n    return this._listeners\n  },\n  function (value) {\n    this._listeners = value\n  }\n)\n","import utils from './utils'\nimport Component from './Component'\n\nconst reserved = {\n  limit: '',\n  offset: '',\n  orderBy: '',\n  skip: '',\n  sort: '',\n  where: ''\n}\n\nconst escapeRegExp = /([.*+?^=!:${}()|[\\]\\/\\\\])/g\nconst percentRegExp = /%/g\nconst underscoreRegExp = /_/g\n\nconst escape = function (pattern) {\n  return pattern.replace(escapeRegExp, '\\\\$1')\n}\n\n/**\n * A class used by the {@link Collection} class to build queries to be executed\n * against the collection's data. An instance of `Query` is returned by\n * {@link Collection#query}.\n *\n * ```javascript\n * import {Query} from 'js-data'\n * ```\n *\n * @class Query\n * @extends Component\n * @param {Collection} collection - The collection on which this query operates.\n */\nexport default Component.extend({\n  constructor: function Query (collection) {\n    utils.classCallCheck(this, Query)\n\n    /**\n     * The collection on which this query operates.\n     *\n     * @name Query#collection\n     * @type {Collection}\n     */\n    this.collection = collection\n\n    /**\n     * The data result of this query.\n     *\n     * @name Query#data\n     * @type {Array}\n     */\n    this.data = null\n  },\n\n  /**\n   * Find all entities between two boundaries.\n   *\n   * Get the users ages 18 to 30\n   * ```js\n   * const users = query.between(18, 30, { index: 'age' }).run()\n   * ```\n   * Same as above\n   * ```js\n   * const users = query.between([18], [30], { index: 'age' }).run()\n   * ```\n   *\n   * @name Query#between\n   * @method\n   * @param {Array} leftKeys - Keys defining the left boundary.\n   * @param {Array} rightKeys - Keys defining the right boundary.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.limit] - Limit the result to a certain number.\n   * @param {boolean} [opts.offset] - The number of resulting entities to skip.\n   * @return {Query} A reference to itself for chaining.\n   */\n  between (leftKeys, rightKeys, opts) {\n    const self = this\n    opts || (opts = {})\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    self.data = self.collection.getIndex(opts.index).between(leftKeys, rightKeys, opts)\n    return self\n  },\n\n  compare (orderBy, index, a, b) {\n    const def = orderBy[index]\n    let cA = utils.get(a, def[0])\n    let cB = utils.get(b, def[0])\n    if (cA && utils.isString(cA)) {\n      cA = cA.toUpperCase()\n    }\n    if (cB && utils.isString(cB)) {\n      cB = cB.toUpperCase()\n    }\n    if (a === undefined) {\n      a = null\n    }\n    if (b === undefined) {\n      b = null\n    }\n    if (def[1] === 'DESC') {\n      if (cB < cA) {\n        return -1\n      } else if (cB > cA) {\n        return 1\n      } else {\n        if (index < orderBy.length - 1) {\n          return this.compare(orderBy, index + 1, a, b)\n        } else {\n          return 0\n        }\n      }\n    } else {\n      if (cA < cB) {\n        return -1\n      } else if (cA > cB) {\n        return 1\n      } else {\n        if (index < orderBy.length - 1) {\n          return this.compare(orderBy, index + 1, a, b)\n        } else {\n          return 0\n        }\n      }\n    }\n  },\n\n  evaluate (value, op, predicate) {\n    const ops = this.constructor.ops\n    if (ops[op]) {\n      return ops[op](value, predicate)\n    }\n    if (op.indexOf('like') === 0) {\n      return !utils.isNull(this.like(predicate, op.substr(4)).exec(value))\n    } else if (op.indexOf('notLike') === 0) {\n      return utils.isNull(this.like(predicate, op.substr(7)).exec(value))\n    }\n  },\n\n  /**\n   * Find the entity or entities that match the provided query or pass the\n   * provided filter function.\n   *\n   * #### Example\n   *\n   * Get the draft posts created less than three months\n   * ```js\n   * const posts = query.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * }).run()\n   * ```\n   * Use a custom filter function\n   * ```js\n   * const posts = query.filter(function (post) {\n   *   return post.isReady()\n   * }).run()\n   * ```\n   *\n   * @name Query#filter\n   * @method\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Function} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @return {Query} A reference to itself for chaining.\n   */\n  filter (query, thisArg) {\n    const self = this\n    query || (query = {})\n    self.getData()\n    if (utils.isObject(query)) {\n      let where = {}\n      // Filter\n      if (utils.isObject(query.where)) {\n        where = query.where\n      }\n      utils.forOwn(query, function (value, key) {\n        if (!(key in reserved) && !(key in where)) {\n          where[key] = {\n            '==': value\n          }\n        }\n      })\n\n      const fields = []\n      const ops = []\n      const predicates = []\n      utils.forOwn(where, function (clause, field) {\n        if (!utils.isObject(clause)) {\n          clause = {\n            '==': clause\n          }\n        }\n        utils.forOwn(clause, function (expr, op) {\n          fields.push(field)\n          ops.push(op)\n          predicates.push(expr)\n        })\n      })\n      if (fields.length) {\n        let i\n        let len = fields.length\n        self.data = self.data.filter(function (item) {\n          let first = true\n          let keep = true\n\n          for (i = 0; i < len; i++) {\n            let op = ops[i]\n            const isOr = op.charAt(0) === '|'\n            op = isOr ? op.substr(1) : op\n            const expr = self.evaluate(utils.get(item, fields[i]), op, predicates[i])\n            if (expr !== undefined) {\n              keep = first ? expr : (isOr ? keep || expr : keep && expr)\n            }\n            first = false\n          }\n          return keep\n        })\n      }\n\n      // Sort\n      let orderBy = query.orderBy || query.sort\n\n      if (utils.isString(orderBy)) {\n        orderBy = [\n          [orderBy, 'ASC']\n        ]\n      }\n      if (!utils.isArray(orderBy)) {\n        orderBy = null\n      }\n\n      // Apply 'orderBy'\n      if (orderBy) {\n        let index = 0\n        orderBy.forEach(function (def, i) {\n          if (utils.isString(def)) {\n            orderBy[i] = [def, 'ASC']\n          }\n        })\n        self.data.sort(function (a, b) {\n          return self.compare(orderBy, index, a, b)\n        })\n      }\n\n      // Skip\n      if (utils.isNumber(query.skip)) {\n        self.skip(query.skip)\n      } else if (utils.isNumber(query.offset)) {\n        self.skip(query.offset)\n      }\n      // Limit\n      if (utils.isNumber(query.limit)) {\n        self.limit(query.limit)\n      }\n    } else if (utils.isFunction(query)) {\n      self.data = self.data.filter(query, thisArg)\n    }\n    return self\n  },\n\n  /**\n   * Iterate over all entities.\n   *\n   * @name Query#forEach\n   * @method\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @return {Query} A reference to itself for chaining.\n   */\n  forEach (forEachFn, thisArg) {\n    this.getData().forEach(forEachFn, thisArg)\n    return this\n  },\n\n  /**\n   * Find the entity or entities that match the provided key.\n   *\n   * #### Example\n   *\n   * Get the entity whose primary key is 25\n   * ```js\n   * const entities = query.get(25).run()\n   * ```\n   * Same as above\n   * ```js\n   * const entities = query.get([25]).run()\n   * ```\n   * Get all users who are active and have the \"admin\" role\n   * ```js\n   * const activeAdmins = query.get(['active', 'admin'], {\n   *   index: 'activityAndRoles'\n   * }).run()\n   * ```\n   * Get all entities that match a certain weather condition\n   * ```js\n   * const niceDays = query.get(['sunny', 'humid', 'calm'], {\n   *   index: 'weatherConditions'\n   * }).run()\n   * ```\n   *\n   * @name Query#get\n   * @method\n   * @param {Array} keyList - Key(s) defining the entity to retrieve. If\n   * `keyList` is not an array (i.e. for a single-value key), it will be\n   * wrapped in an array.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.string] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Query} A reference to itself for chaining.\n   */\n  get (keyList, opts) {\n    const self = this\n    keyList || (keyList = [])\n    opts || (opts = {})\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    if (keyList && !utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n    if (!keyList.length) {\n      self.getData()\n      return self\n    }\n    self.data = self.collection.getIndex(opts.index).get(keyList)\n    return self\n  },\n\n  /**\n   * Find the entity or entities that match the provided keyLists.\n   *\n   * #### Example\n   *\n   * Get the posts where \"status\" is \"draft\" or \"inReview\"\n   * ```js\n   * const posts = query.getAll('draft', 'inReview', { index: 'status' }).run()\n   * ```\n   * Same as above\n   * ```js\n   * const posts = query.getAll(['draft'], ['inReview'], { index: 'status' }).run()\n   * ```\n   *\n   * @name Query#getAll\n   * @method\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * entities matching each keyList will be retrieved. If no keyLists are\n   * provided, all entities will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Query} A reference to itself for chaining.\n   */\n  getAll (...args) {\n    const self = this\n    let opts = {}\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    if (!args.length || args.length === 1 && utils.isObject(args[0])) {\n      self.getData()\n      return self\n    } else if (args.length && utils.isObject(args[args.length - 1])) {\n      opts = args[args.length - 1]\n      args.pop()\n    }\n    const collection = self.collection\n    const index = collection.getIndex(opts.index)\n    self.data = []\n    args.forEach(function (keyList) {\n      self.data = self.data.concat(index.get(keyList))\n    })\n    return self\n  },\n\n  /**\n   * Return the current data result of this query.\n   * @name Query#getData\n   * @method\n   * @return {Array} The data in this query.\n   */\n  getData () {\n    const self = this\n    if (!self.data) {\n      self.data = self.collection.index.getAll()\n    }\n    return self.data\n  },\n\n  like (pattern, flags) {\n    return new RegExp(`^${(escape(pattern).replace(percentRegExp, '.*').replace(underscoreRegExp, '.'))}$`, flags)\n  },\n\n  /**\n   * Limit the result.\n   *\n   * #### Example\n   *\n   * Get only the first 10 draft posts\n   * ```js\n   * const posts = query.get('draft', { index: 'status' }).limit(10).run()\n   * ```\n   *\n   * @name Query#limit\n   * @method\n   * @param {number} num - The maximum number of entities to keep in the result.\n   * @return {Query} A reference to itself for chaining.\n   */\n  limit (num) {\n    if (!utils.isNumber(num)) {\n      throw new TypeError(`limit: Expected number but found ${typeof num}!`)\n    }\n    const data = this.getData()\n    this.data = data.slice(0, Math.min(data.length, num))\n    return this\n  },\n\n  /**\n   * Apply a mapping function to the result data.\n   *\n   * @name Query#map\n   * @method\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @return {Query} A reference to itself for chaining.\n   */\n  map (mapFn, thisArg) {\n    this.data = this.getData().map(mapFn, thisArg)\n    return this\n  },\n\n  /**\n   * Return the result of calling the specified function on each item in this\n   * collection's main index.\n   * @name Query#mapCall\n   * @method\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @return {Query} A reference to itself for chaining.\n   */\n  mapCall (funcName, ...args) {\n    this.data = this.getData().map(function (item) {\n      return item[funcName](...args)\n    })\n    return this\n  },\n\n  /**\n   * Complete the execution of the query and return the resulting data.\n   *\n   * @name Query#run\n   * @method\n   * @return {Array} The result of executing this query.\n   */\n  run () {\n    const data = this.data\n    this.data = null\n    return data\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * #### Example\n   *\n   * Get all but the first 10 draft posts\n   * ```js\n   * const posts = query.get('draft', { index: 'status' }).skip(10).run()\n   * ```\n   *\n   * @name Query#skip\n   * @method\n   * @param {number} num - The number of entities to skip.\n   * @return {Query} A reference to itself for chaining.\n   */\n  skip (num) {\n    if (!utils.isNumber(num)) {\n      throw new TypeError(`skip: Expected number but found ${typeof num}!`)\n    }\n    const data = this.getData()\n    if (num < data.length) {\n      this.data = data.slice(num)\n    } else {\n      this.data = []\n    }\n    return this\n  }\n}, {\n  /**\n   * TODO\n   *\n   * @name Query.ops\n   * @type {Object}\n   */\n  ops: {\n    '==': function (value, predicate) {\n      return value == predicate // eslint-disable-line\n    },\n    '===': function (value, predicate) {\n      return value === predicate\n    },\n    '!=': function (value, predicate) {\n      return value != predicate // eslint-disable-line\n    },\n    '!==': function (value, predicate) {\n      return value !== predicate\n    },\n    '>': function (value, predicate) {\n      return value > predicate\n    },\n    '>=': function (value, predicate) {\n      return value >= predicate\n    },\n    '<': function (value, predicate) {\n      return value < predicate\n    },\n    '<=': function (value, predicate) {\n      return value <= predicate\n    },\n    'isectEmpty': function (value, predicate) {\n      return !utils.intersection((value || []), (predicate || [])).length\n    },\n    'isectNotEmpty': function (value, predicate) {\n      return utils.intersection((value || []), (predicate || [])).length\n    },\n    'in': function (value, predicate) {\n      return predicate.indexOf(value) !== -1\n    },\n    'notIn': function (value, predicate) {\n      return predicate.indexOf(value) === -1\n    },\n    'contains': function (value, predicate) {\n      return (value || []).indexOf(predicate) !== -1\n    },\n    'notContains': function (value, predicate) {\n      return (value || []).indexOf(predicate) === -1\n    }\n  }\n})\n","export function sort (a, b, hashCode) {\n  // Short-curcuit comparison if a and b are strictly equal\n  // This is absolutely necessary for indexed objects that\n  // don't have the idAttribute field\n  if (a === b) {\n    return 0\n  }\n  if (hashCode) {\n    a = hashCode(a)\n    b = hashCode(b)\n  }\n  if (a === null && b === null) {\n    return 0\n  }\n\n  if (a === null) {\n    return -1\n  }\n\n  if (b === null) {\n    return 1\n  }\n\n  if (a < b) {\n    return -1\n  }\n\n  if (a > b) {\n    return 1\n  }\n\n  return 0\n}\n\nexport function insertAt (array, index, value) {\n  array.splice(index, 0, value)\n  return array\n}\n\nexport function removeAt (array, index) {\n  array.splice(index, 1)\n  return array\n}\n\nexport function binarySearch (array, value, field) {\n  let lo = 0\n  let hi = array.length\n  let compared\n  let mid\n\n  while (lo < hi) {\n    mid = ((lo + hi) / 2) | 0\n    compared = sort(value, array[mid], field)\n    if (compared === 0) {\n      return {\n        found: true,\n        index: mid\n      }\n    } else if (compared < 0) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n\n  return {\n    found: false,\n    index: hi\n  }\n}\n","// Copyright (c) 2015, InternalFX.\n\n// Permission to use, copy, modify, and/or distribute this software for any purpose with or\n// without fee is hereby granted, provided that the above copyright notice and this permission\n// notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO\n// THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT\n// SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR\n// ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\n// USE OR PERFORMANCE OF THIS SOFTWARE.\n\n// Modifications\n// Copyright 2015-2016 Jason Dobry\n//\n// Summary of modifications:\n// Converted to ES6 Class syntax\n// Reworked dependencies so as to re-use code already in js-data\nimport utils from '../../src/utils'\nimport {binarySearch, insertAt, removeAt} from './utils'\n\nexport default function Index (fieldList, opts) {\n  utils.classCallCheck(this, Index)\n  fieldList || (fieldList = [])\n\n  if (!utils.isArray(fieldList)) {\n    throw new Error('fieldList must be an array.')\n  }\n\n  opts || (opts = {})\n  this.fieldList = fieldList\n  this.fieldGetter = opts.fieldGetter\n  this.hashCode = opts.hashCode\n  this.isIndex = true\n  this.keys = []\n  this.values = []\n}\n\nutils.addHiddenPropsToTarget(Index.prototype, {\n  'set' (keyList, value) {\n    if (!utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\n        if (!dataLocation.found) {\n          insertAt(this.values[pos.index], dataLocation.index, value)\n        }\n      } else {\n        insertAt(this.keys, pos.index, key)\n        insertAt(this.values, pos.index, [value])\n      }\n    } else {\n      if (pos.found) {\n        this.values[pos.index].set(keyList, value)\n      } else {\n        insertAt(this.keys, pos.index, key)\n        let newIndex = new Index([], { hashCode: this.hashCode })\n        newIndex.set(keyList, value)\n        insertAt(this.values, pos.index, newIndex)\n      }\n    }\n  },\n\n  'get' (keyList) {\n    if (!utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        if (this.values[pos.index].isIndex) {\n          return this.values[pos.index].getAll()\n        } else {\n          return this.values[pos.index]\n        }\n      } else {\n        return []\n      }\n    } else {\n      if (pos.found) {\n        return this.values[pos.index].get(keyList)\n      } else {\n        return []\n      }\n    }\n  },\n\n  getAll () {\n    let results = []\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        results = results.concat(value.getAll())\n      } else {\n        results = results.concat(value)\n      }\n    })\n    return results\n  },\n\n  visitAll (cb, thisArg) {\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        value.visitAll(cb, thisArg)\n      } else {\n        value.forEach(cb, thisArg)\n      }\n    })\n  },\n\n  between (leftKeys, rightKeys, opts) {\n    opts || (opts = {})\n    if (!utils.isArray(leftKeys)) {\n      leftKeys = [leftKeys]\n    }\n    if (!utils.isArray(rightKeys)) {\n      rightKeys = [rightKeys]\n    }\n    utils.fillIn(opts, {\n      leftInclusive: true,\n      rightInclusive: false,\n      limit: undefined,\n      offset: 0\n    })\n\n    let results = this._between(leftKeys, rightKeys, opts)\n\n    if (opts.limit) {\n      return results.slice(opts.offset, opts.limit + opts.offset)\n    } else {\n      return results.slice(opts.offset)\n    }\n  },\n\n  _between (leftKeys, rightKeys, opts) {\n    let results = []\n\n    let leftKey = leftKeys.shift()\n    let rightKey = rightKeys.shift()\n\n    let pos\n\n    if (leftKey !== undefined) {\n      pos = binarySearch(this.keys, leftKey)\n    } else {\n      pos = {\n        found: false,\n        index: 0\n      }\n    }\n\n    if (leftKeys.length === 0) {\n      if (pos.found && opts.leftInclusive === false) {\n        pos.index += 1\n      }\n\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        if (rightKey !== undefined) {\n          if (opts.rightInclusive) {\n            if (this.keys[i] > rightKey) { break }\n          } else {\n            if (this.keys[i] >= rightKey) { break }\n          }\n        }\n\n        if (this.values[i].isIndex) {\n          results = results.concat(this.values[i].getAll())\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    } else {\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        let currKey = this.keys[i]\n        if (currKey > rightKey) { break }\n\n        if (this.values[i].isIndex) {\n          if (currKey === leftKey) {\n            results = results.concat(this.values[i]._between(utils.copy(leftKeys), rightKeys.map(function () { return undefined }), opts))\n          } else if (currKey === rightKey) {\n            results = results.concat(this.values[i]._between(leftKeys.map(function () { return undefined }), utils.copy(rightKeys), opts))\n          } else {\n            results = results.concat(this.values[i].getAll())\n          }\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    }\n\n    if (opts.limit) {\n      return results.slice(0, opts.limit + opts.offset)\n    } else {\n      return results\n    }\n  },\n\n  peek () {\n    if (this.values.length) {\n      if (this.values[0].isIndex) {\n        return this.values[0].peek()\n      } else {\n        return this.values[0]\n      }\n    }\n    return []\n  },\n\n  clear () {\n    this.keys = []\n    this.values = []\n  },\n\n  insertRecord (data) {\n    let keyList = this.fieldList.map(function (field) {\n      if (utils.isFunction(field)) {\n        return field(data) || null\n      } else {\n        return data[field] || null\n      }\n    })\n    this.set(keyList, data)\n  },\n\n  removeRecord (data) {\n    let removed\n    this.values.forEach((value, i) => {\n      if (value.isIndex) {\n        if (value.removeRecord(data)) {\n          if (value.keys.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      } else {\n        const dataLocation = binarySearch(value, data, this.hashCode)\n        if (dataLocation.found) {\n          removeAt(value, dataLocation.index)\n          if (value.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      }\n    })\n    return removed ? data : undefined\n  },\n\n  updateRecord (data) {\n    this.removeRecord(data)\n    this.insertRecord(data)\n  }\n})\n","import utils from './utils'\nimport Component from './Component'\nimport Query from './Query'\nimport Index from '../lib/mindex/index'\n\nconst COLLECTION_DEFAULTS = {\n  /**\n   * Field to be used as the unique identifier for records in this collection.\n   * Defaults to `\"id\"` unless {@link Collection#mapper} is set, in which case\n   * this will default to {@link Mapper#idAttribute}.\n   *\n   * @name Collection#idAttribute\n   * @type {string}\n   * @default \"id\"\n   */\n  idAttribute: 'id',\n\n  /**\n   * Default Mapper for this collection. Optional. If a Mapper is provided, then\n   * the collection will use the {@link Mapper#idAttribute} setting, and will\n   * wrap records in {@link Mapper#recordClass}.\n   *\n   * @example\n   * import {Collection, Mapper} from 'js-data'\n   *\n   * class MyMapperClass extends Mapper {\n   *   foo () { return 'bar' }\n   * }\n   * const myMapper = new MyMapperClass()\n   * const collection = new Collection(null, { mapper: myMapper })\n   *\n   * @name Collection#mapper\n   * @type {Mapper}\n   * @default null\n   */\n  mapper: null,\n\n  /**\n   * What to do when inserting a record into this Collection that shares a\n   * primary key with a record already in this Collection.\n   *\n   * Possible values:\n   * - merge\n   * - replace\n   *\n   * Merge:\n   *\n   * Recursively shallow copy properties from the new record onto the existing\n   * record.\n   *\n   * Replace:\n   *\n   * Shallow copy top-level properties from the new record onto the existing\n   * record. Any top-level own properties of the existing record that are _not_\n   * on the new record will be removed.\n   *\n   * @name Collection#onConflict\n   * @type {string}\n   * @default \"merge\"\n   */\n  onConflict: 'merge',\n\n  /**\n   * Options to be passed into {@link Mapper#createRecord} when wrapping records\n   * in {@link Mapper#recordClass}.\n   *\n   * @name Collection#recordOpts\n   * @type {Object}\n   * @default null\n   */\n  recordOpts: null\n}\n\n/**\n * ```javascript\n * import {Collection} from 'js-data'\n * ```\n *\n * An ordered set of {@link Record} instances.\n *\n * @example\n * import {Collection, Record} from 'js-data'\n * const user1 = new Record({ id: 1 })\n * const user2 = new Record({ id: 2 })\n * const UserCollection = new Collection([user1, user2])\n * UserCollection.get(1) === user1 // true\n *\n * @class Collection\n * @extends Component\n * @param {Array} [records] Initial set of records to insert into the\n * collection.\n * @param {Object} [opts] Configuration options.\n * @param {string} [opts.idAttribute] See {@link Collection#idAttribute}.\n * @param {string} [opts.onConflict=\"merge\"] See {@link Collection#onConflict}.\n * @param {string} [opts.mapper] See {@link Collection#mapper}.\n * @param {Object} [opts.recordOpts=null] See {@link Collection#recordOpts}.\n */\nexport default Component.extend({\n  constructor: function Collection (records, opts) {\n    const self = this\n    utils.classCallCheck(self, Collection)\n    Collection.__super__.call(self)\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      opts = records\n      records = []\n    }\n    if (utils.isString(opts)) {\n      opts = { idAttribute: opts }\n    }\n\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n    opts.recordOpts || (opts.recordOpts = {})\n\n    utils.fillIn(self, opts)\n    utils.fillIn(self, COLLECTION_DEFAULTS)\n\n    const idAttribute = self.recordId()\n\n    /**\n     * The main index, which uses @{link Collection#recordId} as the key.\n     * @name Collection#index\n     * @type {Index}\n     */\n    self.index = new Index([idAttribute], {\n      hashCode (obj) {\n        return utils.get(obj, idAttribute)\n      }\n    })\n\n    /**\n     * Object that holds the secondary indexes of this collection.\n     * @name Collection#indexes\n     * @type {Object.<string, Index>}\n     */\n    self.indexes = {}\n\n    records.forEach(function (record) {\n      record = self.mapper ? self.mapper.createRecord(record, self.recordOpts) : record\n      self.index.insertRecord(record)\n      if (record && utils.isFunction(record.on)) {\n        record.on('all', self._onRecordEvent, self)\n      }\n    })\n  },\n\n  /**\n   * Used to bind to events emitted by records in this Collection.\n   *\n   * @name Collection#_onRecordEvent\n   * @method\n   * @private\n   * @param {...*} [arg] Args passed to {@link Collection#emit}.\n   */\n  _onRecordEvent (...args) {\n    this.emit(...args)\n  },\n\n  /**\n   * Insert the provided record or records.\n   *\n   * If a record is already in the collection then the provided record will\n   * either merge with or replace the existing record based on the value of the\n   * `onConflict` option.\n   *\n   * The collection's secondary indexes will be updated as each record is\n   * visited.\n   *\n   * @name Collection#add\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} data The record or records to insert.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.onConflict] What to do when a record is already in\n   * the collection. Possible values are `merge` or `replace`.\n   * @return {(Object|Object[]|Record|Record[])} The added record or records.\n   */\n  add (records, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Collection's configuration\n    utils._(self, opts)\n    records = self.beforeAdd(records, opts) || records\n\n    // Track whether just one record or an array of records is being inserted\n    let singular = false\n    const idAttribute = self.recordId()\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      records = [records]\n      singular = true\n    }\n\n    // Map the provided records to existing records.\n    // New records will be inserted. If any records map to existing records,\n    // they will be merged into the existing records according to the onConflict\n    // option.\n    records = records.map(function (record) {\n      let id = self.recordId(record)\n      if (!utils.isSorN(id)) {\n        throw new TypeError(`Collection#add: Expected string or number for ${idAttribute}, found ${typeof id}!`)\n      }\n      // Grab existing record if there is one\n      const existing = self.get(id)\n      // If the currently visited record is just a reference to an existing\n      // record, then there is nothing to be done. Exit early.\n      if (record === existing) {\n        return existing\n      }\n\n      if (existing) {\n        // Here, the currently visited record corresponds to a record already\n        // in the collection, so we need to merge them\n        const onConflict = opts.onConflict || self.onConflict\n        if (onConflict === 'merge') {\n          utils.deepMixIn(existing, record)\n        } else if (onConflict === 'replace') {\n          utils.forOwn(existing, (value, key) => {\n            if (key !== idAttribute && !record.hasOwnProperty(key)) {\n              delete existing[key]\n            }\n          })\n          existing.set(record)\n        }\n        record = existing\n        // Update all indexes in the collection\n        self.updateIndexes(record)\n      } else {\n        // Here, the currently visted record does not correspond to any record\n        // in the collection, so (optionally) instantiate this record and insert\n        // it into the collection\n        record = self.mapper ? self.mapper.createRecord(record, self.recordOpts) : record\n        self.index.insertRecord(record)\n        utils.forOwn(self.indexes, function (index, name) {\n          index.insertRecord(record)\n        })\n        if (record && utils.isFunction(record.on)) {\n          record.on('all', self._onRecordEvent, self)\n        }\n      }\n      return record\n    })\n    // Finally, return the inserted data\n    const result = singular ? (records.length ? records[0] : undefined) : records\n    // TODO: Make this more performant (batch events?)\n    self.emit('add', result)\n    return self.afterAdd(records, opts, result) || result\n  },\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then {@link Collection#add} will return that same value.\n   *\n   * @name Collection#method\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} result The record or records\n   * that were added to this Collection by {@link Collection#add}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  afterAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}. If this method returns\n   * a value then {@link Collection#remove} will return that same value.\n   *\n   * @name Collection#afterRemove\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n   * @param {Object} record The result that will be returned by {@link Collection#remove}.\n   */\n  afterRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}. If this method\n   * returns a value then {@link Collection#removeAll} will return that same\n   * value.\n   *\n   * @name Collection#afterRemoveAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   * @param {Object} records The result that will be returned by {@link Collection#removeAll}.\n   */\n  afterRemoveAll () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then the `records` argument in {@link Collection#add} will be\n   * re-assigned to the returned value.\n   *\n   * @name Collection#beforeAdd\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} records The `records` argument passed to {@link Collection#add}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  beforeAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}.\n   *\n   * @name Collection#beforeRemove\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n   */\n  beforeRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}.\n   *\n   * @name Collection#beforeRemoveAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   */\n  beforeRemoveAll () {},\n\n  /**\n   * Find all records between two boundaries.\n   *\n   * Shortcut for `collection.query().between(18, 30, { index: 'age' }).run()`\n   *\n   * @example <caption>Get all users ages 18 to 30</caption>\n   * const users = collection.between(18, 30, { index: 'age' })\n   *\n   * @example <caption>Same as above</caption>\n   * const users = collection.between([18], [30], { index: 'age' })\n   *\n   * @name Collection#between\n   * @method\n   * @param {Array} leftKeys Keys defining the left boundary.\n   * @param {Array} rightKeys Keys defining the right boundary.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.limit] Limit the result to a certain number.\n   * @param {boolean} [opts.offset] The number of resulting records to skip.\n   * @return {Array} The result.\n   */\n  between (leftKeys, rightKeys, opts) {\n    return this.query().between(leftKeys, rightKeys, opts).run()\n  },\n\n  /**\n   * Create a new secondary index on the contents of the collection.\n   *\n   * @example <caption>Index users by age</caption>\n   * collection.createIndex('age')\n   *\n   * @example <caption>Index users by status and role</caption>\n   * collection.createIndex('statusAndRole', ['status', 'role'])\n   *\n   * @name Collection#createIndex\n   * @method\n   * @param {string} name - The name of the new secondary index.\n   * @param {string[]} [fieldList] - Array of field names to use as the key or\n   * compound key of the new secondary index. If no fieldList is provided, then\n   * the name will also be the field that is used to index the collection.\n   * @return {Collection} A reference to itself for chaining.\n   */\n  createIndex (name, fieldList, opts) {\n    const self = this\n    if (utils.isString(name) && fieldList === undefined) {\n      fieldList = [name]\n    }\n    opts || (opts = {})\n    opts.hashCode = opts.hashCode || function (obj) {\n      return self.recordId(obj)\n    }\n    const index = self.indexes[name] = new Index(fieldList, opts)\n    self.index.visitAll(index.insertRecord, index)\n    return self\n  },\n\n  /**\n   * Find the record or records that match the provided query or pass the\n   * provided filter function.\n   *\n   * Shortcut for `collection.query().filter(queryOrFn[, thisArg]).run()`\n   *\n   * @example <caption>Get the draft posts created less than three months</caption>\n   * const posts = collection.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * })\n   *\n   * @example <caption>Use a custom filter function</caption>\n   * const posts = collection.filter(function (post) {\n   *   return post.isReady()\n   * })\n   *\n   * @name Collection#filter\n   * @method\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Object} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @return {Array} The result.\n   */\n  filter (query, thisArg) {\n    return this.query().filter(query, thisArg).run()\n  },\n\n  /**\n   * Iterate over all records.\n   *\n   * @example\n   * collection.forEach(function (record) {\n   *   // do something\n   * })\n   *\n   * @name Collection#forEach\n   * @method\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @return {Array} The result.\n   */\n  forEach (cb, thisArg) {\n    this.index.visitAll(cb, thisArg)\n  },\n\n  /**\n   * Get the record with the given id.\n   *\n   * @name Collection#get\n   * @method\n   * @param {(string|number)} id - The primary key of the record to get.\n   * @return {(Object|Record)} The record with the given id.\n   */\n  get (id) {\n    const instances = this.query().get(id).run()\n    return instances.length ? instances[0] : undefined\n  },\n\n  /**\n   * Find the record or records that match the provided keyLists.\n   *\n   * Shortcut for `collection.query().getAll(keyList1, keyList2, ...).run()`\n   *\n   * @example <caption>Get the posts where \"status\" is \"draft\" or \"inReview\"</caption>\n   * const posts = collection.getAll('draft', 'inReview', { index: 'status' })\n   *\n   * @example <caption>Same as above</caption>\n   * const posts = collection.getAll(['draft'], ['inReview'], { index: 'status' })\n   *\n   * @name Collection#getAll\n   * @method\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * records matching each keyList will be retrieved. If no keyLists are\n   * provided, all records will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Array} The result.\n   */\n  getAll (...args) {\n    return this.query().getAll(...args).run()\n  },\n\n  /**\n   * Return the index with the given name. If no name is provided, return the\n   * main index. Throws an error if the specified index does not exist.\n   *\n   * @name Collection#getIndex\n   * @method\n   * @param {string} [name] The name of the index to retrieve.\n   */\n  getIndex (name) {\n    const index = name ? this.indexes[name] : this.index\n    if (!index) {\n      throw new Error(`Index ${name} does not exist!`)\n    }\n    return index\n  },\n\n  /**\n   * Limit the result.\n   *\n   * Shortcut for `collection.query().limit(maximumNumber).run()`\n   *\n   * @example\n   * const posts = collection.limit(10)\n   *\n   * @name Collection#limit\n   * @method\n   * @param {number} num - The maximum number of records to keep in the result.\n   * @return {Array} The result.\n   */\n  limit (num) {\n    return this.query().limit(num).run()\n  },\n\n  /**\n   * Apply a mapping function to all records.\n   *\n   * @example\n   * const names = collection.map(function (user) {\n   *   return user.name\n   * })\n   *\n   * @name Collection#map\n   * @method\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @return {Array} The result of the mapping.\n   */\n  map (cb, thisArg) {\n    const data = []\n    this.index.visitAll(function (value) {\n      data.push(cb.call(thisArg, value))\n    })\n    return data\n  },\n\n  /**\n   * Return the result of calling the specified function on each record in this\n   * collection's main index.\n   *\n   * @name Collection#mapCall\n   * @method\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @return {Array} The result.\n   */\n  mapCall (funcName, ...args) {\n    const data = []\n    this.index.visitAll(function (record) {\n      data.push(record[funcName](...args))\n    })\n    return data\n  },\n\n  /**\n   * Return the primary key of the given, or if no record is provided, return the\n   * name of the field that holds the primary key of records in this Collection.\n   *\n   * @name Collection#recordId\n   * @method\n   * @param {(Object|Record)} [record] The record whose primary key is to be\n   * returned.\n   * @return {(string|number)} Primary key or name of field that holds primary\n   * key.\n   */\n  recordId (record) {\n    if (record) {\n      return utils.get(record, this.recordId())\n    }\n    const self = this\n    return self.mapper ? self.mapper.idAttribute : self.idAttribute || 'id'\n  },\n\n  /**\n   * Create a new query to be executed against the contents of the collection.\n   * The result will be all or a subset of the contents of the collection.\n   *\n   * @example <caption>Grab page 2 of users between ages 18 and 30</caption>\n   * collection.query()\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n   *   .skip(10) // second page\n   *   .limit(10) // page size\n   *   .run()\n   *\n   * @name Collection#query\n   * @method\n   * @return {Query} New query object.\n   */\n  query () {\n    return new Query(this)\n  },\n\n  /**\n   * Reduce the data in the collection to a single value and return the result.\n   *\n   * @example\n   * const totalVotes = collection.reduce(function (prev, record) {\n   *   return prev + record.upVotes + record.downVotes\n   * }, 0)\n   *\n   * @name Collection#reduce\n   * @method\n   * @param {Function} cb - Reduction callback.\n   * @param {*} initialValue - Initial value of the reduction.\n   * @return {*} The result.\n   */\n  reduce (cb, initialValue) {\n    const data = this.getAll()\n    return data.reduce(cb, initialValue)\n  },\n\n  /**\n   * Remove the record with the given id from this Collection.\n   *\n   * @name Collection#remove\n   * @method\n   * @param {(string|number)} id - The primary key of the record to be removed.\n   * @param {Object} [opts] - Configuration options.\n   * @return {Object|Record} The removed record, if any.\n   */\n  remove (id, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemove(id, opts)\n    const record = self.get(id)\n\n    // The record is in the collection, remove it\n    if (record) {\n      self.index.removeRecord(record)\n      utils.forOwn(self.indexes, function (index, name) {\n        index.removeRecord(record)\n      })\n      if (record && utils.isFunction(record.off)) {\n        record.off('all', self._onRecordEvent, self)\n        self.emit('remove', record)\n      }\n    }\n    return self.afterRemove(id, opts, record) || record\n  },\n\n  /**\n   * Remove the record selected by \"query\" from this collection.\n   *\n   * @name Collection#removeAll\n   * @method\n   * @param {Object} [query={}] - Selection query.\n   * @param {Object} [query.where] - Filtering criteria.\n   * @param {number} [query.skip] - Number to skip.\n   * @param {number} [query.limit] - Number to limit to.\n   * @param {Array} [query.orderBy] - Sorting criteria.\n   * @param {Object} [opts] - Configuration options.\n   * @return {(Object[]|Record[])} The removed records, if any.\n   */\n  removeAll (query, opts) {\n    const self = this\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemoveAll(query, opts)\n    const records = self.filter(query)\n\n    // Remove each selected record from the collection\n    records.forEach(function (item) {\n      self.remove(self.recordId(item), opts)\n    })\n    return self.afterRemoveAll(query, opts, records) || records\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * Shortcut for `collection.query().skip(numberToSkip).run()`\n   *\n   * @example\n   * const posts = collection.skip(10)\n   *\n   * @name Collection#skip\n   * @method\n   * @param {number} num - The number of records to skip.\n   * @return {Array} The result.\n   */\n  skip (num) {\n    return this.query().skip(num).run()\n  },\n\n  /**\n   * Return the plain JSON representation of all items in this collection.\n   * Assumes records in this collection have a toJSON method.\n   *\n   * @name Collection#toJSON\n   * @method\n   * @param {Object} [opts] - Configuration options.\n   * @param {string[]} [opts.with] - Array of relation names or relation fields\n   * to include in the representation.\n   * @return {Array} The records.\n   */\n  toJSON (opts) {\n    return this.mapCall('toJSON', opts)\n  },\n\n  /**\n   * Update a record's position in a single index of this collection. See\n   * {@link Collection#updateIndexes} to update a record's position in all\n   * indexes at once.\n   *\n   * @name Collection#updateIndex\n   * @method\n   * @param {Object} record - The record to update.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] The index in which to update the record's\n   * position. If you don't specify an index then the record will be updated\n   * in the main index.\n   */\n  updateIndex (record, opts) {\n    opts || (opts = {})\n    this.getIndex(opts.index).updateRecord(record)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Collection#updateIndexes\n   * @method\n   * @param {Object} record - TODO\n   * @param {Object} [opts] - Configuration options.\n   */\n  updateIndexes (record) {\n    const self = this\n    self.index.updateRecord(record)\n    utils.forOwn(self.indexes, function (index, name) {\n      index.updateRecord(record)\n    })\n  }\n})\n","import utils from './utils'\n\nexport const belongsToType = 'belongsTo'\nexport const hasManyType = 'hasMany'\nexport const hasOneType = 'hasOne'\n\nfunction Relation (related, opts) {\n  const self = this\n\n  opts || (opts = {})\n\n  const localField = opts.localField\n  if (!localField) {\n    throw new Error('localField is required')\n  }\n\n  const foreignKey = opts.foreignKey = opts.foreignKey || opts.localKey\n  if (!foreignKey && (opts.type === belongsToType || opts.type === hasOneType)) {\n    throw new Error('foreignKey is required')\n  }\n  const localKeys = opts.localKeys\n  const foreignKeys = opts.foreignKeys\n  if (!foreignKey && !localKeys && !foreignKeys && opts.type === hasManyType) {\n    throw new Error('one of (foreignKey, localKeys, foreignKeys) is required')\n  }\n\n  if (utils.isString(related)) {\n    opts.relation = related\n    if (!utils.isFunction(opts.getRelation)) {\n      throw new Error('you must provide a reference to the related mapper!')\n    }\n  } else if (related) {\n    opts.relation = related.name\n    Object.defineProperty(self, 'relatedMapper', {\n      value: related\n    })\n  }\n\n  utils.fillIn(self, opts)\n}\n\nutils.addHiddenPropsToTarget(Relation.prototype, {\n  getRelation () {\n    return this.relatedMapper\n  },\n  getLocalKeys (record) {\n\n  },\n  getForeignKey (record) {\n    if (this.type === belongsToType) {\n      return utils.get(record, this.foreignKey)\n    }\n    return utils.get(record, this.mapper.idAttribute)\n  },\n  setForeignKey (record, relatedRecord) {\n    const self = this\n    if (!record || !relatedRecord) {\n      return\n    }\n    if (self.type === belongsToType) {\n      utils.set(record, self.foreignKey, utils.get(relatedRecord, self.getRelation().idAttribute))\n    } else {\n      const idAttribute = self.mapper.idAttribute\n      if (utils.isArray(relatedRecord)) {\n        relatedRecord.forEach(function (relatedRecordItem) {\n          utils.set(relatedRecordItem, self.foreignKey, utils.get(record, idAttribute))\n        })\n      } else {\n        utils.set(relatedRecord, self.foreignKey, utils.get(record, idAttribute))\n      }\n    }\n  },\n  getLocalField (record) {\n    return utils.get(record, this.localField)\n  },\n  setLocalField (record, data) {\n    return utils.set(record, this.localField, data)\n  }\n})\n\nconst relatedTo = function (mapper, related, opts) {\n  opts || (opts = {})\n  if (!opts.type) {\n    throw new Error('must specify relation type!')\n  }\n  opts.mapper = mapper\n  opts.name = mapper.name\n  const relation = new Relation(related, opts)\n\n  mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n  mapper.relationFields || Object.defineProperty(mapper, 'relationFields', { value: [] })\n  mapper.relationList.push(relation)\n  mapper.relationFields.push(relation.localField)\n}\n\n/**\n * TODO\n *\n * @name module:js-data.belongsTo\n * @method\n * @param {Mapper} related The relation the target belongs to.\n * @param {Object} opts Configuration options.\n * @param {string} opts.foreignKey The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const belongsTo = function (related, opts) {\n  opts || (opts = {})\n  opts.type = belongsToType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name module:js-data.hasMany\n * @method\n * @param {Mapper} related The relation of which the target has many.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasMany = function (related, opts) {\n  opts || (opts = {})\n  opts.type = hasManyType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name module:js-data.hasOne\n * @method\n * @param {Mapper} related The relation of which the target has one.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasOne = function (related, opts) {\n  opts || (opts = {})\n  opts.type = hasOneType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n","import utils from './utils'\nimport Component from './Component'\n\n/**\n * js-data's Record class.\n *\n * ```javascript\n * import {Record} from 'js-data'\n * ```\n *\n * @class Record\n * @extends Component\n * @param {Object} [props] The initial properties of the new Record instance.\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n * initial properties.\n */\nconst Record = Component.extend({\n  constructor: function Record (props, opts) {\n    const self = this\n    utils.classCallCheck(self, Record)\n\n    props || (props = {})\n    opts || (opts = {})\n    const _props = {}\n    Object.defineProperties(self, {\n      _get: {\n        enumerable: false,\n        value (key) {\n          return utils.get(_props, key)\n        }\n      },\n      _set: {\n        enumerable: false,\n        value (key, value) {\n          return utils.set(_props, key, value)\n        }\n      },\n      _unset: {\n        enumerable: false,\n        value (key) {\n          return utils.unset(_props, key)\n        }\n      }\n    })\n    const _set = self._set\n    // TODO: Optimize these strings\n    _set('creating', true)\n    if (opts.noValidate) {\n      _set('noValidate', true)\n    }\n    utils.fillIn(self, props)\n    _set('creating', false)\n    _set('noValidate', false)\n    _set('previous', utils.copy(props))\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#_mapper\n   * @method\n   * @ignore\n   */\n  _mapper () {\n    if (!this.constructor.mapper) {\n      throw new Error('This recordClass has no Mapper!')\n    }\n    return this.constructor.mapper\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#afterLoadRelations\n   * @method\n   * @param {string[]} relations TODO\n   * @param {Object} opts TODO\n   */\n  afterLoadRelations () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#afterSave\n   * @method\n   * @param {Object} opts TODO\n   */\n  afterSave () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#beforeLoadRelations\n   * @method\n   * @param {string[]} relations TODO\n   * @param {Object} opts TODO\n   */\n  beforeLoadRelations () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#beforeSave\n   * @method\n   * @param {Object} opts TODO\n   */\n  beforeSave () {},\n\n  /**\n   * Return changes to this record since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @name Record#changes\n   * @method\n   * @param [opts] Configuration options.\n   * @param {Function} [opts.equalsFn] Equality function. Default uses `===`.\n   * @param {Array} [opts.ignore] Array of strings or RegExp of fields to ignore.\n   */\n  changes (opts) {\n    const self = this\n    opts || (opts = {})\n    return utils.diffObjects(self, self._get('previous'), opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#commit\n   * @method\n   */\n  commit () {\n    const self = this\n    self._set('changed') // unset\n    self._set('previous', utils.copy(self))\n    return self\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#create\n   * @method\n   * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\n   */\n  create (opts) {\n    return this._mapper().create(this, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#destroy\n   * @method\n   * @param {Object} [opts] Configuration options. @see {@link Model.destroy}.\n   */\n  destroy (opts) {\n    // TODO: move actual destroy logic here\n    const mapper = this._mapper()\n    return mapper.destroy(utils.get(this, mapper.idAttribute), opts)\n  },\n\n  /**\n   * Return the value at the given path for this instance.\n   *\n   * @name Record#get\n   * @method\n   * @param {string} key - Path of value to retrieve.\n   * @return {*} Value at path.\n   */\n  'get' (key) {\n    return utils.get(this, key)\n  },\n\n  /**\n   * Return whether this record has changed since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @name Record#hasChanges\n   * @method\n   * @param [opts] Configuration options.\n   * @param {Function} [opts.equalsFn] Equality function. Default uses `===`.\n   * @param {Array} [opts.ignore] Array of strings or RegExp of fields to ignore.\n   */\n  hasChanges (opts) {\n    const self = this\n    const quickHasChanges = !!(self._get('changed') || []).length\n    return quickHasChanges || utils.areDifferent(self, self._get('previous'), opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#hashCode\n   * @method\n   */\n  hashCode () {\n    const self = this\n    return utils.get(self, self._mapper().idAttribute)\n  },\n\n  isValid (opts) {\n    const self = this\n    return !!self._mapper().validate(self, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#loadRelations\n   * @method\n   * @param {string[]} [relations] TODO\n   * @param {Object} [opts] TODO\n   */\n  loadRelations (relations, opts) {\n    let op\n    const self = this\n    const mapper = self._mapper()\n    const relationList = mapper.relationList || []\n\n    // Default values for arguments\n    relations || (relations = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(mapper, opts)\n    opts.adapter = mapper.getAdapterName(opts)\n\n    // beforeLoadRelations lifecycle hook\n    op = opts.op = 'beforeLoadRelations'\n    return utils.resolve(self[op](relations, opts)).then(function () {\n      if (utils.isString(relations)) {\n        relations = [relations]\n      }\n      // Now delegate to the adapter\n      op = opts.op = 'loadRelations'\n      mapper.dbg(op, self, relations, opts)\n      return Promise.all(relationList.map(function (def) {\n        if (utils.isFunction(def.load)) {\n          return def.load(mapper, def, self, opts)\n        }\n        let task\n        if (def.type === 'hasMany' && def.foreignKey) {\n          // hasMany\n          task = def.getRelation().findAll({\n            [def.foreignKey]: utils.get(self, mapper.idAttribute)\n          }, opts)\n        } else if (def.foreignKey) {\n          // belongsTo or hasOne\n          const key = utils.get(self, def.foreignKey)\n          if (utils.isSorN(key)) {\n            task = def.getRelation().find(key, opts)\n          }\n        } else if (def.localKeys) {\n          // hasMany\n          task = def.getRelation().findAll({\n            [def.getRelation().idAttribute]: {\n              'in': utils.get(self, def.localKeys)\n            }\n          }, opts)\n        } else if (def.foreignKeys) {\n          // hasMany\n          task = def.getRelation().findAll({\n            [def.getRelation().idAttribute]: {\n              'contains': utils.get(self, mapper.idAttribute)\n            }\n          }, opts)\n        }\n        if (task) {\n          task = task.then(function (data) {\n            if (opts.raw) {\n              data = data.data\n            }\n            utils.set(self, def.localField, def.type === 'hasOne' ? (data.length ? data[0] : undefined) : data)\n          })\n        }\n        return task\n      }))\n    }).then(function () {\n      // afterLoadRelations lifecycle hook\n      op = opts.op = 'afterLoadRelations'\n      return utils.resolve(self[op](relations, opts)).then(function () {\n        return self\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#previous\n   * @method\n   * @param {string} [key] TODO\n   */\n  previous (key) {\n    const self = this\n    if (key) {\n      return self._get(`previous.${key}`)\n    }\n    return self._get('previous')\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#revert\n   * @method\n   * @param {Object} [opts] Configuration options.\n   */\n  revert (opts) {\n    const self = this\n    const previous = self._get('previous') || {}\n    opts || (opts = {})\n    opts.preserve || (opts.preserve = [])\n    utils.forOwn(self, (value, key) => {\n      if (key !== self._mapper().idAttribute && !previous.hasOwnProperty(key) && self.hasOwnProperty(key) && opts.preserve.indexOf(key) === -1) {\n        delete self[key]\n      }\n    })\n    utils.forOwn(previous, (value, key) => {\n      if (opts.preserve.indexOf(key) === -1) {\n        self[key] = value\n      }\n    })\n    self.commit()\n    return self\n  },\n\n  /**\n   * Delegates to {@link Mapper#update}.\n   *\n   * @name Record#save\n   * @method\n   * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\n   */\n  save (opts) {\n    const self = this\n    const mapper = self._mapper()\n    return mapper.update(utils.get(self, mapper.idAttribute), self, opts)\n  },\n\n  /**\n   * Set the value for a given key, or the values for the given keys if \"key\" is\n   * an object.\n   *\n   * @name Record#set\n   * @method\n   * @param {(string|Object)} key - Key to set or hash of key-value pairs to set.\n   * @param {*} [value] - Value to set for the given key.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  'set' (key, value, opts) {\n    const self = this\n    if (utils.isObject(key)) {\n      opts = value\n    }\n    opts || (opts = {})\n    if (opts.silent) {\n      self._set('silent', true)\n    }\n    utils.set(self, key, value)\n    if (!self._get('eventId')) {\n      self._set('silent') // unset\n    }\n  },\n\n  // TODO: move logic for single-item async operations onto the instance.\n\n  /**\n   * Return a plain object representation of this record. If the class from\n   * which this record was created has a mapper, then {@link Mapper#toJSON} will\n   * be called instead.\n   *\n   * @name Record#toJSON\n   * @method\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation. Only available as an option if the class\n   * from which this record was created has a mapper.\n   * @return {Object} Plain object representation of this record.\n   */\n  toJSON (opts) {\n    const mapper = this.constructor.mapper\n    if (mapper) {\n      return mapper.toJSON(this, opts)\n    } else {\n      const json = {}\n      utils.forOwn(this, function (prop, key) {\n        json[key] = utils.copy(prop)\n      })\n      return json\n    }\n  },\n\n  /**\n   * Unset the value for a given key.\n   *\n   * @name Record#unset\n   * @method\n   * @param {string} key - Key to unset.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  unset (key, opts) {\n    this.set(key, undefined, opts)\n  },\n\n  validate (opts) {\n    return this._mapper().validate(this, opts)\n  }\n})\n\n/**\n * Allow records to emit events.\n *\n * An record's registered listeners are stored in the record's private data.\n */\nutils.eventify(\n  Record.prototype,\n  function () {\n    return this._get('events')\n  },\n  function (value) {\n    this._set('events', value)\n  }\n)\n\nexport default Record\n","import utils from './utils'\nimport Component from './Component'\n\n/**\n * TODO\n *\n * @name Schema.types\n * @type {Object}\n */\nconst types = {\n  array: utils.isArray,\n  boolean: utils.isBoolean,\n  integer: utils.isInteger,\n  'null': utils.isNull,\n  number: utils.isNumber,\n  object: utils.isObject,\n  string: utils.isString\n}\n\n/**\n * @ignore\n */\nconst segmentToString = function (segment, prev) {\n  let str = ''\n  if (segment) {\n    if (utils.isNumber(segment)) {\n      str += `[${segment}]`\n    } else if (prev) {\n      str += `.${segment}`\n    } else {\n      str += `${segment}`\n    }\n  }\n  return str\n}\n\n/**\n * @ignore\n */\nconst makePath = function (opts) {\n  opts || (opts = {})\n  let path = ''\n  const segments = opts.path || []\n  segments.forEach(function (segment) {\n    path += segmentToString(segment, path)\n  })\n  path += segmentToString(opts.prop, path)\n  return path\n}\n\n/**\n * @ignore\n */\nconst makeError = function (actual, expected, opts) {\n  return {\n    expected,\n    actual: '' + actual,\n    path: makePath(opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst addError = function (actual, expected, opts, errors) {\n  errors.push(makeError(actual, expected, opts))\n}\n\n/**\n * @ignore\n */\nconst maxLengthCommon = function (keyword, value, schema, opts) {\n  const max = schema[keyword]\n  if (value.length > max) {\n    return makeError(value.length, `length no more than ${max}`, opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst minLengthCommon = function (keyword, value, schema, opts) {\n  const min = schema[keyword]\n  if (value.length < min) {\n    return makeError(value.length, `length no less than ${min}`, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name Schema.validationKeywords\n * @type {Object}\n */\nconst validationKeywords = {\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor82\n   *\n   * @name Schema.validationKeywords.allOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  allOf (value, schema, opts) {\n    let allErrors = []\n    schema.allOf.forEach(function (_schema) {\n      allErrors = allErrors.concat(validate(value, _schema, opts) || [])\n    })\n    return allErrors.length ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor85\n   *\n   * @name Schema.validationKeywords.anyOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  anyOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.anyOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor70\n   *\n   * @name Schema.validationKeywords.dependencies\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  dependencies (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor76\n   *\n   * @name Schema.validationKeywords.enum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  enum (value, schema, opts) {\n    const possibleValues = schema['enum']\n    if (possibleValues.indexOf(value) === -1) {\n      return makeError(value, `one of (${possibleValues.join(', ')})`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor37\n   *\n   * @name Schema.validationKeywords.items\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  items (value, schema, opts) {\n    opts || (opts = {})\n    // TODO: additionalItems\n    let items = schema.items\n    let errors = []\n    const checkingTuple = utils.isArray(items)\n    const length = value.length\n    for (var prop = 0; prop < length; prop++) {\n      if (checkingTuple) {\n        // Validating a tuple, instead of just checking each item against the\n        // same schema\n        items = schema.items[prop]\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], items, opts) || [])\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor17\n   *\n   * @name Schema.validationKeywords.maximum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maximum (value, schema, opts) {\n    // Must be a number\n    const maximum = schema.maximum\n    // Must be a boolean\n    // Depends on maximum\n    // default: false\n    const exclusiveMaximum = schema.exclusiveMaximum\n    if (typeof value === typeof maximum && (exclusiveMaximum ? maximum < value : maximum <= value)) {\n      // TODO: Account for value of exclusiveMaximum in messaging\n      return makeError(value, `no more than ${maximum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.maxItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxItems (value, schema, opts) {\n    return maxLengthCommon('maxItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor26\n   *\n   * @name Schema.validationKeywords.maxLength\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxLength (value, schema, opts) {\n    return maxLengthCommon('maxLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor54\n   *\n   * @name Schema.validationKeywords.maxProperties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxProperties (value, schema, opts) {\n    const maxProperties = schema.maxProperties\n    const length = Object.keys(value).length\n    if (length > maxProperties) {\n      return makeError(length, `no more than ${maxProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor21\n   *\n   * @name Schema.validationKeywords.minimum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minimum (value, schema, opts) {\n    // Must be a number\n    const minimum = schema.minimum\n    // Must be a boolean\n    // Depends on minimum\n    // default: false\n    const exclusiveMinimum = schema.exclusiveMinimum\n    if (typeof value === typeof minimum && (exclusiveMinimum ? minimum > value : minimum >= value)) {\n      // TODO: Account for value of exclusiveMinimum in messaging\n      return makeError(value, `no less than ${minimum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.minItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minItems (value, schema, opts) {\n    return minLengthCommon('minItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor29\n   *\n   * @name Schema.validationKeywords.minLength\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minLength (value, schema, opts) {\n    return minLengthCommon('minLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor57\n   *\n   * @name Schema.validationKeywords.minProperties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minProperties (value, schema, opts) {\n    const minProperties = schema.minProperties\n    const length = Object.keys(value).length\n    if (length < minProperties) {\n      return makeError(length, `no more than ${minProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor14\n   *\n   * @name Schema.validationKeywords.multipleOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  multipleOf (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor91\n   *\n   * @name Schema.validationKeywords.not\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  not (value, schema, opts) {\n    if (!validate(value, schema.not, opts)) {\n      // TODO: better messaging\n      return makeError('succeeded', 'should have failed', opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor88\n   *\n   * @name Schema.validationKeywords.oneOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  oneOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.oneOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else if (validated) {\n        allErrors = [makeError('valid against more than one', 'valid against only one', opts)]\n        validated = false\n        return false\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor33\n   *\n   * @name Schema.validationKeywords.pattern\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  pattern (value, schema, opts) {\n    const pattern = schema.pattern\n    if (utils.isString(value) && !value.match(pattern)) {\n      return makeError(value, pattern, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor64\n   *\n   * @name Schema.validationKeywords.properties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  properties (value, schema, opts) {\n    opts || (opts = {})\n    // Can be a boolean or an object\n    // Technically the default is an \"empty schema\", but here \"true\" is\n    // functionally the same\n    const additionalProperties = utils.isUndefined(schema.additionalProperties) ? true : schema.additionalProperties\n    // \"s\": The property set of the instance to validate.\n    const toValidate = {}\n    // \"p\": The property set from \"properties\".\n    // Default is an object\n    const properties = schema.properties || {}\n    // \"pp\": The property set from \"patternProperties\".\n    // Default is an object\n    const patternProperties = schema.patternProperties || {}\n    let errors = []\n\n    // Collect set \"s\"\n    utils.forOwn(value, function (_value, prop) {\n      toValidate[prop] = undefined\n    })\n    // Remove from \"s\" all elements of \"p\", if any.\n    utils.forOwn(properties || {}, function (_schema, prop) {\n      if (utils.isUndefined(value[prop]) && !utils.isUndefined(_schema['default'])) {\n        value[prop] = utils.copy(_schema['default'])\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], _schema, opts) || [])\n      delete toValidate[prop]\n    })\n    // For each regex in \"pp\", remove all elements of \"s\" which this regex\n    // matches.\n    utils.forOwn(patternProperties, function (_schema, pattern) {\n      utils.forOwn(toValidate, function (undef, prop) {\n        if (prop.match(pattern)) {\n          opts.prop = prop\n          errors = errors.concat(validate(value[prop], _schema, opts) || [])\n          delete toValidate[prop]\n        }\n      })\n    })\n    const keys = Object.keys(toValidate)\n    // If \"s\" is not empty, validation fails\n    if (additionalProperties === false) {\n      if (keys.length) {\n        addError(`extra fields: ${keys.join(', ')}`, 'no extra fields', opts, errors)\n      }\n    } else if (utils.isObject(additionalProperties)) {\n      // Otherwise, validate according to provided schema\n      keys.forEach(function (prop) {\n        opts.prop = prop\n        errors = errors.concat(validate(value[prop], additionalProperties, opts) || [])\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor61\n   *\n   * @name Schema.validationKeywords.required\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  required (value, schema, opts) {\n    const required = schema.required\n    let errors = []\n    if (!opts.existingOnly) {\n      required.forEach(function (prop) {\n        if (utils.isUndefined(utils.get(value, prop))) {\n          const prevProp = opts.prop\n          opts.prop = prop\n          addError(undefined, 'a value', opts, errors)\n          opts.prop = prevProp\n        }\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor79\n   *\n   * @name Schema.validationKeywords.type\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  type (value, schema, opts) {\n    let type = schema.type\n    let validType\n    // Can be one of several types\n    if (utils.isString(type)) {\n      type = [type]\n    }\n    // Try to match the value against an expected type\n    type.forEach(function (_type) {\n      // TODO: throw an error if type is not defined\n      if (types[_type](value, schema, opts)) {\n        // Matched a type\n        validType = _type\n        return false\n      }\n    })\n    // Value did not match any expected type\n    if (!validType) {\n      return makeError(value ? typeof value : '' + value, `one of (${type.join(', ')})`, opts)\n    }\n    // Run keyword validators for matched type\n    // http://json-schema.org/latest/json-schema-validation.html#anchor12\n    const validator = typeGroupValidators[validType]\n    if (validator) {\n      return validator(value, schema, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor49\n   *\n   * @name Schema.validationKeywords.uniqueItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  uniqueItems (value, schema, opts) {\n    if (value && value.length && schema.uniqueItems) {\n      const length = value.length\n      let item, i, j\n      // Check n - 1 items\n      for (i = length - 1; i > 0; i--) {\n        item = value[i]\n        // Only compare against unchecked items\n        for (j = i - 1; j >= 0; j--) {\n          // Found a duplicate\n          if (item === value[j]) {\n            return makeError(item, 'no duplicates', opts)\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nconst validateKeyword = function (op, value, schema, opts) {\n  return !utils.isUndefined(schema[op]) && validationKeywords[op](value, schema, opts)\n}\n\n/**\n * @ignore\n */\nconst runOps = function (ops, value, schema, opts) {\n  let errors = []\n  ops.forEach(function (op) {\n    errors = errors.concat(validateKeyword(op, value, schema, opts) || [])\n  })\n  return errors.length ? errors : undefined\n}\n\nconst ANY_OPS = ['enum', 'type', 'allOf', 'anyOf', 'oneOf', 'not']\nconst ARRAY_OPS = ['items', 'maxItems', 'minItems', 'uniqueItems']\nconst NUMERIC_OPS = ['multipleOf', 'maximum', 'minimum']\nconst OBJECT_OPS = ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies']\nconst STRING_OPS = ['maxLength', 'minLength', 'pattern']\n\n/**\n * http://json-schema.org/latest/json-schema-validation.html#anchor75\n * @ignore\n */\nconst validateAny = function (value, schema, opts) {\n  return runOps(ANY_OPS, value, schema, opts)\n}\n\n/**\n * TODO\n *\n * @name Schema.validate\n * @method\n * @param {*} value TODO\n * @param {Object} [schema] TODO\n * @param {Object} [opts] Configuration options.\n */\nconst validate = function (value, schema, opts) {\n  let errors = []\n  opts || (opts = {})\n  let shouldPop\n  let prevProp = opts.prop\n  if (utils.isUndefined(schema)) {\n    return\n  }\n  if (!utils.isObject(schema)) {\n    throw new Error(`Invalid schema at path: \"${opts.path}\"`)\n  }\n  if (utils.isUndefined(opts.path)) {\n    opts.path = []\n  }\n  // Track our location as we recurse\n  if (!utils.isUndefined(opts.prop)) {\n    shouldPop = true\n    opts.path.push(opts.prop)\n    opts.prop = undefined\n  }\n  // Validate against parent schema\n  if (schema['extends']) {\n    // opts.path = path\n    // opts.prop = prop\n    if (utils.isFunction(schema['extends'].validate)) {\n      errors = errors.concat(schema['extends'].validate(value, opts) || [])\n    } else {\n      errors = errors.concat(validate(value, schema['extends'], opts) || [])\n    }\n  }\n  if (utils.isUndefined(value)) {\n    // Check if property is required\n    if (schema.required === true) {\n      addError(value, 'a value', opts, errors)\n    }\n    if (shouldPop) {\n      opts.path.pop()\n      opts.prop = prevProp\n    }\n    return errors.length ? errors : undefined\n  }\n  errors = errors.concat(validateAny(value, schema, opts) || [])\n  if (shouldPop) {\n    opts.path.pop()\n    opts.prop = prevProp\n  }\n  return errors.length ? errors : undefined\n}\n\n// These strings are cached for optimal performance of the change detection\n// boolean - Whether a Record is changing in the current execution frame\nconst changingPath = 'changing'\n// string[] - Properties that have changed in the current execution frame\nconst changedPath = 'changed'\n// boolean - Whether a Record is currently being instantiated\nconst creatingPath = 'creating'\n// number - The setTimeout change event id of a Record, if any\nconst eventIdPath = 'eventId'\n// boolean - Whether to skip validation for a Record's currently changing property\nconst noValidatePath = 'noValidate'\n// boolean - Whether to skip change notification for a Record's currently\n// changing property\nconst silentPath = 'silent'\nconst validationFailureMsg = 'validation failed'\n\n/**\n * Assemble a property descriptor which will be added to the prototype of\n * {@link Mapper#recordClass}. This method is called when\n * {@link Mapper#applySchema} is set to `true`.\n *\n * TODO: Make this more configurable, i.e. not so tied to the Record class.\n *\n * @ignore\n */\nconst makeDescriptor = function (prop, schema, opts) {\n  const descriptor = {\n    // These properties are enumerable by default, but regardless of their\n    // enumerability, they won't be \"own\" properties of individual records\n    enumerable: utils.isUndefined(schema.enumerable) ? true : !!schema.enumerable\n  }\n  // Cache a few strings for optimal performance\n  const keyPath = `props.${prop}`\n  const previousPath = `previous.${prop}`\n  const getter = opts.getter\n  const setter = opts.setter\n  const unsetter = opts.unsetter\n\n  descriptor.get = function () {\n    return this._get(keyPath)\n  }\n  descriptor.set = function (value) {\n    const self = this\n    // These are accessed a lot\n    const _get = self[getter]\n    const _set = self[setter]\n    const _unset = self[unsetter]\n\n    // Optionally check that the new value passes validation\n    if (!_get(noValidatePath)) {\n      const errors = schema.validate(value)\n      if (errors) {\n        // Immediately throw an error, preventing the record from getting into\n        // an invalid state\n        const error = new Error(validationFailureMsg)\n        error.errors = errors\n        throw error\n      }\n    }\n    // TODO: Make it so tracking can be turned on for all properties instead of\n    // only per-property\n    if (schema.track && !_get(creatingPath)) {\n      const previous = _get(previousPath)\n      const current = _get(keyPath)\n      let changing = _get(changingPath)\n      let changed = _get(changedPath)\n\n      if (!changing) {\n        // Track properties that are changing in the current event loop\n        changed = []\n      }\n\n      // Add changing properties to this array once at most\n      const index = changed.indexOf(prop)\n      if (current !== value && index === -1) {\n        changed.push(prop)\n      }\n      if (previous === value) {\n        if (index >= 0) {\n          changed.splice(index, 1)\n        }\n      }\n      // No changes in current event loop\n      if (!changed.length) {\n        changing = false\n        _unset(changingPath)\n        _unset(changedPath)\n        // Cancel pending change event\n        if (_get(eventIdPath)) {\n          clearTimeout(_get(eventIdPath))\n          _unset(eventIdPath)\n        }\n      }\n      // Changes detected in current event loop\n      if (!changing && changed.length) {\n        _set(changedPath, changed)\n        _set(changingPath, true)\n        // Saving the timeout id allows us to batch all changes in the same\n        // event loop into a single \"change\"\n        // TODO: Optimize\n        _set(eventIdPath, setTimeout(() => {\n          // Previous event loop where changes were gathered has ended, so\n          // notify any listeners of those changes and prepare for any new\n          // changes\n          _unset(changedPath)\n          _unset(eventIdPath)\n          _unset(changingPath)\n          // TODO: Optimize\n          if (!_get(silentPath)) {\n            let i\n            for (i = 0; i < changed.length; i++) {\n              self.emit('change:' + changed[i], self, utils.get(self, changed[i]))\n            }\n            self.emit('change', self, self.changes())\n          }\n          _unset(silentPath)\n        }, 0))\n      }\n    }\n    _set(keyPath, value)\n    return value\n  }\n\n  return descriptor\n}\n\n/**\n * TODO\n *\n * @name Schema.typeGroupValidators\n * @type {Object}\n */\nconst typeGroupValidators = {\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.array\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  array: function (value, schema, opts) {\n    return runOps(ARRAY_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.integer\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  integer: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.number\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  number: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor13.\n   *\n   * @name Schema.typeGroupValidators.numeric\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  numeric: function (value, schema, opts) {\n    return runOps(NUMERIC_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor53.\n   *\n   * @name Schema.typeGroupValidators.object\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  object: function (value, schema, opts) {\n    return runOps(OBJECT_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor25.\n   *\n   * @name Schema.typeGroupValidators.string\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  string: function (value, schema, opts) {\n    return runOps(STRING_OPS, value, schema, opts)\n  }\n}\n\n/**\n * js-data's Schema class.\n *\n * ```javascript\n * import {Schema} from 'js-data'\n * ```\n *\n * @class Schema\n * @extends Component\n * @param {Object} definition Schema definition according to json-schema.org\n */\nexport default Component.extend({\n  constructor: function Schema (definition) {\n    // const self = this\n    definition || (definition = {})\n    // TODO: schema validation\n    utils.fillIn(this, definition)\n\n    // TODO: rework this to make sure all possible keywords are converted\n    if (definition.properties) {\n      utils.forOwn(definition.properties, function (_definition, prop) {\n        if (!(_definition instanceof Schema)) {\n          definition.properties[prop] = new Schema(_definition)\n        }\n      })\n    }\n  },\n\n  /**\n   * This adds ES5 getters/setters to the target based on the \"properties\" in\n   * this Schema, which makes possible change tracking and validation on\n   * property assignment.\n   *\n   * @name Schema#validate\n   * @method\n   * @param {Object} target The prototype to which to apply this schema.\n   */\n  apply (target, opts) {\n    opts || (opts = {})\n    opts.getter = opts.getter || '_get'\n    opts.setter = opts.setter || '_set'\n    opts.unsetter = opts.unsetter || '_unset'\n    const properties = this.properties || {}\n    utils.forOwn(properties, function (schema, prop) {\n      Object.defineProperty(\n        target,\n        prop,\n        makeDescriptor(prop, schema, opts)\n      )\n    })\n  },\n\n  /**\n   * Validate the provided value against this schema.\n   *\n   * @name Schema#validate\n   * @method\n   * @param {*} value Value to validate.\n   * @param {Object} [opts] Configuration options.\n   * @return {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  validate (value, opts) {\n    return validate(value, this, opts)\n  }\n}, {\n  typeGroupValidators,\n  types,\n  validate,\n  validationKeywords\n})\n","import utils from './utils'\nimport Component from './Component'\nimport {\n  belongsTo,\n  belongsToType,\n  hasMany,\n  hasManyType,\n  hasOne,\n  hasOneType\n} from './decorators'\nimport Record from './Record'\nimport Schema from './Schema'\n\nconst notify = function (...args) {\n  const self = this\n  const opts = args[args.length - 1]\n  self.dbg(opts.op, ...args)\n  if (opts.notify || (opts.notify === undefined && self.notify)) {\n    setTimeout(() => {\n      self.emit(opts.op, ...args)\n    })\n  }\n}\n\nconst notify2 = function (...args) {\n  const self = this\n  const opts = args[args.length - 2]\n  self.dbg(opts.op, ...args)\n  if (opts.notify || (opts.notify === undefined && self.notify)) {\n    setTimeout(() => {\n      self.emit(opts.op, ...args)\n    })\n  }\n}\n\nconst MAPPER_DEFAULTS = {\n  /**\n   * Whether to augment {@link Mapper#recordClass} with getter/setter property\n   * accessors according to the properties defined in {@link Mapper#schema}.\n   * This makes possible validation and change tracking on individual properties\n   * when using the dot (e.g. `user.name = \"Bob\"`) operator to modify a\n   * property.\n   *\n   * @name Mapper#applySchema\n   * @type {boolean}\n   * @default true\n   */\n  applySchema: true,\n\n  /**\n   * Whether to enable debug-level logs.\n   *\n   * @name Mapper#debug\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n\n  /**\n   * The name of the registered adapter that this Mapper should used by default.\n   *\n   * @name Mapper#defaultAdapter\n   * @type {string}\n   * @default \"http\"\n   */\n  defaultAdapter: 'http',\n\n  /**\n   * The field used as the unique identifier on records handled by this Mapper.\n   *\n   * @name Mapper#idAttribute\n   * @type {string}\n   * @default id\n   */\n  idAttribute: 'id',\n\n  lifecycleMethods: {\n    count: {\n      defaults: [{}, {}],\n      skip: true,\n      types: []\n    },\n    destroy: {\n      defaults: [{}, {}],\n      skip: true,\n      types: []\n    },\n    destroyAll: {\n      defaults: [{}, {}],\n      skip: true,\n      types: []\n    },\n    find: {\n      defaults: [undefined, {}],\n      types: []\n    },\n    findAll: {\n      defaults: [{}, {}],\n      types: []\n    },\n    sum: {\n      defaults: [undefined, {}, {}],\n      skip: true,\n      types: []\n    },\n    update: {\n      adapterArgs (mapper, id, props, opts) {\n        return [id, mapper.toJSON(props, opts), opts]\n      },\n      beforeAssign: 1,\n      defaults: [undefined, {}, {}],\n      types: []\n    },\n    updateAll: {\n      adapterArgs (mapper, props, query, opts) {\n        return [mapper.toJSON(props, opts), query, opts]\n      },\n      beforeAssign: 0,\n      defaults: [{}, {}, {}],\n      types: []\n    },\n    updateMany: {\n      adapterArgs (mapper, records, opts) {\n        return [records.map(function (record) {\n          return mapper.toJSON(record, opts)\n        }), opts]\n      },\n      beforeAssign: 0,\n      defaults: [[], {}],\n      types: []\n    }\n  },\n\n  /**\n   * Minimum amount of meta information required to start operating against a\n   * resource.\n   *\n   * @name Mapper#name\n   * @type {string}\n   */\n  name: null,\n\n  /**\n   * Whether this Mapper should emit operational events.\n   *\n   * Defaults to `true` in the browser and `false` in Node.js\n   *\n   * @name Mapper#notify\n   * @type {boolean}\n   */\n  notify: utils.isBrowser,\n\n  /**\n   * Whether {@link Mapper#create}, {@link Mapper#createMany}, {@link Mapper#save},\n   * {@link Mapper#update}, {@link Mapper#updateAll}, {@link Mapper#updateMany},\n   * {@link Mapper#find}, {@link Mapper#findAll}, {@link Mapper#destroy}, and\n   * {@link Mapper#destroyAll} should return a raw result object that contains\n   * both the instance data returned by the adapter _and_ metadata about the\n   * operation.\n   *\n   * The default is to NOT return the result object, and instead return just the\n   * instance data.\n   *\n   * @name Mapper#raw\n   * @type {boolean}\n   * @default false\n   */\n  raw: false,\n\n  schema: null\n}\n\n/**\n * ```javascript\n * import {Mapper} from 'js-data'\n * ```\n *\n * The core of JSData's [ORM/ODM][orm] implementation. Given a minimum amout of\n * meta information about a resource, a Mapper can perform generic CRUD\n * operations against that resource. Apart from its configuration, a Mapper is\n * stateless. The particulars of various persistence layers has been abstracted\n * into adapters, which a Mapper uses to perform its operations.\n *\n * The term \"Mapper\" comes from the [Data Mapper Pattern][pattern] described in\n * Martin Fowler's [Patterns of Enterprise Application Architecture][book]. A\n * Data Mapper moves data between [in-memory object instances][record] and a\n * relational or document-based database. JSData's Mapper can work with any\n * persistence layer you can write an adapter for.\n *\n * utils._(\"Model\" is a heavily overloaded term and is avoided in this documentation\n * to prevent confusion.)_\n *\n * [orm]: https://en.wikipedia.org/wiki/Object-relational_mapping\n * [pattern]: https://en.wikipedia.org/wiki/Data_mapper_pattern\n * [book]: http://martinfowler.com/books/eaa.html\n * [record]: Record.html\n *\n * @class Mapper\n * @extends Component\n * @param {Object} [opts] Configuration options.\n */\nexport default Component.extend({\n  constructor: function Mapper (opts) {\n    const self = this\n    utils.classCallCheck(self, Mapper)\n    Mapper.__super__.call(self)\n    opts || (opts = {})\n\n    /**\n     * Hash of registered adapters. Don't modify. Use {@link Mapper#registerAdapter}.\n     *\n     * @name Mapper#_adapters\n     * @private\n     */\n    Object.defineProperty(self, '_adapters', {\n      value: undefined,\n      writable: true\n    })\n\n    /**\n     * Hash of registered listeners. Don't modify. Use {@link Mapper#on} and\n     * {@link Mapper#off}.\n     *\n     * @name Mapper#_listeners\n     * @private\n     */\n    Object.defineProperty(self, '_listeners', {\n      value: {},\n      writable: true\n    })\n\n    /**\n     * Set the `false` to force the Mapper to work with POJO objects only.\n     *\n     * ```javascript\n     * import {Mapper, Record} from 'js-data'\n     * const UserMapper = new Mapper({ recordClass: false })\n     * UserMapper.recordClass // false\n     * const user = UserMapper#createRecord()\n     * user instanceof Record // false\n     * ```\n     *\n     * Set to a custom class to have records wrapped in your custom class.\n     *\n     * ```javascript\n     * import {Mapper, Record} from 'js-data'\n     *  // Custom class\n     * class User {\n     *   constructor (props = {}) {\n     *     for (var key in props) {\n     *       if (props.hasOwnProperty(key)) {\n     *         this[key] = props[key]\n     *       }\n     *     }\n     *   }\n     * }\n     * const UserMapper = new Mapper({ recordClass: User })\n     * UserMapper.recordClass // function User() {}\n     * const user = UserMapper#createRecord()\n     * user instanceof Record // false\n     * user instanceof User // true\n     * ```\n     *\n     * Extend the {@link Record} class.\n     *\n     * ```javascript\n     * import {Mapper, Record} from 'js-data'\n     *  // Custom class\n     * class User extends Record {\n     *   constructor () {\n     *     super(props)\n     *   }\n     * }\n     * const UserMapper = new Mapper({ recordClass: User })\n     * UserMapper.recordClass // function User() {}\n     * const user = UserMapper#createRecord()\n     * user instanceof Record // true\n     * user instanceof User // true\n     * ```\n     *\n     * @name Mapper#recordClass\n     * @default {@link Record}\n     */\n    Object.defineProperty(self, 'recordClass', {\n      value: undefined,\n      writable: true\n    })\n\n    utils.fillIn(self, opts)\n    utils.fillIn(self, utils.copy(MAPPER_DEFAULTS))\n\n    if (!self.name) {\n      throw new Error('mapper cannot function without a name!')\n    }\n\n    self._adapters || (self._adapters = {})\n\n    if (!(self.schema instanceof Schema)) {\n      self.schema = new Schema(self.schema || {})\n    }\n\n    if (utils.isUndefined(self.recordClass)) {\n      self.recordClass = Record.extend()\n    }\n\n    if (self.recordClass) {\n      self.recordClass.mapper = self\n\n      // We can only apply the schema to the prototype of self.recordClass if the\n      // class extends Record\n      if (utils.getSuper(self.recordClass, true) === Record && self.schema && self.schema.apply && self.applySchema) {\n        self.schema.apply(self.recordClass.prototype)\n      }\n    }\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n   * returns a promise then {@link Mapper#count} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterCount\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#count}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#count}.\n   * @param {*} result The result, if any.\n   */\n  afterCount: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterCreate\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n   * @param {*} result The result, if any.\n   */\n  afterCreate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterCreateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   * @param {*} result The result, if any.\n   */\n  afterCreateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterDestroy\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   * @param {*} result The result, if any.\n   */\n  afterDestroy: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterDestroyAll\n   * @method\n   * @param {*} data The `data` returned by the adapter.\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   * @param {*} result The result, if any.\n   */\n  afterDestroyAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterFind\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n   * @param {*} result The result, if any.\n   */\n  afterFind: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterFindAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   * @param {*} result The result, if any.\n   */\n  afterFindAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n   * returns a promise then {@link Mapper#sum} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterSum\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#sum}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#sum}.\n   * @param {*} result The result, if any.\n   */\n  afterSum: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdate\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdateAll\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdateAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeCreate\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n   */\n  beforeCreate: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeCreateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   */\n  beforeCreateMany: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n   * returns a promise then {@link Mapper#count} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeCount\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#count}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#count}.\n   */\n  beforeCount: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeDestroy\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   */\n  beforeDestroy: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeDestroyAll\n   * @method\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   */\n  beforeDestroyAll: notify,\n\n  /**\n   * Mappers lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeFind\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n   */\n  beforeFind: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeFindAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   */\n  beforeFindAll: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n   * returns a promise then {@link Mapper#sum} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeSum\n   * @method\n   * @param {string} field The `field` argument passed to {@link Mapper#sum}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#sum}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#sum}.\n   */\n  beforeSum: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdate\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n   */\n  beforeUpdate: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdateAll\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   */\n  beforeUpdateAll: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   */\n  beforeUpdateMany: notify,\n\n  /**\n   * @name Mapper#_end\n   * @method\n   * @private\n   */\n  _end (result, opts, skip) {\n    const self = this\n    if (opts.raw) {\n      utils._(opts, result)\n    }\n    if (skip) {\n      return result\n    }\n    let _data = opts.raw ? result.data : result\n    if (utils.isArray(_data) && _data.length && utils.isObject(_data[0])) {\n      _data = _data.map(function (item) {\n        return self.createRecord(item)\n      })\n    } else if (utils.isObject(_data)) {\n      _data = self.createRecord(_data)\n    }\n    if (opts.raw) {\n      result.data = _data\n    } else {\n      result = _data\n    }\n    return result\n  },\n\n  /**\n   * Usage:\n   *\n   * Post.belongsTo(User, {\n   *   localKey: 'myUserId'\n   * })\n   *\n   * Comment.belongsTo(User)\n   * Comment.belongsTo(Post, {\n   *   localField: '_post'\n   * })\n   *\n   * @name Mapper#belongsTo\n   * @method\n   */\n  belongsTo (relatedMapper, opts) {\n    return belongsTo(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Using the `query` argument, select records to pull from an adapter.\n   * Expects back from the adapter the array of selected records.\n   *\n   * {@link Mapper#beforeCount} will be called before calling the adapter.\n   * {@link Mapper#afterCount} will be called after calling the adapter.\n   *\n   * @name Mapper#count\n   * @method\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * resulting data. If `true` return a response object that includes the\n   * resulting data and metadata about the operation.\n   * @return {Promise}\n   */\n  count (query, opts) {\n    return this.crud('count', query, opts)\n  },\n\n  /**\n   * Create and save a new the record using the provided `props`.\n   *\n   * {@link Mapper#beforeCreate} will be called before calling the adapter.\n   * {@link Mapper#afterCreate} will be called after calling the adapter.\n   *\n   * @name Mapper#create\n   * @method\n   * @param {Object} props The properties for the new record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * created data. If `true` return a response object that includes the created\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `props` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#create}\n   * or {@link Mapper#createMany} call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @return {Promise}\n   */\n  create (props, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    props || (props = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate'\n    return utils.resolve(self[op](props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = utils.isUndefined(_props) ? props : _props\n\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = def.getLocalField(props)\n        if (def.type === belongsToType && relationData) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          tasks.push(def.getRelation().create(relationData, optsCopy).then(function (data) {\n            const relatedRecord = optsCopy.raw ? data.data : data\n            def.setLocalField(belongsToRelationData, relatedRecord)\n            def.setForeignKey(props, relatedRecord)\n          }))\n        }\n      })\n      return utils.Promise.all(tasks).then(function () {\n        // Now delegate to the adapter for the main create\n        op = opts.op = 'create'\n        self.dbg(op, props, opts)\n        return utils.resolve(self.getAdapter(adapter)[op](self, self.toJSON(props, { with: opts.pass || [] }), opts))\n      }).then(function (data) {\n        const createdRecord = opts.raw ? data.data : data\n        // Deep post-create hasMany and hasOne relations\n        tasks = []\n        utils.forEachRelation(self, opts, function (def, optsCopy) {\n          const relationData = def.getLocalField(props)\n          if (!relationData) {\n            return\n          }\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType) {\n            def.setForeignKey(createdRecord, relationData)\n            task = def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n              def.setLocalField(createdRecord, opts.raw ? data.data : data)\n            })\n          } else if (def.type === hasOneType) {\n            def.setForeignKey(createdRecord, relationData)\n            task = def.getRelation().create(relationData, optsCopy).then(function (data) {\n              def.setLocalField(createdRecord, opts.raw ? data.data : data)\n            })\n          } else if (def.type === belongsToType && def.getLocalField(belongsToRelationData)) {\n            def.setLocalField(createdRecord, def.getLocalField(belongsToRelationData))\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return utils.Promise.all(tasks).then(function () {\n          return data\n        })\n      })\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterCreate lifecycle hook\n      op = opts.op = 'afterCreate'\n      return utils.resolve(self[op](props, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  createInstance (props, opts) {\n    return this.createRecord(props, opts)\n  },\n\n  /**\n   * Given an array of records, batch create them via an adapter.\n   *\n   * {@link Mapper#beforeCreateMany} will be called before calling the adapter.\n   * {@link Mapper#afterCreateMany} will be called after calling the adapter.\n   *\n   * @name Mapper#createMany\n   * @method\n   * @param {Array} records Array of records to be created in one batch.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `records` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#createMany}\n   * call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @return {Promise}\n   */\n  createMany (records, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany'\n    return utils.resolve(self[op](records, opts)).then(function (_records) {\n      // Allow for re-assignment from lifecycle hook\n      records = utils.isUndefined(_records) ? records : _records\n\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = records.map(function (record) {\n          return def.getLocalField(record)\n        }).filter(function (relatedRecord) {\n          return relatedRecord\n        })\n        if (def.type === belongsToType && relationData.length === records.length) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          tasks.push(def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n            const relatedRecords = optsCopy.raw ? data.data : data\n            def.setLocalField(belongsToRelationData, relatedRecords)\n            records.forEach(function (record, i) {\n              def.setForeignKey(record, relatedRecords[i])\n            })\n          }))\n        }\n      })\n      return utils.Promise.all(tasks).then(function () {\n        // Now delegate to the adapter\n        op = opts.op = 'createMany'\n        const json = records.map(function (record) {\n          return self.toJSON(record, { with: opts.pass || [] })\n        })\n        self.dbg(op, records, opts)\n        return utils.resolve(self.getAdapter(adapter)[op](self, json, opts))\n      }).then(function (data) {\n        const createdRecords = opts.raw ? data.data : data\n\n        // Deep post-create hasOne relations\n        tasks = []\n        utils.forEachRelation(self, opts, function (def, optsCopy) {\n          const relationData = records.map(function (record) {\n            return def.getLocalField(record)\n          }).filter(function (relatedRecord) {\n            return relatedRecord\n          })\n          if (relationData.length !== records.length) {\n            return\n          }\n          const belongsToData = def.getLocalField(belongsToRelationData)\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType) {\n            // Not supported\n            self.log('warn', 'deep createMany of hasMany type not supported!')\n          } else if (def.type === hasOneType) {\n            createdRecords.forEach(function (createdRecord, i) {\n              def.setForeignKey(createdRecord, relationData[i])\n            })\n            task = def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n              const relatedData = opts.raw ? data.data : data\n              createdRecords.forEach(function (createdRecord, i) {\n                def.setLocalField(createdRecord, relatedData[i])\n              })\n            })\n          } else if (def.type === belongsToType && belongsToData && belongsToData.length === createdRecords.length) {\n            createdRecords.forEach(function (createdRecord, i) {\n              def.setLocalField(createdRecord, belongsToData[i])\n            })\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return utils.Promise.all(tasks).then(function () {\n          return data\n        })\n      })\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterCreateMany lifecycle hook\n      op = opts.op = 'afterCreateMany'\n      return utils.resolve(self[op](records, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Create an unsaved, uncached instance of this Mapper's\n   * {@link Mapper#recordClass}.\n   *\n   * Returns `props` if `props` is already an instance of\n   * {@link Mapper#recordClass}.\n   *\n   * @name Mapper#createRecord\n   * @method\n   * @param {Object} props The initial properties of the new unsaved record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n   * initial properties.\n   * @return {Object} The unsaved record.\n   */\n  createRecord (props, opts) {\n    const self = this\n    const recordClass = self.recordClass\n    const relationList = self.relationList || []\n    relationList.forEach(function (def) {\n      const relatedMapper = def.getRelation()\n      const relationData = def.getLocalField(props)\n      if (utils.isArray(relationData) && relationData.length && !relatedMapper.is(relationData[0])) {\n        def.setLocalField(props, relationData.map(function (relationDataItem) {\n          return def.getRelation().createRecord(relationDataItem)\n        }))\n      } else if (utils.isObject(relationData) && !relatedMapper.is(relationData)) {\n        def.setLocalField(props, def.getRelation().createRecord(relationData))\n      }\n    })\n    // Check to make sure \"props\" is not already an instance of this Mapper.\n    return recordClass ? (props instanceof recordClass ? props : new recordClass(props, opts)) : props // eslint-disable-line\n  },\n\n  /**\n   * Lifecycle invocation method.\n   *\n   * @name Mapper#crud\n   * @method\n   * @param {string} method Name of the lifecycle method to invoke.\n   * @param {...*} args Arguments to pass to the lifecycle method.\n   * @return {Promise}\n   */\n  crud (method, ...args) {\n    const self = this\n    const config = self.lifecycleMethods[method]\n    if (!config) {\n      throw new Error(`${method}: No such CRUD method!`)\n    }\n\n    const upper = `${method.charAt(0).toUpperCase()}${method.substr(1)}`\n    const before = `before${upper}`\n    const after = `after${upper}`\n\n    let op, adapter\n\n    // Default values for arguments\n    config.defaults.forEach(function (value, i) {\n      if (utils.isUndefined(args[i])) {\n        args[i] = utils.copy(value)\n      }\n    })\n\n    const opts = args[args.length - 1]\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // before lifecycle hook\n    op = opts.op = before\n    return utils.resolve(self[op](...args)).then(function (_value) {\n      if (!utils.isUndefined(config.beforeAssign)) {\n        // Allow for re-assignment from lifecycle hook\n        args[config.beforeAssign] = utils.isUndefined(_value) ? args[config.beforeAssign] : _value\n      }\n      // Now delegate to the adapter\n      op = opts.op = method\n      args = config.adapterArgs ? config.adapterArgs(self, ...args) : args\n      self.dbg(op, ...args)\n      return utils.resolve(self.getAdapter(adapter)[op](self, ...args))\n    }).then(function (result) {\n      result = self._end(result, opts, !!config.skip)\n      args.push(result)\n      // after lifecycle hook\n      op = opts.op = after\n      return utils.resolve(self[op](...args)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Using an adapter, destroy the record with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Mapper#beforeDestroy} will be called before destroying the record.\n   * {@link Mapper#afterDestroy} will be called after destroying the record.\n   *\n   * @name Mapper#destroy\n   * @method\n   * @param {(string|number)} id The primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * ejected data (if any). If `true` return a response object that includes the\n   * ejected data (if any) and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n   * delete. NOT performed in a transaction.\n   * @return {Promise}\n   */\n  destroy (id, opts) {\n    return this.crud('destroy', id, opts)\n  },\n\n  /**\n   * Using the `query` argument, destroy the selected records via an adapter.\n   * If no `query` is provided then all records will be destroyed.\n   *\n   * {@link Mapper#beforeDestroyAll} will be called before destroying the records.\n   * {@link Mapper#afterDestroyAll} will be called after destroying the records.\n   *\n   * @name Mapper#destroyAll\n   * @method\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * ejected data (if any). If `true` return a response object that includes the\n   * ejected data (if any) and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n   * delete. NOT performed in a transaction.\n   * @return {Promise}\n   */\n  destroyAll (query, opts) {\n    return this.crud('destroyAll', query, opts)\n  },\n\n  /**\n   * Retrieve via an adapter the record with the given primary key.\n   *\n   * {@link Mapper#beforeFind} will be called before calling the adapter.\n   * {@link Mapper#afterFind} will be called after calling the adapter.\n   *\n   * @name Mapper#find\n   * @method\n   * @param {(string|number)} id The primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @return {Promise}\n   */\n  find (id, opts) {\n    return this.crud('find', id, opts)\n  },\n\n  /**\n   * Using the `query` argument, select records to pull from an adapter.\n   * Expects back from the adapter the array of selected records.\n   *\n   * {@link Mapper#beforeFindAll} will be called before calling the adapter.\n   * {@link Mapper#afterFindAll} will be called after calling the adapter.\n   *\n   * @name Mapper#findAll\n   * @method\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * resulting data. If `true` return a response object that includes the\n   * resulting data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @return {Promise}\n   */\n  findAll (query, opts) {\n    return this.crud('findAll', query, opts)\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @name Mapper#getAdapter\n   * @method\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @return {Adapter} The adapter.\n   */\n  getAdapter (name) {\n    const self = this\n    self.dbg('getAdapter', 'name:', name)\n    const adapter = self.getAdapterName(name)\n    if (!adapter) {\n      throw new ReferenceError(`${adapter} not found!`)\n    }\n    return self.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @name Mapper#getAdapterName\n   * @method\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @return {string} The name of the adapter.\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || opts.defaultAdapter\n  },\n\n  /**\n   * @name Mapper#getAdapters\n   * @method\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  getSchema () {\n    return this.schema\n  },\n\n  /**\n   * Usage:\n   *\n   * User.hasMany(Post, {\n   *   localField: 'my_posts'\n   * })\n   *\n   * @name Mapper#hasMany\n   * @method\n   */\n  hasMany (relatedMapper, opts) {\n    return hasMany(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Usage:\n   *\n   * User.hasOne(Profile, {\n   *   localField: '_profile'\n   * })\n   *\n   * @name Mapper#hasOne\n   * @method\n   */\n  hasOne (relatedMapper, opts) {\n    return hasOne(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Return whether `record` is an instance of this Mappers's recordClass.\n   *\n   * @name Mapper#is\n   * @method\n   * @param {Object} record The record to check.\n   * @return {boolean} Whether `record` is an instance of this Mappers's\n   * {@ link Mapper#recordClass}.\n   */\n  is (record) {\n    const recordClass = this.recordClass\n    return recordClass ? record instanceof recordClass : false\n  },\n\n  /**\n   * Register an adapter on this mapper under the given name.\n   *\n   * @name Mapper#registerAdapter\n   * @method\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for this Mapper.\n   */\n  registerAdapter (name, adapter, opts) {\n    const self = this\n    opts || (opts = {})\n    self.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      self.defaultAdapter = name\n    }\n  },\n\n  /**\n   * Using the `query` argument, select records to pull from an adapter.\n   * Expects back from the adapter the array of selected records.\n   *\n   * {@link Mapper#beforeSum} will be called before calling the adapter.\n   * {@link Mapper#afterSum} will be called after calling the adapter.\n   *\n   * @name Mapper#sum\n   * @method\n   * @param {string} field The field to sum.\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * resulting data. If `true` return a response object that includes the\n   * resulting data and metadata about the operation.\n   * @return {Promise}\n   */\n  sum (field, query, opts) {\n    return this.crud('sum', field, query, opts)\n  },\n\n  /**\n   * Return a plain object representation of the given record.\n   *\n   * @name Mapper#toJSON\n   * @method\n   * @param {Object} record Record from which to create a plain object\n   * representation.\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation.\n   * @return {Object} Plain object representation of the record.\n   */\n  toJSON (record, opts) {\n    const self = this\n    opts || (opts = {})\n    const relationFields = (self ? self.relationFields : []) || []\n    let json = {}\n    let properties\n    if (self && self.schema) {\n      properties = self.schema.properties || {}\n      // TODO: Make this work recursively\n      utils.forOwn(properties, function (opts, prop) {\n        json[prop] = utils.plainCopy(record[prop])\n      })\n    }\n    properties || (properties = {})\n    if (!opts.strict) {\n      utils.forOwn(record, function (value, key) {\n        if (!properties[key] && relationFields.indexOf(key) === -1) {\n          json[key] = utils.plainCopy(value)\n        }\n      })\n    }\n    // The user wants to include relations in the resulting plain object\n    // representation\n    if (self && opts.withAll) {\n      opts.with = relationFields.slice()\n    }\n    if (self && opts.with) {\n      if (utils.isString(opts.with)) {\n        opts.with = [opts.with]\n      }\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = def.getLocalField(record)\n        if (relationData) {\n          // The actual recursion\n          if (utils.isArray(relationData)) {\n            def.setLocalField(json, relationData.map(function (item) {\n              return def.getRelation().toJSON(item, optsCopy)\n            }))\n          } else {\n            def.setLocalField(json, def.getRelation().toJSON(relationData, optsCopy))\n          }\n        }\n      })\n    }\n    return json\n  },\n\n  /**\n   * Using an adapter, update the record with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Mapper#beforeUpdate} will be called before updating the record.\n   * {@link Mapper#afterUpdate} will be called after updating the record.\n   *\n   * @name Mapper#update\n   * @method\n   * @param {(string|number)} id The primary key of the record to update.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if `props` contains nested updates to relations. NOT performed in a\n   * transaction.\n   * @return {Promise}\n   */\n  update (id, props, opts) {\n    return this.crud('update', id, props, opts)\n  },\n\n  /**\n   * Using the `query` argument, perform the a single updated to the selected\n   * records. Expects back from the adapter an array of the updated records.\n   *\n   * {@link Mapper#beforeUpdateAll} will be called before making the update.\n   * {@link Mapper#afterUpdateAll} will be called after making the update.\n   *\n   * @name Mapper#updateAll\n   * @method\n   * @param {Object} props Update to apply to selected records.\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if `props` contains nested updates to relations. NOT performed in a\n   * transaction.\n   * @return {Promise}\n   */\n  updateAll (props, query, opts) {\n    return this.crud('updateAll', props, query, opts)\n  },\n\n  /**\n   * Given an array of updates, perform each of the updates via an adapter. Each\n   * \"update\" is a hash of properties with which to update an record. Each\n   * update must contain the primary key to be updated.\n   *\n   * {@link Mapper#beforeUpdateMany} will be called before making the update.\n   * {@link Mapper#afterUpdateMany} will be called after making the update.\n   *\n   * @name Mapper#updateMany\n   * @method\n   * @param {Array} records Array up record updates.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if each record update contains nested updates for relations. NOT\n   * performed in a transaction.\n   * @return {Promise}\n   */\n  updateMany (records, opts) {\n    return this.crud('updateMany', records, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Mapper#validate\n   * @method\n   * @param {Object|Array} record The record or records to validate.\n   * @param {Object} [opts] Configuration options.\n   */\n  validate (record, opts) {\n    const self = this\n    if (!self.getSchema()) {\n      throw new Error('no schema!')\n    }\n    if (utils.isArray(record)) {\n      return record.map(function (_record) {\n        return self.schema.validate(_record, opts)\n      })\n    } else if (utils.isObject(record)) {\n      return self.schema.validate(record, opts)\n    } else {\n      throw new Error('not a record!')\n    }\n  }\n})\n","import utils from './utils'\nimport Component from './Component'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Mapper from './Mapper'\n\nconst toProxy = [\n  /**\n   * Proxy for {@link Mapper#count}.\n   *\n   * @name Container#count\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.count}.\n   * @param {Object} [opts] - Passed to {@link Model.count}.\n   * @return {Promise}\n   */\n  'count',\n\n  /**\n   * Proxy for {@link Mapper#create}.\n   *\n   * @name Container#create\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} record Passed to {@link Mapper#create}.\n   * @param {Object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @return {Promise}\n   */\n  'create',\n\n  /**\n   * Proxy for {@link Mapper#createMany}.\n   *\n   * @name Container#createMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Array} records Passed to {@link Mapper#createMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @return {Promise}\n   */\n  'createMany',\n\n  /**\n   * Proxy for {@link Mapper#createRecord}.\n   *\n   * @name Container#createRecord\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} props Passed to {@link Mapper#createRecord}.\n   * @param {Object} [opts] Passed to {@link Mapper#createRecord}. See\n   * {@link Mapper#createRecord} for configuration options.\n   * @return {Promise}\n   */\n  'createRecord',\n\n  /**\n   * Proxy for {@link Mapper#dbg}.\n   *\n   * @name Container#dbg\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#dbg}.\n   */\n  'dbg',\n\n  /**\n   * Proxy for {@link Mapper#destroy}.\n   *\n   * @name Container#destroy\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @return {Promise}\n   */\n  'destroy',\n\n  /**\n   * Proxy for {@link Mapper#destroyAll}.\n   *\n   * @name Container#destroyAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @return {Promise}\n   */\n  'destroyAll',\n\n  /**\n   * Proxy for {@link Mapper#find}.\n   *\n   * @name Container#emit\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#emit}.\n   */\n  'emit',\n\n  /**\n   * Proxy for {@link Mapper#find}.\n   *\n   * @name Container#find\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#find}.\n   * @param {Object} [opts] - Passed to {@link Mapper#find}.\n   * @return {Promise}\n   */\n  'find',\n\n  /**\n   * Proxy for {@link Mapper#createRecord}.\n   *\n   * @name Container#findAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\n   * @return {Promise}\n   */\n  'findAll',\n\n  /**\n   * Proxy for {@link Mapper#is}.\n   *\n   * @name Container#getSchema\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   */\n  'getSchema',\n\n  /**\n   * Proxy for {@link Mapper#is}.\n   *\n   * @name Container#is\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#is}.\n   */\n  'is',\n\n  /**\n   * Proxy for {@link Mapper#log}.\n   *\n   * @name Container#log\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#log}.\n   */\n  'log',\n\n  /**\n   * Proxy for {@link Mapper#off}.\n   *\n   * @name Container#off\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#off}.\n   */\n  'off',\n\n  /**\n   * Proxy for {@link Mapper#on}.\n   *\n   * @name Container#on\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#on}.\n   */\n  'on',\n\n  /**\n   * Proxy for {@link Mapper#sum}.\n   *\n   * @name Container#sum\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {string} field - Passed to {@link Model.sum}.\n   * @param {Object} [query] - Passed to {@link Model.sum}.\n   * @param {Object} [opts] - Passed to {@link Model.sum}.\n   * @return {Promise}\n   */\n  'sum',\n\n  /**\n   * Proxy for {@link Mapper#toJSON}.\n   *\n   * @name Container#toJSON\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#toJSON}.\n   */\n  'toJSON',\n\n  /**\n   * Proxy for {@link Mapper#update}.\n   *\n   * @name Container#update\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#update}.\n   * @param {Object} record - Passed to {@link Mapper#update}.\n   * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @return {Promise}\n   */\n  'update',\n\n  /**\n   * Proxy for {@link Mapper#updateAll}.\n   *\n   * @name Container#updateAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object?} query - Passed to {@link Model.updateAll}.\n   * @param {Object} props - Passed to {@link Model.updateAll}.\n   * @param {Object} [opts] - Passed to {@link Model.updateAll}. See\n   * {@link Model.updateAll} for more configuration options.\n   * @return {Promise}\n   */\n  'updateAll',\n\n  /**\n   * Proxy for {@link Mapper#updateMany}.\n   *\n   * @name Container#updateMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @return {Promise}\n   */\n  'updateMany'\n]\n\nconst props = {\n  constructor: function Container (opts) {\n    const self = this\n    utils.classCallCheck(self, Container)\n    Container.__super__.call(self)\n    opts || (opts = {})\n\n    // Apply options provided by the user\n    utils.fillIn(self, opts)\n    /**\n     * Defaults options to pass to {@link Container#mapperClass} when creating a\n     * new mapper.\n     *\n     * @name Container#mapperDefaults\n     * @type {Object}\n     */\n    self.mapperDefaults = self.mapperDefaults || {}\n    /**\n     * Constructor function to use in {@link Container#defineMapper} to create a\n     * new mapper.\n     *\n     * @name Container#mapperClass\n     * @type {Function}\n     */\n    self.mapperClass = self.mapperClass || Mapper\n\n    // Initilize private data\n\n    // Holds the adapters, shared by all mappers in this container\n    self._adapters = {}\n    // The the mappers in this container\n    self._mappers = {}\n  },\n\n  /**\n   * Create a new mapper and register it in this container.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const container = new Container({\n   *   mapperDefaults: { foo: 'bar' }\n   * })\n   * const userMapper = container.defineMapper('user')\n   * userMapper.foo // \"bar\"\n   *\n   * @name Container#defineMapper\n   * @method\n   * @param {string} name Name under which to register the new {@link Mapper}.\n   * {@link Mapper#name} will be set to this value.\n   * @param {Object} [opts] Configuration options. Passed to\n   * {@link Container#mapperClass} when creating the new {@link Mapper}.\n   * @return {Mapper}\n   */\n  defineMapper (name, opts) {\n    const self = this\n\n    // For backwards compatibility with defineResource\n    if (utils.isObject(name)) {\n      opts = name\n      if (!opts.name) {\n        throw new Error('name is required!')\n      }\n      name = opts.name\n    } else if (!utils.isString(name)) {\n      throw new Error('name is required!')\n    }\n\n    // Default values for arguments\n    opts || (opts = {})\n    // Set Mapper#name\n    opts.name = name\n    opts.relations || (opts.relations = {})\n\n    // Check if the user is overriding the datastore's default mapperClass\n    const mapperClass = opts.mapperClass || self.mapperClass\n    delete opts.mapperClass\n\n    // Apply the datastore's defaults to the options going into the mapper\n    utils.fillIn(opts, self.mapperDefaults)\n\n    // Instantiate a mapper\n    const mapper = self._mappers[name] = new mapperClass(opts) // eslint-disable-line\n    // Make sure the mapper's name is set\n    mapper.name = name\n    // All mappers in this datastore will share adapters\n    mapper._adapters = self.getAdapters()\n\n    // Setup the mapper's relations, including generating Mapper#relationList\n    // and Mapper#relationFields\n    utils.forOwn(mapper.relations, function (group, type) {\n      utils.forOwn(group, function (relations, _name) {\n        if (utils.isObject(relations)) {\n          relations = [relations]\n        }\n        relations.forEach(function (def) {\n          def.getRelation = function () {\n            return self.getMapper(_name)\n          }\n          const relatedMapper = self._mappers[_name] || _name\n          if (type === belongsToType) {\n            mapper.belongsTo(relatedMapper, def)\n          } else if (type === hasOneType) {\n            mapper.hasOne(relatedMapper, def)\n          } else if (type === hasManyType) {\n            mapper.hasMany(relatedMapper, def)\n          }\n        })\n      })\n    })\n\n    return mapper\n  },\n\n  defineResource (name, opts) {\n    return this.defineMapper(name, opts)\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @name Container#getAdapter\n   * @method\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @return {Adapter} The adapter.\n   */\n  getAdapter (name) {\n    const self = this\n    const adapter = self.getAdapterName(name)\n    if (!adapter) {\n      throw new ReferenceError(`${adapter} not found!`)\n    }\n    return self.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @name Container#getAdapterName\n   * @method\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @return {string} The name of the adapter.\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || this.mapperDefaults.defaultAdapter\n  },\n\n  /**\n   * Return the registered adapters of this container.\n   *\n   * @name Container#getAdapters\n   * @method\n   * @return {Adapter}\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  /**\n   * Return the mapper registered under the specified name.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const container = new Container()\n   * const userMapper = container.defineMapper('user')\n   * userMapper === container.getMapper('user') // true\n   *\n   * @name Container#getMapper\n   * @method\n   * @param {string} name {@link Mapper#name}.\n   * @return {Mapper}\n   */\n  getMapper (name) {\n    const mapper = this._mappers[name]\n    if (!mapper) {\n      throw new ReferenceError(`${name} is not a registered mapper!`)\n    }\n    return mapper\n  },\n\n  /**\n   * Register an adapter on this container under the given name. Adapters\n   * registered on a container are shared by all mappers in the container.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import HttpAdapter from 'js-data-http'\n   * const container = new Container()\n   * container.registerAdapter('http', new HttpAdapter, { default: true })\n   *\n   * @name Container#registerAdapter\n   * @method\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for all Mappers in this container.\n   */\n  registerAdapter (name, adapter, opts) {\n    const self = this\n    opts || (opts = {})\n    self.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      self.mapperDefaults.defaultAdapter = name\n      utils.forOwn(self._mappers, function (mapper) {\n        mapper.defaultAdapter = name\n      })\n    }\n  }\n}\n\ntoProxy.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getMapper(name)[method](...args)\n  }\n})\n\n/**\n * ```javascript\n * import {Container} from 'js-data'\n * ```\n *\n * The `Container` class is a place to store {@link Mapper} instances.\n *\n * Without a container, you need to manage mappers yourself, including resolving\n * circular dependencies among relations. All mappers in a container share the\n * same adapters, so you don't have to add each adapter to all of your mappers.\n *\n * @example <caption>Without Container</caption>\n * import {Mapper} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const adapter = new HttpAdapter()\n * const userMapper = new Mapper({ name: 'user' })\n * userMapper.registerAdapter('http', adapter, { default: true })\n * const commentMapper = new Mapper({ name: 'comment' })\n * commentMapper.registerAdapter('http', adapter, { default: true })\n *\n * // This might be more difficult if the mappers were defined in different\n * // modules.\n * userMapper.hasMany(commentMapper, {\n *   localField: 'comments',\n *   foreignKey: 'userId'\n * })\n * commentMapper.belongsTo(userMapper, {\n *   localField: 'user',\n *   foreignKey: 'userId'\n * })\n *\n * @example <caption>With Container</caption>\n * import {Container} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const container = new Container()\n * // All mappers in container share adapters\n * container.registerAdapter('http', new HttpAdapter(), { default: true })\n *\n * // These could be defined in separate modules without a problem.\n * container.defineMapper('user', {\n *   relations: {\n *     hasMany: {\n *       comment: {\n *         localField: 'comments',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n * container.defineMapper('comment', {\n *   relations: {\n *     belongsTo: {\n *       user: {\n *         localField: 'user',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n *\n * @class Container\n * @extends Component\n * @param {Object} [opts] Configuration options.\n * @param {Function} [opts.mapperClass] Constructor function to use in\n * {@link Container#defineMapper} to create a new mapper.\n * @param {Object} [opts.mapperDefaults] Defaults options to pass to\n * {@link Container#mapperClass} when creating a new mapper.\n * @return {Container}\n */\nexport default Component.extend(props)\n","import utils from './utils'\nimport {\n  hasManyType\n} from './decorators'\nimport Collection from './Collection'\n\n/**\n * TODO\n *\n * ```javascript\n * import {LinkedCollection} from 'js-data'\n * ```\n *\n * @class LinkedCollection\n * @extends Collection\n * @param {Array} [records] Initial set of records to insert into the\n * collection. See {@link Collection}.\n * @param {Object} [opts] Configuration options. See {@link Collection}.\n * @return {Mapper}\n */\nexport default Collection.extend({\n  constructor: function LinkedCollection (records, opts) {\n    const self = this\n    utils.classCallCheck(self, LinkedCollection)\n    LinkedCollection.__super__.call(self, records, opts)\n\n    // Make sure this collection has somewhere to store \"added\" timestamps\n    self._added = {}\n\n    // Make sure this collection a reference to a datastore\n    if (!self.datastore) {\n      throw new Error('This collection must have a datastore!')\n    }\n    return self\n  },\n\n  _onRecordEvent (...args) {\n    const self = this\n    utils.getSuper(self).prototype._onRecordEvent.apply(self, args)\n    const event = args[0]\n    // This is a very brute force method\n    // Lots of room for optimization\n    if (utils.isString(event) && event.indexOf('change') === 0) {\n      self.updateIndexes(args[1])\n    }\n  },\n\n  add (records, opts) {\n    const self = this\n    const datastore = self.datastore\n    const mapper = self.mapper\n    const relationList = mapper.relationList || []\n    const timestamp = new Date().getTime()\n    const usesRecordClass = !!mapper.recordClass\n    let singular\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      singular = true\n      records = [records]\n    }\n\n    if (relationList.length && records.length) {\n      // Check the currently visited record for relations that need to be\n      // inserted into their respective collections.\n      mapper.relationList.forEach(function (def) {\n        const relationName = def.relation\n        // A reference to the Mapper that this Mapper is related to\n        const relatedMapper = datastore.getMapper(relationName)\n        // The field used by the related Mapper as the primary key\n        const relationIdAttribute = relatedMapper.idAttribute\n        // Grab the foreign key in this relationship, if there is one\n        const foreignKey = def.foreignKey\n        // A lot of this is an optimization for being able to insert a lot of\n        // data as quickly as possible\n        const relatedCollection = datastore.getCollection(relationName)\n        const type = def.type\n        const isHasMany = type === hasManyType\n        const shouldAdd = utils.isUndefined(def.add) ? true : !!def.add\n        let relatedData\n\n        records.forEach(function (record) {\n          // Grab a reference to the related data attached or linked to the\n          // currently visited record\n          relatedData = def.getLocalField(record)\n\n          if (utils.isFunction(def.add)) {\n            def.add(datastore, def, record)\n          } else if (relatedData) {\n            // Otherwise, if there is something to be added, add it\n            if (isHasMany) {\n              // Handle inserting hasMany relations\n              relatedData = relatedData.map(function (toInsertItem) {\n                // Check that this item isn't the same item that is already in the\n                // store\n                if (toInsertItem !== relatedCollection.get(relatedCollection.recordId(toInsertItem))) {\n                  // Make sure this item has its foreignKey\n                  if (foreignKey) {\n                    // TODO: slow, could be optimized? But user loses hook\n                    def.setForeignKey(record, toInsertItem)\n                  }\n                  // Finally add this related item\n                  if (shouldAdd) {\n                    toInsertItem = relatedCollection.add(toInsertItem)\n                  }\n                }\n                return toInsertItem\n              })\n              // If it's the parent that has the localKeys\n              if (def.localKeys) {\n                utils.set(record, def.localKeys, relatedData.map(function (inserted) {\n                  return utils.get(inserted, relationIdAttribute)\n                }))\n              }\n            } else {\n              const relatedDataId = utils.get(relatedData, relationIdAttribute)\n              // Handle inserting belongsTo and hasOne relations\n              if (relatedData !== relatedCollection.get(relatedDataId)) {\n                // Make sure foreignKey field is set\n                def.setForeignKey(record, relatedData)\n                // Finally insert this related item\n                if (shouldAdd) {\n                  relatedData = relatedCollection.add(relatedData)\n                }\n              }\n            }\n            def.setLocalField(record, relatedData)\n          }\n        })\n      })\n    }\n\n    records = utils.getSuper(self).prototype.add.call(self, records, opts)\n\n    records.forEach(function (record) {\n      // Track when this record was added\n      self._added[self.recordId(record)] = timestamp\n\n      if (usesRecordClass) {\n        record._set('$', timestamp)\n      }\n    })\n\n    return singular ? records[0] : records\n  },\n\n  remove (id, opts) {\n    const self = this\n    const mapper = self.mapper\n    const record = utils.getSuper(self).prototype.remove.call(self, id, opts)\n    if (record) {\n      delete self._added[id]\n      if (mapper.recordClass) {\n        record._set('$') // unset\n      }\n    }\n    return record\n  },\n\n  removeAll (query, opts) {\n    const self = this\n    const mapper = self.mapper\n    const records = utils.getSuper(self).prototype.removeAll.call(self, query, opts)\n    records.forEach(function (record) {\n      delete self._added[self.recordId(record)]\n      if (mapper.recordClass) {\n        record._set('$') // unset\n      }\n    })\n    return records\n  }\n})\n","import utils from './utils'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Container from './Container'\nimport LinkedCollection from './LinkedCollection'\n\nconst DATASTORE_DEFAULTS = {\n  /**\n   * Whether relations should be linked for records that are in the datastore.\n   *\n   * Defaults to `true` in the browser and `false` in Node.js\n   *\n   * @name DataStore#linkRelations\n   * @type {boolean}\n   */\n  linkRelations: utils.isBrowser\n}\n\nconst props = {\n  constructor: function DataStore (opts) {\n    const self = this\n    utils.classCallCheck(self, DataStore)\n    DataStore.__super__.call(self, opts)\n\n    self.collectionClass = self.collectionClass || LinkedCollection\n    self._collections = {}\n    utils.fillIn(self, DATASTORE_DEFAULTS)\n    self._pendingQueries = {}\n    self._completedQueries = {}\n    return self\n  },\n\n  _callSuper (method, ...args) {\n    return this.constructor.__super__.prototype[method].apply(this, args)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#_end\n   * @method\n   * @private\n   * @param {string} name Name of the {@link LinkedCollection} to which to\n   * add the data.\n   * @param {Object} data TODO.\n   * @param {Object} [opts] Configuration options.\n   * @return {(Object|Array)} Result.\n   */\n  _end (name, data, opts) {\n    if (opts.raw) {\n      data.data = this.getCollection(name).add(data.data, opts)\n      return data\n    } else {\n      data = this.getCollection(name).add(data, opts)\n    }\n    return data\n  },\n\n  cachedFind (name, id, opts) {\n    return this.get(name, id, opts)\n  },\n\n  cachedFindAll (name, query, opts) {\n    const self = this\n    if (self._completedQueries[name][self.hashQuery(name, query, opts)]) {\n      return self.filter(name, query, opts)\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#create\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} record Passed to {@link Mapper#create}.\n   * @param {Object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @return {Promise}\n   */\n  create (name, record, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('create', name, record, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#createMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Array} records Passed to {@link Mapper#createMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @return {Promise}\n   */\n  createMany (name, records, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('createMany', name, records, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  defineMapper (name, opts) {\n    const self = this\n    const mapper = utils.getSuper(self).prototype.defineMapper.call(self, name, opts)\n    self._pendingQueries[name] = {}\n    self._completedQueries[name] = {}\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n\n    // The datastore uses a subclass of Collection that is \"datastore-aware\"\n    const collection = self._collections[name] = new self.collectionClass(null, { // eslint-disable-line\n      // Make sure the collection has somewhere to store \"added\" timestamps\n      _added: {},\n      // Give the collection a reference to this datastore\n      datastore: self,\n      // The mapper tied to the collection\n      mapper\n    })\n\n    const schema = mapper.schema || {}\n    const properties = schema.properties || {}\n    // TODO: Make it possible index nested properties?\n    utils.forOwn(properties, function (opts, prop) {\n      if (opts.indexed) {\n        collection.createIndex(prop)\n      }\n    })\n\n    // Create a secondary index on the \"added\" timestamps of records in the\n    // collection\n    collection.createIndex('addedTimestamps', ['$'], {\n      fieldGetter (obj) {\n        return collection._added[collection.recordId(obj)]\n      }\n    })\n\n    const linkRelations = self.linkRelations\n\n    if (linkRelations) {\n      mapper.relationList.forEach(function (def) {\n        const relation = def.relation\n        const localField = def.localField\n        const path = `links.${localField}`\n        const foreignKey = def.foreignKey\n        const type = def.type\n        const link = utils.isUndefined(def.link) ? linkRelations : def.link\n        const updateOpts = { index: foreignKey }\n        let descriptor\n\n        if (type === belongsToType) {\n          if (!collection.indexes[foreignKey]) {\n            collection.createIndex(foreignKey)\n          }\n\n          descriptor = {\n            get () {\n              const _self = this\n              if (!_self._get('$') || !link) {\n                return _self._get(path)\n              }\n              const key = def.getForeignKey(_self)\n              const item = utils.isUndefined(key) ? undefined : self.getCollection(relation).get(key)\n              _self._set(path, item)\n              return item\n            },\n            set (record) {\n              const _self = this\n              _self._set(path, record)\n              def.setForeignKey(_self, record)\n              collection.updateIndex(_self, updateOpts)\n              return def.getLocalField(_self)\n            }\n          }\n        } else if (type === hasManyType) {\n          const localKeys = def.localKeys\n          const foreignKeys = def.foreignKeys\n\n          // TODO: Handle case when belongsTo relation isn't ever defined\n          if (self._collections[relation] && foreignKey && !self.getCollection(relation).indexes[foreignKey]) {\n            self.getCollection(relation).createIndex(foreignKey)\n          }\n\n          descriptor = {\n            get () {\n              const _self = this\n              if (!_self._get('$') || !link) {\n                return _self._get(path)\n              }\n              const key = def.getForeignKey(_self)\n              let items\n              const relationCollection = self.getCollection(relation)\n\n              if (foreignKey) {\n                // Really fast retrieval\n                items = relationCollection.getAll(key, {\n                  index: foreignKey\n                })\n              } else if (localKeys) {\n                const keys = utils.get(_self, localKeys) || []\n                const args = utils.isArray(keys) ? keys : Object.keys(keys)\n                // Really fast retrieval\n                items = relationCollection.getAll.apply(relationCollection, args)\n              } else if (foreignKeys) {\n                const query = {}\n                utils.set(query, `where.${foreignKeys}.contains`, key)\n                // Make a much slower retrieval\n                items = relationCollection.filter(query)\n              }\n\n              _self._set(path, items)\n              return items\n            },\n            set (records) {\n              const _self = this\n              const key = collection.recordId(_self)\n              const relationCollection = self.getCollection(relation)\n              _self._set(path, records)\n\n              if (foreignKey) {\n                def.setForeignKey(_self, records)\n                if (utils.isArray(records)) {\n                  records.forEach(function (record) {\n                    relationCollection.updateIndex(record, updateOpts)\n                  })\n                }\n              } if (localKeys) {\n                utils.set(_self, localKeys, records.map(function (record) {\n                  return relationCollection.recordId(record)\n                }))\n              } else if (foreignKeys) {\n                records.forEach(function (record) {\n                  const keys = utils.get(record, foreignKeys)\n                  if (keys) {\n                    if (keys.indexOf(key) === -1) {\n                      keys.push(key)\n                    }\n                  } else {\n                    utils.set(record, foreignKeys, [key])\n                  }\n                })\n              }\n              return def.getLocalField(_self)\n            }\n          }\n        } else if (type === hasOneType) {\n          descriptor = {\n            get () {\n              const _self = this\n              if (!_self._get('$') || !link) {\n                return _self._get(path)\n              }\n              const key = def.getForeignKey(_self)\n              const items = self.getCollection(relation).getAll(key, {\n                index: foreignKey\n              })\n              const item = items.length ? items[0] : undefined\n              _self._set(path, item)\n              return item\n            },\n            set (record) {\n              const _self = this\n              _self._set(path, record)\n              def.setForeignKey(_self, record)\n              self.getCollection(relation).updateIndex(record, updateOpts)\n              return def.getLocalField(_self)\n            }\n          }\n        }\n\n        if (descriptor) {\n          descriptor.enumerable = utils.isUndefined(def.enumerable) ? true : def.enumerable\n          if (def.get) {\n            let origGet = descriptor.get\n            descriptor.get = function () {\n              return def.get(def, this, (...args) => origGet.apply(this, args))\n            }\n          }\n          if (def.set) {\n            let origSet = descriptor.set\n            descriptor.set = function (related) {\n              return def.set(def, this, related, (value) => origSet.call(this, value === undefined ? related : value))\n            }\n          }\n          Object.defineProperty(mapper.recordClass.prototype, localField, descriptor)\n        }\n      })\n    }\n\n    return mapper\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#destroy\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @return {Promise}\n   */\n  destroy (name, id, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('destroy', name, id, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.getCollection(name).remove(id, opts)\n      } else {\n        data = self.getCollection(name).remove(id, opts)\n      }\n      delete self._pendingQueries[name][id]\n      delete self._completedQueries[name][id]\n      return data\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#destroyAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @return {Promise}\n   */\n  destroyAll (name, query, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('destroyAll', name, query, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.getCollection(name).removeAll(query, opts)\n      } else {\n        data = self.getCollection(name).removeAll(query, opts)\n      }\n      const hash = self.hashQuery(name, query, opts)\n      delete self._pendingQueries[name][hash]\n      delete self._completedQueries[name][hash]\n      return data\n    })\n  },\n\n  eject (id, opts) {\n    return this.remove(id, opts)\n  },\n\n  ejectAll (query, opts) {\n    return this.removeAll(query, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#find\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#find}.\n   * @param {Object} [opts] - Passed to {@link Mapper#find}.\n   * @return {Promise}\n   */\n  find (name, id, opts) {\n    const self = this\n    opts || (opts = {})\n    const pendingQuery = self._pendingQueries[name][id]\n\n    utils.fillIn(opts, self.getMapper(name))\n\n    if (pendingQuery) {\n      return pendingQuery\n    }\n    const item = self.cachedFind(name, id, opts)\n    let promise\n\n    if (opts.force || !item) {\n      promise = self._pendingQueries[name][id] = self._callSuper('find', name, id, opts).then(function (data) {\n        delete self._pendingQueries[name][id]\n        return self._end(name, data, opts)\n      }, function (err) {\n        delete self._pendingQueries[name][id]\n        return utils.reject(err)\n      }).then(function (data) {\n        self._completedQueries[name][id] = new Date().getTime()\n        return data\n      })\n    } else {\n      promise = utils.resolve(item)\n    }\n    return promise\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#findAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\n   * @return {Promise}\n   */\n  findAll (name, query, opts) {\n    const self = this\n    opts || (opts = {})\n    const hash = self.hashQuery(name, query, opts)\n    const pendingQuery = self._pendingQueries[name][hash]\n\n    utils.fillIn(opts, self.getMapper(name))\n\n    if (pendingQuery) {\n      return pendingQuery\n    }\n\n    const items = self.cachedFindAll(name, query, opts)\n    let promise\n\n    if (opts.force || !items) {\n      promise = self._pendingQueries[name][hash] = self._callSuper('findAll', name, query, opts).then(function (data) {\n        delete self._pendingQueries[name][hash]\n        return self._end(name, data, opts)\n      }, function (err) {\n        delete self._pendingQueries[name][hash]\n        return utils.reject(err)\n      }).then(function (data) {\n        self._completedQueries[name][hash] = new Date().getTime()\n        return data\n      })\n    } else {\n      promise = utils.resolve(items)\n    }\n    return promise\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#getCollection\n   * @method\n   * @param {string} name Name of the {@link LinkedCollection} to retrieve.\n   * @return {LinkedCollection}\n   */\n  getCollection (name) {\n    const collection = this._collections[name]\n    if (!collection) {\n      throw new ReferenceError(`${name} is not a registered collection!`)\n    }\n    return collection\n  },\n\n  hashQuery (name, query, opts) {\n    return utils.toJson(query)\n  },\n\n  inject (records, opts) {\n    return this.add(records, opts)\n  },\n\n  remove (name, id, opts) {\n    const self = this\n    const record = self.getCollection(name).remove(id, opts)\n    if (record) {\n      self.removeRelated(name, [record], opts)\n    }\n    return record\n  },\n\n  removeAll (name, query, opts) {\n    const self = this\n    const records = self.getCollection(name).removeAll(query, opts)\n    if (records.length) {\n      self.removeRelated(name, records, opts)\n    }\n    return records\n  },\n\n  removeRelated (name, records, opts) {\n    const self = this\n    utils.forEachRelation(self.getMapper(name), opts, function (def, optsCopy) {\n      records.forEach(function (record) {\n        let relatedData\n        let query\n        if (def.foreignKey && (def.type === 'hasOne' || def.type === 'hasMany')) {\n          query = { [def.foreignKey]: def.getForeignKey(record) }\n        } else if (def.type === 'hasMany' && def.localKeys) {\n          query = {\n            where: {\n              [def.getRelation().idAttribute]: {\n                'in': utils.get(record, def.localKeys)\n              }\n            }\n          }\n        } else if (def.type === 'hasMany' && def.foreignKeys) {\n          query = {\n            where: {\n              [def.foreignKeys]: {\n                'contains': def.getForeignKey(record)\n              }\n            }\n          }\n        } else if (def.type === 'belongsTo') {\n          relatedData = self.remove(def.relation, def.getForeignKey(record), optsCopy)\n        }\n        if (query) {\n          relatedData = self.removeAll(def.relation, query, optsCopy)\n        }\n        if (relatedData) {\n          if (utils.isArray(relatedData) && !relatedData.length) {\n            return\n          }\n          if (def.type === 'hasOne') {\n            relatedData = relatedData[0]\n          }\n          def.setLocalField(record, relatedData)\n        }\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#update\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#update}.\n   * @param {Object} record - Passed to {@link Mapper#update}.\n   * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @return {Promise}\n   */\n  update (name, id, record, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('update', name, id, record, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#updateAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} props - Passed to {@link Mapper#updateAll}.\n   * @param {Object} [query] - Passed to {@link Mapper#updateAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#updateAll}. See\n   * {@link Mapper#updateAll} for more configuration options.\n   * @return {Promise}\n   */\n  updateAll (name, props, query, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('updateAll', name, query, props, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#updateMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @return {Promise}\n   */\n  updateMany (name, records, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('updateMany', name, records, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  }\n}\n\nconst toProxy = [\n  'add',\n  'between',\n  'createIndex',\n  'filter',\n  'get',\n  'getAll',\n  'query',\n  'toJson'\n]\n\ntoProxy.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getCollection(name)[method](...args)\n  }\n})\n\n/**\n * The `DataStore` class is an extension of {@link Container}. Not only does\n * `DataStore` manage mappers, but also collections. `DataStore` implements the\n * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\n * {@link Mapper#create}. If you use the asynchronous `DataStore` methods\n * instead of calling them directly on the mappers, then the results of the\n * method calls will be inserted into the store's collections. You can think of\n * a `DataStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\n * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\n * (the Mappers).\n *\n * ```javascript\n * import {DataStore} from 'js-data'\n * ```\n *\n * @example\n * import {DataStore} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const store = new DataStore()\n * const UserMapper = store.defineMapper('user')\n *\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n * UserMapper.find(1).then(function (user) {\n *   // retrieved a \"user\" record via the http adapter, but that's it\n *\n *   // Call \"find\" on \"store\" for the \"user\" mapper (Stateful DataStore)\n *   return store.find('user', 1)\n * }).then(function (user) {\n *   // not only was a \"user\" record retrieved, but it was added to the\n *   // store's \"user\" collection\n *   const cachedUser = store.getCollection('user').get(1)\n *   user === cachedUser // true\n * })\n *\n * @class DataStore\n * @extends Container\n * @param {Object} [opts] Configuration options. See {@link Container}.\n * @return {DataStore}\n */\nexport default Container.extend(props)\n","/**\n * Registered as `js-data` in NPM and Bower.\n * #### Script tag\n * ```js\n * window.JSData\n * ```\n * #### CommonJS\n * ```js\n * var JSData = require('js-data')\n * ```\n * #### ES6 Modules\n * ```js\n * import JSData from 'js-data'\n * ```\n * #### AMD\n * ```js\n * define('myApp', ['js-data'], function (JSData) { ... })\n * ```\n *\n * @module js-data\n */\n\n/**\n * Details of the current version of the `js-data` module.\n *\n * @name version\n * @memberof module:js-data\n * @type {Object}\n * @property {string} full The full semver value.\n * @property {number} major The major version number.\n * @property {number} minor The minor version number.\n * @property {number} patch The patch version number.\n * @property {(string|boolean)} alpha The alpha version value, otherwise `false`\n * if the current version is not alpha.\n * @property {(string|boolean)} beta The beta version value, otherwise `false`\n * if the current version is not beta.\n */\nexport const version = {\n  alpha: '<%= alpha %>' !== 'false' ? '<%= alpha %>' : false,\n  beta: '<%= beta %>' !== 'false' ? '<%= beta %>' : false,\n  full: '<%= pkg.version %>',\n  major: parseInt('<%= major %>', 10),\n  minor: parseInt('<%= minor %>', 10),\n  patch: parseInt('<%= patch %>', 10)\n}\n\nimport utils from './utils'\n\n/**\n * {@link Collection} class.\n * @name module:js-data.Collection\n */\nimport Collection from './Collection'\n\n/**\n * {@link Component} class.\n * @name module:js-data.Component\n */\nimport Component from './Component'\n\n/**\n * {@link Container} class.\n * @name module:js-data.Container\n */\nimport Container from './Container'\n\n/**\n * {@link DataStore} class.\n * @name module:js-data.DataStore\n */\nimport DataStore from './DataStore'\n\n/**\n * {@link LinkedCollection} class.\n * @name module:js-data.LinkedCollection\n */\nimport LinkedCollection from './LinkedCollection'\n\n/**\n * {@link Mapper} class.\n * @name module:js-data.Mapper\n */\nimport Mapper from './Mapper'\n\n/**\n * {@link Query} class.\n * @name module:js-data.Query\n */\nimport Query from './Query'\n\n/**\n * {@link Record} class.\n * @name module:js-data.Record\n */\nimport Record from './Record'\n\n/**\n * {@link Schema} class.\n * @name module:js-data.Schema\n */\nimport Schema from './Schema'\n\nexport * from './decorators'\n\nexport {\n  Collection,\n  Component,\n  Container,\n  DataStore,\n  LinkedCollection,\n  Mapper,\n  Query,\n  Record,\n  Schema,\n  utils\n}\n"],"names":["utils","belongsTo","hasMany","hasOne","props","toProxy"],"mappings":"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"}