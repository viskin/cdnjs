{"version":3,"file":"js-data.es2015.js","sources":["../src/utils.js","../src/Component.js","../src/Query.js","../lib/mindex/_utils.js","../lib/mindex/index.js","../src/Collection.js","../src/decorators.js","../src/Record.js","../src/Schema.js","../src/Mapper.js","../src/Container.js","../src/LinkedCollection.js","../src/DataStore.js","../src/index.js"],"sourcesContent":["/**\n * Utility methods used by JSData.\n *\n * @example\n * import {utils} from 'js-data'\n * console.log(utils.isString('foo')) // true\n *\n * @namespace utils\n * @type {Object}\n */\n\nconst DOMAIN = 'utils'\n\nconst INFINITY = 1 / 0\nconst MAX_INTEGER = 1.7976931348623157e+308\nconst BOOL_TAG = '[object Boolean]'\nconst DATE_TAG = '[object Date]'\nconst FUNC_TAG = '[object Function]'\nconst NUMBER_TAG = '[object Number]'\nconst OBJECT_TAG = '[object Object]'\nconst REGEXP_TAG = '[object RegExp]'\nconst STRING_TAG = '[object String]'\nconst objToString = Object.prototype.toString\nconst PATH = /^(.+)\\.(.+)$/\n\nconst ERRORS = {\n  '400' () { return `expected: ${arguments[0]}, found: ${arguments[2] ? arguments[1] : typeof arguments[1]}` },\n  '404' () { return `${arguments[0]} not found` }\n}\n\nconst toInteger = function (value) {\n  if (!value) {\n    return 0\n  }\n  // Coerce to number\n  value = +value\n  if (value === INFINITY || value === -INFINITY) {\n    const sign = (value < 0 ? -1 : 1)\n    return sign * MAX_INTEGER\n  }\n  const remainder = value % 1\n  return value === value ? (remainder ? value - remainder : value) : 0 // eslint-disable-line\n}\n\nconst toStr = function (value) {\n  return objToString.call(value)\n}\n\nconst isPlainObject = function (value) {\n  return (!!value && typeof value === 'object' && value.constructor === Object)\n}\n\nconst mkdirP = function (object, path) {\n  if (!path) {\n    return object\n  }\n  const parts = path.split('.')\n  parts.forEach(function (key) {\n    if (!object[key]) {\n      object[key] = {}\n    }\n    object = object[key]\n  })\n  return object\n}\n\nconst utils = {\n  /**\n   * Reference to the Promise constructor used by JSData. Defaults to\n   * `window.Promise` or `global.Promise`.\n   *\n   * @example <caption>Make JSData use a different `Promise` constructor</caption>\n   * import Promise from 'bluebird'\n   * import {utils} from 'js-data'\n   * utils.Promise = Promise\n   *\n   * @name utils.Promise\n   * @since 3.0.0\n   * @type {Function}\n   */\n  Promise: Promise,\n\n  /**\n   * Shallow copy properties that meet the following criteria from `src` to\n   * `dest`:\n   *\n   * - own enumerable\n   * - not a function\n   * - does not start with \"_\"\n   *\n   * @name utils._\n   * @param {Object} dest Destination object.\n   * @param {Object} src Source object.\n   * @private\n   * @since 3.0.0\n   */\n  _ (dest, src) {\n    utils.forOwn(src, function (value, key) {\n      if (key && utils.isUndefined(dest[key]) && !utils.isFunction(value) && key.indexOf('_') !== 0) {\n        dest[key] = value\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name utils._forRelation\n   * @private\n   */\n  _forRelation (opts, def, fn, ctx) {\n    const relationName = def.relation\n    let containedName = null\n    let index\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    if ((index = utils._getIndex(opts.with, relationName)) >= 0) {\n      containedName = relationName\n    } else if ((index = utils._getIndex(opts.with, def.localField)) >= 0) {\n      containedName = def.localField\n    }\n\n    if (opts.withAll) {\n      fn.call(ctx, def, {})\n      return\n    } else if (!containedName) {\n      return\n    }\n    let optsCopy = {}\n    utils.fillIn(optsCopy, def.getRelation())\n    utils.fillIn(optsCopy, opts)\n    optsCopy.with = opts.with.slice()\n    optsCopy._activeWith = optsCopy.with.splice(index, 1)[0]\n    optsCopy.with.forEach(function (relation, i) {\n      if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\n        optsCopy.with[i] = relation.substr(containedName.length + 1)\n      } else {\n        optsCopy.with[i] = ''\n      }\n    })\n    fn.call(ctx, def, optsCopy)\n  },\n\n  /**\n   * TODO\n   *\n   * @name utils._getIndex\n   * @private\n   */\n  _getIndex (list, relation) {\n    let index = -1\n    list.forEach(function (_relation, i) {\n      if (_relation === relation) {\n        index = i\n        return false\n      } else if (utils.isObject(_relation)) {\n        if (_relation.relation === relation) {\n          index = i\n          return false\n        }\n      }\n    })\n    return index\n  },\n\n  /**\n   * Define hidden (non-enumerable), writable properties on `target` from the\n   * provided `props`.\n   *\n   * @name utils.addHiddenPropsToTarget\n   * @param {Object} target That to which `props` should be added.\n   * @param {Object} props Properties to be added to `target`.\n   */\n  addHiddenPropsToTarget (target, props) {\n    const map = {}\n    utils.forOwn(props, function (value, key) {\n      map[key] = {\n        writable: true,\n        value\n      }\n    })\n    Object.defineProperties(target, map)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  areDifferent (a, b, opts) {\n    opts || (opts = {})\n    const diff = utils.diffObjects(a, b, opts)\n    const diffCount = Object.keys(diff.added).length +\n      Object.keys(diff.removed).length +\n      Object.keys(diff.changed).length\n    return diffCount > 0\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  classCallCheck (instance, ctor) {\n    if (!(instance instanceof ctor)) {\n      throw utils.err(`${ctor.name}`)(500, 'Cannot call a class as a function')\n    }\n  },\n\n  /**\n   * Deep copy a value.\n   *\n   * @ignore\n   * @param {*} from Value to deep copy.\n   * @returns {*} Deep copy of `from`.\n   */\n  copy (from, to, stackFrom, stackTo, blacklist, plain) {\n    if (!to) {\n      to = from\n      if (from) {\n        if (utils.isArray(from)) {\n          to = utils.copy(from, [], stackFrom, stackTo, blacklist, plain)\n        } else if (utils.isDate(from)) {\n          to = new Date(from.getTime())\n        } else if (utils.isRegExp(from)) {\n          to = new RegExp(from.source, from.toString().match(/[^\\/]*$/)[0])\n          to.lastIndex = from.lastIndex\n        } else if (utils.isObject(from)) {\n          if (plain) {\n            to = utils.copy(from, {}, stackFrom, stackTo, blacklist, plain)\n          } else {\n            to = utils.copy(from, Object.create(Object.getPrototypeOf(from)), stackFrom, stackTo, blacklist, plain)\n          }\n        }\n      }\n    } else {\n      if (from === to) {\n        throw utils.err(`${DOMAIN}.copy`)(500, 'Cannot copy! Source and destination are identical.')\n      }\n\n      stackFrom = stackFrom || []\n      stackTo = stackTo || []\n\n      if (utils.isObject(from)) {\n        let index = stackFrom.indexOf(from)\n        if (index !== -1) {\n          return stackTo[index]\n        }\n\n        stackFrom.push(from)\n        stackTo.push(to)\n      }\n\n      let result\n      if (utils.isArray(from)) {\n        let i\n        to.length = 0\n        for (i = 0; i < from.length; i++) {\n          result = utils.copy(from[i], null, stackFrom, stackTo, blacklist, plain)\n          if (utils.isObject(from[i])) {\n            stackFrom.push(from[i])\n            stackTo.push(result)\n          }\n          to.push(result)\n        }\n      } else {\n        if (utils.isArray(to)) {\n          to.length = 0\n        } else {\n          utils.forOwn(to, function (value, key) {\n            delete to[key]\n          })\n        }\n        for (var key in from) {\n          if (from.hasOwnProperty(key)) {\n            if (utils.isBlacklisted(key, blacklist)) {\n              continue\n            }\n            result = utils.copy(from[key], null, stackFrom, stackTo, blacklist, plain)\n            if (utils.isObject(from[key])) {\n              stackFrom.push(from[key])\n              stackTo.push(result)\n            }\n            to[key] = result\n          }\n        }\n      }\n    }\n    return to\n  },\n\n  /**\n   * Recursively shallow fill in own enumberable properties from `source` to `dest`.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  deepFillIn (dest, source) {\n    if (source) {\n      utils.forOwn(source, function (value, key) {\n        const existing = dest[key]\n        if (isPlainObject(value) && isPlainObject(existing)) {\n          utils.deepFillIn(existing, value)\n        } else if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n          dest[key] = value\n        }\n      })\n    }\n    return dest\n  },\n\n  /**\n   * Recursively shallow copy own enumberable properties from `source` to `dest`.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  deepMixIn (dest, source) {\n    if (source) {\n      utils.forOwn(source, function (value, key) {\n        const existing = dest[key]\n        if (isPlainObject(value) && isPlainObject(existing)) {\n          utils.deepMixIn(existing, value)\n        } else {\n          dest[key] = value\n        }\n      })\n    }\n    return dest\n  },\n\n  /**\n   * @param {Object} a Base object.\n   * @param {Object} b Comparison object.\n   * @returns {Object} Diff.\n   */\n  diffObjects (a, b, opts) {\n    opts || (opts = {})\n    let equalsFn = opts.equalsFn\n    let bl = opts.ignore\n    const diff = {\n      added: {},\n      changed: {},\n      removed: {}\n    }\n    if (!utils.isFunction(equalsFn)) {\n      equalsFn = utils.strictEqual\n    }\n\n    utils.forOwn(b, function (oldValue, key) {\n      const newValue = a[key]\n\n      if (utils.isBlacklisted(key, bl) || equalsFn(newValue, oldValue)) {\n        return\n      }\n\n      if (utils.isUndefined(newValue)) {\n        diff.removed[key] = undefined\n      } else if (!equalsFn(newValue, oldValue)) {\n        diff.changed[key] = newValue\n      }\n    })\n\n    utils.forOwn(a, function (newValue, key) {\n      if (!utils.isUndefined(b[key]) || utils.isBlacklisted(key, bl)) {\n        return\n      }\n      diff.added[key] = newValue\n    })\n\n    return diff\n  },\n\n  /**\n   * TODO\n   */\n  equal (a, b) {\n    return a == b // eslint-disable-line\n  },\n\n  /**\n   * TODO\n   */\n  err (domain, target) {\n    return function (code) {\n      const prefix = `[${domain}:${target}] `\n      let message = ERRORS[code].apply(null, Array.prototype.slice.call(arguments, 1))\n      message = `${prefix}${message}\\nhttp://www.js-data.io/v3.0/docs/errors#${code}`\n      return new Error(message)\n    }\n  },\n\n  /**\n   * Add eventing capabilities into the target object.\n   *\n   * @ignore\n   * @param {Object} target Target object.\n   * @param {Function} [getter] Custom getter for retrieving the object's event\n   * listeners.\n   * @param {Function} [setter] Custom setter for setting the object's event\n   * listeners.\n   */\n  eventify (target, getter, setter) {\n    target = target || this\n    let _events = {}\n    if (!getter && !setter) {\n      getter = function () { return _events }\n      setter = function (value) { _events = value }\n    }\n    Object.defineProperties(target, {\n      emit: {\n        value (...args) {\n          const events = getter.call(this) || {}\n          const type = args.shift()\n          let listeners = events[type] || []\n          let i\n          for (i = 0; i < listeners.length; i++) {\n            listeners[i].f.apply(listeners[i].c, args)\n          }\n          listeners = events.all || []\n          args.unshift(type)\n          for (i = 0; i < listeners.length; i++) {\n            listeners[i].f.apply(listeners[i].c, args)\n          }\n        }\n      },\n      off: {\n        value (type, func) {\n          const events = getter.call(this)\n          const listeners = events[type]\n          if (!listeners) {\n            setter.call(this, {})\n          } else if (func) {\n            for (let i = 0; i < listeners.length; i++) {\n              if (listeners[i].f === func) {\n                listeners.splice(i, 1)\n                break\n              }\n            }\n          } else {\n            listeners.splice(0, listeners.length)\n          }\n        }\n      },\n      on: {\n        value (type, func, ctx) {\n          if (!getter.call(this)) {\n            setter.call(this, {})\n          }\n          const events = getter.call(this)\n          events[type] = events[type] || []\n          events[type].push({\n            c: ctx,\n            f: func\n          })\n        }\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  extend (props, classProps) {\n    const superClass = this\n    let subClass\n\n    props || (props = {})\n    classProps || (classProps = {})\n\n    if (props.hasOwnProperty('constructor')) {\n      subClass = props.constructor\n      delete props.constructor\n    } else {\n      subClass = function (...args) {\n        utils.classCallCheck(this, subClass)\n        superClass.apply(this, args)\n      }\n    }\n\n    // Setup inheritance of instance members\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        configurable: true,\n        enumerable: false,\n        value: subClass,\n        writable: true\n      }\n    })\n\n    const obj = Object\n    // Setup inheritance of static members\n    if (obj.setPrototypeOf) {\n      obj.setPrototypeOf(subClass, superClass)\n    } else if (classProps.strictEs6Class) {\n      subClass.__proto__ = superClass // eslint-disable-line\n    } else {\n      utils.forOwn(superClass, function (value, key) {\n        subClass[key] = value\n      })\n    }\n    Object.defineProperty(subClass, '__super__', {\n      configurable: true,\n      value: superClass\n    })\n\n    utils.addHiddenPropsToTarget(subClass.prototype, props)\n    utils.fillIn(subClass, classProps)\n\n    return subClass\n  },\n\n  /**\n   * Shallow copy own enumerable properties from `src` to `dest` that are on `src`\n   * but are missing from `dest.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  fillIn (dest, src) {\n    utils.forOwn(src, function (value, key) {\n      if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n        dest[key] = value\n      }\n    })\n    return dest\n  },\n\n  /**\n   * Find the index of something according to the given checker function.\n   *\n   * @ignore\n   * @param {Array} array The array to search.\n   * @param {Function} fn Checker function.\n   * @param {number} Index if found or -1 if not found.\n   */\n  findIndex (array, fn) {\n    let index = -1\n    if (!array) {\n      return index\n    }\n    array.forEach(function (record, i) {\n      if (fn(record)) {\n        index = i\n        return false\n      }\n    })\n    return index\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  forEachRelation (mapper, opts, fn, ctx) {\n    const relationList = mapper.relationList || []\n    if (!relationList.length) {\n      return\n    }\n    relationList.forEach(function (def) {\n      utils._forRelation(opts, def, fn, ctx)\n    })\n  },\n\n  /**\n   * Iterate over an object's own enumerable properties.\n   *\n   * @ignore\n   * @param {Object} object The object whose properties are to be enumerated.\n   * @param {Function} fn Iteration function.\n   * @param {Object} [thisArg] Content to which to bind `fn`.\n   */\n  forOwn (obj, fn, thisArg) {\n    const keys = Object.keys(obj)\n    const len = keys.length\n    let i\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, obj[keys[i]], keys[i], obj)\n    }\n  },\n\n  /**\n   * Proxy for `JSON.parse`.\n   *\n   * @ignore\n   * @param {string} json JSON to parse.\n   * @returns {Object} Parsed object.\n   */\n  fromJson (json) {\n    return utils.isString(json) ? JSON.parse(json) : json\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  'get': function (object, prop) {\n    if (!prop) {\n      return\n    }\n    const parts = prop.split('.')\n    const last = parts.pop()\n\n    while (prop = parts.shift()) { // eslint-disable-line\n      object = object[prop]\n      if (object == null) { // eslint-disable-line\n        return\n      }\n    }\n\n    return object[last]\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  getSuper (instance, isCtor) {\n    const ctor = isCtor ? instance : instance.constructor\n    return (ctor.__super__ || Object.getPrototypeOf(ctor) || ctor.__proto__) // eslint-disable-line\n  },\n\n  /**\n   * Return the intersection of two arrays.\n   *\n   * @ignore\n   * @param {Array} array1 First array.\n   * @param {Array} array2 Second array.\n   * @returns {Array} Array of elements common to both arrays.\n   */\n  intersection (array1, array2) {\n    if (!array1 || !array2) {\n      return []\n    }\n    const result = []\n    let item\n    let i\n    const len = array1.length\n    for (i = 0; i < len; i++) {\n      item = array1[i]\n      if (result.indexOf(item) !== -1) {\n        continue\n      }\n      if (array2.indexOf(item) !== -1) {\n        result.push(item)\n      }\n    }\n    return result\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isArray: Array.isArray,\n\n  /**\n   * Return whether `prop` is matched by any string or regular expression in `bl`.\n   *\n   * @ignore\n   * @param {string} prop The name of a property.\n   * @param {Array} bl Array of strings and regular expressions.\n   * @returns {boolean} Whether `prop` was matched.\n   */\n  isBlacklisted (prop, bl) {\n    if (!bl || !bl.length) {\n      return false\n    }\n    let matches\n    for (var i = 0; i < bl.length; i++) {\n      if ((toStr(bl[i]) === REGEXP_TAG && bl[i].test(prop)) || bl[i] === prop) {\n        matches = prop\n        return matches\n      }\n    }\n    return !!matches\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isBoolean (value) {\n    return toStr(value) === BOOL_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isBrowser: false,\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isDate (value) {\n    return (value && typeof value === 'object' && toStr(value) === DATE_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isFunction (value) {\n    return typeof value === 'function' || (value && toStr(value) === FUNC_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isInteger (value) {\n    return toStr(value) === NUMBER_TAG && value == toInteger(value) // eslint-disable-line\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isNull (value) {\n    return value === null\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isNumber (value) {\n    const type = typeof value\n    return type === 'number' || (value && type === 'object' && toStr(value) === NUMBER_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isObject (value) {\n    return toStr(value) === OBJECT_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isRegExp (value) {\n    return toStr(value) === REGEXP_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isSorN (value) {\n    return utils.isString(value) || utils.isNumber(value)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isString (value) {\n    return typeof value === 'string' || (value && typeof value === 'object' && toStr(value) === STRING_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isUndefined (value) {\n    return value === undefined\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  logify (target) {\n    utils.addHiddenPropsToTarget(target, {\n      dbg (...args) {\n        this.log('debug', ...args)\n      },\n      log (level, ...args) {\n        if (level && !args.length) {\n          args.push(level)\n          level = 'debug'\n        }\n        if (level === 'debug' && !this.debug) {\n          return\n        }\n        const prefix = `${level.toUpperCase()}: (${this.name || this.constructor.name})`\n        if (console[level]) {\n          console[level](prefix, ...args)\n        } else {\n          console.log(prefix, ...args)\n        }\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  noDupeAdd (array, record, fn) {\n    if (!array) {\n      return\n    }\n    const index = this.findIndex(array, fn)\n    if (index < 0) {\n      array.push(record)\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  omit (props, keys) {\n    // Remove relations\n    const _props = {}\n    utils.forOwn(props, function (value, key) {\n      if (keys.indexOf(key) === -1) {\n        _props[key] = value\n      }\n    })\n    return _props\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  plainCopy (from) {\n    return utils.copy(from, undefined, undefined, undefined, undefined, true)\n  },\n\n  /**\n   * Proxy for `Promise.reject`.\n   *\n   * @ignore\n   * @param {*} [value] Value with which to reject the Promise.\n   * @returns {Promise} Promise reject with `value`.\n   */\n  reject (value) {\n    return utils.Promise.reject(value)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  remove (array, fn) {\n    if (!array || !array.length) {\n      return\n    }\n    const index = this.findIndex(array, fn)\n    if (index >= 0) {\n      array.splice(index, 1)\n    }\n  },\n\n  /**\n   * Proxy for `Promise.resolve`.\n   *\n   * @ignore\n   * @param {*} [value] Value with which to resolve the Promise.\n   * @returns {Promise} Promise resolved with `value`.\n   */\n  resolve (value) {\n    return utils.Promise.resolve(value)\n  },\n\n  /**\n   * Set the value at the provided key or path.\n   *\n   * @ignore\n   * @param {Object} object The object on which to set a property.\n   * @param {(string|Object)} path The key or path to the property. Can also\n   * pass in an object of path/value pairs, which will all be set on the target\n   * object.\n   * @param {*} [value] The value to set.\n   */\n  set: function (object, path, value) {\n    if (utils.isObject(path)) {\n      utils.forOwn(path, function (value, _path) {\n        utils.set(object, _path, value)\n      })\n    } else {\n      const parts = PATH.exec(path)\n      if (parts) {\n        mkdirP(object, parts[1])[parts[2]] = value\n      } else {\n        object[path] = value\n      }\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  strictEqual (a, b) {\n    let _equal = a === b\n    if (!_equal) {\n      if (utils.isObject(a) && utils.isObject(b)) {\n        utils.forOwn(a, function (value, key) {\n          _equal = _equal && utils.strictEqual(value, b[key])\n        })\n        utils.forOwn(b, function (value, key) {\n          _equal = _equal && utils.strictEqual(value, a[key])\n        })\n      } else if (utils.isArray(a) && utils.isArray(b)) {\n        a.forEach(function (value, i) {\n          _equal = _equal && utils.strictEqual(value, b[i])\n        })\n      }\n    }\n    return _equal\n  },\n\n  /**\n   * Proxy for `JSON.stringify`.\n   *\n   * @ignore\n   * @param {*} value Value to serialize to JSON.\n   * @returns {string} JSON string.\n   */\n  toJson: JSON.stringify,\n\n  /**\n   * Unset the value at the provided key or path.\n   *\n   * @ignore\n   * @param {Object} object The object from which to delete the property.\n   * @param {string} path The key or path to the property.\n   */\n  unset (object, path) {\n    const parts = path.split('.')\n    const last = parts.pop()\n\n    while (path = parts.shift()) { // eslint-disable-line\n      object = object[path]\n      if (object == null) { // eslint-disable-line\n        return\n      }\n    }\n\n    object[last] = undefined\n  }\n}\n\n// Attempt to detect whether we are in the browser.\ntry {\n  utils.isBrowser = !!window\n} catch (e) {\n  utils.isBrowser = false\n}\n\nexport default utils\n","import utils from './utils'\n\n/**\n * @class Component\n */\nexport default function Component () {\n  /**\n   * Event listeners attached to this Component. __Do not modify.__ Use\n   * {@link Component#on} and {@link Component#off} instead.\n   *\n   * @name Component#_listeners\n   * @instance\n   * @since 3.0.0\n   * @type {Object}\n   */\n  Object.defineProperty(this, '_listeners', { value: {} })\n}\n\n/**\n * Create a subclass of this component.\n *\n * @method Component.extend\n * @static\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this component.\n * @since 3.0.0\n */\nComponent.extend = utils.extend\n\n/**\n * Log the provided values at the \"debug\" level.\n *\n * @method Component#dbg\n * @param {...*} [args] Values to log.\n * @since 3.0.0\n */\n/**\n * Log the provided values. By default sends values to `console[level]`.\n *\n * @method Component#log\n * @param {string} level Log level\n * @param {...*} [args] Values to log.\n * @since 3.0.0\n */\nutils.logify(Component.prototype)\n\n/**\n * Register a new event listener on this Component.\n *\n * @example <caption>Listen for all \"afterCreate\" events in a DataStore</caption>\n * store.on('afterCreate', (mapperName, props, opts, result) => {\n *   console.log(mapperName) // \"post\"\n *   console.log(props.id) // undefined\n *   console.log(result.id) // 1234\n * })\n * store.create('post', { title: 'Modeling your data' }).then((post) => {\n *   console.log(post.id) // 1234\n * })\n *\n * @example <caption>Listen for the \"add\" event on a collection</caption>\n * collection.on('add', (records) => {\n *   console.log(records) // [...]\n * })\n *\n * @example <caption>Listen for \"change\" events on a record</caption>\n * post.on('change', (record, changes) => {\n *   console.log(changes) // { changed: { title: 'Modeling your data' } }\n * })\n * post.title = 'Modeling your data'\n *\n * @method Component#on\n * @param {string} event Name of event to subsribe to.\n * @param {Function} listener Listener function to handle the event.\n * @param {*} [ctx] Optional content in which to invoke the listener.\n * @since 3.0.0\n */\n/**\n * Remove an event listener from this Component. If no listener is provided,\n * then all listeners for the specified event will be removed. If no event is\n * specified then all listeners for all events will be removed.\n *\n * @example <caption>Remove a listener to a single event</caption>\n * collection.off('add', handler)\n *\n * @example <caption>Remove all listeners to a single event</caption>\n * record.off('change')\n *\n * @example <caption>Remove all listeners to all events</caption>\n * store.off()\n *\n * @method Component#off\n * @param {string} [event] Name of event to unsubsribe to.\n * @param {Function} [listener] Listener to remove.\n * @since 3.0.0\n */\n/**\n * Trigger an event on this Component.\n *\n * @example\n * collection.on('foo', (msg) => {\n *   console.log(msg) // \"bar\"\n * })\n * collection.emit('foo', 'bar')\n *\n * @example\n * store.on('foo', (msg, val1, val2) => {\n *   console.log(msg, val1, val2) // \"bar\" \"beep\" \"boop\"\n * })\n * store.emit('foo', 'bar', 'beep', 'boop')\n *\n * @method Component#emit\n * @param {string} event Name of event to emit.\n * @param {...*} [args] Arguments to pass to any listeners.\n * @since 3.0.0\n */\nutils.eventify(\n  Component.prototype,\n  function () {\n    return this._listeners\n  },\n  function (value) {\n    this._listeners = value\n  }\n)\n","import utils from './utils'\nimport Component from './Component'\n\nconst DOMAIN = 'Query'\nconst INDEX_ERR = 'Index inaccessible after first operation'\n\n// Reserved words used by JSData's Query Syntax\nconst reserved = {\n  limit: '',\n  offset: '',\n  orderBy: '',\n  skip: '',\n  sort: '',\n  where: ''\n}\n\n// Used by our JavaScript implementation of the LIKE operator\nconst escapeRegExp = /([.*+?^=!:${}()|[\\]\\/\\\\])/g\nconst percentRegExp = /%/g\nconst underscoreRegExp = /_/g\nconst escape = function (pattern) {\n  return pattern.replace(escapeRegExp, '\\\\$1')\n}\n\n/**\n * A class used by the {@link Collection} class to build queries to be executed\n * against the collection's data. An instance of `Query` is returned by\n * {@link Collection#query}. Query instances are typically short-lived, and you\n * shouldn't have to create them yourself. Just use {@link Collection#query}.\n *\n * ```javascript\n * import {Query} from 'js-data'\n * ```\n *\n * @example\n * const posts = store.query('post').filter({ status: 'draft' }).limit(2).run()\n *\n * @class Query\n * @extends Component\n * @param {Collection} collection The collection on which this query operates.\n * @since 3.0.0\n */\nexport default Component.extend({\n  constructor: function Query (collection) {\n    const self = this\n    utils.classCallCheck(self, Query)\n\n    /**\n     * The {@link Collection} on which this query operates.\n     *\n     * @name Query#collection\n     * @since 3.0.0\n     * @type {Collection}\n     */\n    self.collection = collection\n\n    /**\n     * The current data result of this query.\n     *\n     * @name Query#data\n     * @since 3.0.0\n     * @type {Array}\n     */\n    self.data = null\n  },\n\n  /**\n   * Find all entities between two boundaries.\n   *\n   * @example <caption>Get the users ages 18 to 30.</caption>\n   * const users = query.between(18, 30, { index: 'age' }).run()\n   *\n   * @example <caption>Same as above.</caption>\n   * const users = query.between([18], [30], { index: 'age' }).run()\n   *\n   * @method Query#between\n   * @param {Array} leftKeys Keys defining the left boundary.\n   * @param {Array} rightKeys Keys defining the right boundary.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.limit] Limit the result to a certain number.\n   * @param {boolean} [opts.offset] The number of resulting entities to skip.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  between (leftKeys, rightKeys, opts) {\n    const self = this\n    opts || (opts = {})\n    if (self.data) {\n      throw utils.err(`${DOMAIN}#between`)(500, 'Cannot access index')\n    }\n    self.data = self.collection.getIndex(opts.index).between(leftKeys, rightKeys, opts)\n    return self\n  },\n\n  /**\n   * The comparison function used by the {@link Query} class.\n   *\n   * @method Query#compare\n   * @param {Array} orderBy An orderBy clause used for sorting and sub-sorting.\n   * @param {number} index The index of the current orderBy clause being used.\n   * @param {*} a The first item in the comparison.\n   * @param {*} b The second item in the comparison.\n   * @returns {number} -1 if `b` should preceed `a`. 0 if `a` and `b` are equal.\n   * 1 if `a` should preceed `b`.\n   * @since 3.0.0\n   */\n  compare (orderBy, index, a, b) {\n    const def = orderBy[index]\n    let cA = utils.get(a, def[0])\n    let cB = utils.get(b, def[0])\n    if (cA && utils.isString(cA)) {\n      cA = cA.toUpperCase()\n    }\n    if (cB && utils.isString(cB)) {\n      cB = cB.toUpperCase()\n    }\n    if (a === undefined) {\n      a = null\n    }\n    if (b === undefined) {\n      b = null\n    }\n    if (def[1].toUpperCase() === 'DESC') {\n      const temp = cB\n      cB = cA\n      cA = temp\n    }\n    if (cA < cB) {\n      return -1\n    } else if (cA > cB) {\n      return 1\n    } else {\n      if (index < orderBy.length - 1) {\n        return this.compare(orderBy, index + 1, a, b)\n      } else {\n        return 0\n      }\n    }\n  },\n\n  /**\n   * Predicate evaluation function used by the {@link Query} class.\n   *\n   * @method Query#evaluate\n   * @param {*} value The value to evaluate.\n   * @param {string} op The operator to use in this evaluation.\n   * @param {*} predicate The predicate to use in this evaluation.\n   * @returns {boolean} Whether the value passed the evaluation or not.\n   * @since 3.0.0\n   */\n  evaluate (value, op, predicate) {\n    const ops = this.constructor.ops\n    if (ops[op]) {\n      return ops[op](value, predicate)\n    }\n    if (op.indexOf('like') === 0) {\n      return !utils.isNull(this.like(predicate, op.substr(4)).exec(value))\n    } else if (op.indexOf('notLike') === 0) {\n      return utils.isNull(this.like(predicate, op.substr(7)).exec(value))\n    }\n  },\n\n  /**\n   * Find the record or records that match the provided query or are accepted by\n   * the provided filter function.\n   *\n   * @example <caption>Get the draft posts created less than three months</caption>\n   * const posts = query.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * }).run()\n   *\n   * @example <caption>Use a custom filter function</caption>\n   * const posts = query.filter(function (post) {\n   *   return post.isReady()\n   * }).run()\n   *\n   * @method Query#filter\n   * @param {(Object|Function)} [queryOrFn={}] Selection query or filter\n   * function.\n   * @param {Function} [thisArg] Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  filter (query, thisArg) {\n    const self = this\n\n    /**\n     * Selection query as defined by JSData's [Query Syntax][querysyntax].\n     *\n     * [querysyntax]: http://www.js-data.io/v3.0/docs/query-syntax\n     *\n     * @example <caption>Empty \"findAll\" query</caption>\n     * store.findAll('post').then((posts) => {\n     *   console.log(posts) // [...]\n     * })\n     *\n     * @example <caption>Empty \"filter\" query</caption>\n     * const posts = store.filter('post')\n     * console.log(posts) // [...]\n     *\n     * @example <caption>Complex \"findAll\" query</caption>\n     * const PAGE_SIZE = 10\n     * let currentPage = 3\n     *\n     * // Retrieve a filtered page of blog posts\n     * store.findAll('post', {\n     *   where: {\n     *     status: {\n     *       // WHERE status = 'published'\n     *       '==': 'published'\n     *     },\n     *     author: {\n     *       // AND author IN ('bob', 'alice')\n     *       'in': ['bob', 'alice'],\n     *       // OR author IN ('karen')\n     *       '|in': ['karen']\n     *     }\n     *   },\n     *   orderBy: [\n     *     // ORDER BY date_published DESC,\n     *     ['date_published', 'DESC'],\n     *     // ORDER BY title ASC\n     *     ['title', 'ASC']\n     *   ],\n     *   // LIMIT 10\n     *   limit: PAGE_SIZE,\n     *   // SKIP 20\n     *   offset: PAGE_SIZE * (currentPage 1)\n     * }).then((posts) => {\n     *   console.log(posts) // [...]\n     * })\n     *\n     * @namespace query\n     * @property {number} [limit] See {@link query.limit}.\n     * @property {number} [offset] See {@link query.offset}.\n     * @property {string|Array[]} [orderBy] See {@link query.orderBy}.\n     * @property {number} [skip] Alias for {@link query.offset}.\n     * @property {string|Array[]} [sort] Alias for {@link query.orderBy}.\n     * @property {Object} [where] See {@link query.where}.\n     * @since 3.0.0\n     * @tutorial [\"http://www.js-data.io/v3.0/docs/query-syntax\",\"JSData's Query Syntax\"]\n     */\n    query || (query = {})\n    self.getData()\n    if (utils.isObject(query)) {\n      let where = {}\n\n      /**\n       * Filtering criteria. Records that do not meet this criteria will be exluded\n       * from the result.\n       *\n       * @example\n       * TODO\n       *\n       * @name query.where\n       * @type {Object}\n       * @see http://www.js-data.io/v3.0/docs/query-syntax\n       * @since 3.0.0\n       */\n      if (utils.isObject(query.where)) {\n        where = query.where\n      }\n      utils.forOwn(query, function (value, key) {\n        if (!(key in reserved) && !(key in where)) {\n          where[key] = {\n            '==': value\n          }\n        }\n      })\n\n      const fields = []\n      const ops = []\n      const predicates = []\n      utils.forOwn(where, function (clause, field) {\n        if (!utils.isObject(clause)) {\n          clause = {\n            '==': clause\n          }\n        }\n        utils.forOwn(clause, function (expr, op) {\n          fields.push(field)\n          ops.push(op)\n          predicates.push(expr)\n        })\n      })\n      if (fields.length) {\n        let i\n        let len = fields.length\n        self.data = self.data.filter(function (item) {\n          let first = true\n          let keep = true\n\n          for (i = 0; i < len; i++) {\n            let op = ops[i]\n            const isOr = op.charAt(0) === '|'\n            op = isOr ? op.substr(1) : op\n            const expr = self.evaluate(utils.get(item, fields[i]), op, predicates[i])\n            if (expr !== undefined) {\n              keep = first ? expr : (isOr ? keep || expr : keep && expr)\n            }\n            first = false\n          }\n          return keep\n        })\n      }\n\n      // Sort\n      let orderBy = query.orderBy || query.sort\n\n      if (utils.isString(orderBy)) {\n        orderBy = [\n          [orderBy, 'ASC']\n        ]\n      }\n      if (!utils.isArray(orderBy)) {\n        orderBy = null\n      }\n\n      /**\n       * Determines how records should be ordered in the result.\n       *\n       * @example\n       * TODO\n       *\n       * @name query.orderBy\n       * @type {string|Array[]}\n       * @see http://www.js-data.io/v3.0/docs/query-syntax\n       * @since 3.0.0\n       */\n      if (orderBy) {\n        let index = 0\n        orderBy.forEach(function (def, i) {\n          if (utils.isString(def)) {\n            orderBy[i] = [def, 'ASC']\n          }\n        })\n        self.data.sort(function (a, b) {\n          return self.compare(orderBy, index, a, b)\n        })\n      }\n\n      /**\n       * Number of records to skip.\n       *\n       * @example <caption>Retrieve the first \"page\" of blog posts</caption>\n       * const PAGE_SIZE = 10\n       * let currentPage = 1\n       * PostService.findAll({\n       *   offset: PAGE_SIZE * (currentPage 1)\n       *   limit: PAGE_SIZE\n       * })\n       *\n       * @name query.offset\n       * @type {number}\n       * @see http://www.js-data.io/v3.0/docs/query-syntax\n       * @since 3.0.0\n       */\n      if (utils.isNumber(query.skip)) {\n        self.skip(query.skip)\n      } else if (utils.isNumber(query.offset)) {\n        self.skip(query.offset)\n      }\n\n      /**\n       * Maximum number of records to retrieve.\n       *\n       * @example <caption>Retrieve the first \"page\" of blog posts</caption>\n       * const PAGE_SIZE = 10\n       * let currentPage = 1\n       * PostService.findAll({\n       *   offset: PAGE_SIZE * (currentPage 1)\n       *   limit: PAGE_SIZE\n       * })\n       *\n       * @name query.limit\n       * @type {number}\n       * @see http://www.js-data.io/v3.0/docs/query-syntax\n       * @since 3.0.0\n       */\n      if (utils.isNumber(query.limit)) {\n        self.limit(query.limit)\n      }\n    } else if (utils.isFunction(query)) {\n      self.data = self.data.filter(query, thisArg)\n    }\n    return self\n  },\n\n  /**\n   * Iterate over all entities.\n   *\n   * @method Query#forEach\n   * @param {Function} forEachFn Iteration function.\n   * @param {*} [thisArg] Context to which to bind `forEachFn`.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  forEach (forEachFn, thisArg) {\n    this.getData().forEach(forEachFn, thisArg)\n    return this\n  },\n\n  /**\n   * Find the entity or entities that match the provided key.\n   *\n   * @example <caption>Get the entity whose primary key is 25.</caption>\n   * const entities = query.get(25).run()\n   *\n   * @example <caption>Same as above.</caption>\n   * const entities = query.get([25]).run()\n   *\n   * @example <caption>Get all users who are active and have the \"admin\" role.</caption>\n   * const activeAdmins = query.get(['active', 'admin'], {\n   *   index: 'activityAndRoles'\n   * }).run()\n   *\n   * @example <caption>Get all entities that match a certain weather condition.</caption>\n   * const niceDays = query.get(['sunny', 'humid', 'calm'], {\n   *   index: 'weatherConditions'\n   * }).run()\n   *\n   * @method Query#get\n   * @param {Array} keyList Key(s) defining the entity to retrieve. If\n   * `keyList` is not an array (i.e. for a single-value key), it will be\n   * wrapped in an array.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.string] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  get (keyList, opts) {\n    const self = this\n    keyList || (keyList = [])\n    opts || (opts = {})\n    if (self.data) {\n      throw utils.err(`${DOMAIN}#get`)(500, INDEX_ERR)\n    }\n    if (keyList && !utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n    if (!keyList.length) {\n      self.getData()\n      return self\n    }\n    self.data = self.collection.getIndex(opts.index).get(keyList)\n    return self\n  },\n\n  /**\n   * Find the entity or entities that match the provided keyLists.\n   *\n   * @example <caption>Get the posts where \"status\" is \"draft\" or \"inReview\".</caption>\n   * const posts = query.getAll('draft', 'inReview', { index: 'status' }).run()\n   *\n   * @example <caption>Same as above.</caption>\n   * const posts = query.getAll(['draft'], ['inReview'], { index: 'status' }).run()\n   *\n   * @method Query#getAll\n   * @param {...Array} [keyList] Provide one or more keyLists, and all\n   * entities matching each keyList will be retrieved. If no keyLists are\n   * provided, all entities will be returned.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  getAll (...args) {\n    const self = this\n    let opts = {}\n    if (self.data) {\n      throw utils.err(`${DOMAIN}#getAll`)(500, INDEX_ERR)\n    }\n    if (!args.length || args.length === 1 && utils.isObject(args[0])) {\n      self.getData()\n      return self\n    } else if (args.length && utils.isObject(args[args.length - 1])) {\n      opts = args[args.length - 1]\n      args.pop()\n    }\n    const collection = self.collection\n    const index = collection.getIndex(opts.index)\n    self.data = []\n    args.forEach(function (keyList) {\n      self.data = self.data.concat(index.get(keyList))\n    })\n    return self\n  },\n\n  /**\n   * Return the current data result of this query.\n   *\n   * @method Query#getData\n   * @returns {Array} The data in this query.\n   * @since 3.0.0\n   */\n  getData () {\n    const self = this\n    if (!self.data) {\n      self.data = self.collection.index.getAll()\n    }\n    return self.data\n  },\n\n  /**\n   * Implementation used by the `like` operator. Takes a pattern and flags and\n   * returns a `RegExp` instance that can test strings.\n   *\n   * @method Query#like\n   * @param {string} pattern Testing pattern.\n   * @param {string} flags Flags for the regular expression.\n   * @returns {RegExp} Regular expression for testing strings.\n   * @since 3.0.0\n   */\n  like (pattern, flags) {\n    return new RegExp(`^${(escape(pattern).replace(percentRegExp, '.*').replace(underscoreRegExp, '.'))}$`, flags)\n  },\n\n  /**\n   * Limit the result.\n   *\n   * @example <caption>Get only the first 10 draft posts.</caption>\n   * const posts = query.get('draft', { index: 'status' }).limit(10).run()\n   *\n   * @method Query#limit\n   * @param {number} num The maximum number of entities to keep in the result.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  limit (num) {\n    if (!utils.isNumber(num)) {\n      throw utils.err(`${DOMAIN}#limit`, 'num')(400, 'number', num)\n    }\n    const data = this.getData()\n    this.data = data.slice(0, Math.min(data.length, num))\n    return this\n  },\n\n  /**\n   * Apply a mapping function to the result data.\n   *\n   * @example\n   * const ages = UserCollection.query().map((user) => {\n   *   return user.age\n   * }).run()\n   *\n   * @method Query#map\n   * @param {Function} mapFn Mapping function.\n   * @param {*} [thisArg] Context to which to bind `mapFn`.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  map (mapFn, thisArg) {\n    this.data = this.getData().map(mapFn, thisArg)\n    return this\n  },\n\n  /**\n   * Return the result of calling the specified function on each item in this\n   * collection's main index.\n   *\n   * @example\n   * const stringAges = UserCollection.query().mapCall('toString').run()\n   *\n   * @method Query#mapCall\n   * @param {string} funcName Name of function to call\n   * @parama {...*} [args] Remaining arguments to be passed to the function.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  mapCall (funcName, ...args) {\n    this.data = this.getData().map(function (item) {\n      return item[funcName](...args)\n    })\n    return this\n  },\n\n  /**\n   * Complete the execution of the query and return the resulting data.\n   *\n   * @method Query#run\n   * @returns {Array} The result of executing this query.\n   * @since 3.0.0\n   */\n  run () {\n    const data = this.data\n    this.data = null\n    return data\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * @example <caption>Get all but the first 10 draft posts.</caption>\n   * const posts = query.get('draft', { index: 'status' }).skip(10).run()\n   *\n   * @method Query#skip\n   * @param {number} num The number of entities to skip.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  skip (num) {\n    if (!utils.isNumber(num)) {\n      throw utils.err(`${DOMAIN}#skip`, 'num')(400, 'number', num)\n    }\n    const data = this.getData()\n    if (num < data.length) {\n      this.data = data.slice(num)\n    } else {\n      this.data = []\n    }\n    return this\n  }\n}, {\n  /**\n   * The filtering operators supported by {@link Query#filter}, and which are\n   * implemented by adapters (for the most part).\n   *\n   * @example <caption>Variant 1</caption>\n   * const publishedPosts = store.filter('post', {\n   *   status: 'published',\n   *   limit: 2\n   * })\n   *\n   * @example <caption>Variant 2</caption>\n   * const publishedPosts = store.filter('post', {\n   *   where: {\n   *     status: {\n   *       '==': 'published'\n   *     }\n   *   },\n   *   limit: 2\n   * })\n   *\n   * @example <caption>Variant 3</caption>\n   * const publishedPosts = store.query('post').filter({\n   *   status: 'published'\n   * }).limit(2).run()\n   *\n   * @example <caption>Variant 4</caption>\n   * const publishedPosts = store.query('post').filter({\n   *   where: {\n   *     status: {\n   *       '==': 'published'\n   *     }\n   *   }\n   * }).limit(2).run()\n   *\n   * @example <caption>Multiple operators</caption>\n   * const myPublishedPosts = store.filter('post', {\n   *   where: {\n   *     status: {\n   *       '==': 'published'\n   *     },\n   *     user_id: {\n   *       '==': currentUser.id\n   *     }\n   *   }\n   * })\n   *\n   * @name Query.ops\n   * @property {Function} == Equality operator.\n   * @property {Function} != Inequality operator.\n   * @property {Function} > Greater than operator.\n   * @property {Function} >= Greater than (inclusive) operator.\n   * @property {Function} < Less than operator.\n   * @property {Function} <= Less than (inclusive) operator.\n   * @property {Function} isectEmpty Operator that asserts that the intersection\n   * between two arrays is empty.\n   * @property {Function} isectNotEmpty Operator that asserts that the\n   * intersection between two arrays is __not__ empty.\n   * @property {Function} in Operator that asserts whether a value is in an\n   * array.\n   * @property {Function} notIn Operator that asserts whether a value is __not__\n   * in an array.\n   * @property {Function} contains Operator that asserts whether an array\n   * contains a value.\n   * @property {Function} notContains Operator that asserts whether an array\n   * does __not__ contain a value.\n   * @since 3.0.0\n   * @type {Object}\n   */\n  ops: {\n    '==': function (value, predicate) {\n      return value == predicate // eslint-disable-line\n    },\n    '===': function (value, predicate) {\n      return value === predicate\n    },\n    '!=': function (value, predicate) {\n      return value != predicate // eslint-disable-line\n    },\n    '!==': function (value, predicate) {\n      return value !== predicate\n    },\n    '>': function (value, predicate) {\n      return value > predicate\n    },\n    '>=': function (value, predicate) {\n      return value >= predicate\n    },\n    '<': function (value, predicate) {\n      return value < predicate\n    },\n    '<=': function (value, predicate) {\n      return value <= predicate\n    },\n    'isectEmpty': function (value, predicate) {\n      return !utils.intersection((value || []), (predicate || [])).length\n    },\n    'isectNotEmpty': function (value, predicate) {\n      return utils.intersection((value || []), (predicate || [])).length\n    },\n    'in': function (value, predicate) {\n      return predicate.indexOf(value) !== -1\n    },\n    'notIn': function (value, predicate) {\n      return predicate.indexOf(value) === -1\n    },\n    'contains': function (value, predicate) {\n      return (value || []).indexOf(predicate) !== -1\n    },\n    'notContains': function (value, predicate) {\n      return (value || []).indexOf(predicate) === -1\n    }\n  }\n})\n\n/**\n * Create a subclass of this Query.\n *\n * @example <caption>Extend the class in a cross-browser manner.</caption>\n * import {Query} from 'js-data'\n * const CustomQueryClass = Query.extend({\n *   foo () { return 'bar' }\n * })\n * const customQuery = new CustomQueryClass({ name: 'test' })\n * console.log(customQuery.foo()) // \"bar\"\n *\n * @example <caption>Extend the class using ES2015 class syntax.</caption>\n * class CustomQueryClass extends Query {\n *   foo () { return 'bar' }\n * }\n * const customQuery = new CustomQueryClass({ name: 'test' })\n * console.log(customQuery.foo()) // \"bar\"\n *\n * @method Query.extend\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Query.\n * @since 3.0.0\n */\n","export function sort (a, b, hashCode) {\n  // Short-curcuit comparison if a and b are strictly equal\n  // This is absolutely necessary for indexed objects that\n  // don't have the idAttribute field\n  if (a === b) {\n    return 0\n  }\n  if (hashCode) {\n    a = hashCode(a)\n    b = hashCode(b)\n  }\n  if (a === null && b === null) {\n    return 0\n  }\n\n  if (a === null) {\n    return -1\n  }\n\n  if (b === null) {\n    return 1\n  }\n\n  if (a < b) {\n    return -1\n  }\n\n  if (a > b) {\n    return 1\n  }\n\n  return 0\n}\n\nexport function insertAt (array, index, value) {\n  array.splice(index, 0, value)\n  return array\n}\n\nexport function removeAt (array, index) {\n  array.splice(index, 1)\n  return array\n}\n\nexport function binarySearch (array, value, field) {\n  let lo = 0\n  let hi = array.length\n  let compared\n  let mid\n\n  while (lo < hi) {\n    mid = ((lo + hi) / 2) | 0\n    compared = sort(value, array[mid], field)\n    if (compared === 0) {\n      return {\n        found: true,\n        index: mid\n      }\n    } else if (compared < 0) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n\n  return {\n    found: false,\n    index: hi\n  }\n}\n","// Copyright (c) 2015, InternalFX.\n\n// Permission to use, copy, modify, and/or distribute this software for any purpose with or\n// without fee is hereby granted, provided that the above copyright notice and this permission\n// notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO\n// THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT\n// SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR\n// ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\n// USE OR PERFORMANCE OF THIS SOFTWARE.\n\n// Modifications\n// Copyright 2015-2016 Jason Dobry\n//\n// Summary of modifications:\n// Converted to ES6 Class syntax\n// Reworked dependencies so as to re-use code already in js-data\nimport utils from '../../src/utils'\nimport {binarySearch, insertAt, removeAt} from './_utils'\n\nexport default function Index (fieldList, opts) {\n  utils.classCallCheck(this, Index)\n  fieldList || (fieldList = [])\n\n  if (!utils.isArray(fieldList)) {\n    throw new Error('fieldList must be an array.')\n  }\n\n  opts || (opts = {})\n  this.fieldList = fieldList\n  this.fieldGetter = opts.fieldGetter\n  this.hashCode = opts.hashCode\n  this.isIndex = true\n  this.keys = []\n  this.values = []\n}\n\nutils.addHiddenPropsToTarget(Index.prototype, {\n  'set' (keyList, value) {\n    if (!utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\n        if (!dataLocation.found) {\n          insertAt(this.values[pos.index], dataLocation.index, value)\n        }\n      } else {\n        insertAt(this.keys, pos.index, key)\n        insertAt(this.values, pos.index, [value])\n      }\n    } else {\n      if (pos.found) {\n        this.values[pos.index].set(keyList, value)\n      } else {\n        insertAt(this.keys, pos.index, key)\n        let newIndex = new Index([], { hashCode: this.hashCode })\n        newIndex.set(keyList, value)\n        insertAt(this.values, pos.index, newIndex)\n      }\n    }\n  },\n\n  'get' (keyList) {\n    if (!utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        if (this.values[pos.index].isIndex) {\n          return this.values[pos.index].getAll()\n        } else {\n          return this.values[pos.index]\n        }\n      } else {\n        return []\n      }\n    } else {\n      if (pos.found) {\n        return this.values[pos.index].get(keyList)\n      } else {\n        return []\n      }\n    }\n  },\n\n  getAll () {\n    let results = []\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        results = results.concat(value.getAll())\n      } else {\n        results = results.concat(value)\n      }\n    })\n    return results\n  },\n\n  visitAll (cb, thisArg) {\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        value.visitAll(cb, thisArg)\n      } else {\n        value.forEach(cb, thisArg)\n      }\n    })\n  },\n\n  between (leftKeys, rightKeys, opts) {\n    opts || (opts = {})\n    if (!utils.isArray(leftKeys)) {\n      leftKeys = [leftKeys]\n    }\n    if (!utils.isArray(rightKeys)) {\n      rightKeys = [rightKeys]\n    }\n    utils.fillIn(opts, {\n      leftInclusive: true,\n      rightInclusive: false,\n      limit: undefined,\n      offset: 0\n    })\n\n    let results = this._between(leftKeys, rightKeys, opts)\n\n    if (opts.limit) {\n      return results.slice(opts.offset, opts.limit + opts.offset)\n    } else {\n      return results.slice(opts.offset)\n    }\n  },\n\n  _between (leftKeys, rightKeys, opts) {\n    let results = []\n\n    let leftKey = leftKeys.shift()\n    let rightKey = rightKeys.shift()\n\n    let pos\n\n    if (leftKey !== undefined) {\n      pos = binarySearch(this.keys, leftKey)\n    } else {\n      pos = {\n        found: false,\n        index: 0\n      }\n    }\n\n    if (leftKeys.length === 0) {\n      if (pos.found && opts.leftInclusive === false) {\n        pos.index += 1\n      }\n\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        if (rightKey !== undefined) {\n          if (opts.rightInclusive) {\n            if (this.keys[i] > rightKey) { break }\n          } else {\n            if (this.keys[i] >= rightKey) { break }\n          }\n        }\n\n        if (this.values[i].isIndex) {\n          results = results.concat(this.values[i].getAll())\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    } else {\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        let currKey = this.keys[i]\n        if (currKey > rightKey) { break }\n\n        if (this.values[i].isIndex) {\n          if (currKey === leftKey) {\n            results = results.concat(this.values[i]._between(utils.copy(leftKeys), rightKeys.map(function () { return undefined }), opts))\n          } else if (currKey === rightKey) {\n            results = results.concat(this.values[i]._between(leftKeys.map(function () { return undefined }), utils.copy(rightKeys), opts))\n          } else {\n            results = results.concat(this.values[i].getAll())\n          }\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    }\n\n    if (opts.limit) {\n      return results.slice(0, opts.limit + opts.offset)\n    } else {\n      return results\n    }\n  },\n\n  peek () {\n    if (this.values.length) {\n      if (this.values[0].isIndex) {\n        return this.values[0].peek()\n      } else {\n        return this.values[0]\n      }\n    }\n    return []\n  },\n\n  clear () {\n    this.keys = []\n    this.values = []\n  },\n\n  insertRecord (data) {\n    let keyList = this.fieldList.map(function (field) {\n      if (utils.isFunction(field)) {\n        return field(data) || null\n      } else {\n        return data[field] || null\n      }\n    })\n    this.set(keyList, data)\n  },\n\n  removeRecord (data) {\n    let removed\n    this.values.forEach((value, i) => {\n      if (value.isIndex) {\n        if (value.removeRecord(data)) {\n          if (value.keys.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      } else {\n        const dataLocation = binarySearch(value, data, this.hashCode)\n        if (dataLocation.found) {\n          removeAt(value, dataLocation.index)\n          if (value.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      }\n    })\n    return removed ? data : undefined\n  },\n\n  updateRecord (data) {\n    this.removeRecord(data)\n    this.insertRecord(data)\n  }\n})\n","import utils from './utils'\nimport Component from './Component'\nimport Query from './Query'\nimport Index from '../lib/mindex/index'\n\nconst DOMAIN = 'Collection'\n\nconst COLLECTION_DEFAULTS = {\n  /**\n   * Field to be used as the unique identifier for records in this collection.\n   * Defaults to `\"id\"` unless {@link Collection#mapper} is set, in which case\n   * this will default to {@link Mapper#idAttribute}.\n   *\n   * @name Collection#idAttribute\n   * @type {string}\n   * @default \"id\"\n   */\n  idAttribute: 'id',\n\n  /**\n   * What to do when inserting a record into this Collection that shares a\n   * primary key with a record already in this Collection.\n   *\n   * Possible values:\n   * - merge\n   * - replace\n   *\n   * Merge:\n   *\n   * Recursively shallow copy properties from the new record onto the existing\n   * record.\n   *\n   * Replace:\n   *\n   * Shallow copy top-level properties from the new record onto the existing\n   * record. Any top-level own properties of the existing record that are _not_\n   * on the new record will be removed.\n   *\n   * @name Collection#onConflict\n   * @type {string}\n   * @default \"merge\"\n   */\n  onConflict: 'merge'\n}\n\n/**\n * An ordered set of {@link Record} instances.\n *\n * @example\n * import {Collection, Record} from 'js-data'\n * const user1 = new Record({ id: 1 })\n * const user2 = new Record({ id: 2 })\n * const UserCollection = new Collection([user1, user2])\n * UserCollection.get(1) === user1 // true\n *\n * @class Collection\n * @extends Component\n * @type {Function}\n * @param {Array} [records] Initial set of records to insert into the\n * collection.\n * @param {Object} [opts] Configuration options.\n * @param {string} [opts.idAttribute] See {@link Collection#idAttribute}.\n * @param {string} [opts.onConflict=\"merge\"] See {@link Collection#onConflict}.\n * @param {string} [opts.mapper] See {@link Collection#mapper}.\n */\nexport default Component.extend({\n  constructor: function Collection (records, opts) {\n    const self = this\n    utils.classCallCheck(self, Collection)\n    Collection.__super__.call(self)\n\n    if (records && !utils.isArray(records)) {\n      opts = records\n      records = []\n    }\n    if (utils.isString(opts)) {\n      opts = { idAttribute: opts }\n    }\n\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n\n    /**\n     * Default Mapper for this collection. Optional. If a Mapper is provided, then\n     * the collection will use the {@link Mapper#idAttribute} setting, and will\n     * wrap records in {@link Mapper#recordClass}.\n     *\n     * @example\n     * import {Collection, Mapper} from 'js-data'\n     *\n     * class MyMapperClass extends Mapper {\n     *   foo () { return 'bar' }\n     * }\n     * const myMapper = new MyMapperClass()\n     * const collection = new Collection(null, { mapper: myMapper })\n     *\n     * @name Collection#mapper\n     * @type {Mapper}\n     * @default null\n     */\n    Object.defineProperties(self, {\n      mapper: {\n        value: undefined,\n        writable: true\n      },\n      queryClass: {\n        value: undefined,\n        writable: true\n      }\n    })\n\n    // Apply user-provided configuration\n    utils.fillIn(self, opts)\n    // Fill in any missing options with the defaults\n    utils.fillIn(self, utils.copy(COLLECTION_DEFAULTS))\n\n    if (!self.queryClass) {\n      self.queryClass = Query\n    }\n\n    const idAttribute = self.recordId()\n\n    Object.defineProperties(self, {\n      /**\n       * The main index, which uses @{link Collection#recordId} as the key.\n       *\n       * @name Collection#index\n       * @type {Index}\n       */\n      index: {\n        value: new Index([idAttribute], {\n          hashCode (obj) {\n            return utils.get(obj, idAttribute)\n          }\n        })\n      },\n\n      /**\n       * Object that holds the secondary indexes of this collection.\n       *\n       * @name Collection#indexes\n       * @type {Object.<string, Index>}\n       */\n      indexes: {\n        value: {}\n      }\n    })\n\n    // Insert initial data into the collection\n    if (records) {\n      self.add(records)\n    }\n  },\n\n  /**\n   * Used to bind to events emitted by records in this Collection.\n   *\n   * @method Collection#_onRecordEvent\n   * @since 3.0.0\n   * @private\n   * @param {...*} [arg] Args passed to {@link Collection#emit}.\n   */\n  _onRecordEvent (...args) {\n    this.emit(...args)\n  },\n\n  /**\n   * Insert the provided record or records.\n   *\n   * If a record is already in the collection then the provided record will\n   * either merge with or replace the existing record based on the value of the\n   * `onConflict` option.\n   *\n   * The collection's secondary indexes will be updated as each record is\n   * visited.\n   *\n   * @method Collection#add\n   * @since 3.0.0\n   * @param {(Object|Object[]|Record|Record[])} data The record or records to insert.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.onConflict] What to do when a record is already in\n   * the collection. Possible values are `merge` or `replace`.\n   * @returns {(Object|Object[]|Record|Record[])} The added record or records.\n   */\n  add (records, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Collection's configuration\n    utils._(opts, self)\n    records = self.beforeAdd(records, opts) || records\n\n    // Track whether just one record or an array of records is being inserted\n    let singular = false\n    const idAttribute = self.recordId()\n    if (!utils.isArray(records)) {\n      if (utils.isObject(records)) {\n        records = [records]\n        singular = true\n      } else {\n        throw utils.err(`${DOMAIN}#add`, 'records')(400, 'object or array', records)\n      }\n    }\n\n    // Map the provided records to existing records.\n    // New records will be inserted. If any records map to existing records,\n    // they will be merged into the existing records according to the onConflict\n    // option.\n    records = records.map(function (record) {\n      let id = self.recordId(record)\n      if (!utils.isSorN(id)) {\n        throw utils.err(`${DOMAIN}#add`, `record.${idAttribute}`)(400, 'string or number', id)\n      }\n      // Grab existing record if there is one\n      const existing = self.get(id)\n      // If the currently visited record is just a reference to an existing\n      // record, then there is nothing to be done. Exit early.\n      if (record === existing) {\n        return existing\n      }\n\n      if (existing) {\n        // Here, the currently visited record corresponds to a record already\n        // in the collection, so we need to merge them\n        const onConflict = opts.onConflict || self.onConflict\n        if (onConflict === 'merge') {\n          utils.deepMixIn(existing, record)\n        } else if (onConflict === 'replace') {\n          utils.forOwn(existing, (value, key) => {\n            if (key !== idAttribute && !record.hasOwnProperty(key)) {\n              delete existing[key]\n            }\n          })\n          existing.set(record)\n        } else {\n          throw utils.err(`${DOMAIN}#add`, 'opts.onConflict')(400, 'one of (merge, replace)', onConflict, true)\n        }\n        record = existing\n        // Update all indexes in the collection\n        self.updateIndexes(record)\n      } else {\n        // Here, the currently visted record does not correspond to any record\n        // in the collection, so (optionally) instantiate this record and insert\n        // it into the collection\n        record = self.mapper ? self.mapper.createRecord(record, opts) : record\n        self.index.insertRecord(record)\n        utils.forOwn(self.indexes, function (index, name) {\n          index.insertRecord(record)\n        })\n        if (record && utils.isFunction(record.on)) {\n          record.on('all', self._onRecordEvent, self)\n        }\n      }\n      return record\n    })\n    // Finally, return the inserted data\n    const result = singular ? records[0] : records\n    // TODO: Make this more performant (batch events?)\n    self.emit('add', result)\n    return self.afterAdd(records, opts, result) || result\n  },\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then {@link Collection#add} will return that same value.\n   *\n   * @method Collection#method\n   * @since 3.0.0\n   * @param {(Object|Object[]|Record|Record[])} result The record or records\n   * that were added to this Collection by {@link Collection#add}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  afterAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}. If this method returns\n   * a value then {@link Collection#remove} will return that same value.\n   *\n   * @method Collection#afterRemove\n   * @since 3.0.0\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n   * @param {Object} record The result that will be returned by {@link Collection#remove}.\n   */\n  afterRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}. If this method\n   * returns a value then {@link Collection#removeAll} will return that same\n   * value.\n   *\n   * @method Collection#afterRemoveAll\n   * @since 3.0.0\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   * @param {Object} records The result that will be returned by {@link Collection#removeAll}.\n   */\n  afterRemoveAll () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then the `records` argument in {@link Collection#add} will be\n   * re-assigned to the returned value.\n   *\n   * @method Collection#beforeAdd\n   * @since 3.0.0\n   * @param {(Object|Object[]|Record|Record[])} records The `records` argument passed to {@link Collection#add}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  beforeAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}.\n   *\n   * @method Collection#beforeRemove\n   * @since 3.0.0\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n   */\n  beforeRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}.\n   *\n   * @method Collection#beforeRemoveAll\n   * @since 3.0.0\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   */\n  beforeRemoveAll () {},\n\n  /**\n   * Find all records between two boundaries.\n   *\n   * Shortcut for `collection.query().between(18, 30, { index: 'age' }).run()`\n   *\n   * @example <caption>Get all users ages 18 to 30</caption>\n   * const users = collection.between(18, 30, { index: 'age' })\n   *\n   * @example <caption>Same as above</caption>\n   * const users = collection.between([18], [30], { index: 'age' })\n   *\n   * @method Collection#between\n   * @since 3.0.0\n   * @param {Array} leftKeys Keys defining the left boundary.\n   * @param {Array} rightKeys Keys defining the right boundary.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.limit] Limit the result to a certain number.\n   * @param {boolean} [opts.offset] The number of resulting records to skip.\n   * @returns {Array} The result.\n   */\n  between (leftKeys, rightKeys, opts) {\n    return this.query().between(leftKeys, rightKeys, opts).run()\n  },\n\n  /**\n   * Create a new secondary index on the contents of the collection.\n   *\n   * @example <caption>Index users by age</caption>\n   * collection.createIndex('age')\n   *\n   * @example <caption>Index users by status and role</caption>\n   * collection.createIndex('statusAndRole', ['status', 'role'])\n   *\n   * @method Collection#createIndex\n   * @since 3.0.0\n   * @param {string} name - The name of the new secondary index.\n   * @param {string[]} [fieldList] - Array of field names to use as the key or\n   * compound key of the new secondary index. If no fieldList is provided, then\n   * the name will also be the field that is used to index the collection.\n   * @returns {Collection} A reference to itself for chaining.\n   */\n  createIndex (name, fieldList, opts) {\n    const self = this\n    if (utils.isString(name) && fieldList === undefined) {\n      fieldList = [name]\n    }\n    opts || (opts = {})\n    opts.hashCode = opts.hashCode || function (obj) {\n      return self.recordId(obj)\n    }\n    const index = self.indexes[name] = new Index(fieldList, opts)\n    self.index.visitAll(index.insertRecord, index)\n    return self\n  },\n\n  /**\n   * Find the record or records that match the provided query or pass the\n   * provided filter function.\n   *\n   * Shortcut for `collection.query().filter(queryOrFn[, thisArg]).run()`\n   *\n   * @example <caption>Get the draft posts created less than three months</caption>\n   * const posts = collection.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * })\n   *\n   * @example <caption>Use a custom filter function</caption>\n   * const posts = collection.filter(function (post) {\n   *   return post.isReady()\n   * })\n   *\n   * @method Collection#filter\n   * @since 3.0.0\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Object} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @returns {Array} The result.\n   */\n  filter (query, thisArg) {\n    return this.query().filter(query, thisArg).run()\n  },\n\n  /**\n   * Iterate over all records.\n   *\n   * @example\n   * collection.forEach(function (record) {\n   *   // do something\n   * })\n   *\n   * @method Collection#forEach\n   * @since 3.0.0\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @returns {Array} The result.\n   */\n  forEach (cb, thisArg) {\n    this.index.visitAll(cb, thisArg)\n  },\n\n  /**\n   * Get the record with the given id.\n   *\n   * @method Collection#get\n   * @since 3.0.0\n   * @param {(string|number)} id - The primary key of the record to get.\n   * @returns {(Object|Record)} The record with the given id.\n   */\n  get (id) {\n    const instances = this.query().get(id).run()\n    return instances.length ? instances[0] : undefined\n  },\n\n  /**\n   * Find the record or records that match the provided keyLists.\n   *\n   * Shortcut for `collection.query().getAll(keyList1, keyList2, ...).run()`\n   *\n   * @example <caption>Get the posts where \"status\" is \"draft\" or \"inReview\"</caption>\n   * const posts = collection.getAll('draft', 'inReview', { index: 'status' })\n   *\n   * @example <caption>Same as above</caption>\n   * const posts = collection.getAll(['draft'], ['inReview'], { index: 'status' })\n   *\n   * @method Collection#getAll\n   * @since 3.0.0\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * records matching each keyList will be retrieved. If no keyLists are\n   * provided, all records will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @returns {Array} The result.\n   */\n  getAll (...args) {\n    return this.query().getAll(...args).run()\n  },\n\n  /**\n   * Return the index with the given name. If no name is provided, return the\n   * main index. Throws an error if the specified index does not exist.\n   *\n   * @method Collection#getIndex\n   * @since 3.0.0\n   * @param {string} [name] The name of the index to retrieve.\n   */\n  getIndex (name) {\n    const index = name ? this.indexes[name] : this.index\n    if (!index) {\n      throw utils.err(`${DOMAIN}#getIndex`, name)(404, 'index')\n    }\n    return index\n  },\n\n  /**\n   * Limit the result.\n   *\n   * Shortcut for `collection.query().limit(maximumNumber).run()`\n   *\n   * @example\n   * const posts = collection.limit(10)\n   *\n   * @method Collection#limit\n   * @since 3.0.0\n   * @param {number} num - The maximum number of records to keep in the result.\n   * @returns {Array} The result.\n   */\n  limit (num) {\n    return this.query().limit(num).run()\n  },\n\n  /**\n   * Apply a mapping function to all records.\n   *\n   * @example\n   * const names = collection.map(function (user) {\n   *   return user.name\n   * })\n   *\n   * @method Collection#map\n   * @since 3.0.0\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @returns {Array} The result of the mapping.\n   */\n  map (cb, thisArg) {\n    const data = []\n    this.index.visitAll(function (value) {\n      data.push(cb.call(thisArg, value))\n    })\n    return data\n  },\n\n  /**\n   * Return the result of calling the specified function on each record in this\n   * collection's main index.\n   *\n   * @method Collection#mapCall\n   * @since 3.0.0\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @returns {Array} The result.\n   */\n  mapCall (funcName, ...args) {\n    const data = []\n    this.index.visitAll(function (record) {\n      data.push(record[funcName](...args))\n    })\n    return data\n  },\n\n  /**\n   * Return the primary key of the given, or if no record is provided, return the\n   * name of the field that holds the primary key of records in this Collection.\n   *\n   * @method Collection#recordId\n   * @since 3.0.0\n   * @param {(Object|Record)} [record] The record whose primary key is to be\n   * returned.\n   * @returns {(string|number)} Primary key or name of field that holds primary\n   * key.\n   */\n  recordId (record) {\n    const self = this\n    if (record) {\n      return utils.get(record, self.recordId())\n    }\n    return self.mapper ? self.mapper.idAttribute : self.idAttribute\n  },\n\n  /**\n   * Create a new query to be executed against the contents of the collection.\n   * The result will be all or a subset of the contents of the collection.\n   *\n   * @example <caption>Grab page 2 of users between ages 18 and 30</caption>\n   * collection.query()\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n   *   .skip(10) // second page\n   *   .limit(10) // page size\n   *   .run()\n   *\n   * @method Collection#query\n   * @since 3.0.0\n   * @returns {Query} New query object.\n   */\n  query () {\n    const Ctor = this.queryClass\n    return new Ctor(this)\n  },\n\n  /**\n   * Reduce the data in the collection to a single value and return the result.\n   *\n   * @example\n   * const totalVotes = collection.reduce(function (prev, record) {\n   *   return prev + record.upVotes + record.downVotes\n   * }, 0)\n   *\n   * @method Collection#reduce\n   * @since 3.0.0\n   * @param {Function} cb - Reduction callback.\n   * @param {*} initialValue - Initial value of the reduction.\n   * @returns {*} The result.\n   */\n  reduce (cb, initialValue) {\n    const data = this.getAll()\n    return data.reduce(cb, initialValue)\n  },\n\n  /**\n   * Remove the record with the given id from this Collection.\n   *\n   * @method Collection#remove\n   * @since 3.0.0\n   * @param {(string|number)} id - The primary key of the record to be removed.\n   * @param {Object} [opts] - Configuration options.\n   * @returns {Object|Record} The removed record, if any.\n   */\n  remove (id, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemove(id, opts)\n    const record = self.get(id)\n\n    // The record is in the collection, remove it\n    if (record) {\n      self.index.removeRecord(record)\n      utils.forOwn(self.indexes, function (index, name) {\n        index.removeRecord(record)\n      })\n      if (record && utils.isFunction(record.off)) {\n        record.off('all', self._onRecordEvent, self)\n        self.emit('remove', record)\n      }\n    }\n    return self.afterRemove(id, opts, record) || record\n  },\n\n  /**\n   * Remove the record selected by \"query\" from this collection.\n   *\n   * @method Collection#removeAll\n   * @since 3.0.0\n   * @param {Object} [query={}] - Selection query.\n   * @param {Object} [query.where] - Filtering criteria.\n   * @param {number} [query.skip] - Number to skip.\n   * @param {number} [query.limit] - Number to limit to.\n   * @param {Array} [query.orderBy] - Sorting criteria.\n   * @param {Object} [opts] - Configuration options.\n   * @returns {(Object[]|Record[])} The removed records, if any.\n   */\n  removeAll (query, opts) {\n    const self = this\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemoveAll(query, opts)\n    const records = self.filter(query)\n\n    // Remove each selected record from the collection\n    records.forEach(function (item) {\n      self.remove(self.recordId(item), opts)\n    })\n    return self.afterRemoveAll(query, opts, records) || records\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * Shortcut for `collection.query().skip(numberToSkip).run()`\n   *\n   * @example\n   * const posts = collection.skip(10)\n   *\n   * @method Collection#skip\n   * @since 3.0.0\n   * @param {number} num - The number of records to skip.\n   * @returns {Array} The result.\n   */\n  skip (num) {\n    return this.query().skip(num).run()\n  },\n\n  /**\n   * Return the plain JSON representation of all items in this collection.\n   * Assumes records in this collection have a toJSON method.\n   *\n   * @method Collection#toJSON\n   * @since 3.0.0\n   * @param {Object} [opts] - Configuration options.\n   * @param {string[]} [opts.with] - Array of relation names or relation fields\n   * to include in the representation.\n   * @returns {Array} The records.\n   */\n  toJSON (opts) {\n    return this.mapCall('toJSON', opts)\n  },\n\n  /**\n   * Update a record's position in a single index of this collection. See\n   * {@link Collection#updateIndexes} to update a record's position in all\n   * indexes at once.\n   *\n   * @method Collection#updateIndex\n   * @since 3.0.0\n   * @param {Object} record - The record to update.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] The index in which to update the record's\n   * position. If you don't specify an index then the record will be updated\n   * in the main index.\n   */\n  updateIndex (record, opts) {\n    opts || (opts = {})\n    this.getIndex(opts.index).updateRecord(record)\n  },\n\n  /**\n   * TODO\n   *\n   * @method Collection#updateIndexes\n   * @since 3.0.0\n   * @param {Object} record - TODO\n   * @param {Object} [opts] - Configuration options.\n   */\n  updateIndexes (record) {\n    const self = this\n    self.index.updateRecord(record)\n    utils.forOwn(self.indexes, function (index, name) {\n      index.updateRecord(record)\n    })\n  }\n})\n","import utils from './utils'\n\nexport const belongsToType = 'belongsTo'\nexport const hasManyType = 'hasMany'\nexport const hasOneType = 'hasOne'\n\nconst DOMAIN = 'Relation'\n\nfunction Relation (related, opts) {\n  const self = this\n  const DOMAIN_ERR = `new ${DOMAIN}`\n\n  opts || (opts = {})\n\n  const localField = opts.localField\n  if (!localField) {\n    throw utils.err(DOMAIN_ERR, 'opts.localField')(400, 'string', localField)\n  }\n\n  const foreignKey = opts.foreignKey = opts.foreignKey || opts.localKey\n  if (!foreignKey && (opts.type === belongsToType || opts.type === hasOneType)) {\n    throw utils.err(DOMAIN_ERR, 'opts.foreignKey')(400, 'string', foreignKey)\n  }\n  const localKeys = opts.localKeys\n  const foreignKeys = opts.foreignKeys\n  if (!foreignKey && !localKeys && !foreignKeys && opts.type === hasManyType) {\n    throw utils.err(DOMAIN_ERR, 'opts.<foreignKey|localKeys|foreignKeys>')(400, 'string', foreignKey)\n  }\n\n  if (utils.isString(related)) {\n    opts.relation = related\n    if (!utils.isFunction(opts.getRelation)) {\n      throw utils.err(DOMAIN_ERR, 'opts.getRelation')(400, 'function', opts.getRelation)\n    }\n  } else if (related) {\n    opts.relation = related.name\n    Object.defineProperty(self, 'relatedMapper', {\n      value: related\n    })\n  } else {\n    throw utils.err(DOMAIN_ERR, 'related')(400, 'Mapper or string', related)\n  }\n\n  Object.defineProperty(self, 'inverse', {\n    value: undefined,\n    writable: true\n  })\n\n  utils.fillIn(self, opts)\n}\n\nutils.addHiddenPropsToTarget(Relation.prototype, {\n  getRelation () {\n    return this.relatedMapper\n  },\n  getForeignKey (record) {\n    if (this.type === belongsToType) {\n      return utils.get(record, this.foreignKey)\n    }\n    return utils.get(record, this.mapper.idAttribute)\n  },\n  setForeignKey (record, relatedRecord) {\n    const self = this\n    if (!record || !relatedRecord) {\n      return\n    }\n    if (self.type === belongsToType) {\n      utils.set(record, self.foreignKey, utils.get(relatedRecord, self.getRelation().idAttribute))\n    } else {\n      const idAttribute = self.mapper.idAttribute\n      if (utils.isArray(relatedRecord)) {\n        relatedRecord.forEach(function (relatedRecordItem) {\n          utils.set(relatedRecordItem, self.foreignKey, utils.get(record, idAttribute))\n        })\n      } else {\n        utils.set(relatedRecord, self.foreignKey, utils.get(record, idAttribute))\n      }\n    }\n  },\n  getLocalField (record) {\n    return utils.get(record, this.localField)\n  },\n  setLocalField (record, data) {\n    return utils.set(record, this.localField, data)\n  },\n  getInverse (mapper) {\n    const self = this\n    if (self.inverse) {\n      return self.inverse\n    }\n    self.getRelation().relationList.forEach(function (def) {\n      if (def.getRelation() === mapper) {\n        if (def.foreignKey && def.foreignKey !== self.foreignKey) {\n          return\n        }\n        self.inverse = def\n        return false\n      }\n    })\n    return self.inverse\n  }\n})\n\nconst relatedTo = function (mapper, related, opts) {\n  opts.name = mapper.name\n  const relation = new Relation(related, opts)\n  Object.defineProperty(relation, 'mapper', {\n    value: mapper\n  })\n\n  mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n  mapper.relationFields || Object.defineProperty(mapper, 'relationFields', { value: [] })\n  mapper.relationList.push(relation)\n  mapper.relationFields.push(relation.localField)\n}\n\n/**\n * TODO\n *\n * @name module:js-data.belongsTo\n * @method\n * @param {Mapper} related The relation the target belongs to.\n * @param {Object} opts Configuration options.\n * @param {string} opts.foreignKey The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @returns {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const belongsTo = function (related, opts) {\n  opts || (opts = {})\n  opts.type = belongsToType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name module:js-data.hasMany\n * @method\n * @param {Mapper} related The relation of which the target has many.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @returns {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasMany = function (related, opts) {\n  opts || (opts = {})\n  opts.type = hasManyType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name module:js-data.hasOne\n * @method\n * @param {Mapper} related The relation of which the target has one.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @returns {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasOne = function (related, opts) {\n  opts || (opts = {})\n  opts.type = hasOneType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n","import utils from './utils'\nimport Component from './Component'\n\nconst DOMAIN = 'Record'\n\nconst superMethod = function (mapper, name) {\n  const store = mapper.datastore\n  if (store && store[name]) {\n    return function (...args) {\n      return store[name](mapper.name, ...args)\n    }\n  }\n  return mapper[name].bind(mapper)\n}\n\n/**\n * js-data's Record class.\n *\n * ```javascript\n * import {Record} from 'js-data'\n * ```\n *\n * @class Record\n * @extends Component\n * @param {Object} [props] The initial properties of the new Record instance.\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n * initial properties.\n */\nconst Record = Component.extend({\n  constructor: function Record (props, opts) {\n    const self = this\n    utils.classCallCheck(self, Record)\n\n    props || (props = {})\n    opts || (opts = {})\n    const _props = {}\n    Object.defineProperties(self, {\n      _get: { value (key) { return utils.get(_props, key) } },\n      _set: { value (key, value) { return utils.set(_props, key, value) } },\n      _unset: { value (key) { return utils.unset(_props, key) } }\n    })\n    const _set = self._set\n    // TODO: Optimize these strings\n    _set('creating', true)\n    if (opts.noValidate) {\n      _set('noValidate', true)\n    }\n    utils.fillIn(self, props)\n    _set('creating', false)\n    _set('noValidate', false)\n    _set('previous', utils.copy(props))\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#_mapper\n   * @method\n   * @ignore\n   */\n  _mapper () {\n    const self = this\n    const mapper = self.constructor.mapper\n    if (!mapper) {\n      throw utils.err(`${DOMAIN}#_mapper`, '')(404, 'mapper')\n    }\n    return mapper\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#afterLoadRelations\n   * @method\n   * @param {string[]} relations TODO\n   * @param {Object} opts TODO\n   */\n  afterLoadRelations () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#beforeLoadRelations\n   * @method\n   * @param {string[]} relations TODO\n   * @param {Object} opts TODO\n   */\n  beforeLoadRelations () {},\n\n  /**\n   * Return changes to this record since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @name Record#changes\n   * @method\n   * @param [opts] Configuration options.\n   * @param {Function} [opts.equalsFn] Equality function. Default uses `===`.\n   * @param {Array} [opts.ignore] Array of strings or RegExp of fields to ignore.\n   */\n  changes (opts) {\n    const self = this\n    opts || (opts = {})\n    return utils.diffObjects(typeof self.toJSON === 'function' ? self.toJSON(opts) : self, self._get('previous'), opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#commit\n   * @method\n   */\n  commit () {\n    const self = this\n    self._set('changed') // unset\n    self._set('previous', utils.copy(self))\n    return self\n  },\n\n  /**\n   * Call {@link Mapper#destroy} using this record's primary key.\n   *\n   * @name Record#destroy\n   * @method\n   * @param {Object} [opts] Configuration options passed to {@link Mapper#destroy}.\n   * @returns {Promise} The result of calling {@link Mapper#destroy}.\n   */\n  destroy (opts) {\n    const self = this\n    opts || (opts = {})\n    const mapper = self._mapper()\n    return superMethod(mapper, 'destroy')(utils.get(self, mapper.idAttribute), opts)\n  },\n\n  /**\n   * Return the value at the given path for this instance.\n   *\n   * @name Record#get\n   * @method\n   * @param {string} key - Path of value to retrieve.\n   * @returns {*} Value at path.\n   */\n  'get' (key) {\n    return utils.get(this, key)\n  },\n\n  /**\n   * Return whether this record has changed since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @name Record#hasChanges\n   * @method\n   * @param [opts] Configuration options.\n   * @param {Function} [opts.equalsFn] Equality function. Default uses `===`.\n   * @param {Array} [opts.ignore] Array of strings or RegExp of fields to ignore.\n   */\n  hasChanges (opts) {\n    const self = this\n    const quickHasChanges = !!(self._get('changed') || []).length\n    return quickHasChanges || utils.areDifferent(typeof self.toJSON === 'function' ? self.toJSON(opts) : self, self._get('previous'), opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#hashCode\n   * @method\n   */\n  hashCode () {\n    const self = this\n    return utils.get(self, self._mapper().idAttribute)\n  },\n\n  isValid (opts) {\n    const self = this\n    return !self._mapper().validate(self, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#loadRelations\n   * @method\n   * @param {string[]} [relations] TODO\n   * @param {Object} [opts] TODO\n   */\n  loadRelations (relations, opts) {\n    let op\n    const self = this\n    const mapper = self._mapper()\n\n    // Default values for arguments\n    relations || (relations = [])\n    if (utils.isString(relations)) {\n      relations = [relations]\n    }\n    opts || (opts = {})\n    opts.with = relations\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(opts, mapper)\n    opts.adapter = mapper.getAdapterName(opts)\n\n    // beforeLoadRelations lifecycle hook\n    op = opts.op = 'beforeLoadRelations'\n    return utils.resolve(self[op](relations, opts)).then(function () {\n      // Now delegate to the adapter\n      op = opts.op = 'loadRelations'\n      mapper.dbg(op, self, relations, opts)\n      let tasks = []\n      let task\n      utils.forEachRelation(mapper, opts, function (def, optsCopy) {\n        const relatedMapper = def.getRelation()\n        optsCopy.raw = false\n        if (utils.isFunction(def.load)) {\n          task = def.load(mapper, def, self, opts)\n        } else if (def.type === 'hasMany' || def.type === 'hasOne') {\n          if (def.foreignKey) {\n            task = superMethod(relatedMapper, 'findAll')({\n              [def.foreignKey]: utils.get(self, mapper.idAttribute)\n            }, optsCopy).then(function (relatedData) {\n              if (def.type === 'hasOne') {\n                return relatedData.length ? relatedData[0] : undefined\n              }\n              return relatedData\n            })\n          } else if (def.localKeys) {\n            task = superMethod(relatedMapper, 'findAll')({\n              where: {\n                [relatedMapper.idAttribute]: {\n                  'in': utils.get(self, def.localKeys)\n                }\n              }\n            })\n          } else if (def.foreignKeys) {\n            task = superMethod(relatedMapper, 'findAll')({\n              where: {\n                [def.foreignKeys]: {\n                  'contains': utils.get(self, mapper.idAttribute)\n                }\n              }\n            }, opts)\n          }\n        } else if (def.type === 'belongsTo') {\n          const key = utils.get(self, def.foreignKey)\n          if (utils.isSorN(key)) {\n            task = superMethod(relatedMapper, 'find')(key, optsCopy)\n          }\n        }\n        if (task) {\n          task = task.then(function (relatedData) {\n            def.setLocalField(self, relatedData)\n          })\n          tasks.push(task)\n        }\n      })\n      return Promise.all(tasks)\n    }).then(function () {\n      // afterLoadRelations lifecycle hook\n      op = opts.op = 'afterLoadRelations'\n      return utils.resolve(self[op](relations, opts)).then(function () {\n        return self\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#previous\n   * @method\n   * @param {string} [key] TODO\n   */\n  previous (key) {\n    const self = this\n    if (key) {\n      return self._get(`previous.${key}`)\n    }\n    return self._get('previous')\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#revert\n   * @method\n   * @param {Object} [opts] Configuration options.\n   */\n  revert (opts) {\n    const self = this\n    const previous = self._get('previous')\n    opts || (opts = {})\n    opts.preserve || (opts.preserve = [])\n    utils.forOwn(self, (value, key) => {\n      if (key !== self._mapper().idAttribute && !previous.hasOwnProperty(key) && self.hasOwnProperty(key) && opts.preserve.indexOf(key) === -1) {\n        delete self[key]\n      }\n    })\n    utils.forOwn(previous, (value, key) => {\n      if (opts.preserve.indexOf(key) === -1) {\n        self[key] = value\n      }\n    })\n    self.commit()\n    return self\n  },\n\n  /**\n   * Delegates to {@link Mapper#create} or {@link Mapper#update}.\n   *\n   * @name Record#save\n   * @method\n   * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\n   * @param [opts] Configuration options.\n   * @param {boolean} [opts.changesOnly] Equality function. Default uses `===`.\n   * @param {Function} [opts.equalsFn] Passed to {@link Record#changes} when\n   * `changesOnly` is `true`.\n   * @param {Array} [opts.ignore] Passed to {@link Record#changes} when\n   * `changesOnly` is `true`.\n   * @returns {Promise} The result of calling {@link Mapper#create} or\n   * {@link Mapper#update}.\n   */\n  save (opts) {\n    const self = this\n    opts || (opts = {})\n    const mapper = self._mapper()\n    const id = utils.get(self, mapper.idAttribute)\n    let props = self\n    if (utils.isUndefined(id)) {\n      return superMethod(mapper, 'create')(props, opts)\n    }\n    if (opts.changesOnly) {\n      const changes = self.changes(opts)\n      props = {}\n      utils.fillIn(props, changes.added)\n      utils.fillIn(props, changes.changed)\n    }\n    return superMethod(mapper, 'update')(id, props, opts)\n  },\n\n  /**\n   * Set the value for a given key, or the values for the given keys if \"key\" is\n   * an object.\n   *\n   * @name Record#set\n   * @method\n   * @param {(string|Object)} key - Key to set or hash of key-value pairs to set.\n   * @param {*} [value] - Value to set for the given key.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  'set' (key, value, opts) {\n    const self = this\n    if (utils.isObject(key)) {\n      opts = value\n    }\n    opts || (opts = {})\n    if (opts.silent) {\n      self._set('silent', true)\n    }\n    utils.set(self, key, value)\n    if (!self._get('eventId')) {\n      self._set('silent') // unset\n    }\n  },\n\n  // TODO: move logic for single-item async operations onto the instance.\n\n  /**\n   * Return a plain object representation of this record. If the class from\n   * which this record was created has a mapper, then {@link Mapper#toJSON} will\n   * be called instead.\n   *\n   * @name Record#toJSON\n   * @method\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation. Only available as an option if the class\n   * from which this record was created has a mapper.\n   * @returns {Object} Plain object representation of this record.\n   */\n  toJSON (opts) {\n    const mapper = this.constructor.mapper\n    if (mapper) {\n      return mapper.toJSON(this, opts)\n    } else {\n      const json = {}\n      utils.forOwn(this, function (prop, key) {\n        json[key] = utils.copy(prop)\n      })\n      return json\n    }\n  },\n\n  /**\n   * Unset the value for a given key.\n   *\n   * @name Record#unset\n   * @method\n   * @param {string} key - Key to unset.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  unset (key, opts) {\n    this.set(key, undefined, opts)\n  },\n\n  validate (opts) {\n    return this._mapper().validate(this, opts)\n  }\n})\n\n/**\n * Allow records to emit events.\n *\n * An record's registered listeners are stored in the record's private data.\n */\nutils.eventify(\n  Record.prototype,\n  function () {\n    return this._get('events')\n  },\n  function (value) {\n    this._set('events', value)\n  }\n)\n\nexport default Record\n","import utils from './utils'\nimport Component from './Component'\n\nconst DOMAIN = 'Schema'\n\n/**\n * TODO\n *\n * @name Schema.types\n * @type {Object}\n */\nconst types = {\n  array: utils.isArray,\n  boolean: utils.isBoolean,\n  integer: utils.isInteger,\n  'null': utils.isNull,\n  number: utils.isNumber,\n  object: utils.isObject,\n  string: utils.isString\n}\n\n/**\n * @ignore\n */\nconst segmentToString = function (segment, prev) {\n  let str = ''\n  if (segment) {\n    if (utils.isNumber(segment)) {\n      str += `[${segment}]`\n    } else if (prev) {\n      str += `.${segment}`\n    } else {\n      str += `${segment}`\n    }\n  }\n  return str\n}\n\n/**\n * @ignore\n */\nconst makePath = function (opts) {\n  opts || (opts = {})\n  let path = ''\n  const segments = opts.path || []\n  segments.forEach(function (segment) {\n    path += segmentToString(segment, path)\n  })\n  path += segmentToString(opts.prop, path)\n  return path\n}\n\n/**\n * @ignore\n */\nconst makeError = function (actual, expected, opts) {\n  return {\n    expected,\n    actual: '' + actual,\n    path: makePath(opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst addError = function (actual, expected, opts, errors) {\n  errors.push(makeError(actual, expected, opts))\n}\n\n/**\n * @ignore\n */\nconst maxLengthCommon = function (keyword, value, schema, opts) {\n  const max = schema[keyword]\n  if (value.length > max) {\n    return makeError(value.length, `length no more than ${max}`, opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst minLengthCommon = function (keyword, value, schema, opts) {\n  const min = schema[keyword]\n  if (value.length < min) {\n    return makeError(value.length, `length no less than ${min}`, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name Schema.validationKeywords\n * @type {Object}\n */\nconst validationKeywords = {\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor82\n   *\n   * @name Schema.validationKeywords.allOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  allOf (value, schema, opts) {\n    let allErrors = []\n    schema.allOf.forEach(function (_schema) {\n      allErrors = allErrors.concat(validate(value, _schema, opts) || [])\n    })\n    return allErrors.length ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor85\n   *\n   * @name Schema.validationKeywords.anyOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  anyOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.anyOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor70\n   *\n   * @name Schema.validationKeywords.dependencies\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  dependencies (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor76\n   *\n   * @name Schema.validationKeywords.enum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  enum (value, schema, opts) {\n    const possibleValues = schema['enum']\n    if (possibleValues.indexOf(value) === -1) {\n      return makeError(value, `one of (${possibleValues.join(', ')})`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor37\n   *\n   * @name Schema.validationKeywords.items\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  items (value, schema, opts) {\n    opts || (opts = {})\n    // TODO: additionalItems\n    let items = schema.items\n    let errors = []\n    const checkingTuple = utils.isArray(items)\n    const length = value.length\n    for (var prop = 0; prop < length; prop++) {\n      if (checkingTuple) {\n        // Validating a tuple, instead of just checking each item against the\n        // same schema\n        items = schema.items[prop]\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], items, opts) || [])\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor17\n   *\n   * @name Schema.validationKeywords.maximum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maximum (value, schema, opts) {\n    // Must be a number\n    const maximum = schema.maximum\n    // Must be a boolean\n    // Depends on maximum\n    // default: false\n    const exclusiveMaximum = schema.exclusiveMaximum\n    if (typeof value === typeof maximum && (exclusiveMaximum ? maximum < value : maximum <= value)) {\n      // TODO: Account for value of exclusiveMaximum in messaging\n      return makeError(value, `no more than ${maximum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.maxItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxItems (value, schema, opts) {\n    return maxLengthCommon('maxItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor26\n   *\n   * @name Schema.validationKeywords.maxLength\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxLength (value, schema, opts) {\n    return maxLengthCommon('maxLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor54\n   *\n   * @name Schema.validationKeywords.maxProperties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxProperties (value, schema, opts) {\n    const maxProperties = schema.maxProperties\n    const length = Object.keys(value).length\n    if (length > maxProperties) {\n      return makeError(length, `no more than ${maxProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor21\n   *\n   * @name Schema.validationKeywords.minimum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minimum (value, schema, opts) {\n    // Must be a number\n    const minimum = schema.minimum\n    // Must be a boolean\n    // Depends on minimum\n    // default: false\n    const exclusiveMinimum = schema.exclusiveMinimum\n    if (typeof value === typeof minimum && (exclusiveMinimum ? minimum > value : minimum >= value)) {\n      // TODO: Account for value of exclusiveMinimum in messaging\n      return makeError(value, `no less than ${minimum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.minItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minItems (value, schema, opts) {\n    return minLengthCommon('minItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor29\n   *\n   * @name Schema.validationKeywords.minLength\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minLength (value, schema, opts) {\n    return minLengthCommon('minLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor57\n   *\n   * @name Schema.validationKeywords.minProperties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minProperties (value, schema, opts) {\n    const minProperties = schema.minProperties\n    const length = Object.keys(value).length\n    if (length < minProperties) {\n      return makeError(length, `no more than ${minProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor14\n   *\n   * @name Schema.validationKeywords.multipleOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  multipleOf (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor91\n   *\n   * @name Schema.validationKeywords.not\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  not (value, schema, opts) {\n    if (!validate(value, schema.not, opts)) {\n      // TODO: better messaging\n      return makeError('succeeded', 'should have failed', opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor88\n   *\n   * @name Schema.validationKeywords.oneOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  oneOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.oneOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else if (validated) {\n        allErrors = [makeError('valid against more than one', 'valid against only one', opts)]\n        validated = false\n        return false\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor33\n   *\n   * @name Schema.validationKeywords.pattern\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  pattern (value, schema, opts) {\n    const pattern = schema.pattern\n    if (utils.isString(value) && !value.match(pattern)) {\n      return makeError(value, pattern, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor64\n   *\n   * @name Schema.validationKeywords.properties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  properties (value, schema, opts) {\n    opts || (opts = {})\n    // Can be a boolean or an object\n    // Technically the default is an \"empty schema\", but here \"true\" is\n    // functionally the same\n    const additionalProperties = utils.isUndefined(schema.additionalProperties) ? true : schema.additionalProperties\n    // \"s\": The property set of the instance to validate.\n    const toValidate = {}\n    // \"p\": The property set from \"properties\".\n    // Default is an object\n    const properties = schema.properties || {}\n    // \"pp\": The property set from \"patternProperties\".\n    // Default is an object\n    const patternProperties = schema.patternProperties || {}\n    let errors = []\n\n    // Collect set \"s\"\n    utils.forOwn(value, function (_value, prop) {\n      toValidate[prop] = undefined\n    })\n    // Remove from \"s\" all elements of \"p\", if any.\n    utils.forOwn(properties || {}, function (_schema, prop) {\n      if (utils.isUndefined(value[prop]) && !utils.isUndefined(_schema['default'])) {\n        value[prop] = utils.copy(_schema['default'])\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], _schema, opts) || [])\n      delete toValidate[prop]\n    })\n    // For each regex in \"pp\", remove all elements of \"s\" which this regex\n    // matches.\n    utils.forOwn(patternProperties, function (_schema, pattern) {\n      utils.forOwn(toValidate, function (undef, prop) {\n        if (prop.match(pattern)) {\n          opts.prop = prop\n          errors = errors.concat(validate(value[prop], _schema, opts) || [])\n          delete toValidate[prop]\n        }\n      })\n    })\n    const keys = Object.keys(toValidate)\n    // If \"s\" is not empty, validation fails\n    if (additionalProperties === false) {\n      if (keys.length) {\n        addError(`extra fields: ${keys.join(', ')}`, 'no extra fields', opts, errors)\n      }\n    } else if (utils.isObject(additionalProperties)) {\n      // Otherwise, validate according to provided schema\n      keys.forEach(function (prop) {\n        opts.prop = prop\n        errors = errors.concat(validate(value[prop], additionalProperties, opts) || [])\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor61\n   *\n   * @name Schema.validationKeywords.required\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  required (value, schema, opts) {\n    const required = schema.required\n    let errors = []\n    if (!opts.existingOnly) {\n      required.forEach(function (prop) {\n        if (utils.isUndefined(utils.get(value, prop))) {\n          const prevProp = opts.prop\n          opts.prop = prop\n          addError(undefined, 'a value', opts, errors)\n          opts.prop = prevProp\n        }\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor79\n   *\n   * @name Schema.validationKeywords.type\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  type (value, schema, opts) {\n    let type = schema.type\n    let validType\n    // Can be one of several types\n    if (utils.isString(type)) {\n      type = [type]\n    }\n    // Try to match the value against an expected type\n    type.forEach(function (_type) {\n      // TODO: throw an error if type is not defined\n      if (types[_type](value, schema, opts)) {\n        // Matched a type\n        validType = _type\n        return false\n      }\n    })\n    // Value did not match any expected type\n    if (!validType) {\n      return makeError(value ? typeof value : '' + value, `one of (${type.join(', ')})`, opts)\n    }\n    // Run keyword validators for matched type\n    // http://json-schema.org/latest/json-schema-validation.html#anchor12\n    const validator = typeGroupValidators[validType]\n    if (validator) {\n      return validator(value, schema, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor49\n   *\n   * @name Schema.validationKeywords.uniqueItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  uniqueItems (value, schema, opts) {\n    if (value && value.length && schema.uniqueItems) {\n      const length = value.length\n      let item, i, j\n      // Check n - 1 items\n      for (i = length - 1; i > 0; i--) {\n        item = value[i]\n        // Only compare against unchecked items\n        for (j = i - 1; j >= 0; j--) {\n          // Found a duplicate\n          if (item === value[j]) {\n            return makeError(item, 'no duplicates', opts)\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nconst validateKeyword = function (op, value, schema, opts) {\n  return !utils.isUndefined(schema[op]) && validationKeywords[op](value, schema, opts)\n}\n\n/**\n * @ignore\n */\nconst runOps = function (ops, value, schema, opts) {\n  let errors = []\n  ops.forEach(function (op) {\n    errors = errors.concat(validateKeyword(op, value, schema, opts) || [])\n  })\n  return errors.length ? errors : undefined\n}\n\nconst ANY_OPS = ['enum', 'type', 'allOf', 'anyOf', 'oneOf', 'not']\nconst ARRAY_OPS = ['items', 'maxItems', 'minItems', 'uniqueItems']\nconst NUMERIC_OPS = ['multipleOf', 'maximum', 'minimum']\nconst OBJECT_OPS = ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies']\nconst STRING_OPS = ['maxLength', 'minLength', 'pattern']\n\n/**\n * http://json-schema.org/latest/json-schema-validation.html#anchor75\n * @ignore\n */\nconst validateAny = function (value, schema, opts) {\n  return runOps(ANY_OPS, value, schema, opts)\n}\n\n/**\n * TODO\n *\n * @name Schema.validate\n * @method\n * @param {*} value TODO\n * @param {Object} [schema] TODO\n * @param {Object} [opts] Configuration options.\n */\nconst validate = function (value, schema, opts) {\n  let errors = []\n  opts || (opts = {})\n  let shouldPop\n  let prevProp = opts.prop\n  if (utils.isUndefined(schema)) {\n    return\n  }\n  if (!utils.isObject(schema)) {\n    throw utils.err(`${DOMAIN}#validate`)(500, `Invalid schema at path: \"${opts.path}\"`)\n  }\n  if (utils.isUndefined(opts.path)) {\n    opts.path = []\n  }\n  // Track our location as we recurse\n  if (!utils.isUndefined(opts.prop)) {\n    shouldPop = true\n    opts.path.push(opts.prop)\n    opts.prop = undefined\n  }\n  // Validate against parent schema\n  if (schema['extends']) {\n    // opts.path = path\n    // opts.prop = prop\n    if (utils.isFunction(schema['extends'].validate)) {\n      errors = errors.concat(schema['extends'].validate(value, opts) || [])\n    } else {\n      errors = errors.concat(validate(value, schema['extends'], opts) || [])\n    }\n  }\n  if (utils.isUndefined(value)) {\n    // Check if property is required\n    if (schema.required === true) {\n      addError(value, 'a value', opts, errors)\n    }\n    if (shouldPop) {\n      opts.path.pop()\n      opts.prop = prevProp\n    }\n    return errors.length ? errors : undefined\n  }\n  errors = errors.concat(validateAny(value, schema, opts) || [])\n  if (shouldPop) {\n    opts.path.pop()\n    opts.prop = prevProp\n  }\n  return errors.length ? errors : undefined\n}\n\n// These strings are cached for optimal performance of the change detection\n// boolean - Whether a Record is changing in the current execution frame\nconst changingPath = 'changing'\n// string[] - Properties that have changed in the current execution frame\nconst changedPath = 'changed'\n// boolean - Whether a Record is currently being instantiated\nconst creatingPath = 'creating'\n// number - The setTimeout change event id of a Record, if any\nconst eventIdPath = 'eventId'\n// boolean - Whether to skip validation for a Record's currently changing property\nconst noValidatePath = 'noValidate'\n// boolean - Whether to skip change notification for a Record's currently\n// changing property\nconst silentPath = 'silent'\nconst validationFailureMsg = 'validation failed'\n\n/**\n * Assemble a property descriptor which will be added to the prototype of\n * {@link Mapper#recordClass}. This method is called when\n * {@link Mapper#applySchema} is set to `true`.\n *\n * TODO: Make this more configurable, i.e. not so tied to the Record class.\n *\n * @ignore\n */\nconst makeDescriptor = function (prop, schema, opts) {\n  const descriptor = {\n    // These properties are enumerable by default, but regardless of their\n    // enumerability, they won't be \"own\" properties of individual records\n    enumerable: utils.isUndefined(schema.enumerable) ? true : !!schema.enumerable\n  }\n  // Cache a few strings for optimal performance\n  const keyPath = `props.${prop}`\n  const previousPath = `previous.${prop}`\n  const getter = opts.getter\n  const setter = opts.setter\n  const unsetter = opts.unsetter\n\n  descriptor.get = function () { return this._get(keyPath) }\n  descriptor.set = function (value) {\n    const self = this\n    // These are accessed a lot\n    const _get = self[getter]\n    const _set = self[setter]\n    const _unset = self[unsetter]\n\n    // Optionally check that the new value passes validation\n    if (!_get(noValidatePath)) {\n      const errors = schema.validate(value)\n      if (errors) {\n        // Immediately throw an error, preventing the record from getting into\n        // an invalid state\n        const error = new Error(validationFailureMsg)\n        error.errors = errors\n        throw error\n      }\n    }\n    // TODO: Make it so tracking can be turned on for all properties instead of\n    // only per-property\n    if (schema.track && !_get(creatingPath)) {\n      const previous = _get(previousPath)\n      const current = _get(keyPath)\n      let changing = _get(changingPath)\n      let changed = _get(changedPath)\n\n      if (!changing) {\n        // Track properties that are changing in the current event loop\n        changed = []\n      }\n\n      // Add changing properties to this array once at most\n      const index = changed.indexOf(prop)\n      if (current !== value && index === -1) {\n        changed.push(prop)\n      }\n      if (previous === value) {\n        if (index >= 0) {\n          changed.splice(index, 1)\n        }\n      }\n      // No changes in current event loop\n      if (!changed.length) {\n        changing = false\n        _unset(changingPath)\n        _unset(changedPath)\n        // Cancel pending change event\n        if (_get(eventIdPath)) {\n          clearTimeout(_get(eventIdPath))\n          _unset(eventIdPath)\n        }\n      }\n      // Changes detected in current event loop\n      if (!changing && changed.length) {\n        _set(changedPath, changed)\n        _set(changingPath, true)\n        // Saving the timeout id allows us to batch all changes in the same\n        // event loop into a single \"change\"\n        // TODO: Optimize\n        _set(eventIdPath, setTimeout(() => {\n          // Previous event loop where changes were gathered has ended, so\n          // notify any listeners of those changes and prepare for any new\n          // changes\n          _unset(changedPath)\n          _unset(eventIdPath)\n          _unset(changingPath)\n          // TODO: Optimize\n          if (!_get(silentPath)) {\n            let i\n            for (i = 0; i < changed.length; i++) {\n              self.emit('change:' + changed[i], self, utils.get(self, changed[i]))\n            }\n            self.emit('change', self, self.changes())\n          }\n          _unset(silentPath)\n        }, 0))\n      }\n    }\n    _set(keyPath, value)\n    return value\n  }\n\n  return descriptor\n}\n\n/**\n * TODO\n *\n * @name Schema.typeGroupValidators\n * @type {Object}\n */\nconst typeGroupValidators = {\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.array\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  array: function (value, schema, opts) {\n    return runOps(ARRAY_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.integer\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  integer: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.number\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  number: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor13.\n   *\n   * @name Schema.typeGroupValidators.numeric\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  numeric: function (value, schema, opts) {\n    return runOps(NUMERIC_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor53.\n   *\n   * @name Schema.typeGroupValidators.object\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  object: function (value, schema, opts) {\n    return runOps(OBJECT_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor25.\n   *\n   * @name Schema.typeGroupValidators.string\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  string: function (value, schema, opts) {\n    return runOps(STRING_OPS, value, schema, opts)\n  }\n}\n\n/**\n * js-data's Schema class.\n *\n * ```javascript\n * import {Schema} from 'js-data'\n * ```\n *\n * @class Schema\n * @extends Component\n * @param {Object} definition Schema definition according to json-schema.org\n */\nexport default Component.extend({\n  constructor: function Schema (definition) {\n    // const self = this\n    definition || (definition = {})\n    // TODO: schema validation\n    utils.fillIn(this, definition)\n\n    // TODO: rework this to make sure all possible keywords are converted\n    if (definition.properties) {\n      utils.forOwn(definition.properties, function (_definition, prop) {\n        if (!(_definition instanceof Schema)) {\n          definition.properties[prop] = new Schema(_definition)\n        }\n      })\n    }\n  },\n\n  /**\n   * This adds ES5 getters/setters to the target based on the \"properties\" in\n   * this Schema, which makes possible change tracking and validation on\n   * property assignment.\n   *\n   * @name Schema#validate\n   * @method\n   * @param {Object} target The prototype to which to apply this schema.\n   */\n  apply (target, opts) {\n    opts || (opts = {})\n    opts.getter = opts.getter || '_get'\n    opts.setter = opts.setter || '_set'\n    opts.unsetter = opts.unsetter || '_unset'\n    const properties = this.properties || {}\n    utils.forOwn(properties, function (schema, prop) {\n      Object.defineProperty(\n        target,\n        prop,\n        makeDescriptor(prop, schema, opts)\n      )\n    })\n  },\n\n  /**\n   * Validate the provided value against this schema.\n   *\n   * @name Schema#validate\n   * @method\n   * @param {*} value Value to validate.\n   * @param {Object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  validate (value, opts) {\n    return validate(value, this, opts)\n  }\n}, {\n  typeGroupValidators,\n  types,\n  validate,\n  validationKeywords\n})\n","import utils from './utils'\nimport Component from './Component'\nimport Record from './Record'\nimport Schema from './Schema'\nimport {\n  belongsTo,\n  belongsToType,\n  hasMany,\n  hasManyType,\n  hasOne,\n  hasOneType\n} from './decorators'\n\nconst DOMAIN = 'Mapper'\n\nconst makeNotify = function (num) {\n  return function (...args) {\n    const self = this\n    const opts = args[args.length - num]\n    self.dbg(opts.op, ...args)\n    if (opts.notify || (opts.notify === undefined && self.notify)) {\n      setTimeout(() => {\n        self.emit(opts.op, ...args)\n      })\n    }\n  }\n}\n\n// These are the default implementations of all of the lifecycle hooks\nconst notify = makeNotify(1)\nconst notify2 = makeNotify(2)\n\n// This object provides meta information used by Mapper#crud to actually\n// execute each lifecycle method\nconst LIFECYCLE_METHODS = {\n  count: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  destroy: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  destroyAll: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  find: {\n    defaults: [undefined, {}],\n    types: []\n  },\n  findAll: {\n    defaults: [{}, {}],\n    types: []\n  },\n  sum: {\n    defaults: [undefined, {}, {}],\n    skip: true,\n    types: []\n  },\n  update: {\n    adapterArgs (mapper, id, props, opts) {\n      return [id, mapper.toJSON(props, opts), opts]\n    },\n    beforeAssign: 1,\n    defaults: [undefined, {}, {}],\n    types: []\n  },\n  updateAll: {\n    adapterArgs (mapper, props, query, opts) {\n      return [mapper.toJSON(props, opts), query, opts]\n    },\n    beforeAssign: 0,\n    defaults: [{}, {}, {}],\n    types: []\n  },\n  updateMany: {\n    adapterArgs (mapper, records, opts) {\n      return [records.map(function (record) {\n        return mapper.toJSON(record, opts)\n      }), opts]\n    },\n    beforeAssign: 0,\n    defaults: [[], {}],\n    types: []\n  }\n}\n\nconst MAPPER_DEFAULTS = {\n  /**\n   * Hash of registered adapters. Don't modify directly. Use\n   * {@link Mapper#registerAdapter} instead.\n   *\n   * @default {}\n   * @name Mapper#_adapters\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  _adapters: {},\n\n  /**\n   * Whether to augment {@link Mapper#recordClass} with getter/setter property\n   * accessors according to the properties defined in {@link Mapper#schema}.\n   * This makes possible validation and change tracking on individual properties\n   * when using the dot (e.g. `user.name = \"Bob\"`) operator to modify a\n   * property.\n   *\n   * @default true\n   * @name Mapper#applySchema\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  applySchema: true,\n\n  /**\n   * Whether to enable debug-level logs.\n   *\n   * @default false\n   * @name Mapper#debug\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  debug: false,\n\n  /**\n   * The name of the registered adapter that this Mapper should used by default.\n   *\n   * @default \"http\"\n   * @name Mapper#defaultAdapter\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   * @type {string}\n   */\n  defaultAdapter: 'http',\n\n  /**\n   * The field used as the unique identifier on records handled by this Mapper.\n   *\n   * @default id\n   * @name Mapper#idAttribute\n   * @since 3.0.0\n   * @type {string}\n   */\n  idAttribute: 'id',\n\n  /**\n   * Whether this Mapper should emit operational events.\n   *\n   * @default true\n   * @name Mapper#notify\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  notify: true,\n\n  /**\n   * Whether {@link Mapper#create}, {@link Mapper#createMany},\n   * {@link Mapper#update}, {@link Mapper#updateAll}, {@link Mapper#updateMany},\n   * {@link Mapper#find}, {@link Mapper#findAll}, {@link Mapper#destroy},\n   * {@link Mapper#destroyAll}, {@link Mapper#count}, and {@link Mapper#sum}\n   * should return a raw result object that contains both the instance data\n   * returned by the adapter _and_ metadata about the operation.\n   *\n   * The default is to NOT return the result object, and instead return just the\n   * instance data.\n   *\n   * @default false\n   * @name Mapper#raw\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  raw: false\n}\n\n/**\n * The core of JSData's [ORM/ODM][orm] implementation. Given a minimum amout of\n * meta information about a resource, a Mapper can perform generic CRUD\n * operations against that resource. Apart from its configuration, a Mapper is\n * stateless. The particulars of various persistence layers have been abstracted\n * into adapters, which a Mapper uses to perform its operations.\n *\n * The term \"Mapper\" comes from the [Data Mapper Pattern][pattern] described in\n * Martin Fowler's [Patterns of Enterprise Application Architecture][book]. A\n * Data Mapper moves data between [in-memory object instances][record] and a\n * relational or document-based database. JSData's Mapper can work with any\n * persistence layer you can write an adapter for.\n *\n * _(\"Model\" is a heavily overloaded term and is avoided in this documentation\n * to prevent confusion.)_\n *\n * [orm]: https://en.wikipedia.org/wiki/Object-relational_mapping\n * [pattern]: https://en.wikipedia.org/wiki/Data_mapper_pattern\n * [book]: http://martinfowler.com/books/eaa.html\n * [record]: Record.html\n *\n * @example <caption>Import and instantiate</caption>\n * import {Mapper} from 'js-data'\n *\n * const UserService = new Mapper({ name: 'user' })\n *\n * @example <caption>Define a Mapper using the Container component</caption>\n * import {Container} from 'js-data'\n *\n * const store = new Container()\n * store.defineMapper('user')\n *\n * @class Mapper\n * @extends Component\n * @param {Object} opts Configuration options.\n * @param {boolean} [opts.applySchema=true] See {@link Mapper#applySchema}.\n * @param {boolean} [opts.debug=false] See {@link Mapper#debug}.\n * @param {string} [opts.defaultAdapter=http] See {@link Mapper#defaultAdapter}.\n * @param {string} [opts.idAttribute=id] See {@link Mapper#idAttribute}.\n * @param {string} opts.name See {@link Mapper#name}.\n * @param {boolean} [opts.notify] See {@link Mapper#notify}.\n * @param {boolean} [opts.raw=false] See {@link Mapper#raw}.\n * @param {Function|boolean} [opts.recordClass] See {@link Mapper#recordClass}.\n * @returns {Mapper} A new {@link Mapper} instance.\n * @see http://www.js-data.io/v3.0/docs/components-of-jsdata#mapper\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#mapper\",\"Components of JSData: Mapper\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/modeling-your-data\",\"Modeling your data\"]\n */\nexport default Component.extend({\n  constructor: function Mapper (opts) {\n    const self = this\n    utils.classCallCheck(self, Mapper)\n    Mapper.__super__.call(self)\n    opts || (opts = {})\n\n    // Prepare certain properties to be non-enumerable\n    Object.defineProperties(self, {\n      _adapters: {\n        value: undefined,\n        writable: true\n      },\n\n      /**\n       * Set to `false` to force the Mapper to work with POJO objects only.\n       *\n       * @example <caption>Use POJOs only.</caption>\n       * import {Mapper, Record} from 'js-data'\n       * const UserMapper = new Mapper({ recordClass: false })\n       * UserMapper.recordClass // false\n       * const user = UserMapper#createRecord()\n       * user instanceof Record // false\n       *\n       * @example <caption>Set to a custom class to have records wrapped in your custom class.</caption>\n       * import {Mapper, Record} from 'js-data'\n       *  // Custom class\n       * class User {\n       *   constructor (props = {}) {\n       *     for (var key in props) {\n       *       if (props.hasOwnProperty(key)) {\n       *         this[key] = props[key]\n       *       }\n       *     }\n       *   }\n       * }\n       * const UserMapper = new Mapper({ recordClass: User })\n       * UserMapper.recordClass // function User() {}\n       * const user = UserMapper#createRecord()\n       * user instanceof Record // false\n       * user instanceof User // true\n       *\n       *\n       * @example <caption>Extend the {@link Record} class.</caption>\n       * import {Mapper, Record} from 'js-data'\n       *  // Custom class\n       * class User extends Record {\n       *   constructor () {\n       *     super(props)\n       *   }\n       * }\n       * const UserMapper = new Mapper({ recordClass: User })\n       * UserMapper.recordClass // function User() {}\n       * const user = UserMapper#createRecord()\n       * user instanceof Record // true\n       * user instanceof User // true\n       *\n       * @name Mapper#recordClass\n       * @default {@link Record}\n       * @see Record\n       * @since 3.0.0\n       */\n      recordClass: {\n        value: undefined,\n        writable: true\n      },\n\n      /**\n       * The meta information describing this Mapper's available lifecycle\n       * methods. __Do not modify.__\n       *\n       * TODO: Improve documentation.\n       *\n       * @name Mapper#lifecycleMethods\n       * @since 3.0.0\n       * @type {Object}\n       */\n      lifecycleMethods: {\n        value: LIFECYCLE_METHODS\n      },\n\n      /**\n       * This Mapper's {@link Schema}.\n       *\n       * @name Mapper#schema\n       * @see Schema\n       * @since 3.0.0\n       * @type {Schema}\n       */\n      schema: {\n        value: undefined,\n        writable: true\n      }\n    })\n\n    // Apply user-provided configuration\n    utils.fillIn(self, opts)\n    // Fill in any missing options with the defaults\n    utils.fillIn(self, utils.copy(MAPPER_DEFAULTS))\n\n    /**\n     * The name for this Mapper. This is the minimum amount of meta information\n     * required for a Mapper to be able to execute CRUD operations for a\n     * Resource.\n     *\n     * @name Mapper#name\n     * @since 3.0.0\n     * @type {string}\n     */\n    if (!self.name) {\n      throw utils.err(`new ${DOMAIN}`, 'opts.name')(400, 'string', self.name)\n    }\n\n    // Setup schema, with an empty default schema if necessary\n    if (!(self.schema instanceof Schema)) {\n      self.schema = new Schema(self.schema || {})\n    }\n\n    // Create a subclass of Record that's tied to this Mapper\n    if (utils.isUndefined(self.recordClass)) {\n      const superClass = Record\n      self.recordClass = superClass.extend({\n        constructor: (function Record () {\n          var subClass = function Record (props, opts) {\n            utils.classCallCheck(this, subClass)\n            superClass.call(this, props, opts)\n          }\n          return subClass\n        })()\n      })\n    }\n\n    if (self.recordClass) {\n      self.recordClass.mapper = self\n\n      // We can only apply the schema to the prototype of self.recordClass if the\n      // class extends Record\n      if (utils.getSuper(self.recordClass, true) === Record && self.schema && self.schema.apply && self.applySchema) {\n        self.schema.apply(self.recordClass.prototype)\n      }\n    }\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n   * returns a promise then {@link Mapper#count} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterCount\n   * @param {Object} query The `query` argument passed to {@link Mapper#count}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#count}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterCount: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterCreate\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterCreate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterCreateMany\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterCreateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterDestroy\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterDestroy: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterDestroyAll\n   * @param {*} data The `data` returned by the adapter.\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterDestroyAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterFind\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterFind: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterFindAll\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterFindAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n   * returns a promise then {@link Mapper#sum} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterSum\n   * @param {Object} query The `query` argument passed to {@link Mapper#sum}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#sum}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterSum: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterUpdate\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterUpdate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterUpdateAll\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterUpdateAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterUpdateMany\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterUpdateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeCreate\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n   * @since 3.0.0\n   */\n  beforeCreate: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeCreateMany\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   * @since 3.0.0\n   */\n  beforeCreateMany: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n   * returns a promise then {@link Mapper#count} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeCount\n   * @param {Object} query The `query` argument passed to {@link Mapper#count}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#count}.\n   * @since 3.0.0\n   */\n  beforeCount: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeDestroy\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   * @since 3.0.0\n   */\n  beforeDestroy: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeDestroyAll\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   * @since 3.0.0\n   */\n  beforeDestroyAll: notify,\n\n  /**\n   * Mappers lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeFind\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n   * @since 3.0.0\n   */\n  beforeFind: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeFindAll\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   * @since 3.0.0\n   */\n  beforeFindAll: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n   * returns a promise then {@link Mapper#sum} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeSum\n   * @param {string} field The `field` argument passed to {@link Mapper#sum}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#sum}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#sum}.\n   * @since 3.0.0\n   */\n  beforeSum: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeUpdate\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n   * @since 3.0.0\n   */\n  beforeUpdate: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeUpdateAll\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   * @since 3.0.0\n   */\n  beforeUpdateAll: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeUpdateMany\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   * @since 3.0.0\n   */\n  beforeUpdateMany: notify,\n\n  /**\n   * This method is called at the end of most lifecycle methods. It does the\n   * following:\n   *\n   * 1. If `opts.raw` is `true`, add this Mapper's configuration to the `opts`\n   * argument as metadata for the operation.\n   * 2. Wrap the result data appropriately using {@link Mapper#wrap}, which\n   * calls {@link Mapper#createRecord}.\n   *\n   * @method Mapper#_end\n   * @private\n   * @since 3.0.0\n   */\n  _end (result, opts, skip) {\n    const self = this\n    if (opts.raw) {\n      utils._(result, opts)\n    }\n    if (skip) {\n      return result\n    }\n    let _data = opts.raw ? result.data : result\n    if (_data && utils.isFunction(self.wrap)) {\n      _data = self.wrap(_data, opts)\n      if (opts.raw) {\n        result.data = _data\n      } else {\n        result = _data\n      }\n    }\n    return result\n  },\n\n  /**\n   * Define a belongsTo relationship. Only useful if you're managing your\n   * Mappers manually and not using a Container or DataStore component.\n   *\n   * @example\n   * PostService.belongsTo(UserService, {\n   *   // post.user_id points to user.id\n   *   foreignKey: 'user_id'\n   *   // user records will be attached to post records at \"post.user\"\n   *   localField: 'user'\n   * })\n   *\n   * CommentService.belongsTo(UserService, {\n   *   // comment.user_id points to user.id\n   *   foreignKey: 'user_id'\n   *   // user records will be attached to comment records at \"comment.user\"\n   *   localField: 'user'\n   * })\n   * CommentService.belongsTo(PostService, {\n   *   // comment.post_id points to post.id\n   *   foreignKey: 'post_id'\n   *   // post records will be attached to comment records at \"comment.post\"\n   *   localField: 'post'\n   * })\n   *\n   * @method Mapper#belongsTo\n   * @see http://www.js-data.io/v3.0/docs/relations\n   * @since 3.0.0\n   */\n  belongsTo (relatedMapper, opts) {\n    return belongsTo(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Select records according to the `query` argument and return the count.\n   *\n   * {@link Mapper#beforeCount} will be called before calling the adapter.\n   * {@link Mapper#afterCount} will be called after calling the adapter.\n   *\n   * @example <caption>Get the number of published blog posts</caption>\n   * PostService.count({ status: 'published' }).then((numPublished) => {\n   *   console.log(numPublished) // e.g. 45\n   * })\n   *\n   * @method Mapper#count\n   * @param {Object} [query={}] Selection query. See {@link query}.\n   * @param {Object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {Object} [opts] Configuration options. Refer to the `count` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves with the count of the selected records.\n   * @since 3.0.0\n   */\n  count (query, opts) {\n    return this.crud('count', query, opts)\n  },\n\n  /**\n   * Create and save a new the record using the provided `props`.\n   *\n   * {@link Mapper#beforeCreate} will be called before calling the adapter.\n   * {@link Mapper#afterCreate} will be called after calling the adapter.\n   *\n   * @example <caption>Create and save a new blog post</caption>\n   * PostService.create({\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }).then((post) => {\n   *   console.log(post) // { id: 1234, status: 'draft', ... }\n   * })\n   *\n   * @method Mapper#create\n   * @param {Object} props The properties for the new record.\n   * @param {Object} [opts] Configuration options. Refer to the `create` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `props` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#create}\n   * or {@link Mapper#createMany} call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @returns {Promise} Resolves with the created record.\n   * @since 3.0.0\n   */\n  create (props, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    props || (props = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, self)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate'\n    return utils.resolve(self[op](props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = utils.isUndefined(_props) ? props : _props\n\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = def.getLocalField(props)\n        const relatedMapper = def.getRelation()\n        const relatedIdAttribute = relatedMapper.idAttribute\n        optsCopy.raw = false\n        if (!relationData) {\n          return\n        }\n        if (def.type === belongsToType) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          tasks.push(relatedMapper.create(relationData, optsCopy).then(function (data) {\n            def.setLocalField(belongsToRelationData, data)\n            def.setForeignKey(props, data)\n          }))\n        } else if (def.type === hasManyType && def.localKeys) {\n          // Create his hasMany relation first because it uses localKeys\n          tasks.push(relatedMapper.createMany(relationData, optsCopy).then(function (data) {\n            def.setLocalField(belongsToRelationData, data)\n            utils.set(props, def.localKeys, data.map(function (record) {\n              return utils.get(record, relatedIdAttribute)\n            }))\n          }))\n        }\n      })\n      return utils.Promise.all(tasks).then(function () {\n        // Now delegate to the adapter for the main create\n        op = opts.op = 'create'\n        self.dbg(op, props, opts)\n        return utils.resolve(self.getAdapter(adapter)[op](self, self.toJSON(props, { with: opts.pass || [] }), opts))\n      }).then(function (data) {\n        const createdRecord = opts.raw ? data.data : data\n        // Deep post-create hasMany and hasOne relations\n        tasks = []\n        utils.forEachRelation(self, opts, function (def, optsCopy) {\n          const relationData = def.getLocalField(props)\n          if (!relationData) {\n            return\n          }\n          optsCopy.raw = false\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType && def.foreignKey) {\n            def.setForeignKey(createdRecord, relationData)\n            task = def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n              def.setLocalField(createdRecord, data)\n            })\n          } else if (def.type === hasOneType) {\n            def.setForeignKey(createdRecord, relationData)\n            task = def.getRelation().create(relationData, optsCopy).then(function (data) {\n              def.setLocalField(createdRecord, data)\n            })\n          } else if (def.type === belongsToType && def.getLocalField(belongsToRelationData)) {\n            def.setLocalField(createdRecord, def.getLocalField(belongsToRelationData))\n          } else if (def.type === hasManyType && def.localKeys && def.getLocalField(belongsToRelationData)) {\n            def.setLocalField(createdRecord, def.getLocalField(belongsToRelationData))\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return utils.Promise.all(tasks).then(function () {\n          return data\n        })\n      })\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterCreate lifecycle hook\n      op = opts.op = 'afterCreate'\n      return utils.resolve(self[op](props, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Use {@link Mapper#createRecord} instead.\n   * @deprecated\n   * @method Mapper#createInstance\n   * @param {Object|Array} props See {@link Mapper#createRecord}.\n   * @param {Object} [opts] See {@link Mapper#createRecord}.\n   * @returns {Object|Array} See {@link Mapper#createRecord}.\n   * @see Mapper#createRecord\n   * @since 3.0.0\n   */\n  createInstance (props, opts) {\n    return this.createRecord(props, opts)\n  },\n\n  /**\n   * Given an array of records, batch create them via an adapter.\n   *\n   * {@link Mapper#beforeCreateMany} will be called before calling the adapter.\n   * {@link Mapper#afterCreateMany} will be called after calling the adapter.\n   *\n   * @example <caption>Create and save several new blog posts</caption>\n   * PostService.createMany([{\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }, {\n   *   title: 'Reading data',\n   *   status: 'draft'\n   * }]).then((posts) => {\n   *   console.log(posts[0]) // { id: 1234, status: 'draft', ... }\n   *   console.log(posts[1]) // { id: 1235, status: 'draft', ... }\n   * })\n   *\n   * @method Mapper#createMany\n   * @param {Record[]} records Array of records to be created in one batch.\n   * @param {Object} [opts] Configuration options. Refer to the `createMany`\n   * method of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `records` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#createMany}\n   * call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @returns {Promise} Resolves with the created records.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  createMany (records, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, self)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany'\n    return utils.resolve(self[op](records, opts)).then(function (_records) {\n      // Allow for re-assignment from lifecycle hook\n      records = utils.isUndefined(_records) ? records : _records\n\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = records.map(function (record) {\n          return def.getLocalField(record)\n        }).filter(function (relatedRecord) {\n          return relatedRecord\n        })\n        if (def.type === belongsToType && relationData.length === records.length) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          tasks.push(def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n            const relatedRecords = optsCopy.raw ? data.data : data\n            def.setLocalField(belongsToRelationData, relatedRecords)\n            records.forEach(function (record, i) {\n              def.setForeignKey(record, relatedRecords[i])\n            })\n          }))\n        }\n      })\n      return utils.Promise.all(tasks).then(function () {\n        // Now delegate to the adapter\n        op = opts.op = 'createMany'\n        const json = records.map(function (record) {\n          return self.toJSON(record, { with: opts.pass || [] })\n        })\n        self.dbg(op, records, opts)\n        return utils.resolve(self.getAdapter(adapter)[op](self, json, opts))\n      }).then(function (data) {\n        const createdRecords = opts.raw ? data.data : data\n\n        // Deep post-create hasOne relations\n        tasks = []\n        utils.forEachRelation(self, opts, function (def, optsCopy) {\n          const relationData = records.map(function (record) {\n            return def.getLocalField(record)\n          }).filter(function (relatedRecord) {\n            return relatedRecord\n          })\n          if (relationData.length !== records.length) {\n            return\n          }\n          const belongsToData = def.getLocalField(belongsToRelationData)\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType) {\n            // Not supported\n            self.log('warn', 'deep createMany of hasMany type not supported!')\n          } else if (def.type === hasOneType) {\n            createdRecords.forEach(function (createdRecord, i) {\n              def.setForeignKey(createdRecord, relationData[i])\n            })\n            task = def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n              const relatedData = opts.raw ? data.data : data\n              createdRecords.forEach(function (createdRecord, i) {\n                def.setLocalField(createdRecord, relatedData[i])\n              })\n            })\n          } else if (def.type === belongsToType && belongsToData && belongsToData.length === createdRecords.length) {\n            createdRecords.forEach(function (createdRecord, i) {\n              def.setLocalField(createdRecord, belongsToData[i])\n            })\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return utils.Promise.all(tasks).then(function () {\n          return data\n        })\n      })\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterCreateMany lifecycle hook\n      op = opts.op = 'afterCreateMany'\n      return utils.resolve(self[op](records, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Create an unsaved, uncached instance of this Mapper's\n   * {@link Mapper#recordClass}.\n   *\n   * Returns `props` if `props` is already an instance of\n   * {@link Mapper#recordClass}.\n   *\n   * __Note:__ This method does __not__ interact with any adapter, and does\n   * __not__ save any data. It only creates new objects in memory.\n   *\n   * @example <caption>Create empty unsaved record instance</caption>\n   * const post = PostService.createRecord()\n   *\n   * @example <caption>Create an unsaved record instance with inital properties</caption>\n   * const post = PostService.createRecord({\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * })\n   *\n   * @example <caption>Create a record instance that corresponds to a saved record</caption>\n   * const post = PostService.createRecord({\n   *   // JSData thinks this record has been saved if it has a primary key\n   *   id: 1234,\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * })\n   *\n   * @example <caption>Create record instances from an array</caption>\n   * const posts = PostService.createRecord([{\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }, {\n   *   title: 'Reading data',\n   *   status: 'draft'\n   * }])\n   *\n   * @example <caption>Records are validated by default</caption>\n   * import {Mapper} from 'js-data'\n   * const PostService = new Mapper({\n   *   name: 'post',\n   *   schema: { properties: { title: { type: 'string' } } }\n   * })\n   * try {\n   *   const post = PostService.createRecord({\n   *     title: 1234,\n   *   })\n   * } catch (err) {\n   *   console.log(err.errors) // [{ expected: 'one of (string)', actual: 'number', path: 'title' }]\n   * }\n   *\n   * @example <caption>Skip validation</caption>\n   * import {Mapper} from 'js-data'\n   * const PostService = new Mapper({\n   *   name: 'post',\n   *   schema: { properties: { title: { type: 'string' } } }\n   * })\n   * const post = PostService.createRecord({\n   *   title: 1234,\n   * }, { noValidate: true })\n   * console.log(post.isValid()) // false\n   *\n   * @method Mapper#createRecord\n   * @param {Object|Object[]} props The properties for the Record instance or an\n   * array of property objects for the Record instances.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.noValidate=false] Whether to skip validation when\n   * the Record instances are created.\n   * @returns {Record|Record[]} The Record instance or Record instances.\n   * @since 3.0.0\n   */\n  createRecord (props, opts) {\n    props || (props = {})\n    const self = this\n    if (utils.isArray(props)) {\n      return props.map(function (_props) {\n        return self.createRecord(_props, opts)\n      })\n    }\n    if (!utils.isObject(props)) {\n      throw utils.err(`${DOMAIN}#createRecord`, 'props')(400, 'array or object', props)\n    }\n    const recordClass = self.recordClass\n    const relationList = self.relationList || []\n    relationList.forEach(function (def) {\n      const relatedMapper = def.getRelation()\n      const relationData = def.getLocalField(props)\n      if (relationData && !relatedMapper.is(relationData)) {\n        if (utils.isArray(relationData) && (!relationData.length || relatedMapper.is(relationData[0]))) {\n          return\n        }\n        utils.set(props, def.localField, relatedMapper.createRecord(relationData, opts))\n      }\n    })\n    // Check to make sure \"props\" is not already an instance of this Mapper.\n    return recordClass ? (props instanceof recordClass ? props : new recordClass(props, opts)) : props // eslint-disable-line\n  },\n\n  /**\n   * Lifecycle invocation method.\n   *\n   * TODO: Improve documentation for this method.\n   *\n   * @method Mapper#crud\n   * @param {string} method Name of the lifecycle method to invoke.\n   * @param {...*} args Arguments to pass to the lifecycle method.\n   * @returns {Promise}\n   * @since 3.0.0\n   */\n  crud (method, ...args) {\n    const self = this\n    const config = self.lifecycleMethods[method]\n    if (!config) {\n      throw utils.err(`${DOMAIN}#crud`, method)(404, 'method')\n    }\n\n    const upper = `${method.charAt(0).toUpperCase()}${method.substr(1)}`\n    const before = `before${upper}`\n    const after = `after${upper}`\n\n    let op, adapter\n\n    // Default values for arguments\n    config.defaults.forEach(function (value, i) {\n      if (utils.isUndefined(args[i])) {\n        args[i] = utils.copy(value)\n      }\n    })\n\n    const opts = args[args.length - 1]\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, self)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // before lifecycle hook\n    op = opts.op = before\n    return utils.resolve(self[op](...args)).then(function (_value) {\n      if (!utils.isUndefined(config.beforeAssign)) {\n        // Allow for re-assignment from lifecycle hook\n        args[config.beforeAssign] = utils.isUndefined(_value) ? args[config.beforeAssign] : _value\n      }\n      // Now delegate to the adapter\n      op = opts.op = method\n      args = config.adapterArgs ? config.adapterArgs(self, ...args) : args\n      self.dbg(op, ...args)\n      return utils.resolve(self.getAdapter(adapter)[op](self, ...args))\n    }).then(function (result) {\n      result = self._end(result, opts, !!config.skip)\n      args.push(result)\n      // after lifecycle hook\n      op = opts.op = after\n      return utils.resolve(self[op](...args)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Using an adapter, destroy the record with the given primary key.\n   *\n   * {@link Mapper#beforeDestroy} will be called before destroying the record.\n   * {@link Mapper#afterDestroy} will be called after destroying the record.\n   *\n   * @example <caption>Destroy a specific blog post</caption>\n   * PostService.destroy(1234).then(() => {\n   *   // Blog post #1234 has been destroyed\n   * })\n   *\n   * @example <caption>Get full response</caption>\n   * PostService.destroy(1234, { raw: true }).then((result) => {\n   *   console.log(result.deleted) e.g. 1\n   *   console.log(...) // etc., more metadata can be found on the result\n   * })\n   *\n   * @method Mapper#destroy\n   * @param {(string|number)} id The primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options. Refer to the `destroy` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves when the record has been destroyed. Resolves\n   * even if no record was found to be destroyed.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  destroy (id, opts) {\n    return this.crud('destroy', id, opts)\n  },\n\n  /**\n   * Destroy the records selected by `query` via an adapter. If no `query` is\n   * provided then all records will be destroyed.\n   *\n   * {@link Mapper#beforeDestroyAll} will be called before destroying the records.\n   * {@link Mapper#afterDestroyAll} will be called after destroying the records.\n   *\n   * @example <caption>Destroy all blog posts</caption>\n   * PostService.destroyAll().then(() => {\n   *   // All blog posts have been destroyed\n   * })\n   *\n   * @example <caption>Destroy all \"draft\" blog posts</caption>\n   * PostService.destroyAll({ status: 'draft' }).then(() => {\n   *   // All \"draft\" blog posts have been destroyed\n   * })\n   *\n   * @example <caption>Get full response</caption>\n   * const query = null\n   * const options = { raw: true }\n   * PostService.destroyAll(query, options).then((result) => {\n   *   console.log(result.deleted) e.g. 14\n   *   console.log(...) // etc., more metadata can be found on the result\n   * })\n   *\n   * @method Mapper#destroyAll\n   * @param {Object} [query={}] Selection query. See {@link query}.\n   * @param {Object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {Object} [opts] Configuration options. Refer to the `destroyAll`\n   * method of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves when the records have been destroyed. Resolves\n   * even if no records were found to be destroyed.\n   * @see query\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  destroyAll (query, opts) {\n    return this.crud('destroyAll', query, opts)\n  },\n\n  /**\n   * Retrieve via an adapter the record with the given primary key.\n   *\n   * {@link Mapper#beforeFind} will be called before calling the adapter.\n   * {@link Mapper#afterFind} will be called after calling the adapter.\n   *\n   * @example\n   * PostService.find(1).then((post) => {\n   *   console.log(post) // { id: 1, ...}\n   * })\n   *\n   * @example <caption>Get full response</caption>\n   * PostService.find(1, { raw: true }).then((result) => {\n   *   console.log(result.data) // { id: 1, ...}\n   *   console.log(result.found) // 1\n   *   console.log(...) // etc., more metadata can be found on the result\n   * })\n   *\n   * @method Mapper#find\n   * @param {(string|number)} id The primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options. Refer to the `find` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @returns {Promise} Resolves with the found record. Resolves with\n   * `undefined` if no record was found.\n   * @see http://www.js-data.io/v3.0/docs/reading-data\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/reading-data\",\"Reading data\"]\n   */\n  find (id, opts) {\n    return this.crud('find', id, opts)\n  },\n\n  /**\n   * Using the `query` argument, select records to retrieve via an adapter.\n   *\n   * {@link Mapper#beforeFindAll} will be called before calling the adapter.\n   * {@link Mapper#afterFindAll} will be called after calling the adapter.\n   *\n   * @example <caption>Find all \"published\" blog posts</caption>\n   * PostService.findAll({ status: 'published' }).then((posts) => {\n   *   console.log(posts) // [{ id: 1, status: 'published', ...}, ...]\n   * })\n   *\n   * @example <caption>Get full response</caption>\n   * PostService.findAll({ status: 'published' }, { raw: true }).then((result) => {\n   *   console.log(result.data) // [{ id: 1, status: 'published', ...}, ...]\n   *   console.log(result.found) // e.g. 13\n   *   console.log(...) // etc., more metadata can be found on the result\n   * })\n   *\n   * @method Mapper#findAll\n   * @param {Object} [query={}] Selection query. See {@link query}.\n   * @param {Object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {Object} [opts] Configuration options. Refer to the `findAll` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @returns {Promise} Resolves with the found records, if any.\n   * @see query\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/reading-data\",\"Reading data\"]\n   */\n  findAll (query, opts) {\n    return this.crud('findAll', query, opts)\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @method Mapper#getAdapter\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @returns {Adapter} The adapter.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  getAdapter (name) {\n    const self = this\n    self.dbg('getAdapter', 'name:', name)\n    const adapter = self.getAdapterName(name)\n    if (!adapter) {\n      throw utils.err(`${DOMAIN}#getAdapter`, 'name')(400, 'string', name)\n    }\n    return self.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @method Mapper#getAdapterName\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @returns {string} The name of the adapter.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || opts.defaultAdapter\n  },\n\n  /**\n   * Get the object of registered adapters for this Mapper.\n   *\n   * @method Mapper#getAdapters\n   * @returns {Object} {@link Mapper#_adapters}\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  /**\n   * Returns this Mapper's {@link Schema}.\n   *\n   * @method Mapper#getSchema\n   * @returns {Schema} This Mapper's {@link Schema}.\n   * @see Mapper#schema\n   * @since 3.0.0\n   */\n  getSchema () {\n    return this.schema\n  },\n\n  /**\n   * Defines a hasMany relationship. Only useful if you're managing your\n   * Mappers manually and not using a Container or DataStore component.\n   *\n   * @example\n   * UserService.hasMany(PostService, {\n   *   // post.user_id points to user.id\n   *   foreignKey: 'user_id'\n   *   // post records will be attached to user records at \"user.posts\"\n   *   localField: 'posts'\n   * })\n   *\n   * @method Mapper#hasMany\n   * @see http://www.js-data.io/v3.0/docs/relations\n   * @since 3.0.0\n   */\n  hasMany (relatedMapper, opts) {\n    return hasMany(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Defines a hasOne relationship. Only useful if you're managing your Mappers\n   * manually and not using a {@link Container} or {@link DataStore} component.\n   *\n   * @example\n   * UserService.hasOne(ProfileService, {\n   *   // profile.user_id points to user.id\n   *   foreignKey: 'user_id'\n   *   // profile records will be attached to user records at \"user.profile\"\n   *   localField: 'profile'\n   * })\n   *\n   * @method Mapper#hasOne\n   * @see http://www.js-data.io/v3.0/docs/relations\n   * @since 3.0.0\n   */\n  hasOne (relatedMapper, opts) {\n    return hasOne(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Return whether `record` is an instance of this Mapper's recordClass.\n   *\n   * @example\n   * const post = PostService.createRecord()\n   *\n   * console.log(PostService.is(post)) // true\n   * // Equivalent to what's above\n   * console.log(post instanceof PostService.recordClass) // true\n   *\n   * @method Mapper#is\n   * @param {Object|Record} record The record to check.\n   * @returns {boolean} Whether `record` is an instance of this Mapper's\n   * {@link Mapper#recordClass}.\n   * @since 3.0.0\n   */\n  is (record) {\n    const recordClass = this.recordClass\n    return recordClass ? record instanceof recordClass : false\n  },\n\n  /**\n   * Register an adapter on this Mapper under the given name.\n   *\n   * @method Mapper#registerAdapter\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for this Mapper.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  registerAdapter (name, adapter, opts) {\n    const self = this\n    opts || (opts = {})\n    self.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      self.defaultAdapter = name\n    }\n  },\n\n  /**\n   * Select records according to the `query` argument, and aggregate the sum\n   * value of the property specified by `field`.\n   *\n   * {@link Mapper#beforeSum} will be called before calling the adapter.\n   * {@link Mapper#afterSum} will be called after calling the adapter.\n   *\n   * @example\n   * PurchaseOrderService.sum('amount', { status: 'paid' }).then((amountPaid) => {\n   *   console.log(amountPaid) // e.g. 451125.34\n   * })\n   *\n   * @method Mapper#sum\n   * @param {string} field The field to sum.\n   * @param {Object} [query={}] Selection query. See {@link query}.\n   * @param {Object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {Object} [opts] Configuration options. Refer to the `sum` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves with the aggregated sum.\n   * @since 3.0.0\n   */\n  sum (field, query, opts) {\n    return this.crud('sum', field, query, opts)\n  },\n\n  /**\n   * Return a plain object representation of the given record. Relations can\n   * be optionally be included. Non-schema properties can be excluded.\n   *\n   * @example\n   * import {Mapper, Schema} from 'js-data'\n   * const PersonService = new Mapper({\n   *   name: 'person',\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' },\n   *       id: { type: 'string' }\n   *     }\n   *   }\n   * })\n   * const person = PersonService.createRecord({ id: 1, name: 'John', foo: 'bar' })\n   * console.log(PersonService.toJSON(person)) // {\"id\":1,\"name\":\"John\",\"foo\":\"bar\"}\n   * console.log(PersonService.toJSON(person), { strict: true }) // {\"id\":1,\"name\":\"John\"}\n   *\n   * @method Mapper#toJSON\n   * @param {Record|Record[]} records Record or records from which to create a\n   * POJO representation.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.strict] Whether to include properties that are not\n   * defined in {@link Mapper#schema}.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the POJO representation.\n   * @param {boolean} [opts.withAll] Whether to simply include all relations in\n   * the representation. Overrides `opts.with`.\n   * @returns {Object|Object[]} POJO representation of the record or records.\n   * @since 3.0.0\n   */\n  toJSON (records, opts) {\n    const self = this\n    let record\n    opts || (opts = {})\n    if (utils.isArray(records)) {\n      return records.map(function (record) {\n        return self.toJSON(record, opts)\n      })\n    } else {\n      record = records\n    }\n    const relationFields = (self ? self.relationFields : []) || []\n    let json = {}\n    let properties\n    if (self && self.schema) {\n      properties = self.schema.properties || {}\n      // TODO: Make this work recursively\n      utils.forOwn(properties, function (opts, prop) {\n        json[prop] = utils.plainCopy(record[prop])\n      })\n    }\n    properties || (properties = {})\n    if (!opts.strict) {\n      for (var key in record) {\n        if (!properties[key] && relationFields.indexOf(key) === -1) {\n          json[key] = utils.plainCopy(record[key])\n        }\n      }\n    }\n    // The user wants to include relations in the resulting plain object\n    // representation\n    if (self && opts.withAll) {\n      opts.with = relationFields.slice()\n    }\n    if (self && opts.with) {\n      if (utils.isString(opts.with)) {\n        opts.with = [opts.with]\n      }\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = def.getLocalField(record)\n        if (relationData) {\n          // The actual recursion\n          if (utils.isArray(relationData)) {\n            def.setLocalField(json, relationData.map(function (item) {\n              return def.getRelation().toJSON(item, optsCopy)\n            }))\n          } else {\n            def.setLocalField(json, def.getRelation().toJSON(relationData, optsCopy))\n          }\n        }\n      })\n    }\n    return json\n  },\n\n  /**\n   * Using an adapter, update the record with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Mapper#beforeUpdate} will be called before updating the record.\n   * {@link Mapper#afterUpdate} will be called after updating the record.\n   *\n   * @example <caption>Update a specific post</caption>\n   * PostService.update(1234, {\n   *   status: 'published',\n   *   published_at: new Date()\n   * }).then((post) => {\n   *   console.log(post) // { id: 1234, status: 'published', ... }\n   * })\n   *\n   * @method Mapper#update\n   * @param {(string|number)} id The primary key of the record to update.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options. Refer to the `update` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * transaction.\n   * @returns {Promise} Resolves with the updated record. Rejects if the record\n   * could not be found.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  update (id, props, opts) {\n    return this.crud('update', id, props, opts)\n  },\n\n  /**\n   * Using the `query` argument, perform the a single updated to the selected\n   * records.\n   *\n   * {@link Mapper#beforeUpdateAll} will be called before making the update.\n   * {@link Mapper#afterUpdateAll} will be called after making the update.\n   *\n   * @example <caption>Turn all of John's blog posts into drafts.</caption>\n   * const update = { status: draft: published_at: null }\n   * const query = { userId: 1234 }\n   * PostService.updateAll(update, query).then((posts) => {\n   *   console.log(posts) // [...]\n   * })\n   *\n   * @method Mapper#updateAll\n   * @param {Object} props Update to apply to selected records.\n   * @param {Object} [query={}] Selection query. See {@link query}.\n   * @param {Object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {Object} [opts] Configuration options. Refer to the `updateAll`\n   * method of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves with the update records, if any.\n   * @see query\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  updateAll (props, query, opts) {\n    return this.crud('updateAll', props, query, opts)\n  },\n\n  /**\n   * Given an array of updates, perform each of the updates via an adapter. Each\n   * \"update\" is a hash of properties with which to update an record. Each\n   * update must contain the primary key of the record to be updated.\n   *\n   * {@link Mapper#beforeUpdateMany} will be called before making the update.\n   * {@link Mapper#afterUpdateMany} will be called after making the update.\n   *\n   * @example\n   * PostService.updateMany([\n   *   { id: 1234, status: 'draft' },\n   *   { id: 2468, status: 'published', published_at: new Date() }\n   * ]).then((posts) => {\n   *   console.log(posts) // [...]\n   * })\n   *\n   * @method Mapper#updateMany\n   * @param {Record[]} records Array up record updates.\n   * @param {Object} [opts] Configuration options. Refer to the `updateMany`\n   * method of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves with the updated records. Rejects if any of the\n   * records could be found.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  updateMany (records, opts) {\n    return this.crud('updateMany', records, opts)\n  },\n\n  /**\n   * Validate the given record or records according to this Mapper's\n   * {@link Schema}. If there are no validation errors then the return value\n   * will be `undefined`.\n   *\n   * @example\n   * import {Mapper, Schema} from 'js-data'\n   * const PersonSchema = new Schema({\n   *   properties: {\n   *     name: { type: 'string' },\n   *     id: { type: 'string' }\n   *   }\n   * })\n   * const PersonService = new Mapper({\n   *   name: 'person',\n   *   schema: PersonSchema\n   * })\n   * let errors = PersonService.validate({ name: 'John' })\n   * console.log(errors) // undefined\n   * errors = PersonService.validate({ name: 123 })\n   * console.log(errors) // [{ expected: 'one of (string)', actual: 'number', path: 'name' }]\n   *\n   * @method Mapper#validate\n   * @param {Object|Object[]} record The record or records to validate.\n   * @param {Object} [opts] Configuration options. Passed to\n   * {@link Schema#validate}.\n   * @returns {Object[]} Array of errors or `undefined` if no errors.\n   * @since 3.0.0\n   */\n  validate (record, opts) {\n    const self = this\n    const schema = self.getSchema()\n    if (utils.isArray(record)) {\n      const errors = record.map(function (_record) {\n        return schema.validate(_record, opts)\n      })\n      let hasErrors = false\n      errors.forEach(function (err) {\n        if (err) {\n          hasErrors = true\n        }\n      })\n      if (hasErrors) {\n        return errors\n      }\n      return undefined\n    }\n    return schema.validate(record, opts)\n  },\n\n  /**\n   * Method used to wrap data returned by an adapter with this Mapper's\n   * {@link Mapper#recordClass}. This method is used by all of a Mapper's CRUD\n   * methods. The provided implementation of this method assumes that the `data`\n   * passed to it is a record or records that need to be wrapped with\n   * {@link Mapper#createRecord}. Override with care.\n   *\n   * Provided implementation of {@link Mapper#wrap}:\n   *\n   * ```\n   * function (data, opts) {\n   *   return this.createRecord(data, opts)\n   * }\n   * ```\n   *\n   * @example <caption>Override to customize behavior</caption>\n   * const PostMapper = new Mapper({\n   *   name: 'post',\n   *   wrap (data, opts) {\n   *     const originalWrap = this.constructor.prototype.wrap\n   *     // Let's say \"GET /post\" doesn't return JSON quite like JSData expects,\n   *     // but the actual post records are nested under a \"posts\" field. So,\n   *     // we override Mapper#wrap to handle this special case.\n   *     if (opts.op === 'findAll') {\n   *       return originalWrap.call(this, data.posts, opts)\n   *     }\n   *     // Otherwise perform original behavior\n   *     return originalWrap.call(this, data, opts)\n   *   }\n   * })\n   *\n   * @method Mapper#wrap\n   * @param {Object|Object[]} data The record or records to be wrapped.\n   * @param {Object} [opts] Configuration options. Passed to {@link Mapper#createRecord}.\n   * @returns {Record|Record[]} The wrapped record or records.\n   * @since 3.0.0\n   */\n  wrap (data, opts) {\n    return this.createRecord(data, opts)\n  }\n})\n\n/**\n * Create a subclass of this Mapper.\n *\n * @example <caption>Extend the class in a cross-browser manner.</caption>\n * import {Mapper} from 'js-data'\n * const CustomMapperClass = Mapper.extend({\n *   foo () { return 'bar' }\n * })\n * const customMapper = new CustomMapperClass({ name: 'test' })\n * console.log(customMapper.foo()) // \"bar\"\n *\n * @example <caption>Extend the class using ES2015 class syntax.</caption>\n * class CustomMapperClass extends Mapper {\n *   foo () { return 'bar' }\n * }\n * const customMapper = new CustomMapperClass({ name: 'test' })\n * console.log(customMapper.foo()) // \"bar\"\n *\n * @method Mapper.extend\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Mapper.\n * @since 3.0.0\n */\n","import utils from './utils'\nimport Component from './Component'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Mapper from './Mapper'\n\nconst DOMAIN = 'Container'\n\nconst toProxy = [\n  /**\n   * Wrapper for {@link Mapper#count}.\n   *\n   * @example <caption>Get the number of published blog posts</caption>\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.count('post', { status: 'published' }).then((numPublished) => {\n   *   console.log(numPublished) // e.g. 45\n   * })\n   *\n   * @method Container#count\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} [query] See {@link Mapper#count}.\n   * @param {Object} [opts] See {@link Mapper#count}.\n   * @returns {Promise} See {@link Mapper#count}.\n   * @see Mapper#count\n   * @since 3.0.0\n   */\n  'count',\n\n  /**\n   * Wrapper for {@link Mapper#create}.\n   *\n   * @example <caption>Create and save a new blog post</caption>\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.create('post', {\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }).then((post) => {\n   *   console.log(post) // { id: 1234, status: 'draft', ... }\n   * })\n   *\n   * @method Container#create\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} props See {@link Mapper#create}.\n   * @param {Object} [opts] See {@link Mapper#create}.\n   * @returns {Promise} See {@link Mapper#create}.\n   * @see Mapper#create\n   * @since 3.0.0\n   */\n  'create',\n\n  /**\n   * Wrapper for {@link Mapper#createMany}.\n   *\n   * @example <caption>Create and save several new blog posts</caption>\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.createMany('post', [{\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }, {\n   *   title: 'Reading data',\n   *   status: 'draft'\n   * }]).then((posts) => {\n   *   console.log(posts[0]) // { id: 1234, status: 'draft', ... }\n   *   console.log(posts[1]) // { id: 1235, status: 'draft', ... }\n   * })\n   *\n   * @method Container#createMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Record[]} records See {@link Mapper#createMany}.\n   * @param {Object} [opts] See {@link Mapper#createMany}.\n   * @returns {Promise} See {@link Mapper#createMany}.\n   * @see Mapper#createMany\n   * @since 3.0.0\n   */\n  'createMany',\n\n  /**\n   * Wrapper for {@link Mapper#createRecord}.\n   *\n   * __Note:__ This method does __not__ interact with any adapter, and does\n   * __not__ save any data. It only creates new objects in memory.\n   *\n   * @example <caption>Create empty unsaved record instance</caption>\n   * import {Container} from 'js-data'\n   * const store = new Container()\n   * store.defineMapper('post')\n   * const post = PostService.createRecord()\n   *\n   * @method Container#createRecord\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object|Object[]} props See {@link Mapper#createRecord}.\n   * @param {Object} [opts] See {@link Mapper#createRecord}.\n   * @returns {Promise} See {@link Mapper#createRecord}.\n   * @see Mapper#createRecord\n   * @since 3.0.0\n   */\n  'createRecord',\n\n  /**\n   * Wrapper for {@link Mapper#dbg}.\n   *\n   * @method Container#dbg\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {...*} args See {@link Mapper#dbg}.\n   * @see Mapper#dbg\n   * @since 3.0.0\n   */\n  'dbg',\n\n  /**\n   * Wrapper for {@link Mapper#destroy}.\n   *\n   * @example <caption>Destroy a specific blog post</caption>\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.destroy('post', 1234).then(() => {\n   *   // Blog post #1234 has been destroyed\n   * })\n   *\n   * @method Container#destroy\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id See {@link Mapper#destroy}.\n   * @param {Object} [opts] See {@link Mapper#destroy}.\n   * @returns {Promise} See {@link Mapper#destroy}.\n   * @see Mapper#destroy\n   * @since 3.0.0\n   */\n  'destroy',\n\n  /**\n   * Wrapper for {@link Mapper#destroyAll}.\n   *\n   * @example <caption>Destroy all \"draft\" blog posts</caption>\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.destroyAll('post', { status: 'draft' }).then(() => {\n   *   // All \"draft\" blog posts have been destroyed\n   * })\n   *\n   * @method Container#destroyAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} [query] See {@link Mapper#destroyAll}.\n   * @param {Object} [opts] See {@link Mapper#destroyAll}.\n   * @returns {Promise} See {@link Mapper#destroyAll}.\n   * @see Mapper#destroyAll\n   * @since 3.0.0\n   */\n  'destroyAll',\n\n  /**\n   * Wrapper for {@link Mapper#find}.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.find('post', 1).then((post) => {\n   *   console.log(post) // { id: 1, ...}\n   * })\n   *\n   * @method Container#find\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id See {@link Mapper#find}.\n   * @param {Object} [opts] See {@link Mapper#find}.\n   * @returns {Promise} See {@link Mapper#find}.\n   * @see Mapper#find\n   * @since 3.0.0\n   */\n  'find',\n\n  /**\n   * Wrapper for {@link Mapper#createRecord}.\n   *\n   * @example <caption>Find all \"published\" blog posts</caption>\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.findAll('post', { status: 'published' }).then((posts) => {\n   *   console.log(posts) // [{ id: 1, ...}, ...]\n   * })\n   *\n   * @method Container#findAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} [query] See {@link Mapper#findAll}.\n   * @param {Object} [opts] See {@link Mapper#findAll}.\n   * @returns {Promise} See {@link Mapper#findAll}.\n   * @see Mapper#findAll\n   * @since 3.0.0\n   */\n  'findAll',\n\n  /**\n   * Wrapper for {@link Mapper#getSchema}.\n   *\n   * @method Container#getSchema\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @returns {Schema} See {@link Mapper#getSchema}.\n   * @see Mapper#getSchema\n   * @since 3.0.0\n   */\n  'getSchema',\n\n  /**\n   * Wrapper for {@link Mapper#is}.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const store = new Container()\n   * store.defineMapper('post')\n   * const post = store.createRecord()\n   *\n   * console.log(store.is('post', post)) // true\n   * // Equivalent to what's above\n   * console.log(post instanceof store.getMapper('post').recordClass) // true\n   *\n   * @method Container#is\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object|Record} record See {@link Mapper#is}.\n   * @returns {boolean} See {@link Mapper#is}.\n   * @see Mapper#is\n   * @since 3.0.0\n   */\n  'is',\n\n  /**\n   * Wrapper for {@link Mapper#log}.\n   *\n   * @method Container#log\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {...*} args See {@link Mapper#log}.\n   * @see Mapper#log\n   * @since 3.0.0\n   */\n  'log',\n\n  /**\n   * Wrapper for {@link Mapper#sum}.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('purchase_order')\n   *\n   * store.sum('purchase_order', 'amount', { status: 'paid' }).then((amountPaid) => {\n   *   console.log(amountPaid) // e.g. 451125.34\n   * })\n   *\n   * @method Container#sum\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {string} field See {@link Mapper#sum}.\n   * @param {Object} [query] See {@link Mapper#sum}.\n   * @param {Object} [opts] See {@link Mapper#sum}.\n   * @returns {Promise} See {@link Mapper#sum}.\n   * @see Mapper#sum\n   * @since 3.0.0\n   */\n  'sum',\n\n  /**\n   * Wrapper for {@link Mapper#toJSON}.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('person', {\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' },\n   *       id: { type: 'string' }\n   *     }\n   *   }\n   * })\n   * const person = store.createRecord('person', { id: 1, name: 'John', foo: 'bar' })\n   * console.log(store.toJSON('person', person)) // {\"id\":1,\"name\":\"John\",\"foo\":\"bar\"}\n   * console.log(store.toJSON('person', person), { strict: true }) // {\"id\":1,\"name\":\"John\"}\n   *\n   * @method Container#toJSON\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Record|Record[]} records See {@link Mapper#toJSON}.\n   * @param {Object} [opts] See {@link Mapper#toJSON}.\n   * @returns {Object|Object[]} See {@link Mapper#toJSON}.\n   * @see Mapper#toJSON\n   * @since 3.0.0\n   */\n  'toJSON',\n\n  /**\n   * Wrapper for {@link Mapper#update}.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.update('post', 1234, {\n   *   status: 'published',\n   *   published_at: new Date()\n   * }).then((post) => {\n   *   console.log(post) // { id: 1234, status: 'published', ... }\n   * })\n   *\n   * @method Container#update\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id See {@link Mapper#update}.\n   * @param {Object} record See {@link Mapper#update}.\n   * @param {Object} [opts] See {@link Mapper#update}.\n   * @returns {Promise} See {@link Mapper#update}.\n   * @see Mapper#update\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  'update',\n\n  /**\n   * Wrapper for {@link Mapper#updateAll}.\n   *\n   * @example <caption>Turn all of John's blog posts into drafts.</caption>\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * const update = { status: draft: published_at: null }\n   * const query = { userId: 1234 }\n   * store.updateAll('post', update, query).then((posts) => {\n   *   console.log(posts) // [...]\n   * })\n   *\n   * @method Container#updateAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} update See {@link Mapper#updateAll}.\n   * @param {Object} [query] See {@link Mapper#updateAll}.\n   * @param {Object} [opts] See {@link Mapper#updateAll}.\n   * @returns {Promise} See {@link Mapper#updateAll}.\n   * @see Mapper#updateAll\n   * @since 3.0.0\n   */\n  'updateAll',\n\n  /**\n   * Wrapper for {@link Mapper#updateMany}.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import RethinkDBAdapter from 'js-data-rethinkdb'\n   * const store = new Container()\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true })\n   * store.defineMapper('post')\n   *\n   * store.updateMany('post', [\n   *   { id: 1234, status: 'draft' },\n   *   { id: 2468, status: 'published', published_at: new Date() }\n   * ]).then((posts) => {\n   *   console.log(posts) // [...]\n   * })\n   *\n   * @method Container#updateMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records See {@link Mapper#updateMany}.\n   * @param {Object} [opts] See {@link Mapper#updateMany}.\n   * @returns {Promise} See {@link Mapper#updateMany}.\n   * @see Mapper#updateMany\n   * @since 3.0.0\n   */\n  'updateMany',\n\n  /**\n   * Wrapper for {@link Mapper#validate}.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const store = new Container()\n   * store.defineMapper('post', {\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' },\n   *       id: { type: 'string' }\n   *     }\n   *   }\n   * })\n   * let errors = store.validate('post', { name: 'John' })\n   * console.log(errors) // undefined\n   * errors = store.validate('post', { name: 123 })\n   * console.log(errors) // [{ expected: 'one of (string)', actual: 'number', path: 'name' }]\n   *\n   * @method Container#validate\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records See {@link Mapper#validate}.\n   * @param {Object} [opts] See {@link Mapper#validate}.\n   * @returns {Promise} See {@link Mapper#validate}.\n   * @see Mapper#validate\n   * @since 3.0.0\n   */\n  'validate'\n]\n\nconst props = {\n  constructor: function Container (opts) {\n    const self = this\n    utils.classCallCheck(self, Container)\n    Container.__super__.call(self)\n    opts || (opts = {})\n\n    // Apply options provided by the user\n    utils.fillIn(self, opts)\n\n    /**\n     * Defaults options to pass to {@link Container#mapperClass} when creating a\n     * new {@link Mapper}.\n     *\n     * @default {}\n     * @name Container#mapperDefaults\n     * @since 3.0.0\n     * @type {Object}\n     */\n    self.mapperDefaults = self.mapperDefaults || {}\n\n    /**\n     * Constructor function to use in {@link Container#defineMapper} to create a\n     * new mapper.\n     *\n     * {@link Mapper}\n     * @name Container#mapperClass\n     * @since 3.0.0\n     * @type {Constructor}\n     */\n    self.mapperClass = self.mapperClass || Mapper\n\n    // Holds the adapters, shared by all mappers in this container\n    self._adapters = {}\n\n    // The the mappers in this container\n    self._mappers = {}\n  },\n\n  /**\n   * Register a new event listener on this Container.\n   *\n   * Proxy for {@link Component#on}. If an event was emitted by a Mapper in the\n   * Container, then the name of the Mapper will be prepended to the arugments\n   * passed to the listener.\n   *\n   * @method Container#on\n   * @param {string} event Name of event to subsribe to.\n   * @param {Function} listener Listener function to handle the event.\n   * @param {*} [ctx] Optional content in which to invoke the listener.\n   * @since 3.0.0\n   */\n\n  /**\n   * Used to bind to events emitted by mappers in this container.\n   *\n   * @method Container#_onMapperEvent\n   * @param {string} name Name of the mapper that emitted the event.\n   * @param {...*} [args] Args See {@link Mapper#emit}.\n   * @private\n   * @since 3.0.0\n   */\n  _onMapperEvent (name, ...args) {\n    const type = args.shift()\n    this.emit(type, name, ...args)\n  },\n\n  /**\n   * Create a new mapper and register it in this container.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const store = new Container({\n   *   mapperDefaults: { foo: 'bar' }\n   * })\n   * const userMapper = store.defineMapper('user')\n   * userMapper.foo // \"bar\"\n   *\n   * @method Container#defineMapper\n   * @param {string} name Name under which to register the new {@link Mapper}.\n   * {@link Mapper#name} will be set to this value.\n   * @param {Object} [opts] Configuration options. Passed to\n   * {@link Container#mapperClass} when creating the new {@link Mapper}.\n   * @returns {Mapper}\n   * @since 3.0.0\n   */\n  defineMapper (name, opts) {\n    const self = this\n\n    // For backwards compatibility with defineResource\n    if (utils.isObject(name)) {\n      opts = name\n      name = opts.name\n    }\n    if (!utils.isString(name)) {\n      throw utils.err(`${DOMAIN}#defineMapper`, 'name')(400, 'string', name)\n    }\n\n    // Default values for arguments\n    opts || (opts = {})\n    // Set Mapper#name\n    opts.name = name\n    opts.relations || (opts.relations = {})\n\n    // Check if the user is overriding the datastore's default mapperClass\n    const mapperClass = opts.mapperClass || self.mapperClass\n    delete opts.mapperClass\n\n    // Apply the datastore's defaults to the options going into the mapper\n    utils.fillIn(opts, self.mapperDefaults)\n\n    // Instantiate a mapper\n    const mapper = self._mappers[name] = new mapperClass(opts) // eslint-disable-line\n    mapper.relations || (mapper.relations = {})\n    // Make sure the mapper's name is set\n    mapper.name = name\n    // All mappers in this datastore will share adapters\n    mapper._adapters = self.getAdapters()\n\n    mapper.datastore = self\n\n    mapper.on('all', function (...args) {\n      self._onMapperEvent(name, ...args)\n    })\n\n    // Setup the mapper's relations, including generating Mapper#relationList\n    // and Mapper#relationFields\n    utils.forOwn(mapper.relations, function (group, type) {\n      utils.forOwn(group, function (relations, _name) {\n        if (utils.isObject(relations)) {\n          relations = [relations]\n        }\n        relations.forEach(function (def) {\n          def.getRelation = function () {\n            return self.getMapper(_name)\n          }\n          const relatedMapper = self._mappers[_name] || _name\n          if (type === belongsToType) {\n            mapper.belongsTo(relatedMapper, def)\n          } else if (type === hasOneType) {\n            mapper.hasOne(relatedMapper, def)\n          } else if (type === hasManyType) {\n            mapper.hasMany(relatedMapper, def)\n          }\n        })\n      })\n    })\n\n    return mapper\n  },\n\n  defineResource (name, opts) {\n    return this.defineMapper(name, opts)\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @method Container#getAdapter\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @returns {Adapter} The adapter.\n   * @since 3.0.0\n   */\n  getAdapter (name) {\n    const self = this\n    const adapter = self.getAdapterName(name)\n    if (!adapter) {\n      throw utils.err(`${DOMAIN}#getAdapter`, 'name')(400, 'string', name)\n    }\n    return self.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @method Container#getAdapterName\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @returns {string} The name of the adapter.\n   * @since 3.0.0\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || this.mapperDefaults.defaultAdapter\n  },\n\n  /**\n   * Return the registered adapters of this container.\n   *\n   * @method Container#getAdapters\n   * @returns {Adapter}\n   * @since 3.0.0\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  /**\n   * Return the mapper registered under the specified name.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const container = new Container()\n   * const userMapper = container.defineMapper('user')\n   * userMapper === container.getMapper('user') // true\n   *\n   * @method Container#getMapper\n   * @param {string} name {@link Mapper#name}.\n   * @returns {Mapper}\n   * @since 3.0.0\n   */\n  getMapper (name) {\n    const mapper = this._mappers[name]\n    if (!mapper) {\n      throw utils.err(`${DOMAIN}#getMapper`, name)(404, 'mapper')\n    }\n    return mapper\n  },\n\n  /**\n   * Register an adapter on this container under the given name. Adapters\n   * registered on a container are shared by all mappers in the container.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import HttpAdapter from 'js-data-http'\n   * const container = new Container()\n   * container.registerAdapter('http', new HttpAdapter, { default: true })\n   *\n   * @method Container#registerAdapter\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for all Mappers in this container.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  registerAdapter (name, adapter, opts) {\n    const self = this\n    opts || (opts = {})\n    self.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      self.mapperDefaults.defaultAdapter = name\n      utils.forOwn(self._mappers, function (mapper) {\n        mapper.defaultAdapter = name\n      })\n    }\n  }\n}\n\ntoProxy.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getMapper(name)[method](...args)\n  }\n})\n\n/**\n * ```javascript\n * import {Container} from 'js-data'\n * ```\n *\n * The `Container` class is a place to store {@link Mapper} instances.\n *\n * Without a container, you need to manage mappers yourself, including resolving\n * circular dependencies among relations. All mappers in a container share the\n * same adapters, so you don't have to add each adapter to all of your mappers.\n *\n * @example <caption>Without Container</caption>\n * import {Mapper} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const adapter = new HttpAdapter()\n * const userMapper = new Mapper({ name: 'user' })\n * userMapper.registerAdapter('http', adapter, { default: true })\n * const commentMapper = new Mapper({ name: 'comment' })\n * commentMapper.registerAdapter('http', adapter, { default: true })\n *\n * // This might be more difficult if the mappers were defined in different\n * // modules.\n * userMapper.hasMany(commentMapper, {\n *   localField: 'comments',\n *   foreignKey: 'userId'\n * })\n * commentMapper.belongsTo(userMapper, {\n *   localField: 'user',\n *   foreignKey: 'userId'\n * })\n *\n * @example <caption>With Container</caption>\n * import {Container} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const container = new Container()\n * // All mappers in container share adapters\n * container.registerAdapter('http', new HttpAdapter(), { default: true })\n *\n * // These could be defined in separate modules without a problem.\n * container.defineMapper('user', {\n *   relations: {\n *     hasMany: {\n *       comment: {\n *         localField: 'comments',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n * container.defineMapper('comment', {\n *   relations: {\n *     belongsTo: {\n *       user: {\n *         localField: 'user',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n *\n * @class Container\n * @extends Component\n * @param {Object} [opts] Configuration options.\n * @param {Function} [opts.mapperClass] Constructor function to use in\n * {@link Container#defineMapper} to create a new mapper.\n * @param {Object} [opts.mapperDefaults] Defaults options to pass to\n * {@link Container#mapperClass} when creating a new mapper.\n * @returns {Container}\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#container\",\"Components of JSData: Container\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/jsdata-and-the-browser\",\"Notes on using JSData in the Browser\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/jsdata-and-nodejs\",\"Notes on using JSData in Node.js\"]\n */\nexport default Component.extend(props)\n\n/**\n * Create a subclass of this Container.\n *\n * @example <caption>Extend the class in a cross-browser manner.</caption>\n * import {Container} from 'js-data'\n * const CustomContainerClass = Container.extend({\n *   foo () { return 'bar' }\n * })\n * const customContainer = new CustomContainerClass()\n * console.log(customContainer.foo()) // \"bar\"\n *\n * @example <caption>Extend the class using ES2015 class syntax.</caption>\n * class CustomContainerClass extends Container {\n *   foo () { return 'bar' }\n * }\n * const customContainer = new CustomContainerClass()\n * console.log(customContainer.foo()) // \"bar\"\n *\n * @method Container.extend\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Container.\n * @since 3.0.0\n */\n","import utils from './utils'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Collection from './Collection'\n\nconst DOMAIN = 'LinkedCollection'\n\n/**\n * TODO\n *\n * ```javascript\n * import {LinkedCollection} from 'js-data'\n * ```\n *\n * @class LinkedCollection\n * @extends Collection\n * @param {Array} [records] Initial set of records to insert into the\n * collection. See {@link Collection}.\n * @param {Object} [opts] Configuration options. See {@link Collection}.\n * @returns {Mapper}\n */\nexport default Collection.extend({\n  constructor: function LinkedCollection (records, opts) {\n    const self = this\n    utils.classCallCheck(self, LinkedCollection)\n    LinkedCollection.__super__.call(self, records, opts)\n\n    // Make sure this collection has somewhere to store \"added\" timestamps\n    Object.defineProperty(self, '_added', {\n      value: {}\n    })\n\n    // Make sure this collection has a reference to a datastore\n    if (!self.datastore) {\n      throw utils.err(`new ${DOMAIN}`, 'opts.datastore')(400, 'DataStore', self.datastore)\n    }\n    return self\n  },\n\n  _onRecordEvent (...args) {\n    const self = this\n    utils.getSuper(self).prototype._onRecordEvent.apply(self, args)\n    const event = args[0]\n    // This is a very brute force method\n    // Lots of room for optimization\n    if (utils.isString(event) && event.indexOf('change') === 0) {\n      self.updateIndexes(args[1])\n    }\n  },\n\n  add (records, opts) {\n    const self = this\n    const datastore = self.datastore\n    const mapper = self.mapper\n    const relationList = mapper.relationList\n    const timestamp = new Date().getTime()\n    const usesRecordClass = !!mapper.recordClass\n    const idAttribute = mapper.idAttribute\n    let singular\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      singular = true\n      records = [records]\n    }\n\n    records = utils.getSuper(self).prototype.add.call(self, records, opts)\n\n    if (relationList.length && records.length) {\n      // Check the currently visited record for relations that need to be\n      // inserted into their respective collections.\n      mapper.relationList.forEach(function (def) {\n        const relationName = def.relation\n        // A reference to the Mapper that this Mapper is related to\n        const relatedMapper = datastore.getMapper(relationName)\n        // The field used by the related Mapper as the primary key\n        const relationIdAttribute = relatedMapper.idAttribute\n        // Grab the foreign key in this relationship, if there is one\n        const foreignKey = def.foreignKey\n        // A lot of this is an optimization for being able to insert a lot of\n        // data as quickly as possible\n        const relatedCollection = datastore.getCollection(relationName)\n        const type = def.type\n        const isHasMany = type === hasManyType\n        const shouldAdd = utils.isUndefined(def.add) ? true : !!def.add\n        let relatedData\n\n        records.forEach(function (record) {\n          // Grab a reference to the related data attached or linked to the\n          // currently visited record\n          relatedData = def.getLocalField(record)\n          const id = utils.get(record, idAttribute)\n\n          if (utils.isFunction(def.add)) {\n            relatedData = def.add(datastore, def, record)\n          } else if (relatedData) {\n            // Otherwise, if there is something to be added, add it\n            if (isHasMany) {\n              // Handle inserting hasMany relations\n              relatedData = relatedData.map(function (toInsertItem) {\n                // Check that this item isn't the same item that is already in the\n                // store\n                if (toInsertItem !== relatedCollection.get(relatedCollection.recordId(toInsertItem))) {\n                  // Make sure this item has its foreignKey\n                  if (foreignKey) {\n                    // TODO: slow, could be optimized? But user loses hook\n                    def.setForeignKey(record, toInsertItem)\n                  }\n                  // Finally add this related item\n                  if (shouldAdd) {\n                    toInsertItem = relatedCollection.add(toInsertItem)\n                  }\n                }\n                return toInsertItem\n              })\n            } else {\n              const relatedDataId = utils.get(relatedData, relationIdAttribute)\n              // Handle inserting belongsTo and hasOne relations\n              if (relatedData !== relatedCollection.get(relatedDataId)) {\n                // Make sure foreignKey field is set\n                def.setForeignKey(record, relatedData)\n                // Finally insert this related item\n                if (shouldAdd) {\n                  relatedData = relatedCollection.add(relatedData)\n                }\n              }\n            }\n          }\n\n          if (!relatedData || (utils.isArray(relatedData) && !relatedData.length)) {\n            if (type === belongsToType) {\n              const relatedId = utils.get(record, foreignKey)\n              if (!utils.isUndefined(relatedId)) {\n                relatedData = relatedCollection.get(relatedId)\n              }\n            } else if (type === hasOneType) {\n              const _records = relatedCollection.filter({\n                [foreignKey]: id\n              })\n              relatedData = _records.length ? _records[0] : undefined\n            } else if (type === hasManyType) {\n              if (foreignKey) {\n                const _records = relatedCollection.filter({\n                  [foreignKey]: id\n                })\n                relatedData = _records.length ? _records : undefined\n              } else if (def.localKeys && utils.get(record, def.localKeys)) {\n                const _records = relatedCollection.filter({\n                  where: {\n                    [relationIdAttribute]: {\n                      'in': utils.get(record, def.localKeys)\n                    }\n                  }\n                })\n                relatedData = _records.length ? _records : undefined\n              } else if (def.foreignKeys) {\n                const _records = relatedCollection.filter({\n                  where: {\n                    [def.foreignKeys]: {\n                      'contains': id\n                    }\n                  }\n                })\n                relatedData = _records.length ? _records : undefined\n              }\n            }\n          }\n          if (relatedData) {\n            def.setLocalField(record, relatedData)\n          } else {\n          }\n        })\n      })\n    }\n\n    records.forEach(function (record) {\n      // Track when this record was added\n      self._added[self.recordId(record)] = timestamp\n\n      if (usesRecordClass) {\n        record._set('$', timestamp)\n      }\n    })\n\n    return singular ? records[0] : records\n  },\n\n  remove (id, opts) {\n    const self = this\n    const mapper = self.mapper\n    const record = utils.getSuper(self).prototype.remove.call(self, id, opts)\n    if (record) {\n      delete self._added[id]\n      if (mapper.recordClass) {\n        record._set('$') // unset\n      }\n    }\n    return record\n  },\n\n  removeAll (query, opts) {\n    const self = this\n    const mapper = self.mapper\n    const records = utils.getSuper(self).prototype.removeAll.call(self, query, opts)\n    records.forEach(function (record) {\n      delete self._added[self.recordId(record)]\n      if (mapper.recordClass) {\n        record._set('$') // unset\n      }\n    })\n    return records\n  }\n})\n","import utils from './utils'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Container from './Container'\nimport LinkedCollection from './LinkedCollection'\n\nconst DOMAIN = 'DataStore'\n\nconst safeSet = function (record, field, value) {\n  if (record && record._set) {\n    record._set(field, value)\n  } else {\n    utils.set(record, field, value)\n  }\n}\n\nconst cachedFn = function (name, hashOrId, opts) {\n  const self = this\n  const cached = self._completedQueries[name][hashOrId]\n  if (utils.isFunction(cached)) {\n    return cached(name, hashOrId, opts)\n  }\n  return cached\n}\n\nconst props = {\n  constructor: function DataStore (opts) {\n    const self = this\n    utils.classCallCheck(self, DataStore)\n    DataStore.__super__.call(self, opts)\n\n    self.collectionClass = self.collectionClass || LinkedCollection\n    self._collections = {}\n    self._pendingQueries = {}\n    self._completedQueries = {}\n    return self\n  },\n\n  _callSuper (method, ...args) {\n    return this.constructor.__super__.prototype[method].apply(this, args)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#_end\n   * @method\n   * @private\n   * @param {string} name Name of the {@link LinkedCollection} to which to\n   * add the data.\n   * @param {Object} data TODO.\n   * @param {Object} [opts] Configuration options.\n   * @returns {(Object|Array)} Result.\n   */\n  _end (name, result, opts) {\n    let _data = opts.raw ? result.data : result\n    if (_data && utils.isFunction(this.addToCache)) {\n      _data = this.addToCache(name, _data, opts)\n      if (opts.raw) {\n        result.data = _data\n      } else {\n        result = _data\n      }\n    }\n    return result\n  },\n\n  /**\n   * Register a new event listener on this DataStore.\n   *\n   * Proxy for {@link Container#on}. If an event was emitted by a Mapper or\n   * Collection in the DataStore, then the name of the Mapper or Collection will\n   * be prepended to the arugments passed to the provided event handler.\n   *\n   * @name DataStore#on\n   * @method\n   * @param {string} event Name of event to subsribe to.\n   * @param {Function} listener Listener function to handle the event.\n   * @param {*} [ctx] Optional content in which to invoke the listener.\n   */\n\n  /**\n   * Used to bind to events emitted by collections in this store.\n   *\n   * @name DataStore#_onCollectionEvent\n   * @method\n   * @private\n   * @param {string} name Name of the collection that emitted the event.\n   * @param {...*} [args] Args passed to {@link Collection#emit}.\n   */\n  _onCollectionEvent (name, ...args) {\n    const type = args.shift()\n    this.emit(type, name, ...args)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#addToCache\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {*} data - Data from which data should be selected for add.\n   * @param {Object} [opts] - Configuration options.\n   */\n  addToCache (name, data, opts) {\n    return this.getCollection(name).add(data, opts)\n  },\n\n  /**\n   * Retrieve a cached `find` result, if any.\n   *\n   * @name DataStore#cachedFind\n   * @method\n   * @param {string} name The `name` argument passed to {@link DataStore#find}.\n   * @param {(string|number)} id The `id` argument passed to {@link DataStore#find}.\n   * @param {Object} opts The `opts` argument passed to {@link DataStore#find}.\n   */\n  cachedFind: cachedFn,\n\n  /**\n   * Retrieve a cached `findAll` result, if any.\n   *\n   * @name DataStore#cachedFindAll\n   * @method\n   * @param {string} name The `name` argument passed to {@link DataStore#findAll}.\n   * @param {string} hash The result of calling {@link DataStore#hashQuery} on\n   * the `query` argument passed to {@link DataStore#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link DataStore#findAll}.\n   */\n  cachedFindAll: cachedFn,\n\n  /**\n   * Cache a `find` result. The default implementation does the following:\n   *\n   * ```\n   * // Find and return the record from the data store\n   * return this.get(name, id)\n   * ```\n   *\n   * Override this method to customize.\n   *\n   * @name DataStore#cacheFind\n   * @method\n   * @param {string} name The `name` argument passed to {@link DataStore#find}.\n   * @param {*} data The result to cache.\n   * @param {(string|number)} id The `id` argument passed to {@link DataStore#find}.\n   * @param {Object} opts The `opts` argument passed to {@link DataStore#find}.\n   */\n  cacheFind (name, data, id, opts) {\n    const self = this\n    self._completedQueries[name][id] = function (name, id, opts) {\n      return self.get(name, id)\n    }\n  },\n\n  /**\n   * Cache a `findAll` result. The default implementation does the following:\n   *\n   * ```\n   * // Find and return the records from the data store\n   * return this.filter(name, utils.fromJson(hash))\n   * ```\n   *\n   * Override this method to customize.\n   *\n   * @name DataStore#cacheFindAll\n   * @method\n   * @param {string} name The `name` argument passed to {@link DataStore#findAll}.\n   * @param {*} data The result to cache.\n   * @param {string} hash The result of calling {@link DataStore#hashQuery} on\n   * the `query` argument passed to {@link DataStore#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link DataStore#findAll}.\n   */\n  cacheFindAll (name, data, hash, opts) {\n    const self = this\n    self._completedQueries[name][hash] = function (name, hash, opts) {\n      return self.filter(name, utils.fromJson(hash))\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#create\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} record Passed to {@link Mapper#create}.\n   * @param {Object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @returns {Promise}\n   */\n  create (name, record, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('create', name, record, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#createMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Array} records Passed to {@link Mapper#createMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @returns {Promise}\n   */\n  createMany (name, records, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('createMany', name, records, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  defineMapper (name, opts) {\n    const self = this\n    const mapper = utils.getSuper(self).prototype.defineMapper.call(self, name, opts)\n    self._pendingQueries[name] = {}\n    self._completedQueries[name] = {}\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n\n    // The datastore uses a subclass of Collection that is \"datastore-aware\"\n    const collection = self._collections[name] = new self.collectionClass(null, { // eslint-disable-line\n      // Make sure the collection has somewhere to store \"added\" timestamps\n      _added: {},\n      // Give the collection a reference to this datastore\n      datastore: self,\n      // The mapper tied to the collection\n      mapper\n    })\n\n    const schema = mapper.schema || {}\n    const properties = schema.properties || {}\n    // TODO: Make it possible index nested properties?\n    utils.forOwn(properties, function (opts, prop) {\n      if (opts.indexed) {\n        collection.createIndex(prop)\n      }\n    })\n\n    // Create a secondary index on the \"added\" timestamps of records in the\n    // collection\n    collection.createIndex('addedTimestamps', ['$'], {\n      fieldGetter (obj) {\n        return collection._added[collection.recordId(obj)]\n      }\n    })\n\n    collection.on('all', function (...args) {\n      self._onCollectionEvent(name, ...args)\n    })\n\n    const idAttribute = mapper.idAttribute\n\n    mapper.relationList.forEach(function (def) {\n      const relation = def.relation\n      const localField = def.localField\n      const path = `links.${localField}`\n      const foreignKey = def.foreignKey\n      const type = def.type\n      const updateOpts = { index: foreignKey }\n      let descriptor\n\n      const getter = function () { return this._get(path) }\n\n      if (type === belongsToType) {\n        if (!collection.indexes[foreignKey]) {\n          collection.createIndex(foreignKey)\n        }\n\n        descriptor = {\n          get: getter,\n          set (record) {\n            const _self = this\n            const current = this._get(path)\n            if (record === current) {\n              return current\n            }\n            const id = utils.get(_self, idAttribute)\n            const inverseDef = def.getInverse(mapper)\n\n            if (record) {\n              const relatedIdAttribute = def.getRelation().idAttribute\n              const relatedId = utils.get(record, relatedIdAttribute)\n\n              // Prefer store record\n              if (!utils.isUndefined(relatedId)) {\n                record = self.get(relation, relatedId) || record\n              }\n\n              // Set locals\n              _self._set(path, record)\n              safeSet(_self, foreignKey, relatedId)\n              collection.updateIndex(_self, updateOpts)\n\n              // Update (set) inverse relation\n              if (inverseDef.type === hasOneType) {\n                utils.set(record, inverseDef.localField, _self)\n              } else if (inverseDef.type === hasManyType) {\n                const children = utils.get(record, inverseDef.localField)\n                utils.noDupeAdd(children, _self, function (_record) {\n                  return id === utils.get(_record, idAttribute)\n                })\n              }\n            } else {\n              // Unset locals\n              _self._set(path, undefined)\n              safeSet(_self, foreignKey, undefined)\n              collection.updateIndex(_self, updateOpts)\n            }\n            if (current) {\n              if (inverseDef.type === hasOneType) {\n                utils.set(current, inverseDef.localField, undefined)\n              } else if (inverseDef.type === hasManyType) {\n                const children = utils.get(current, inverseDef.localField)\n                utils.remove(children, function (_record) {\n                  return id === utils.get(_record, idAttribute)\n                })\n              }\n            }\n            return record\n          }\n        }\n\n        if (mapper.recordClass.prototype.hasOwnProperty(foreignKey)) {\n          const superClass = mapper.recordClass\n          mapper.recordClass = superClass.extend({\n            constructor: (function () {\n              var subClass = function Record (props, opts) {\n                utils.classCallCheck(this, subClass)\n                superClass.call(this, props, opts)\n              }\n              return subClass\n            })()\n          })\n        }\n        Object.defineProperty(mapper.recordClass.prototype, foreignKey, {\n          enumerable: true,\n          get () { return this._get(foreignKey) },\n          set (value) {\n            const _self = this\n            if (utils.isUndefined(value)) {\n              // Unset locals\n              utils.set(_self, localField, undefined)\n            } else {\n              safeSet(_self, foreignKey, value)\n              let storeRecord = self.get(relation, value)\n              if (storeRecord) {\n                utils.set(_self, localField, storeRecord)\n              }\n            }\n          }\n        })\n      } else if (type === hasManyType) {\n        const localKeys = def.localKeys\n        const foreignKeys = def.foreignKeys\n\n        // TODO: Handle case when belongsTo relation isn't ever defined\n        if (self._collections[relation] && foreignKey && !self.getCollection(relation).indexes[foreignKey]) {\n          self.getCollection(relation).createIndex(foreignKey)\n        }\n\n        descriptor = {\n          get () {\n            const _self = this\n            let current = getter.call(_self)\n            if (!current) {\n              _self._set(path, [])\n            }\n            return getter.call(_self)\n          },\n          set (records) {\n            const _self = this\n            records || (records = [])\n            if (records && !utils.isArray(records)) {\n              records = [records]\n            }\n            const id = utils.get(_self, idAttribute)\n            const relatedIdAttribute = def.getRelation().idAttribute\n            const inverseDef = def.getInverse(mapper)\n            const inverseLocalField = inverseDef.localField\n            let linked = _self._get(path)\n            if (!linked) {\n              linked = []\n            }\n\n            const current = linked\n            linked = []\n            const toLink = {}\n            records.forEach(function (record) {\n              const relatedId = utils.get(record, relatedIdAttribute)\n              if (!utils.isUndefined(relatedId)) {\n                // Prefer store record\n                record = self.get(relation, relatedId) || record\n                toLink[relatedId] = record\n              }\n              linked.push(record)\n            })\n            if (foreignKey) {\n              records.forEach(function (record) {\n                // Update (set) inverse relation\n                safeSet(record, foreignKey, id)\n                self.getCollection(relation).updateIndex(record, updateOpts)\n                utils.set(record, inverseLocalField, _self)\n              })\n              current.forEach(function (record) {\n                const relatedId = utils.get(record, relatedIdAttribute)\n                if (!utils.isUndefined(relatedId) && !toLink.hasOwnProperty(relatedId)) {\n                  // Update (unset) inverse relation\n                  safeSet(record, foreignKey, undefined)\n                  self.getCollection(relation).updateIndex(record, updateOpts)\n                  utils.set(record, inverseLocalField, undefined)\n                }\n              })\n            } else if (localKeys) {\n              const _localKeys = []\n              records.forEach(function (record) {\n                // Update (set) inverse relation\n                utils.set(record, inverseLocalField, _self)\n                _localKeys.push(utils.get(record, relatedIdAttribute))\n              })\n              // Update locals\n              utils.set(_self, localKeys, _localKeys)\n              // Update (unset) inverse relation\n              current.forEach(function (record) {\n                const relatedId = utils.get(record, relatedIdAttribute)\n                if (!utils.isUndefined(relatedId) && !toLink.hasOwnProperty(relatedId)) {\n                  // Update inverse relation\n                  utils.set(record, inverseLocalField, undefined)\n                }\n              })\n            } else if (foreignKeys) {\n              // Update (unset) inverse relation\n              current.forEach(function (record) {\n                const _localKeys = utils.get(record, foreignKeys) || []\n                utils.remove(_localKeys, function (_key) {\n                  return id === _key\n                })\n                const _localField = utils.get(record, inverseLocalField) || []\n                utils.remove(_localField, function (_record) {\n                  return id === utils.get(_record, idAttribute)\n                })\n              })\n              // Update (set) inverse relation\n              records.forEach(function (record) {\n                const _localKeys = utils.get(record, foreignKeys) || []\n                utils.noDupeAdd(_localKeys, id, function (_key) {\n                  return id === _key\n                })\n                const _localField = utils.get(record, inverseLocalField) || []\n                utils.noDupeAdd(_localField, _self, function (_record) {\n                  return id === utils.get(_record, idAttribute)\n                })\n              })\n            }\n\n            _self._set(path, linked)\n            return linked\n          }\n        }\n      } else if (type === hasOneType) {\n        // TODO: Handle case when belongsTo relation isn't ever defined\n        if (self._collections[relation] && foreignKey && !self.getCollection(relation).indexes[foreignKey]) {\n          self.getCollection(relation).createIndex(foreignKey)\n        }\n        descriptor = {\n          get: getter,\n          set (record) {\n            const _self = this\n            const current = this._get(path)\n            if (record === current) {\n              return current\n            }\n            const relatedId = utils.get(record, def.getRelation().idAttribute)\n            const inverseLocalField = def.getInverse(mapper).localField\n            // Update (unset) inverse relation\n            if (current) {\n              safeSet(current, foreignKey, undefined)\n              self.getCollection(relation).updateIndex(current, updateOpts)\n              utils.set(current, inverseLocalField, undefined)\n            }\n            if (record) {\n              // Prefer store record\n              if (!utils.isUndefined(relatedId)) {\n                record = self.get(relation, relatedId) || record\n              }\n\n              // Set locals\n              _self._set(path, record)\n\n              // Update (set) inverse relation\n              safeSet(record, foreignKey, utils.get(_self, idAttribute))\n              self.getCollection(relation).updateIndex(record, updateOpts)\n              utils.set(record, inverseLocalField, _self)\n            } else {\n              // Set locals\n              _self._set(path, undefined)\n            }\n            return record\n          }\n        }\n      }\n\n      if (descriptor) {\n        descriptor.enumerable = utils.isUndefined(def.enumerable) ? false : def.enumerable\n        if (def.get) {\n          let origGet = descriptor.get\n          descriptor.get = function () {\n            return def.get(def, this, (...args) => origGet.apply(this, args))\n          }\n        }\n        if (def.set) {\n          let origSet = descriptor.set\n          descriptor.set = function (related) {\n            return def.set(def, this, related, (value) => origSet.call(this, value === undefined ? related : value))\n          }\n        }\n        Object.defineProperty(mapper.recordClass.prototype, localField, descriptor)\n      }\n    })\n\n    return mapper\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#destroy\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @returns {Promise}\n   */\n  destroy (name, id, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('destroy', name, id, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.getCollection(name).remove(id, opts)\n      } else {\n        data = self.getCollection(name).remove(id, opts)\n      }\n      delete self._pendingQueries[name][id]\n      delete self._completedQueries[name][id]\n      return data\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#destroyAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @returns {Promise}\n   */\n  destroyAll (name, query, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('destroyAll', name, query, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.getCollection(name).removeAll(query, opts)\n      } else {\n        data = self.getCollection(name).removeAll(query, opts)\n      }\n      const hash = self.hashQuery(name, query, opts)\n      delete self._pendingQueries[name][hash]\n      delete self._completedQueries[name][hash]\n      return data\n    })\n  },\n\n  eject (id, opts) {\n    return this.remove(id, opts)\n  },\n\n  ejectAll (query, opts) {\n    return this.removeAll(query, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#find\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#find}.\n   * @param {Object} [opts] - Passed to {@link Mapper#find}.\n   * @returns {Promise}\n   */\n  find (name, id, opts) {\n    const self = this\n    opts || (opts = {})\n    const pendingQuery = self._pendingQueries[name][id]\n\n    utils.fillIn(opts, self.getMapper(name))\n\n    if (pendingQuery) {\n      return pendingQuery\n    }\n    const item = self.cachedFind(name, id, opts)\n    let promise\n\n    if (opts.force || !item) {\n      promise = self._pendingQueries[name][id] = self._callSuper('find', name, id, opts).then(function (data) {\n        delete self._pendingQueries[name][id]\n        const result = self._end(name, data, opts)\n        self.cacheFind(name, result, id, opts)\n        return result\n      }, function (err) {\n        delete self._pendingQueries[name][id]\n        return utils.reject(err)\n      })\n    } else {\n      promise = utils.resolve(item)\n    }\n    return promise\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#findAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\n   * @returns {Promise}\n   */\n  findAll (name, query, opts) {\n    const self = this\n    opts || (opts = {})\n    const hash = self.hashQuery(name, query, opts)\n    const pendingQuery = self._pendingQueries[name][hash]\n\n    utils.fillIn(opts, self.getMapper(name))\n\n    if (pendingQuery) {\n      return pendingQuery\n    }\n\n    const items = self.cachedFindAll(name, hash, opts)\n    let promise\n\n    if (opts.force || !items) {\n      promise = self._pendingQueries[name][hash] = self._callSuper('findAll', name, query, opts).then(function (data) {\n        delete self._pendingQueries[name][hash]\n        const result = self._end(name, data, opts)\n        self.cacheFindAll(name, result, hash, opts)\n        return result\n      }, function (err) {\n        delete self._pendingQueries[name][hash]\n        return utils.reject(err)\n      })\n    } else {\n      promise = utils.resolve(items)\n    }\n    return promise\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#getCollection\n   * @method\n   * @param {string} name Name of the {@link LinkedCollection} to retrieve.\n   * @returns {LinkedCollection}\n   */\n  getCollection (name) {\n    const collection = this._collections[name]\n    if (!collection) {\n      throw utils.err(`${DOMAIN}#getCollection`, name)(404, 'collection')\n    }\n    return collection\n  },\n\n  hashQuery (name, query, opts) {\n    return utils.toJson(query)\n  },\n\n  inject (records, opts) {\n    return this.add(records, opts)\n  },\n\n  remove (name, id, opts) {\n    const self = this\n    const record = self.getCollection(name).remove(id, opts)\n    if (record) {\n      self.removeRelated(name, [record], opts)\n    }\n    return record\n  },\n\n  removeAll (name, query, opts) {\n    const self = this\n    const records = self.getCollection(name).removeAll(query, opts)\n    if (records.length) {\n      self.removeRelated(name, records, opts)\n    }\n    return records\n  },\n\n  removeRelated (name, records, opts) {\n    const self = this\n    utils.forEachRelation(self.getMapper(name), opts, function (def, optsCopy) {\n      records.forEach(function (record) {\n        let relatedData\n        let query\n        if (def.foreignKey && (def.type === hasOneType || def.type === hasManyType)) {\n          query = { [def.foreignKey]: def.getForeignKey(record) }\n        } else if (def.type === hasManyType && def.localKeys) {\n          query = {\n            where: {\n              [def.getRelation().idAttribute]: {\n                'in': utils.get(record, def.localKeys)\n              }\n            }\n          }\n        } else if (def.type === hasManyType && def.foreignKeys) {\n          query = {\n            where: {\n              [def.foreignKeys]: {\n                'contains': def.getForeignKey(record)\n              }\n            }\n          }\n        } else if (def.type === belongsToType) {\n          relatedData = self.remove(def.relation, def.getForeignKey(record), optsCopy)\n        }\n        if (query) {\n          relatedData = self.removeAll(def.relation, query, optsCopy)\n        }\n        if (relatedData) {\n          if (utils.isArray(relatedData) && !relatedData.length) {\n            return\n          }\n          if (def.type === hasOneType) {\n            relatedData = relatedData[0]\n          }\n          def.setLocalField(record, relatedData)\n        }\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#update\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#update}.\n   * @param {Object} record - Passed to {@link Mapper#update}.\n   * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @returns {Promise}\n   */\n  update (name, id, record, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('update', name, id, record, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#updateAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} props - Passed to {@link Mapper#updateAll}.\n   * @param {Object} [query] - Passed to {@link Mapper#updateAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#updateAll}. See\n   * {@link Mapper#updateAll} for more configuration options.\n   * @returns {Promise}\n   */\n  updateAll (name, props, query, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('updateAll', name, query, props, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#updateMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @returns {Promise}\n   */\n  updateMany (name, records, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('updateMany', name, records, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  }\n}\n\nconst toProxy = [\n  'add',\n  'between',\n  'createIndex',\n  'filter',\n  'get',\n  'getAll',\n  'query',\n  'toJson'\n]\n\ntoProxy.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getCollection(name)[method](...args)\n  }\n})\n\n/**\n * The `DataStore` class is an extension of {@link Container}. Not only does\n * `DataStore` manage mappers, but also collections. `DataStore` implements the\n * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\n * {@link Mapper#create}. If you use the asynchronous `DataStore` methods\n * instead of calling them directly on the mappers, then the results of the\n * method calls will be inserted into the store's collections. You can think of\n * a `DataStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\n * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\n * (the Mappers).\n *\n * ```javascript\n * import {DataStore} from 'js-data'\n * ```\n *\n * @example\n * import {DataStore} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const store = new DataStore()\n * const UserMapper = store.defineMapper('user')\n *\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n * UserMapper.find(1).then((user) => {\n *   // retrieved a \"user\" record via the http adapter, but that's it\n *\n *   // Call \"find\" on \"store\" targeting \"user\" (Stateful DataStore)\n *   return store.find('user', 1)\n * }).then((user) => {\n *   // not only was a \"user\" record retrieved, but it was added to the\n *   // store's \"user\" collection\n *   const cachedUser = store.getCollection('user').get(1)\n *   console.log(user === cachedUser) // true\n * })\n *\n * @class DataStore\n * @extends Container\n * @param {Object} [opts] Configuration options. See {@link Container}.\n * @returns {DataStore}\n * @see Container\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#datastore\",\"Components of JSData: DataStore\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/working-with-the-datastore\",\"Working with the DataStore\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/jsdata-and-the-browser\",\"Notes on using JSData in the Browser\"]\n */\nexport default Container.extend(props)\n\n/**\n * Create a subclass of this DataStore.\n *\n * @example <caption>Extend the class in a cross-browser manner.</caption>\n * import {DataStore} from 'js-data'\n * const CustomDataStoreClass = DataStore.extend({\n *   foo () { return 'bar' }\n * })\n * const customDataStore = new CustomDataStoreClass()\n * console.log(customDataStore.foo()) // \"bar\"\n *\n * @example <caption>Extend the class using ES2015 class syntax.</caption>\n * class CustomDataStoreClass extends DataStore {\n *   foo () { return 'bar' }\n * }\n * const customDataStore = new CustomDataStoreClass()\n * console.log(customDataStore.foo()) // \"bar\"\n *\n * @method DataStore.extend\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this DataStore.\n * @since 3.0.0\n */\n","/**\n * Registered as `js-data` in NPM and Bower.\n *\n * Also available from CDN.JS and JSDelivr.\n *\n * @module js-data\n *\n * @example <caption>Install from NPM</caption>\n * npm i --save js-data@beta\n * @example <caption>Install from Bower</caption>\n * bower i --save js-data@3.0.0-beta.1\n * @example <caption>Install from CDN.JS</caption>\n * <script src=\"https://cdnjs.cloudflare.com/ajax/libs/js-data/3.0.0-beta.1/js-data.min.js\"></script>\n * @example <caption>Install from JSDelivr</caption>\n * <script src=\"https://cdn.jsdelivr.net/js-data/3.0.0-beta.1/js-data.min.js\"></script>\n * @example <caption>Load into your app via script tag</caption>\n * <script src=\"/path/to/js-data.min.js\"></script>\n * <script>\n *   console.log(JSData.version.full); // \"3.0.0-beta.1\"\n * </script>\n * @example <caption>Load into your app via CommonJS</caption>\n * var JSData = require('js-data');\n * @example <caption>Load into your app via ES2015 Modules</caption>\n * import * as JSData from 'js-data';\n * @example <caption>Load into your app via AMD</caption>\n * define('myApp', ['js-data'], function (JSData) { ... })\n */\n\n/**\n * Describes the version of this `JSData` object.\n *\n * @example\n * console.log(JSData.version.full) // \"3.0.0-beta.1\"\n *\n * @name version\n * @memberof module:js-data\n * @property {string} full The full semver value.\n * @property {number} major The major version number.\n * @property {number} minor The minor version number.\n * @property {number} patch The patch version number.\n * @property {(string|boolean)} alpha The alpha version value, otherwise `false`\n * if the current version is not alpha.\n * @property {(string|boolean)} beta The beta version value, otherwise `false`\n * if the current version is not beta.\n * @since 2.0.0\n * @type {Object}\n */\nexport const version = '<%= version %>'\n\n/**\n * JSData's utility methods.\n *\n * @example\n * import {utils} from 'js-data'\n * console.log(utils.isString('foo')) // true\n *\n * @name module:js-data.utils\n * @property {Function} Promise See {@link utils.Promise}.\n * @see utils\n * @since 3.0.0\n * @type {Object}\n */\nimport utils from './utils'\n\n/**\n * JSData's {@link Collection} class.\n *\n * @example\n * import {Collection} from 'js-data'\n * const collection = new Collection()\n *\n * @name module:js-data.Collection\n * @see Collection\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#collection\",\"Components of JSData: Collection\"]\n * @type {Constructor}\n */\nimport Collection from './Collection'\n\n/**\n * JSData's {@link Component} class. Most components in JSData extend this\n * class.\n *\n * @example\n * import {Component} from 'js-data'\n * // Make a custom component.\n * const MyComponent = Component.extend({\n *   myMethod (someArg) { ... }\n * })\n *\n * @name module:js-data.Component\n * @see Component\n * @since 3.0.0\n * @type {Constructor}\n */\nimport Component from './Component'\n\n/**\n * JSData's {@link Container} class. Defines and manages {@link Mapper}s. Used\n * in Node.js and in the browser, though in the browser you may want to use\n * {@link DataStore} instead.\n *\n * @example\n * import {Container} from 'js-data'\n * const store = new Container()\n *\n * @name module:js-data.Container\n * @see Container\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#container\",\"Components of JSData: Container\"]\n * @type {Constructor}\n */\nimport Container from './Container'\n\n/**\n * JSData's {@link DataStore} class. Primarily for use in the browser. In\n * Node.js you probably want to use {@link Container} instead.\n *\n * @example\n * import {DataStore} from 'js-data'\n * const store = new DataStore()\n *\n * @name module:js-data.DataStore\n * @see DataStore\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#datastore\",\"Components of JSData: DataStore\"]\n * @type {Constructor}\n */\nimport DataStore from './DataStore'\n\n/**\n * JSData's {@link Index} class, based on [mindex]{@link https://github.com/internalfx/mindex}.\n *\n * @name module:js-data.Index\n * @see Index\n * @since 3.0.0\n * @type {Constructor}\n */\nimport Index from '../lib/mindex/index'\n\n/**\n * JSData's {@link LinkedCollection} class. Used by the {@link DataStore}\n * component. If you need to create a collection manually, you should probably\n * use the {@link Collection} class.\n *\n * @name module:js-data.LinkedCollection\n * @see DataStore\n * @see LinkedCollection\n * @since 3.0.0\n * @type {Constructor}\n */\nimport LinkedCollection from './LinkedCollection'\n\n/**\n * JSData's {@link Mapper} class. The core of the ORM.\n *\n * @example <caption>Recommended use</caption>\n * import {Container} from 'js-data'\n * const store = new Container()\n * const UserService = store.defineMapper('user')\n *\n * @example <caption>Create Mapper manually</caption>\n * import {Mapper} from 'js-data'\n * const UserService = new Mapper({ name: 'user' })\n *\n * @name module:js-data.Mapper\n * @see Container\n * @see Mapper\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/modeling-your-data\",\"Modeling your data\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#mapper\",\"Components of JSData: Mapper\"]\n * @type {Constructor}\n */\nimport Mapper from './Mapper'\n\n/**\n * JSData's {@link Query} class. Used by the {@link Collection} component.\n *\n * @name module:js-data.Query\n * @see Query\n * @since 3.0.0\n * @type {Constructor}\n */\nimport Query from './Query'\n\n/**\n * JSData's {@link Record} class.\n *\n * @example\n * import {Container} from 'js-data'\n * const store = new Container()\n * const UserService = store.defineMapper('user')\n * const user = UserService.createRecord()\n *\n * @name module:js-data.Record\n * @see Record\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#record\",\"Components of JSData: Record\"]\n * @type {Constructor}\n */\nimport Record from './Record'\n\n/**\n * JSData's {@link Schema} class. Implements http://json-schema.org/draft-04.\n *\n * @example\n * import {Container, Schema} from 'js-data'\n * const userSchema = new Schema({\n *   properties: {\n *     id: { type: 'string' },\n *     name: { type: 'string' }\n *   }\n * })\n * const store = new Container()\n * const UserService = store.defineMapper('user', {\n *   schema: userSchema\n * })\n *\n * @name module:js-data.Schema\n * @see Schema\n * @see http://json-schema.org/\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#schema\",\"Components of JSData: schema\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/schemas\",\"JSData's Schema Syntax\"]\n * @type {Constructor}\n */\nimport Schema from './Schema'\n\nexport * from './decorators'\n\nexport {\n  Collection,\n  Component,\n  Container,\n  DataStore,\n  Index,\n  LinkedCollection,\n  Mapper,\n  Query,\n  Record,\n  Schema,\n  utils\n}\n"],"names":["utils","DOMAIN","belongsTo","hasMany","hasOne","props","toProxy"],"mappings":"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"}