{"version":3,"file":"js-data.js","sources":["../src/utils.js","../src/Query.js","../lib/mindex/utils.js","../lib/mindex/index.js","../src/Collection.js","../src/decorators.js","../src/Record.js","../src/Schema.js","../src/Mapper.js","../src/Container.js","../src/LinkedCollection.js","../src/DataStore.js","../src/index.js"],"sourcesContent":["/**\n * @name utils\n * @memberof module:js-data\n * @type {Object}\n * @property {Function} addHiddenPropsToTarget TODO\n * @property {Function} classCallCheck TODO\n * @property {Function} copy TODO\n * @property {Function} deepMixIn TODO\n * @property {Function} eventify TODO\n * @property {Function} extend TODO\n * @property {Function} fillIn TODO\n * @property {Function} fromJson TODO\n * @property {Function} get TODO\n * @property {Function} getSuper TODO\n * @property {Function} intersection TODO\n * @property {Function} isArray TODO\n * @property {Function} isBlacklisted TODO\n * @property {boolean} isBrowser TODO\n * @property {Function} isBoolean TODO\n * @property {Function} isFunction TODO\n * @property {Function} isInteger TODO\n * @property {Function} isNull TODO\n * @property {Function} isNumber TODO\n * @property {Function} isObject TODO\n * @property {Function} isRegExp TODO\n * @property {Function} isSorN TODO\n * @property {Function} isString TODO\n * @property {Function} isUndefined TODO\n * @property {Function} possibleConstructorReturn TODO\n * @property {Function} reject TODO\n * @property {Function} resolve TODO\n * @property {Function} set TODO\n * @property {Function} toJson TODO\n */\nconst utils = {}\n\nexport default utils\n\nconst INFINITY = 1 / 0\nconst MAX_INTEGER = 1.7976931348623157e+308\nconst BOOL_TAG = '[object Boolean]'\nconst DATE_TAG = '[object Date]'\nconst FUNC_TAG = '[object Function]'\nconst NUMBER_TAG = '[object Number]'\nconst OBJECT_TAG = '[object Object]'\nconst REGEXP_TAG = '[object RegExp]'\nconst STRING_TAG = '[object String]'\nconst objToString = Object.prototype.toString\n\n// Attempt to detect whether we are in the browser.\ntry {\n  utils.isBrowser = !!window\n} catch (e) {\n  utils.isBrowser = false\n}\n\nutils.Promise = Promise\n\nconst toString = function (value) {\n  return objToString.call(value)\n}\nconst toInteger = function (value) {\n  if (!value) {\n    return value === 0 ? value : 0\n  }\n  value = +value\n  if (value === INFINITY || value === -INFINITY) {\n    const sign = (value < 0 ? -1 : 1)\n    return sign * MAX_INTEGER\n  }\n  const remainder = value % 1\n  return value === value ? (remainder ? value - remainder : value) : 0 // eslint-disable-line\n}\nconst isPlainObject = function (value) {\n  return (!!value && typeof value === 'object' && value.constructor === Object)\n}\nutils.isArray = Array.isArray\nutils.isDate = function (value) {\n  return (value && typeof value === 'object' && toString(value) === DATE_TAG)\n}\nutils.isFunction = function (value) {\n  return typeof value === 'function' || (value && toString(value) === FUNC_TAG)\n}\nutils.isInteger = function (value) {\n  return toString(value) === NUMBER_TAG && value == toInteger(value) // eslint-disable-line\n}\nutils.isNull = function (value) {\n  return value === null\n}\nutils.isNumber = function (value) {\n  const type = typeof value\n  return type === 'number' || (value && type === 'object' && toString(value) === NUMBER_TAG)\n}\nutils.isObject = function (value) {\n  return toString(value) === OBJECT_TAG\n}\nutils.isRegExp = function (value) {\n  return toString(value) === REGEXP_TAG\n}\nutils.isSorN = function (value) {\n  return utils.isString(value) || utils.isNumber(value)\n}\nutils.isString = function (value) {\n  return typeof value === 'string' || (value && typeof value === 'object' && toString(value) === STRING_TAG)\n}\nutils.isUndefined = function (value) {\n  return value === undefined\n}\nutils.isBoolean = function (value) {\n  return toString(value) === BOOL_TAG\n}\nutils.get = function (object, prop) {\n  if (!prop) {\n    return\n  }\n  const parts = prop.split('.')\n  const last = parts.pop()\n\n  while (prop = parts.shift()) { // eslint-disable-line\n    object = object[prop]\n    if (object == null) return\n  }\n\n  return object[last]\n}\nconst mkdirP = function (object, path) {\n  if (!path) {\n    return object\n  }\n  const parts = path.split('.')\n  parts.forEach(function (key) {\n    if (!object[key]) {\n      object[key] = {}\n    }\n    object = object[key]\n  })\n  return object\n}\nconst PATH = /^(.+)\\.(.+)$/\n\n/**\n * Set the value at the provided key or path.\n *\n * @ignore\n * @param {Object} object The object on which to set a property.\n * @param {(string|Object)} path The key or path to the property. Can also\n * pass in an object of path/value pairs, which will all be set on the target\n * object.\n * @param {*} [value] The value to set.\n */\nutils.set = function (object, path, value) {\n  if (utils.isObject(path)) {\n    utils.forOwn(path, function (value, _path) {\n      utils.set(object, _path, value)\n    })\n  } else {\n    const parts = PATH.exec(path)\n    if (parts) {\n      mkdirP(object, parts[1])[parts[2]] = value\n    } else {\n      object[path] = value\n    }\n  }\n}\n\n/**\n * Unset the value at the provided key or path.\n *\n * @ignore\n * @param {Object} object The object from which to delete the property.\n * @param {string} path The key or path to the property.\n */\nutils.unset = function (object, path) {\n  const parts = path.split('.')\n  const last = parts.pop()\n\n  while (path = parts.shift()) { // eslint-disable-line\n    object = object[path]\n    if (object == null) return\n  }\n\n  object[last] = undefined\n  delete object[last]\n}\n\n/**\n * Iterate over an object's own enumerable properties.\n *\n * @ignore\n * @param {Object} object The object whose properties are to be enumerated.\n * @param {Function} fn Iteration function.\n * @param {Object} [thisArg] Content to which to bind `fn`.\n */\nutils.forOwn = function (obj, fn, thisArg) {\n  const keys = Object.keys(obj)\n  const len = keys.length\n  let i\n  for (i = 0; i < len; i++) {\n    fn.call(thisArg, obj[keys[i]], keys[i], obj)\n  }\n}\n\n/**\n * Recursively shallow copy own enumberable properties from `source` to `dest`.\n *\n * @ignore\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n */\nutils.deepMixIn = function (dest, source) {\n  if (source) {\n    utils.forOwn(source, function (value, key) {\n      const existing = this[key]\n      if (isPlainObject(value) && isPlainObject(existing)) {\n        utils.deepMixIn(existing, value)\n      } else {\n        this[key] = value\n      }\n    }, dest)\n  }\n  return dest\n}\n\n/**\n * Recursively shallow fill in own enumberable properties from `source` to `dest`.\n *\n * @ignore\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n */\nutils.deepFillIn = function (dest, source) {\n  if (source) {\n    utils.forOwn(source, function (value, key) {\n      const existing = this[key]\n      if (isPlainObject(value) && isPlainObject(existing)) {\n        utils.deeputils.FillIn(existing, value)\n      } else if (!this.hasOwnProperty(key) || this[key] === undefined) {\n        this[key] = value\n      }\n    }, dest)\n  }\n  return dest\n}\n\n/**\n * Proxy for `Promise.resolve`.\n *\n * @ignore\n * @param {*} [value] Value with which to resolve the Promise.\n * @return {Promise} Promise resolved with `value`.\n */\nutils.resolve = function (value) {\n  return utils.Promise.resolve(value)\n}\n\n/**\n * Proxy for `Promise.reject`.\n *\n * @ignore\n * @param {*} [value] Value with which to reject the Promise.\n * @return {Promise} Promise reject with `value`.\n */\nutils.reject = function (value) {\n  return utils.Promise.reject(value)\n}\n\n/**\n * Shallow copy properties from src to dest that meet the following criteria:\n * - own enumerable\n * - not a function\n * - does not start with \"_\"\n *\n * @ignore\n * @param {Object} dest Destination object.\n * @param {Object} src Source object.\n */\nutils._ = function (dest, src) {\n  for (var key in dest) {\n    let value = dest[key]\n    if (src[key] === undefined && !utils.isFunction(value) && key && key.indexOf('_') !== 0) {\n      src[key] = value\n    }\n  }\n}\n\n/**\n * Return the intersection of two arrays.\n *\n * @ignore\n * @param {Array} array1 First array.\n * @param {Array} array2 Second array.\n * @return {Array} Array of elements common to both arrays.\n */\nutils.intersection = function (array1, array2) {\n  if (!array1 || !array2) {\n    return []\n  }\n  const result = []\n  let item\n  let i\n  const len = array1.length\n  for (i = 0; i < len; i++) {\n    item = array1[i]\n    if (result.indexOf(item) !== -1) {\n      continue\n    }\n    if (array2.indexOf(item) !== -1) {\n      result.push(item)\n    }\n  }\n  return result\n}\n\n/**\n * Shallow copy own enumerable properties from `src` to `dest` that are on `src`\n * but are missing from `dest.\n *\n * @ignore\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n */\nutils.fillIn = function (dest, src) {\n  utils.forOwn(src, function (value, key) {\n    if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n      dest[key] = value\n    }\n  })\n}\n\n/**\n * Return whether `prop` is matched by any string or regular expression in `bl`.\n *\n * @ignore\n * @param {string} prop The name of a property.\n * @param {Array} bl Array of strings and regular expressions.\n * @return {boolean} Whether `prop` was matched.\n */\nutils.isBlacklisted = function (prop, bl) {\n  if (!bl || !bl.length) {\n    return false\n  }\n  let matches\n  for (var i = 0; i < bl.length; i++) {\n    if ((toString(bl[i]) === REGEXP_TAG && bl[i].test(prop)) || bl[i] === prop) {\n      matches = prop\n      return matches\n    }\n  }\n  return !!matches\n}\n\n/**\n * Proxy for `JSON.parse`.\n *\n * @ignore\n * @param {string} json JSON to parse.\n * @return {Object} Parsed object.\n */\nutils.fromJson = function (json) {\n  return utils.isString(json) ? JSON.parse(json) : json\n}\n\n/**\n * Proxy for `JSON.stringify`.\n *\n * @ignore\n * @param {*} value Value to serialize to JSON.\n * @return {string} JSON string.\n */\nutils.toJson = JSON.stringify\n\n/**\n * Deep copy a value.\n *\n * @ignore\n * @param {*} from Value to deep copy.\n * @return {*} Deep copy of `from`.\n */\nutils.copy = function (from, to, stackFrom, stackTo, blacklist, plain) {\n  if (!to) {\n    to = from\n    if (from) {\n      if (utils.isArray(from)) {\n        to = utils.copy(from, [], stackFrom, stackTo, blacklist, plain)\n      } else if (utils.isDate(from)) {\n        to = new Date(from.getTime())\n      } else if (utils.isRegExp(from)) {\n        to = new RegExp(from.source, from.toString().match(/[^\\/]*$/)[0])\n        to.lastIndex = from.lastIndex\n      } else if (utils.isObject(from)) {\n        if (plain) {\n          to = utils.copy(from, {}, stackFrom, stackTo, blacklist, plain)\n        } else {\n          to = utils.copy(from, Object.create(Object.getPrototypeOf(from)), stackFrom, stackTo, blacklist, plain)\n        }\n      }\n    }\n  } else {\n    if (from === to) {\n      throw new Error('Cannot copy! Source and destination are identical.')\n    }\n\n    stackFrom = stackFrom || []\n    stackTo = stackTo || []\n\n    if (utils.isObject(from)) {\n      let index = stackFrom.indexOf(from)\n      if (index !== -1) {\n        return stackTo[index]\n      }\n\n      stackFrom.push(from)\n      stackTo.push(to)\n    }\n\n    let result\n    if (utils.isArray(from)) {\n      let i\n      to.length = 0\n      for (i = 0; i < from.length; i++) {\n        result = utils.copy(from[i], null, stackFrom, stackTo, blacklist, plain)\n        if (utils.isObject(from[i])) {\n          stackFrom.push(from[i])\n          stackTo.push(result)\n        }\n        to.push(result)\n      }\n    } else {\n      if (utils.isArray(to)) {\n        to.length = 0\n      } else {\n        utils.forOwn(to, function (value, key) {\n          delete to[key]\n        })\n      }\n      for (var key in from) {\n        if (from.hasOwnProperty(key)) {\n          if (utils.isBlacklisted(key, blacklist)) {\n            continue\n          }\n          result = utils.copy(from[key], null, stackFrom, stackTo, blacklist, plain)\n          if (utils.isObject(from[key])) {\n            stackFrom.push(from[key])\n            stackTo.push(result)\n          }\n          to[key] = result\n        }\n      }\n    }\n  }\n  return to\n}\n\nutils.plainCopy = function (from) {\n  return utils.copy(from, undefined, undefined, undefined, undefined, true)\n}\n\n/**\n * Add eventing capabilities into the target object.\n *\n * @ignore\n * @param {Object} target Target object.\n * @param {Function} [getter] Custom getter for retrieving the object's event\n * listeners.\n * @param {Function} [setter] Custom setter for setting the object's event\n * listeners.\n */\nutils.eventify = function (target, getter, setter, enumerable) {\n  target = target || this\n  let _events = {}\n  if (!getter && !setter) {\n    getter = function () {\n      return _events\n    }\n    setter = function (value) {\n      _events = value\n    }\n  }\n  Object.defineProperties(target, {\n    on: {\n      enumerable: !!enumerable,\n      value (type, func, ctx) {\n        if (!getter.call(this)) {\n          setter.call(this, {})\n        }\n        const events = getter.call(this)\n        events[type] = events[type] || []\n        events[type].push({\n          f: func,\n          c: ctx\n        })\n      }\n    },\n    off: {\n      enumerable: !!enumerable,\n      value (type, func) {\n        const events = getter.call(this)\n        const listeners = events[type]\n        if (!listeners) {\n          setter.call(this, {})\n        } else if (func) {\n          for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i].f === func) {\n              listeners.splice(i, 1)\n              break\n            }\n          }\n        } else {\n          listeners.splice(0, listeners.length)\n        }\n      }\n    },\n    emit: {\n      enumerable: !!enumerable,\n      value (...args) {\n        const events = getter.call(this) || {}\n        const type = args.shift()\n        let listeners = events[type] || []\n        let i\n        for (i = 0; i < listeners.length; i++) {\n          listeners[i].f.apply(listeners[i].c, args)\n        }\n        listeners = events.all || []\n        args.unshift(type)\n        for (i = 0; i < listeners.length; i++) {\n          listeners[i].f.apply(listeners[i].c, args)\n        }\n      }\n    }\n  })\n}\n\nutils.classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function')\n  }\n}\n\nutils.possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called')\n  }\n\n  return call && (typeof call === 'object' || typeof call === 'function') ? call : self\n}\n\nutils.addHiddenPropsToTarget = function (target, props) {\n  utils.forOwn(props, function (value, key) {\n    props[key] = {\n      writable: true,\n      value\n    }\n  })\n  Object.defineProperties(target, props)\n}\n\nutils.extend = function (props, classProps) {\n  const SuperClass = this\n  let SubClass\n\n  props || (props = {})\n  classProps || (classProps = {})\n\n  if (props.hasOwnProperty('constructor')) {\n    SubClass = props.constructor\n    delete props.constructor\n  } else {\n    SubClass = function (...args) {\n      utils.classCallCheck(this, SubClass)\n      const _this = utils.possibleConstructorReturn(this, (SubClass.__super__ || Object.getPrototypeOf(SubClass)).apply(this, args))\n      return _this\n    }\n  }\n\n  SubClass.prototype = Object.create(SuperClass && SuperClass.prototype, {\n    constructor: {\n      value: SubClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  })\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(SubClass, SuperClass)\n  } else if (classProps.strictEs6Class) {\n    SubClass.__proto__ = SuperClass // eslint-disable-line\n  } else {\n    utils.forOwn(SuperClass, function (value, key) {\n      SubClass[key] = value\n    })\n  }\n  Object.defineProperty(SubClass, '__super__', {\n    configurable: true,\n    value: SuperClass\n  })\n\n  utils.addHiddenPropsToTarget(SubClass.prototype, props)\n  utils.fillIn(SubClass, classProps)\n\n  return SubClass\n}\n\nutils.getSuper = function (instance, isCtor) {\n  const Ctor = isCtor ? instance : instance.constructor\n  return (Ctor.__super__ || Object.getPrototypeOf(Ctor) || Ctor.__proto__) // eslint-disable-line\n}\n\nconst getIndex = function (list, relation) {\n  let index = -1\n  list.forEach(function (_relation, i) {\n    if (_relation === relation) {\n      index = i\n      return false\n    } else if (utils.isObject(_relation)) {\n      if (_relation.relation === relation) {\n        index = i\n        return false\n      }\n    }\n  })\n  return index\n}\n\nconst forRelation = function (opts, def, fn, ctx) {\n  const relationName = def.relation\n  let containedName = null\n  let index\n  opts || (opts = {})\n  opts.with || (opts.with = [])\n\n  if ((index = getIndex(opts.with, relationName)) >= 0) {\n    containedName = relationName\n  } else if ((index = getIndex(opts.with, def.localField)) >= 0) {\n    containedName = def.localField\n  }\n\n  if (opts.withAll) {\n    fn.call(ctx, def, {})\n    return\n  } else if (!containedName) {\n    return\n  }\n  let __opts = {}\n  utils.fillIn(__opts, def.getRelation())\n  utils.fillIn(__opts, opts)\n  __opts.with = opts.with.slice()\n  __opts._activeWith = __opts.with.splice(index, 1)[0]\n  __opts.with.forEach(function (relation, i) {\n    if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\n      __opts.with[i] = relation.substr(containedName.length + 1)\n    } else {\n      __opts.with[i] = ''\n    }\n  })\n  fn.call(ctx, def, __opts)\n}\n\nutils.forEachRelation = function (mapper, opts, fn, ctx) {\n  const relationList = mapper.relationList || []\n  if (!relationList.length) {\n    return\n  }\n  relationList.forEach(function (def) {\n    forRelation(opts, def, fn, ctx)\n  })\n}\n\nutils.omit = function (props, keys) {\n  // Remove relations\n  const _props = {}\n  utils.forOwn(props, function (value, key) {\n    if (keys.indexOf(key) === -1) {\n      _props[key] = value\n    }\n  })\n  return _props\n}\n\nutils.equal = function (a, b) {\n  return a == b // eslint-disable-line\n}\n\nutils.strictEqual = function (a, b) {\n  let _equal = a === b\n  if (!_equal) {\n    if (utils.isObject(a) && utils.isObject(b)) {\n      utils.forOwn(a, function (value, key) {\n        _equal = _equal && utils.strictEqual(value, b[key])\n      })\n      utils.forOwn(b, function (value, key) {\n        _equal = _equal && utils.strictEqual(value, a[key])\n      })\n    } else if (utils.isArray(a) && utils.isArray(b)) {\n      a.forEach(function (value, i) {\n        _equal = _equal && utils.strictEqual(value, b[i])\n      })\n    }\n  }\n  return _equal\n}\n\n// a - the newer object\n// b - the older object\nutils.diffObjects = function (a, b, equalsFn, bl) {\n  const diff = {\n    added: {},\n    removed: {},\n    changed: {}\n  }\n  if (!utils.isFunction(equalsFn)) {\n    equalsFn = utils.strictEqual\n  }\n\n  utils.forOwn(b, function (oldValue, key) {\n    const newValue = a[key]\n\n    if (utils.isBlacklisted(key, bl) || equalsFn(newValue, oldValue)) {\n      return\n    }\n\n    if (utils.isUndefined(newValue)) {\n      diff.removed[key] = undefined\n    } else if (!equalsFn(newValue, oldValue)) {\n      diff.changed[key] = newValue\n    }\n  })\n\n  utils.forOwn(a, function (newValue, key) {\n    if (!utils.isUndefined(b[key]) || utils.isBlacklisted(key, bl)) {\n      return\n    }\n    diff.added[key] = newValue\n  })\n\n  return diff\n}\n\nutils.areDifferent = function (a, b, equalsFn, bl) {\n  const diff = utils.diffObjects(a, b, equalsFn, bl)\n  const diffCount = Object.keys(diff.added).length +\n    Object.keys(diff.removed).length +\n    Object.keys(diff.changed).length\n  return diffCount > 0\n}\n","import _ from './utils'\n\n/**\n * A class used by the {@link Collection} class to build queries to be executed\n * against the collection's data. An instance of `Query` is returned by\n * {@link Collection#query}.\n *\n * ```javascript\n * import {Query} from 'js-data'\n * ```\n *\n * @class Query\n * @param {Collection} collection - The collection on which this query operates.\n */\nexport default function Query (collection) {\n  _.classCallCheck(this, Query)\n\n  /**\n   * The collection on which this query operates.\n   *\n   * @name Query#collection\n   * @type {Collection}\n   */\n  this.collection = collection\n\n  /**\n   * The data result of this query.\n   *\n   * @name Query#data\n   * @type {Array}\n   */\n  this.data = null\n}\n\n/**\n * Create a Query subclass.\n *\n * ```javascript\n * var MyQuery = Query.extend({\n *   foo: function () { return 'bar' }\n * })\n * var query = new MyQuery()\n * query.foo() // \"bar\"\n * ```\n *\n * @name Query.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Query.\n */\nQuery.extend = _.extend\n\nconst reserved = {\n  skip: '',\n  offset: '',\n  where: '',\n  limit: '',\n  orderBy: '',\n  sort: ''\n}\n\nconst escapeRegExp = /([.*+?^=!:${}()|[\\]\\/\\\\])/g\nconst percentRegExp = /%/g\nconst underscoreRegExp = /_/g\n\nfunction escape (pattern) {\n  return pattern.replace(escapeRegExp, '\\\\$1')\n}\n\n/**\n * TODO\n *\n * @name Query.ops\n * @type {Object}\n */\nQuery.ops = {\n  '==': function (value, predicate) {\n    return value == predicate // eslint-disable-line\n  },\n  '===': function (value, predicate) {\n    return value === predicate\n  },\n  '!=': function (value, predicate) {\n    return value != predicate // eslint-disable-line\n  },\n  '!==': function (value, predicate) {\n    return value !== predicate\n  },\n  '>': function (value, predicate) {\n    return value > predicate\n  },\n  '>=': function (value, predicate) {\n    return value >= predicate\n  },\n  '<': function (value, predicate) {\n    return value < predicate\n  },\n  '<=': function (value, predicate) {\n    return value <= predicate\n  },\n  'isectEmpty': function (value, predicate) {\n    return !_.intersection((value || []), (predicate || [])).length\n  },\n  'isectNotEmpty': function (value, predicate) {\n    return _.intersection((value || []), (predicate || [])).length\n  },\n  'in': function (value, predicate) {\n    return predicate.indexOf(value) !== -1\n  },\n  'notIn': function (value, predicate) {\n    return predicate.indexOf(value) === -1\n  },\n  'contains': function (value, predicate) {\n    return (value || []).indexOf(predicate) !== -1\n  },\n  'notContains': function (value, predicate) {\n    return (value || []).indexOf(predicate) === -1\n  }\n}\n\n_.addHiddenPropsToTarget(Query.prototype, {\n  compare (orderBy, index, a, b) {\n    const def = orderBy[index]\n    let cA = _.get(a, def[0])\n    let cB = _.get(b, def[0])\n    if (cA && _.isString(cA)) {\n      cA = cA.toUpperCase()\n    }\n    if (cB && _.isString(cB)) {\n      cB = cB.toUpperCase()\n    }\n    a || (a = null)\n    b || (b = null)\n    if (def[1] === 'DESC') {\n      if (cB < cA) {\n        return -1\n      } else if (cB > cA) {\n        return 1\n      } else {\n        if (index < orderBy.length - 1) {\n          return this.compare(orderBy, index + 1, a, b)\n        } else {\n          return 0\n        }\n      }\n    } else {\n      if (cA < cB) {\n        return -1\n      } else if (cA > cB) {\n        return 1\n      } else {\n        if (index < orderBy.length - 1) {\n          return this.compare(orderBy, index + 1, a, b)\n        } else {\n          return 0\n        }\n      }\n    }\n  },\n\n  evaluate (value, op, predicate) {\n    if (Query.ops[op]) {\n      return Query.ops[op](value, predicate)\n    }\n    if (op.indexOf('like') === 0) {\n      return !_.isNull(this.like(predicate, op.substr(4)).exec(value))\n    } else if (op.indexOf('notLike') === 0) {\n      return _.isNull(this.like(predicate, op.substr(7)).exec(value))\n    }\n  },\n\n  like (pattern, flags) {\n    return new RegExp(`^${(escape(pattern).replace(percentRegExp, '.*').replace(underscoreRegExp, '.'))}$`, flags)\n  },\n\n  /**\n   * Return the current data result of this query.\n   * @name Query#getData\n   * @method\n   * @return {Array} The data in this query.\n   */\n  getData () {\n    const self = this\n    if (!self.data) {\n      self.data = self.collection.index.getAll()\n    }\n    return self.data\n  },\n\n  /**\n   * Find all entities between two boundaries.\n   *\n   * Get the users ages 18 to 30\n   * ```js\n   * const users = query.between(18, 30, { index: 'age' }).run()\n   * ```\n   * Same as above\n   * ```js\n   * const users = query.between([18], [30], { index: 'age' }).run()\n   * ```\n   *\n   * @name Query#between\n   * @method\n   * @param {Array} leftKeys - Keys defining the left boundary.\n   * @param {Array} rightKeys - Keys defining the right boundary.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.limit] - Limit the result to a certain number.\n   * @param {boolean} [opts.offset] - The number of resulting entities to skip.\n   * @return {Query} A reference to itself for chaining.\n   */\n  between (leftKeys, rightKeys, opts) {\n    const self = this\n    opts || (opts = {})\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    self.data = self.collection.getIndex(opts.index).between(leftKeys, rightKeys, opts)\n    return self\n  },\n\n  /**\n   * Find the entity or entities that match the provided key.\n   *\n   * #### Example\n   *\n   * Get the entity whose primary key is 25\n   * ```js\n   * const entities = query.get(25).run()\n   * ```\n   * Same as above\n   * ```js\n   * const entities = query.get([25]).run()\n   * ```\n   * Get all users who are active and have the \"admin\" role\n   * ```js\n   * const activeAdmins = query.get(['active', 'admin'], {\n   *   index: 'activityAndRoles'\n   * }).run()\n   * ```\n   * Get all entities that match a certain weather condition\n   * ```js\n   * const niceDays = query.get(['sunny', 'humid', 'calm'], {\n   *   index: 'weatherConditions'\n   * }).run()\n   * ```\n   *\n   * @name Query#get\n   * @method\n   * @param {Array} keyList - Key(s) defining the entity to retrieve. If\n   * `keyList` is not an array (i.e. for a single-value key), it will be\n   * wrapped in an array.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.string] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Query} A reference to itself for chaining.\n   */\n  get (keyList = [], opts) {\n    const self = this\n    opts || (opts = {})\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    if (keyList && !_.isArray(keyList)) {\n      keyList = [keyList]\n    }\n    if (!keyList.length) {\n      self.getData()\n      return self\n    }\n    self.data = self.collection.getIndex(opts.index).get(keyList)\n    return self\n  },\n\n  /**\n   * Find the entity or entities that match the provided keyLists.\n   *\n   * #### Example\n   *\n   * Get the posts where \"status\" is \"draft\" or \"inReview\"\n   * ```js\n   * const posts = query.getAll('draft', 'inReview', { index: 'status' }).run()\n   * ```\n   * Same as above\n   * ```js\n   * const posts = query.getAll(['draft'], ['inReview'], { index: 'status' }).run()\n   * ```\n   *\n   * @name Query#getAll\n   * @method\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * entities matching each keyList will be retrieved. If no keyLists are\n   * provided, all entities will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Query} A reference to itself for chaining.\n   */\n  getAll (...args) {\n    const self = this\n    let opts = {}\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    if (!args.length || args.length === 1 && _.isObject(args[0])) {\n      self.getData()\n      return self\n    } else if (args.length && _.isObject(args[args.length - 1])) {\n      opts = args[args.length - 1]\n      args.pop()\n    }\n    const collection = self.collection\n    const index = collection.getIndex(opts.index)\n    self.data = []\n    args.forEach(function (keyList) {\n      self.data = self.data.concat(index.get(keyList))\n    })\n    return self\n  },\n\n  /**\n   * Find the entity or entities that match the provided query or pass the\n   * provided filter function.\n   *\n   * #### Example\n   *\n   * Get the draft posts created less than three months\n   * ```js\n   * const posts = query.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * }).run()\n   * ```\n   * Use a custom filter function\n   * ```js\n   * const posts = query.filter(function (post) {\n   *   return post.isReady()\n   * }).run()\n   * ```\n   *\n   * @name Query#filter\n   * @method\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Function} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @return {Query} A reference to itself for chaining.\n   */\n  filter (query, thisArg) {\n    const self = this\n    query || (query = {})\n    self.getData()\n    if (_.isObject(query)) {\n      let where = {}\n      // Filter\n      if (_.isObject(query.where)) {\n        where = query.where\n      }\n      _.forOwn(query, function (value, key) {\n        if (!(key in reserved) && !(key in where)) {\n          where[key] = {\n            '==': value\n          }\n        }\n      })\n\n      const fields = []\n      const ops = []\n      const predicates = []\n      _.forOwn(where, function (clause, field) {\n        if (!_.isObject(clause)) {\n          clause = {\n            '==': clause\n          }\n        }\n        _.forOwn(clause, function (expr, op) {\n          fields.push(field)\n          ops.push(op)\n          predicates.push(expr)\n        })\n      })\n      if (fields.length) {\n        let i\n        let len = fields.length\n        self.data = self.data.filter(function (item) {\n          let first = true\n          let keep = true\n\n          for (i = 0; i < len; i++) {\n            let op = ops[i]\n            const isOr = op.charAt(0) === '|'\n            op = isOr ? op.substr(1) : op\n            const expr = self.evaluate(_.get(item, fields[i]), op, predicates[i])\n            if (expr !== undefined) {\n              keep = first ? expr : (isOr ? keep || expr : keep && expr)\n            }\n            first = false\n          }\n          return keep\n        })\n      }\n\n      // Sort\n      let orderBy = query.orderBy || query.sort\n\n      if (_.isString(orderBy)) {\n        orderBy = [\n          [orderBy, 'ASC']\n        ]\n      }\n      if (!_.isArray(orderBy)) {\n        orderBy = null\n      }\n\n      // Apply 'orderBy'\n      if (orderBy) {\n        let index = 0\n        orderBy.forEach(function (def, i) {\n          if (_.isString(def)) {\n            orderBy[i] = [def, 'ASC']\n          }\n        })\n        self.data.sort(function (a, b) {\n          return self.compare(orderBy, index, a, b)\n        })\n      }\n\n      // Skip\n      if (_.isNumber(query.skip)) {\n        self.skip(query.skip)\n      } else if (_.isNumber(query.offset)) {\n        self.skip(query.offset)\n      }\n      // Limit\n      if (_.isNumber(query.limit)) {\n        self.limit(query.limit)\n      }\n    } else if (_.isFunction(query)) {\n      self.data = self.data.filter(query, thisArg)\n    }\n    return self\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * #### Example\n   *\n   * Get all but the first 10 draft posts\n   * ```js\n   * const posts = query.get('draft', { index: 'status' }).skip(10).run()\n   * ```\n   *\n   * @name Query#skip\n   * @method\n   * @param {number} num - The number of entities to skip.\n   * @return {Query} A reference to itself for chaining.\n   */\n  skip (num) {\n    if (!_.isNumber(num)) {\n      throw new TypeError(`skip: Expected number but found ${typeof num}!`)\n    }\n    const data = this.getData()\n    if (num < data.length) {\n      this.data = data.slice(num)\n    } else {\n      this.data = []\n    }\n    return this\n  },\n\n  /**\n   * Limit the result.\n   *\n   * #### Example\n   *\n   * Get only the first 10 draft posts\n   * ```js\n   * const posts = query.get('draft', { index: 'status' }).limit(10).run()\n   * ```\n   *\n   * @name Query#limit\n   * @method\n   * @param {number} num - The maximum number of entities to keep in the result.\n   * @return {Query} A reference to itself for chaining.\n   */\n  limit (num) {\n    if (!_.isNumber(num)) {\n      throw new TypeError(`limit: Expected number but found ${typeof num}!`)\n    }\n    const data = this.getData()\n    this.data = data.slice(0, Math.min(data.length, num))\n    return this\n  },\n\n  /**\n   * Iterate over all entities.\n   *\n   * @name Query#forEach\n   * @method\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @return {Query} A reference to itself for chaining.\n   */\n  forEach (forEachFn, thisArg) {\n    this.getData().forEach(forEachFn, thisArg)\n    return this\n  },\n\n  /**\n   * Apply a mapping function to the result data.\n   *\n   * @name Query#map\n   * @method\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @return {Query} A reference to itself for chaining.\n   */\n  map (mapFn, thisArg) {\n    this.data = this.getData().map(mapFn, thisArg)\n    return this\n  },\n\n  /**\n   * Return the result of calling the specified function on each item in this\n   * collection's main index.\n   * @name Query#mapCall\n   * @method\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @return {Query} A reference to itself for chaining.\n   */\n  mapCall (funcName, ...args) {\n    this.data = this.getData().map(function (item) {\n      return item[funcName](...args)\n    })\n    return this\n  },\n\n  /**\n   * Complete the execution of the query and return the resulting data.\n   *\n   * @name Query#run\n   * @method\n   * @return {Array} The result of executing this query.\n   */\n  run () {\n    const data = this.data\n    this.data = null\n    return data\n  }\n})\n","export function sort (a, b, hashCode) {\n  // Short-curcuit comparison if a and b are strictly equal\n  // This is absolutely necessary for indexed objects that\n  // don't have the idAttribute field\n  if (a === b) {\n    return 0\n  }\n  if (hashCode) {\n    a = hashCode(a)\n    b = hashCode(b)\n  }\n  if (a === null && b === null) {\n    return 0\n  }\n\n  if (a === null) {\n    return -1\n  }\n\n  if (b === null) {\n    return 1\n  }\n\n  if (a < b) {\n    return -1\n  }\n\n  if (a > b) {\n    return 1\n  }\n\n  return 0\n}\n\nexport function insertAt (array, index, value) {\n  array.splice(index, 0, value)\n  return array\n}\n\nexport function removeAt (array, index) {\n  array.splice(index, 1)\n  return array\n}\n\nexport function binarySearch (array, value, field) {\n  let lo = 0\n  let hi = array.length\n  let compared\n  let mid\n\n  while (lo < hi) {\n    mid = ((lo + hi) / 2) | 0\n    compared = sort(value, array[mid], field)\n    if (compared === 0) {\n      return {\n        found: true,\n        index: mid\n      }\n    } else if (compared < 0) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n\n  return {\n    found: false,\n    index: hi\n  }\n}\n","// Copyright (c) 2015, InternalFX.\n\n// Permission to use, copy, modify, and/or distribute this software for any purpose with or\n// without fee is hereby granted, provided that the above copyright notice and this permission\n// notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO\n// THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT\n// SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR\n// ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\n// USE OR PERFORMANCE OF THIS SOFTWARE.\n\n// Modifications\n// Copyright 2015-2016 Jason Dobry\n//\n// Summary of modifications:\n// Converted to ES6 Class syntax\n// Reworked dependencies so as to re-use code already in js-data\nimport _ from '../../src/utils'\nimport {binarySearch, insertAt, removeAt} from './utils'\n\nconst blacklist = { '>': 1, '>=': 1, '<': 1, '<=': 1 }\n\nexport function Index (fieldList, opts) {\n  _.classCallCheck(this, Index)\n  fieldList || (fieldList = [])\n\n  if (!_.isArray(fieldList)) {\n    throw new Error('fieldList must be an array.')\n  }\n\n  opts || (opts = {})\n  this.fieldList = fieldList\n  this.fieldGetter = opts.fieldGetter\n  this.hashCode = opts.hashCode\n  this.isIndex = true\n  this.keys = []\n  this.values = []\n}\n\n_.addHiddenPropsToTarget(Index.prototype, {\n  set (keyList, value) {\n    if (!_.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\n        if (!dataLocation.found) {\n          insertAt(this.values[pos.index], dataLocation.index, value)\n        }\n      } else {\n        insertAt(this.keys, pos.index, key)\n        insertAt(this.values, pos.index, [value])\n      }\n    } else {\n      if (pos.found) {\n        this.values[pos.index].set(keyList, value)\n      } else {\n        insertAt(this.keys, pos.index, key)\n        let newIndex = new Index([], { hashCode: this.hashCode })\n        newIndex.set(keyList, value)\n        insertAt(this.values, pos.index, newIndex)\n      }\n    }\n  },\n\n  get (keyList) {\n    if (!_.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        if (this.values[pos.index].isIndex) {\n          return this.values[pos.index].getAll()\n        } else {\n          return this.values[pos.index]\n        }\n      } else {\n        return []\n      }\n    } else {\n      if (pos.found) {\n        return this.values[pos.index].get(keyList)\n      } else {\n        return []\n      }\n    }\n  },\n\n  getAll () {\n    let results = []\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        results = results.concat(value.getAll())\n      } else {\n        results = results.concat(value)\n      }\n    })\n    return results\n  },\n\n  visitAll (cb, thisArg) {\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        value.visitAll(cb, thisArg)\n      } else {\n        value.forEach(cb, thisArg)\n      }\n    })\n  },\n\n  between (leftKeys, rightKeys, opts = {}) {\n    if (!_.isArray(leftKeys)) {\n      leftKeys = [leftKeys]\n    }\n    if (!_.isArray(rightKeys)) {\n      rightKeys = [rightKeys]\n    }\n    _.fillIn(opts, {\n      leftInclusive: true,\n      rightInclusive: false,\n      limit: undefined,\n      offset: 0\n    })\n\n    let results = this._between(leftKeys, rightKeys, opts)\n\n    if (opts.limit) {\n      return results.slice(opts.offset, opts.limit + opts.offset)\n    } else {\n      return results.slice(opts.offset)\n    }\n  },\n\n  _between (leftKeys, rightKeys, opts) {\n    let results = []\n\n    let leftKey = leftKeys.shift()\n    let rightKey = rightKeys.shift()\n\n    let pos\n\n    if (leftKey !== undefined) {\n      pos = binarySearch(this.keys, leftKey)\n    } else {\n      pos = {\n        found: false,\n        index: 0\n      }\n    }\n\n    if (leftKeys.length === 0) {\n      if (pos.found && opts.leftInclusive === false) {\n        pos.index += 1\n      }\n\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        if (rightKey !== undefined) {\n          if (opts.rightInclusive) {\n            if (this.keys[i] > rightKey) { break }\n          } else {\n            if (this.keys[i] >= rightKey) { break }\n          }\n        }\n\n        if (this.values[i].isIndex) {\n          results = results.concat(this.values[i].getAll())\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    } else {\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        let currKey = this.keys[i]\n        if (currKey > rightKey) { break }\n\n        if (this.values[i].isIndex) {\n          if (currKey === leftKey) {\n            results = results.concat(this.values[i]._between(copy(leftKeys), rightKeys.map(function () { return undefined }), opts))\n          } else if (currKey === rightKey) {\n            results = results.concat(this.values[i]._between(leftKeys.map(function () { return undefined }), copy(rightKeys), opts))\n          } else {\n            results = results.concat(this.values[i].getAll())\n          }\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    }\n\n    if (opts.limit) {\n      return results.slice(0, opts.limit + opts.offset)\n    } else {\n      return results\n    }\n  },\n\n  peek () {\n    if (this.values.length) {\n      if (this.values[0].isIndex) {\n        return this.values[0].peek()\n      } else {\n        return this.values[0]\n      }\n    }\n    return []\n  },\n\n  clear () {\n    this.keys = []\n    this.values = []\n  },\n\n  insertRecord (data) {\n    let keyList = this.fieldList.map(function (field) {\n      if (_.isFunction(field)) {\n        return field(data) || null\n      } else {\n        return data[field] || null\n      }\n    })\n    this.set(keyList, data)\n  },\n\n  removeRecord (data) {\n    let removed\n    this.values.forEach((value, i) => {\n      if (value.isIndex) {\n        if (value.removeRecord(data)) {\n          if (value.keys.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      } else {\n        const dataLocation = binarySearch(value, data, this.hashCode)\n        if (dataLocation.found) {\n          removeAt(value, dataLocation.index)\n          if (value.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      }\n    })\n    return removed ? data : undefined\n  },\n\n  updateRecord (data) {\n    this.removeRecord(data)\n    this.insertRecord(data)\n  }\n})\n","import _ from './utils'\nimport Query from './Query'\nimport {Index} from '../lib/mindex/index'\n\nconst COLLECTION_DEFAULTS = {\n  /**\n   * Field to be used as the unique identifier for records in this collection.\n   * Defaults to `\"id\"` unless {@link Collection#mapper} is set, in which case\n   * this will default to {@link Mapper#idAttribute}.\n   *\n   * @name Collection#idAttribute\n   * @type {string}\n   * @default \"id\"\n   */\n  idAttribute: 'id',\n\n  /**\n   * Default Mapper for this collection. Optional. If a Mapper is provided, then\n   * the collection will use the {@link Mapper#idAttribute} setting, and will\n   * wrap records in {@link Mapper#RecordClass}.\n   *\n   * @example\n   * import {Collection, Mapper} from 'js-data'\n   *\n   * class MyMapperClass extends Mapper {\n   *   foo () { return 'bar' }\n   * }\n   * const myMapper = new MyMapperClass()\n   * const collection = new Collection(null, { mapper: myMapper })\n   *\n   * @name Collection#mapper\n   * @type {Mapper}\n   * @default null\n   */\n  mapper: null,\n\n  /**\n   * What to do when inserting a record into this Collection that shares a\n   * primary key with a record already in this Collection.\n   *\n   * Possible values:\n   * - merge\n   * - replace\n   *\n   * Merge:\n   *\n   * Recursively shallow copy properties from the new record onto the existing\n   * record.\n   *\n   * Replace:\n   *\n   * Shallow copy top-level properties from the new record onto the existing\n   * record. Any top-level own properties of the existing record that are _not_\n   * on the new record will be removed.\n   *\n   * @name Collection#onConflict\n   * @type {string}\n   * @default \"merge\"\n   */\n  onConflict: 'merge',\n\n  /**\n   * Options to be passed into {@link Mapper#createRecord} when wrapping records\n   * in {@link Mapper#RecordClass}.\n   *\n   * @name Collection#recordOpts\n   * @type {Object}\n   * @default null\n   */\n  recordOpts: null\n}\n\n/**\n * ```javascript\n * import {Collection} from 'js-data'\n * ```\n *\n * An ordered set of {@link Record} instances.\n *\n * @example\n * import {Collection, Record} from 'js-data'\n * const user1 = new Record({ id: 1 })\n * const user2 = new Record({ id: 2 })\n * const UserCollection = new Collection([user1, user2])\n * UserCollection.get(1) === user1 // true\n *\n * @class Collection\n * @param {Array} [records] Initial set of records to insert into the\n * collection.\n * @param {Object} [opts] Configuration options.\n * @param {string} [opts.idAttribute] See {@link Collection#idAttribute}.\n * @param {string} [opts.onConflict=\"merge\"] See {@link Collection#onConflict}.\n * @param {string} [opts.mapper] See {@link Collection#mapper}.\n * @param {Object} [opts.recordOpts=null] See {@link Collection#recordOpts}.\n */\nexport default function Collection (records, opts) {\n  const self = this\n  _.classCallCheck(self, Collection)\n\n  if (_.isObject(records) && !_.isArray(records)) {\n    opts = records\n    records = []\n  }\n  if (_.isString(opts)) {\n    opts = { idAttribute: opts }\n  }\n\n  // Default values for arguments\n  records || (records = [])\n  opts || (opts = {})\n  opts.recordOpts || (opts.recordOpts = {})\n\n  _.fillIn(self, opts)\n  _.fillIn(self, COLLECTION_DEFAULTS)\n\n  /**\n   * Event listeners attached to this Collection.\n   *\n   * @name Collection#_listeners\n   * @instance\n   * @type {Object}\n   * @private\n   */\n  self._listeners = {}\n\n  const idAttribute = self.recordId()\n\n  /**\n   * The main index, which uses @{link Collection#recordId} as the key.\n   * @name Collection#index\n   * @type {Index}\n   */\n  self.index = new Index([idAttribute], {\n    hashCode (obj) {\n      return _.get(obj, idAttribute)\n    }\n  })\n\n  /**\n   * Object that holds the secondary indexes of this collection.\n   * @name Collection#indexes\n   * @type {Object.<string, Index>}\n   */\n  self.indexes = {}\n\n  records.forEach(function (record) {\n    record = self.mapper ? self.mapper.createRecord(record, self.recordOpts) : record\n    self.index.insertRecord(record)\n    if (record && _.isFunction(record.on)) {\n      record.on('all', self._onRecordEvent, self)\n    }\n  })\n}\n\n/**\n * Create a Collection subclass.\n *\n * @example\n * var MyCollection = Collection.extend({\n *   foo: function () { return 'bar' }\n * })\n * var collection = new MyCollection()\n * collection.foo() // \"bar\"\n *\n * @name Collection.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Collection.\n */\nCollection.extend = _.extend\n\n_.addHiddenPropsToTarget(Collection.prototype, {\n  /**\n   * Used to bind to events emitted by records in this Collection.\n   *\n   * @name Collection#_onRecordEvent\n   * @method\n   * @private\n   * @param {...*} [arg] Args passed to {@link Collection#emit}.\n   */\n  _onRecordEvent (...args) {\n    this.emit(...args)\n  },\n\n  /**\n   * Insert the provided record or records.\n   *\n   * If a record is already in the collection then the provided record will\n   * either merge with or replace the existing record based on the value of the\n   * `onConflict` option.\n   *\n   * The collection's secondary indexes will be updated as each record is\n   * visited.\n   *\n   * @name Collection#add\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} data The record or records to insert.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.onConflict] What to do when a record is already in\n   * the collection. Possible values are `merge` or `replace`.\n   * @return {(Object|Object[]|Record|Record[])} The added record or records.\n   */\n  add (records, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Collection's configuration\n    _._(self, opts)\n    records = self.beforeAdd(records, opts) || records\n\n    // Track whether just one record or an array of records is being inserted\n    let singular = false\n    const idAttribute = self.recordId()\n    if (_.isObject(records) && !_.isArray(records)) {\n      records = [records]\n      singular = true\n    }\n\n    // Map the provided records to existing records.\n    // New records will be inserted. If any records map to existing records,\n    // they will be merged into the existing records according to the onConflict\n    // option.\n    records = records.map(function (record) {\n      let id = self.recordId(record)\n      if (!_.isSorN(id)) {\n        throw new TypeError(`${idAttribute}: Expected string or number, found ${typeof id}!`)\n      }\n      // Grab existing record if there is one\n      const existing = self.get(id)\n      // If the currently visited record is just a reference to an existing\n      // record, then there is nothing to be done. Exit early.\n      if (record === existing) {\n        return existing\n      }\n\n      if (existing) {\n        // Here, the currently visited record corresponds to a record already\n        // in the collection, so we need to merge them\n        const onConflict = opts.onConflict || self.onConflict\n        if (onConflict === 'merge') {\n          _.deepMixIn(existing, record)\n        } else if (onConflict === 'replace') {\n          _.forOwn(existing, (value, key) => {\n            if (key !== idAttribute && !record.hasOwnProperty(key)) {\n              delete existing[key]\n            }\n          })\n          existing.set(record)\n        }\n        record = existing\n        // Update all indexes in the collection\n        self.updateIndexes(record)\n      } else {\n        // Here, the currently visted record does not correspond to any record\n        // in the collection, so (optionally) instantiate this record and insert\n        // it into the collection\n        record = self.mapper ? self.mapper.createRecord(record, self.recordOpts) : record\n        self.index.insertRecord(record)\n        _.forOwn(self.indexes, function (index, name) {\n          index.insertRecord(record)\n        })\n        if (record && _.isFunction(record.on)) {\n          record.on('all', self._onRecordEvent, self)\n        }\n      }\n      return record\n    })\n    // Finally, return the inserted data\n    const result = singular ? (records.length ? records[0] : undefined) : records\n    // TODO: Make this more performant (batch events?)\n    self.emit('add', result)\n    return self.afterAdd(records, opts, result) || result\n  },\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then {@link Collection#add} will return that same value.\n   *\n   * @name Collection#method\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} result The record or records\n   * that were added to this Collection by {@link Collection#add}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  afterAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}. If this method returns\n   * a value then {@link Collection#remove} will return that same value.\n   *\n   * @name Collection#afterRemove\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n   * @param {Object} record The result that will be returned by {@link Collection#remove}.\n   */\n  afterRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}. If this method\n   * returns a value then {@link Collection#removeAll} will return that same\n   * value.\n   *\n   * @name Collection#afterRemoveAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   * @param {Object} records The result that will be returned by {@link Collection#removeAll}.\n   */\n  afterRemoveAll () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then the `records` argument in {@link Collection#add} will be\n   * re-assigned to the returned value.\n   *\n   * @name Collection#beforeAdd\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} records The `records` argument passed to {@link Collection#add}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  beforeAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}.\n   *\n   * @name Collection#beforeRemove\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n   */\n  beforeRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}.\n   *\n   * @name Collection#beforeRemoveAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   */\n  beforeRemoveAll () {},\n\n  /**\n   * Find all records between two boundaries.\n   *\n   * Shortcut for `collection.query().between(18, 30, { index: 'age' }).run()`\n   *\n   * @example <caption>Get all users ages 18 to 30</caption>\n   * const users = collection.between(18, 30, { index: 'age' })\n   *\n   * @example <caption>Same as above</caption>\n   * const users = collection.between([18], [30], { index: 'age' })\n   *\n   * @name Collection#between\n   * @method\n   * @param {Array} leftKeys Keys defining the left boundary.\n   * @param {Array} rightKeys Keys defining the right boundary.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.limit] Limit the result to a certain number.\n   * @param {boolean} [opts.offset] The number of resulting records to skip.\n   * @return {Array} The result.\n   */\n  between (leftKeys, rightKeys, opts) {\n    return this.query().between(leftKeys, rightKeys, opts).run()\n  },\n\n  /**\n   * Create a new secondary index on the contents of the collection.\n   *\n   * @example <caption>Index users by age</caption>\n   * collection.createIndex('age')\n   *\n   * @example <caption>Index users by status and role</caption>\n   * collection.createIndex('statusAndRole', ['status', 'role'])\n   *\n   * @name Collection#createIndex\n   * @method\n   * @param {string} name - The name of the new secondary index.\n   * @param {string[]} [fieldList] - Array of field names to use as the key or\n   * compound key of the new secondary index. If no fieldList is provided, then\n   * the name will also be the field that is used to index the collection.\n   * @return {Collection} A reference to itself for chaining.\n   */\n  createIndex (name, fieldList, opts) {\n    const self = this\n    if (_.isString(name) && fieldList === undefined) {\n      fieldList = [name]\n    }\n    opts || (opts = {})\n    opts.hashCode = opts.hashCode || function (obj) {\n      return self.recordId(obj)\n    }\n    const index = self.indexes[name] = new Index(fieldList, opts)\n    self.index.visitAll(index.insertRecord, index)\n    return self\n  },\n\n  /**\n   * Find the record or records that match the provided query or pass the\n   * provided filter function.\n   *\n   * Shortcut for `collection.query().filter(queryOrFn[, thisArg]).run()`\n   *\n   * @example <caption>Get the draft posts created less than three months</caption>\n   * const posts = collection.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * })\n   *\n   * @example <caption>Use a custom filter function</caption>\n   * const posts = collection.filter(function (post) {\n   *   return post.isReady()\n   * })\n   *\n   * @name Collection#filter\n   * @method\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Object} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @return {Array} The result.\n   */\n  filter (query, thisArg) {\n    return this.query().filter(query, thisArg).run()\n  },\n\n  /**\n   * Iterate over all records.\n   *\n   * @example\n   * collection.forEach(function (record) {\n   *   // do something\n   * })\n   *\n   * @name Collection#forEach\n   * @method\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @return {Array} The result.\n   */\n  forEach (cb, thisArg) {\n    this.index.visitAll(cb, thisArg)\n  },\n\n  /**\n   * Get the record with the given id.\n   *\n   * @name Collection#get\n   * @method\n   * @param {(string|number)} id - The primary key of the record to get.\n   * @return {(Object|Record)} The record with the given id.\n   */\n  get (id) {\n    const instances = this.query().get(id).run()\n    return instances.length ? instances[0] : undefined\n  },\n\n  /**\n   * Find the record or records that match the provided keyLists.\n   *\n   * Shortcut for `collection.query().getAll(keyList1, keyList2, ...).run()`\n   *\n   * @example <caption>Get the posts where \"status\" is \"draft\" or \"inReview\"</caption>\n   * const posts = collection.getAll('draft', 'inReview', { index: 'status' })\n   *\n   * @example <caption>Same as above</caption>\n   * const posts = collection.getAll(['draft'], ['inReview'], { index: 'status' })\n   *\n   * @name Collection#getAll\n   * @method\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * records matching each keyList will be retrieved. If no keyLists are\n   * provided, all records will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Array} The result.\n   */\n  getAll (...args) {\n    return this.query().getAll(...args).run()\n  },\n\n  /**\n   * Return the index with the given name. If no name is provided, return the\n   * main index. Throws an error if the specified index does not exist.\n   *\n   * @name Collection#getIndex\n   * @method\n   * @param {string} [name] The name of the index to retrieve.\n   */\n  getIndex (name) {\n    const index = name ? this.indexes[name] : this.index\n    if (!index) {\n      throw new Error(`Index ${name} does not exist!`)\n    }\n    return index\n  },\n\n  /**\n   * Limit the result.\n   *\n   * Shortcut for `collection.query().limit(maximumNumber).run()`\n   *\n   * @example\n   * const posts = collection.limit(10)\n   *\n   * @name Collection#limit\n   * @method\n   * @param {number} num - The maximum number of records to keep in the result.\n   * @return {Array} The result.\n   */\n  limit (num) {\n    return this.query().limit(num).run()\n  },\n\n  /**\n   * Apply a mapping function to all records.\n   *\n   * @example\n   * const names = collection.map(function (user) {\n   *   return user.name\n   * })\n   *\n   * @name Collection#map\n   * @method\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @return {Array} The result of the mapping.\n   */\n  map (cb, thisArg) {\n    const data = []\n    this.index.visitAll(function (value) {\n      data.push(cb.call(thisArg, value))\n    })\n    return data\n  },\n\n  /**\n   * Return the result of calling the specified function on each record in this\n   * collection's main index.\n   *\n   * @name Collection#mapCall\n   * @method\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @return {Array} The result.\n   */\n  mapCall (funcName, ...args) {\n    const data = []\n    this.index.visitAll(function (record) {\n      data.push(record[funcName](...args))\n    })\n    return data\n  },\n\n  /**\n   * Return the primary key of the given, or if no record is provided, return the\n   * name of the field that holds the primary key of records in this Collection.\n   *\n   * @name Collection#recordId\n   * @method\n   * @param {(Object|Record)} [record] The record whose primary key is to be\n   * returned.\n   * @return {(string|number)} Primary key or name of field that holds primary\n   * key.\n   */\n  recordId (record) {\n    if (record) {\n      return _.get(record, this.recordId())\n    }\n    const self = this\n    return self.mapper ? self.mapper.idAttribute : self.idAttribute || 'id'\n  },\n\n  /**\n   * Create a new query to be executed against the contents of the collection.\n   * The result will be all or a subset of the contents of the collection.\n   *\n   * @example <caption>Grab page 2 of users between ages 18 and 30</caption>\n   * collection.query()\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n   *   .skip(10) // second page\n   *   .limit(10) // page size\n   *   .run()\n   *\n   * @name Collection#query\n   * @method\n   * @return {Query} New query object.\n   */\n  query () {\n    return new Query(this)\n  },\n\n  /**\n   * Reduce the data in the collection to a single value and return the result.\n   *\n   * @example\n   * const totalVotes = collection.reduce(function (prev, record) {\n   *   return prev + record.upVotes + record.downVotes\n   * }, 0)\n   *\n   * @name Collection#reduce\n   * @method\n   * @param {Function} cb - Reduction callback.\n   * @param {*} initialValue - Initial value of the reduction.\n   * @return {*} The result.\n   */\n  reduce (cb, initialValue) {\n    const data = this.getAll()\n    return data.reduce(cb, initialValue)\n  },\n\n  /**\n   * Remove the record with the given id from this Collection.\n   *\n   * @name Collection#remove\n   * @method\n   * @param {(string|number)} id - The primary key of the record to be removed.\n   * @param {Object} [opts] - Configuration options.\n   * @return {Object|Record} The removed record, if any.\n   */\n  remove (id, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemove(id, opts)\n    const record = self.get(id)\n\n    // The record is in the collection, remove it\n    if (record) {\n      self.index.removeRecord(record)\n      _.forOwn(self.indexes, function (index, name) {\n        index.removeRecord(record)\n      })\n      if (record && _.isFunction(record.off)) {\n        record.off('all', self._onRecordEvent, self)\n        self.emit('remove', record)\n      }\n    }\n    return self.afterRemove(id, opts, record) || record\n  },\n\n  /**\n   * Remove the record selected by \"query\" from this collection.\n   *\n   * @name Collection#removeAll\n   * @method\n   * @param {Object} [query={}] - Selection query.\n   * @param {Object} [query.where] - Filtering criteria.\n   * @param {number} [query.skip] - Number to skip.\n   * @param {number} [query.limit] - Number to limit to.\n   * @param {Array} [query.orderBy] - Sorting criteria.\n   * @param {Object} [opts] - Configuration options.\n   * @return {(Object[]|Record[])} The removed records, if any.\n   */\n  removeAll (query, opts) {\n    const self = this\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemoveAll(query, opts)\n    const records = self.filter(query)\n\n    // Remove each selected record from the collection\n    records.forEach(function (item) {\n      self.remove(self.recordId(item), opts)\n    })\n    return self.afterRemoveAll(query, opts, records) || records\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * Shortcut for `collection.query().skip(numberToSkip).run()`\n   *\n   * @example\n   * const posts = collection.skip(10)\n   *\n   * @name Collection#skip\n   * @method\n   * @param {number} num - The number of records to skip.\n   * @return {Array} The result.\n   */\n  skip (num) {\n    return this.query().skip(num).run()\n  },\n\n  /**\n   * Return the plain JSON representation of all items in this collection.\n   * Assumes records in this collection have a toJSON method.\n   *\n   * @name Collection#toJSON\n   * @method\n   * @param {Object} [opts] - Configuration options.\n   * @param {string[]} [opts.with] - Array of relation names or relation fields\n   * to include in the representation.\n   * @return {Array} The records.\n   */\n  toJSON (opts) {\n    return this.mapCall('toJSON', opts)\n  },\n\n  /**\n   * Update a record's position in a single index of this collection. See\n   * {@link Collection#updateIndexes} to update a record's position in all\n   * indexes at once.\n   *\n   * @name Collection#updateIndex\n   * @method\n   * @param {Object} record - The record to update.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] The index in which to update the record's\n   * position. If you don't specify an index then the record will be updated\n   * in the main index.\n   */\n  updateIndex (record, opts) {\n    opts || (opts = {})\n    this.getIndex(opts.index).updateRecord(record)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Collection#updateIndexes\n   * @method\n   * @param {Object} record - TODO\n   * @param {Object} [opts] - Configuration options.\n   */\n  updateIndexes (record) {\n    const self = this\n    self.index.updateRecord(record)\n    _.forOwn(self.indexes, function (index, name) {\n      index.updateRecord(record)\n    })\n  }\n})\n\n/**\n * TODO\n *\n * @name Collection#on\n * @method\n * @param {string} event TODO.\n * @param {Function} handler TODO\n */\n\n /**\n * TODO\n *\n * @name Collection#off\n * @method\n * @param {string} [event] TODO.\n * @param {Function} [handler] TODO\n */\n\n /**\n * TODO\n *\n * @name Collection#emit\n * @method\n * @param {string} event TODO.\n * @param {...*} [arg] TODO\n */\n\n_.eventify(\n  Collection.prototype,\n  function () {\n    return this._listeners\n  },\n  function (value) {\n    this._listeners = value\n  }\n)\n","import _ from './utils'\n\nexport const belongsToType = 'belongsTo'\nexport const hasManyType = 'hasMany'\nexport const hasOneType = 'hasOne'\n\nfunction Relation (related, opts) {\n  const self = this\n\n  opts || (opts = {})\n\n  const localField = opts.localField\n  if (!localField) {\n    throw new Error('localField is required')\n  }\n\n  const foreignKey = opts.foreignKey = opts.foreignKey || opts.localKey\n  if (!foreignKey && (opts.type === belongsToType || opts.type === hasOneType)) {\n    throw new Error('foreignKey is required')\n  }\n  const localKeys = opts.localKeys\n  const foreignKeys = opts.foreignKeys\n  if (!foreignKey && !localKeys && !foreignKeys && opts.type === hasManyType) {\n    throw new Error('one of (foreignKey, localKeys, foreignKeys) is required')\n  }\n\n  if (_.isString(related)) {\n    opts.relation = related\n    if (!_.isFunction(opts.getRelation)) {\n      throw new Error('you must provide a reference to the related mapper!')\n    }\n  } else if (related) {\n    opts.relation = related.name\n    Object.defineProperty(self, 'relatedMapper', {\n      value: related\n    })\n  }\n\n  _.fillIn(self, opts)\n}\n\n_.addHiddenPropsToTarget(Relation.prototype, {\n  getRelation () {\n    return this.relatedMapper\n  },\n  getLocalKeys (record) {\n\n  },\n  getForeignKey (record) {\n    if (this.type === belongsToType) {\n      return _.get(record, this.foreignKey)\n    }\n    return _.get(record, this.mapper.idAttribute)\n  },\n  setForeignKey (record, relatedRecord) {\n    const self = this\n    if (!record || !relatedRecord) {\n      return\n    }\n    if (self.type === belongsToType) {\n      _.set(record, self.foreignKey, _.get(relatedRecord, self.getRelation().idAttribute))\n    } else {\n      const idAttribute = self.mapper.idAttribute\n      if (_.isArray(relatedRecord)) {\n        relatedRecord.forEach(function (relatedRecordItem) {\n          _.set(relatedRecordItem, self.foreignKey, _.get(record, idAttribute))\n        })\n      } else {\n        _.set(relatedRecord, self.foreignKey, _.get(record, idAttribute))\n      }\n    }\n  },\n  getLocalField (record) {\n    return _.get(record, this.localField)\n  },\n  setLocalField (record, data) {\n    return _.set(record, this.localField, data)\n  }\n})\n\nconst relatedTo = function (mapper, related, opts) {\n  opts || (opts = {})\n  if (!opts.type) {\n    throw new Error('must specify relation type!')\n  }\n  opts.mapper = mapper\n  opts.name = mapper.name\n  const relation = new Relation(related, opts)\n\n  mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n  mapper.relationFields || Object.defineProperty(mapper, 'relationFields', { value: [] })\n  mapper.relationList.push(relation)\n  mapper.relationFields.push(relation.localField)\n}\n\n/**\n * TODO\n *\n * @name module:js-data.belongsTo\n * @method\n * @param {Mapper} related The relation the target belongs to.\n * @param {Object} opts Configuration options.\n * @param {string} opts.foreignKey The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const belongsTo = function (related, opts) {\n  opts || (opts = {})\n  opts.type = belongsToType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name module:js-data.hasMany\n * @method\n * @param {Mapper} related The relation of which the target has many.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasMany = function (related, opts) {\n  opts || (opts = {})\n  opts.type = hasManyType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name module:js-data.hasOne\n * @method\n * @param {Mapper} related The relation of which the target has one.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasOne = function (related, opts) {\n  opts || (opts = {})\n  opts.type = hasOneType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n","import _ from './utils'\n\n/**\n * js-data's Record class.\n *\n * ```javascript\n * import {Record} from 'js-data'\n * ```\n *\n * @class Record\n * @param {Object} [props] The initial properties of the new Record instance.\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n * initial properties.\n */\nexport default function Record (props, opts) {\n  const self = this\n  _.classCallCheck(self, Record)\n\n  props || (props = {})\n  opts || (opts = {})\n  const _props = {}\n  Object.defineProperties(self, {\n    _get: {\n      value (key) {\n        return _.get(_props, key)\n      }\n    },\n    _set: {\n      value (key, value) {\n        return _.set(_props, key, value)\n      }\n    },\n    _unset: {\n      value (key) {\n        return _.unset(_props, key)\n      }\n    }\n  })\n  const _set = self._set\n  // TODO: Optimize these strings\n  _set('creating', true)\n  if (opts.noValidate) {\n    _set('noValidate', true)\n  }\n  _.fillIn(self, props)\n  _set('creating') // unset\n  _set('noValidate') // unset\n  _set('previous', _.copy(props))\n}\n\n/**\n * Create a Record subclass.\n *\n * ```javascript\n * var MyRecord = Record.extend({\n *   foo: function () { return 'bar' }\n * })\n * var record = new MyRecord()\n * record.foo() // \"bar\"\n * ```\n *\n * @name Record.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Record.\n */\nRecord.extend = _.extend\n\n_.addHiddenPropsToTarget(Record.prototype, {\n  /**\n   * TODO\n   *\n   * @name Record#_mapper\n   * @method\n   * @ignore\n   */\n  _mapper () {\n    if (!this.constructor.Mapper) {\n      throw new Error('This RecordClass has no Mapper!')\n    }\n    return this.constructor.Mapper\n  },\n\n  /**\n   * Return the value at the given path for this instance.\n   *\n   * @name Record#get\n   * @method\n   * @param {string} key - Path of value to retrieve.\n   * @return {*} Value at path.\n   */\n  get: function (key) {\n    return _.get(this, key)\n  },\n\n  /**\n   * Set the value for a given key, or the values for the given keys if \"key\" is\n   * an object.\n   *\n   * @name Record#set\n   * @method\n   * @param {(string|Object)} key - Key to set or hash of key-value pairs to set.\n   * @param {*} [value] - Value to set for the given key.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  set: function (key, value, opts) {\n    const self = this\n    if (_.isObject(key)) {\n      opts = value\n    }\n    opts || (opts = {})\n    if (opts.silent) {\n      self._set('silent', true)\n    }\n    _.set(self, key, value)\n    if (!self._get('eventId')) {\n      self._set('silent') // unset\n    }\n  },\n\n  /**\n   * Unset the value for a given key.\n   *\n   * @name Record#unset\n   * @method\n   * @param {string} key - Key to unset.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  unset (key, opts) {\n    this.set(key, undefined, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#hashCode\n   * @method\n   */\n  hashCode () {\n    const self = this\n    return _.get(self, self._mapper().idAttribute)\n  },\n\n  /**\n   * Return changes to this record since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @name Record#changes\n   * @method\n   * @param {Function} [equalsFn] Equality function. Default uses `===`.\n   * @param {Array} [ignore] Array of strings or RegExp of fields to ignore.\n   */\n  changes (equalsFn, ignore) {\n    const self = this\n    return _.diffObjects(self, self._get('previous'), equalsFn, ignore)\n  },\n\n  /**\n   * Return whether this record has changed since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @name Record#hasChanges\n   * @method\n   * @param {Function} [equalsFn] Equality function. Default uses `===`.\n   * @param {Array} [ignore] Array of strings or RegExp of fields to ignore.\n   */\n  hasChanges (equalsFn, ignore) {\n    const self = this\n    const quickHasChanges = !!(self._get('changed') || []).length\n    return quickHasChanges || _.areDifferent(self, self._get('previous'), equalsFn, ignore)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#commit\n   * @method\n   */\n  commit () {\n    const self = this\n    self._set('changed') // unset\n    self._set('previous', _.copy(self))\n    return self\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#previous\n   * @method\n   * @param {string} [key] TODO\n   */\n  previous (key) {\n    const self = this\n    if (key) {\n      return self._get(`previous.${key}`)\n    }\n    return self._get('previous')\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#revert\n   * @method\n   * @param {Object} [opts] Configuration options.\n   */\n  revert (opts) {\n    const self = this\n    const previous = self._get('previous') || {}\n    opts || (opts = {})\n    opts.preserve || (opts.preserve = [])\n    _.forOwn(self, (value, key) => {\n      if (key !== self._mapper().idAttribute && !previous.hasOwnProperty(key) && self.hasOwnProperty(key) && opts.preserve.indexOf(key) === -1) {\n        delete self[key]\n      }\n    })\n    _.forOwn(previous, (value, key) => {\n      if (opts.preserve.indexOf(key) === -1) {\n        self[key] = value\n      }\n    })\n    self.commit()\n    return self\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#schema\n   * @method\n   * @param {string} [key] TODO\n   */\n  schema (key) {\n    let _schema = this._mapper().schema\n    return key ? _schema[key] : _schema\n  },\n\n  // validate (obj, value) {\n  //   let errors = []\n  //   let _schema = this.schema()\n  //   if (!obj) {\n  //     obj = this\n  //   } else if (utils.isString(obj)) {\n  //     const prop = _schema[obj]\n  //     if (prop) {\n  //       errors = validate.validate(prop, value) || []\n  //     }\n  //   } else {\n  //     utils. _.forOwn(_schema, function (prop, key) {\n  //       errors = errors.concat(validate.validate(prop, utils.get(obj, key)) || [])\n  //     })\n  //   }\n  //   return errors.length ? errors : undefined\n  // },\n\n  /**\n   * TODO\n   *\n   * @name Record#create\n   * @method\n   * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\n   */\n  create (opts) {\n    return this._mapper().create(this, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#beforeSave\n   * @method\n   * @param {Object} opts TODO\n   */\n  beforeSave () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#save\n   * @method\n   * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\n   */\n  save (opts) {\n    let op, adapter\n    const self = this\n    const Mapper = self._mapper()\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeSave lifecycle hook\n    op = opts.op = 'beforeSave'\n    return _.resolve(self[op](opts)).then(function () {\n      // Now delegate to the adapter\n      op = opts.op = 'save'\n      Mapper.dbg(op, self, opts)\n      return self.getAdapter(adapter)[op](Mapper, self, opts)\n    }).then(function (data) {\n      // afterSave lifecycle hook\n      op = opts.op = 'afterSave'\n      return _.resolve(self[op](data, opts)).then(function (_data) {\n        // Allow for re-assignment from lifecycle hook\n        data = _data || data\n        if (opts.raw) {\n          self.set(data.data)\n          data.data = self\n        } else {\n          self.set(data)\n        }\n        return Mapper.end(data, opts)\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#afterSave\n   * @method\n   * @param {Object} opts TODO\n   */\n  afterSave () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#beforeLoadRelations\n   * @method\n   * @param {string[]} relations TODO\n   * @param {Object} opts TODO\n   */\n  beforeLoadRelations () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#loadRelations\n   * @method\n   * @param {string[]} [relations] TODO\n   * @param {Object} [opts] TODO\n   */\n  loadRelations (relations, opts) {\n    let op\n    const self = this\n    const Mapper = self._mapper()\n    const relationList = Mapper.relationList || []\n\n    // Default values for arguments\n    relations || (relations = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Model's configuration\n    _._(Mapper, opts)\n    opts.adapter = Mapper.getAdapterName(opts)\n\n    // beforeLoadRelations lifecycle hook\n    op = opts.op = 'beforeLoadRelations'\n    return _.resolve(self[op](relations, opts)).then(function () {\n      if (_.isString(relations)) {\n        relations = [relations]\n      }\n      // Now delegate to the adapter\n      op = opts.op = 'loadRelations'\n      Mapper.dbg(op, self, relations, opts)\n      return Promise.all(relationList.map(function (def) {\n        if (_.isFunction(def.load)) {\n          return def.load(Mapper, def, self, opts)\n        }\n        let task\n        if (def.type === 'hasMany' && def.foreignKey) {\n          // hasMany\n          task = def.getRelation().findAll({\n            [def.foreignKey]: _.get(self, Mapper.idAttribute)\n          }, opts)\n        } else if (def.foreignKey) {\n          // belongsTo or hasOne\n          const key = _.get(self, def.foreignKey)\n          if (_.isSorN(key)) {\n            task = def.getRelation().find(key, opts)\n          }\n        } else if (def.localKeys) {\n          // hasMany\n          task = def.getRelation().findAll({\n            [def.getRelation().idAttribute]: {\n              'in': _.get(self, def.localKeys)\n            }\n          }, opts)\n        } else if (def.foreignKeys) {\n          // hasMany\n          task = def.getRelation().findAll({\n            [def.getRelation().idAttribute]: {\n              'contains': _.get(self, Mapper.idAttribute)\n            }\n          }, opts)\n        }\n        if (task) {\n          task = task.then(function (data) {\n            if (opts.raw) {\n              data = data.data\n            }\n            _.set(self, def.localField, def.type === 'hasOne' ? (data.length ? data[0] : undefined) : data)\n          })\n        }\n        return task\n      }))\n    }).then(function () {\n      // afterLoadRelations lifecycle hook\n      op = opts.op = 'afterLoadRelations'\n      return _.resolve(self[op](relations, opts)).then(function () {\n        return self\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#afterLoadRelations\n   * @method\n   * @param {string[]} relations TODO\n   * @param {Object} opts TODO\n   */\n  afterLoadRelations () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#destroy\n   * @method\n   * @param {Object} [opts] Configuration options. @see {@link Model.destroy}.\n   */\n  destroy (opts) {\n    // TODO: move actual destroy logic here\n    const Mapper = this._mapper()\n    return Mapper.destroy(_.get(this, Mapper.idAttribute), opts)\n  },\n\n  // TODO: move logic for single-item async operations onto the instance.\n\n  /**\n   * Return a plain object representation of this record. If the class from\n   * which this record was created has a mapper, then {@link Mapper#toJSON} will\n   * be called instead.\n   *\n   * @name Record#toJSON\n   * @method\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation. Only available as an option if the class\n   * from which this record was created has a mapper.\n   * @return {Object} Plain object representation of this record.\n   */\n  toJSON (opts) {\n    const mapper = this.constructor.Mapper\n    if (mapper) {\n      return mapper.toJSON(this, opts)\n    } else {\n      const json = {}\n      _.forOwn(this, function (prop, key) {\n        json[key] = _.copy(prop)\n      })\n      return json\n    }\n  }\n})\n\n/**\n * Register a new event listener on this Record.\n *\n * @name Record#on\n * @method\n */\n\n/**\n * Remove an event listener from this Record.\n *\n * @name Record#off\n * @method\n */\n\n/**\n * Trigger an event on this Record.\n *\n * @name Record#emit\n * @method\n * @param {string} event Name of event to emit.\n */\n\n/**\n * Allow records to emit events.\n *\n * An record's registered listeners are stored in the record's private data.\n */\n_.eventify(\n  Record.prototype,\n  function () {\n    return this._get('events')\n  },\n  function (value) {\n    this._set('events', value)\n  }\n)\n","import _ from './utils'\n\n/**\n * js-data's Schema class.\n *\n * ```javascript\n * import {Schema} from 'js-data'\n * ```\n *\n * @class Schema\n * @param {Object} definition Schema definition according to json-schema.org\n */\nexport default function Schema (definition) {\n  // const self = this\n  definition || (definition = {})\n  // TODO: schema validation\n  _.fillIn(this, definition)\n\n  // TODO: rework this to make sure all possible keywords are converted\n  if (definition.properties) {\n    _.forOwn(definition.properties, function (_definition, prop) {\n      if (!(_definition instanceof Schema)) {\n        definition.properties[prop] = new Schema(_definition)\n      }\n    })\n  }\n}\n\n/**\n * @name Schema.extend\n * @method\n */\nSchema.extend = _.extend\n\n/**\n * TODO\n *\n * @name Schema.types\n * @type {Object}\n */\nconst types = {\n  array: _.isArray,\n  boolean: _.isBoolean,\n  integer: _.isInteger,\n  'null': _.isNull,\n  number: _.isNumber,\n  object: _.isObject,\n  string: _.isString\n}\n\n/**\n * TODO\n *\n * @name Schema.typeGroupValidators\n * @type {Object}\n */\nconst typeGroupValidators = {}\n\n/**\n * TODO\n *\n * @name Schema.validationKeywords\n * @type {Object}\n */\nconst validationKeywords = {}\n\n/**\n * @ignore\n */\nconst segmentToString = function (segment, prev) {\n  let str = ''\n  if (segment) {\n    if (_.isNumber(segment)) {\n      str += `[${segment}]`\n    } else if (prev) {\n      str += `.${segment}`\n    } else {\n      str += `${segment}`\n    }\n  }\n  return str\n}\n\n/**\n * @ignore\n */\nconst makePath = function (opts) {\n  opts || (opts = {})\n  let path = ''\n  const segments = opts.path || []\n  segments.forEach(function (segment) {\n    path += segmentToString(segment, path)\n  })\n  path += segmentToString(opts.prop, path)\n  return path\n}\n\n/**\n * @ignore\n */\nconst makeError = function (actual, expected, opts) {\n  return {\n    expected,\n    actual: '' + actual,\n    path: makePath(opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst addError = function (actual, expected, opts, errors) {\n  errors.push(makeError(actual, expected, opts))\n}\n\n/**\n * @ignore\n */\nconst maxLengthCommon = function (keyword, value, schema, opts) {\n  const max = schema[keyword]\n  if (value.length > max) {\n    return makeError(value.length, `length no more than ${max}`, opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst minLengthCommon = function (keyword, value, schema, opts) {\n  const min = schema[keyword]\n  if (value.length < min) {\n    return makeError(value.length, `length no less than ${min}`, opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst validateKeyword = function (op, value, schema, opts) {\n  return !_.isUndefined(schema[op]) && validationKeywords[op](value, schema, opts)\n}\n\n/**\n * @ignore\n */\nconst runOps = function (ops, value, schema, opts) {\n  let errors = []\n  ops.forEach(function (op) {\n    errors = errors.concat(validateKeyword(op, value, schema, opts) || [])\n  })\n  return errors.length ? errors : undefined\n}\n\nconst ANY_OPS = ['enum', 'type', 'allOf', 'anyOf', 'oneOf', 'not']\nconst ARRAY_OPS = ['items', 'maxItems', 'minItems', 'uniqueItems']\nconst NUMERIC_OPS = ['multipleOf', 'maximum', 'minimum']\nconst OBJECT_OPS = ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies']\nconst STRING_OPS = ['maxLength', 'minLength', 'pattern']\n\n/**\n * http://json-schema.org/latest/json-schema-validation.html#anchor75\n * @ignore\n */\nconst validateAny = function (value, schema, opts) {\n  return runOps(ANY_OPS, value, schema, opts)\n}\n\n/**\n * TODO\n *\n * @name Schema.validate\n * @method\n * @param {*} value TODO\n * @param {Object} [schema] TODO\n * @param {Object} [opts] Configuration options.\n */\nexport const validate = function (value, schema, opts) {\n  let errors = []\n  opts || (opts = {})\n  let shouldPop\n  let prevProp = opts.prop\n  if (_.isUndefined(schema)) {\n    return\n  }\n  if (!_.isObject(schema)) {\n    throw new Error(`Invalid schema at path: \"${opts.path}\"`)\n  }\n  if (_.isUndefined(opts.path)) {\n    opts.path = []\n  }\n  // Track our location as we recurse\n  if (!_.isUndefined(opts.prop)) {\n    shouldPop = true\n    opts.path.push(opts.prop)\n    opts.prop = undefined\n  }\n  // Validate against parent schema\n  if (schema['extends']) {\n    // opts.path = path\n    // opts.prop = prop\n    if (_.isFunction(schema['extends'].validate)) {\n      errors = errors.concat(schema['extends'].validate(value, opts) || [])\n    } else {\n      errors = errors.concat(validate(value, schema['extends'], opts) || [])\n    }\n  }\n  if (_.isUndefined(value)) {\n    // Check if property is required\n    if (schema.required === true) {\n      addError(value, 'a value', opts, errors)\n    }\n    if (shouldPop) {\n      opts.path.pop()\n      opts.prop = prevProp\n    }\n    return errors.length ? errors : undefined\n  }\n  errors = errors.concat(validateAny(value, schema, opts) || [])\n  if (shouldPop) {\n    opts.path.pop()\n    opts.prop = prevProp\n  }\n  return errors.length ? errors : undefined\n}\n\nSchema.types = types\nSchema.typeGroupValidators = typeGroupValidators\nSchema.validationKeywords = validationKeywords\nSchema.validate = validate\n\n/**\n * Validate the provided value against this schema.\n *\n * @name Schema#validate\n * @method\n * @param {*} value Value to validate.\n * @param {Object} [opts] Configuration options.\n * @return {(array|undefined)} Array of errors or `undefined` if valid.\n */\nSchema.prototype.validate = function (value, opts) {\n  return Schema.validate(value, this, opts)\n}\n\n_.fillIn(validationKeywords, {\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor82\n   *\n   * @name Schema.validationKeywords.allOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  allOf (value, schema, opts) {\n    let allErrors = []\n    schema.allOf.forEach(function (_schema) {\n      allErrors = allErrors.concat(validate(value, _schema, opts) || [])\n    })\n    return allErrors.length ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor85\n   *\n   * @name Schema.validationKeywords.anyOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  anyOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.anyOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor70\n   *\n   * @name Schema.validationKeywords.dependencies\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  dependencies (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor76\n   *\n   * @name Schema.validationKeywords.enum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  enum (value, schema, opts) {\n    const possibleValues = schema['enum']\n    if (possibleValues.indexOf(value) === -1) {\n      return makeError(value, `one of (${possibleValues.join(', ')})`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor37\n   *\n   * @name Schema.validationKeywords.items\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  items (value, schema, opts) {\n    opts || (opts = {})\n    // TODO: additionalItems\n    let items = schema.items\n    let errors = []\n    const checkingTuple = _.isArray(items)\n    const length = value.length\n    for (var prop = 0; prop < length; prop++) {\n      if (checkingTuple) {\n        // Validating a tuple, instead of just checking each item against the\n        // same schema\n        items = schema.items[prop]\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], items, opts) || [])\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor17\n   *\n   * @name Schema.validationKeywords.maximum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maximum (value, schema, opts) {\n    // Must be a number\n    const maximum = schema.maximum\n    // Must be a boolean\n    // Depends on maximum\n    // default: false\n    const exclusiveMaximum = schema.exclusiveMaximum\n    if (typeof value === typeof maximum && (exclusiveMaximum ? maximum < value : maximum <= value)) {\n      // TODO: Account for value of exclusiveMaximum in messaging\n      return makeError(value, `no more than ${maximum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.maxItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxItems (value, schema, opts) {\n    return maxLengthCommon('maxItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor26\n   *\n   * @name Schema.validationKeywords.maxLength\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxLength (value, schema, opts) {\n    return maxLengthCommon('maxLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor54\n   *\n   * @name Schema.validationKeywords.maxProperties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxProperties (value, schema, opts) {\n    const maxProperties = schema.maxProperties\n    const length = Object.keys(value).length\n    if (length > maxProperties) {\n      return makeError(length, `no more than ${maxProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor21\n   *\n   * @name Schema.validationKeywords.minimum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minimum (value, schema, opts) {\n    // Must be a number\n    const minimum = schema.minimum\n    // Must be a boolean\n    // Depends on minimum\n    // default: false\n    const exclusiveMinimum = schema.exclusiveMinimum\n    if (typeof value === typeof minimum && (exclusiveMinimum ? minimum > value : minimum >= value)) {\n      // TODO: Account for value of exclusiveMinimum in messaging\n      return makeError(value, `no less than ${minimum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.minItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minItems (value, schema, opts) {\n    return minLengthCommon('minItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor29\n   *\n   * @name Schema.validationKeywords.minLength\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minLength (value, schema, opts) {\n    return minLengthCommon('minLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor57\n   *\n   * @name Schema.validationKeywords.minProperties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minProperties (value, schema, opts) {\n    const minProperties = schema.minProperties\n    const length = Object.keys(value).length\n    if (length < minProperties) {\n      return makeError(length, `no more than ${minProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor14\n   *\n   * @name Schema.validationKeywords.multipleOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  multipleOf (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor91\n   *\n   * @name Schema.validationKeywords.not\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  not (value, schema, opts) {\n    if (!validate(value, schema.not, opts)) {\n      // TODO: better messaging\n      return makeError('succeeded', 'should have failed', opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor88\n   *\n   * @name Schema.validationKeywords.oneOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  oneOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.oneOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else if (validated) {\n        allErrors = [makeError('valid against more than one', 'valid against only one', opts)]\n        validated = false\n        return false\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor33\n   *\n   * @name Schema.validationKeywords.pattern\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  pattern (value, schema, opts) {\n    const pattern = schema.pattern\n    if (_.isString(value) && !value.match(pattern)) {\n      return makeError(value, pattern, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor64\n   *\n   * @name Schema.validationKeywords.properties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  properties (value, schema, opts) {\n    opts || (opts = {})\n    // Can be a boolean or an object\n    // Technically the default is an \"empty schema\", but here \"true\" is\n    // functionally the same\n    const additionalProperties = _.isUndefined(schema.additionalProperties) ? true : schema.additionalProperties\n    // \"s\": The property set of the instance to validate.\n    const toValidate = {}\n    // \"p\": The property set from \"properties\".\n    // Default is an object\n    const properties = schema.properties || {}\n    // \"pp\": The property set from \"patternProperties\".\n    // Default is an object\n    const patternProperties = schema.patternProperties || {}\n    let errors = []\n\n    // Collect set \"s\"\n    _.forOwn(value, function (_value, prop) {\n      toValidate[prop] = undefined\n    })\n    // Remove from \"s\" all elements of \"p\", if any.\n    _.forOwn(properties || {}, function (_schema, prop) {\n      if (_.isUndefined(value[prop]) && !_.isUndefined(_schema['default'])) {\n        value[prop] = _.copy(_schema['default'])\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], _schema, opts) || [])\n      delete toValidate[prop]\n    })\n    // For each regex in \"pp\", remove all elements of \"s\" which this regex\n    // matches.\n    _.forOwn(patternProperties, function (_schema, pattern) {\n      _.forOwn(toValidate, function (undef, prop) {\n        if (prop.match(pattern)) {\n          opts.prop = prop\n          errors = errors.concat(validate(value[prop], _schema, opts) || [])\n          delete toValidate[prop]\n        }\n      })\n    })\n    const keys = Object.keys(toValidate)\n    // If \"s\" is not empty, validation fails\n    if (additionalProperties === false) {\n      if (keys.length) {\n        addError(`extra fields: ${keys.join(', ')}`, 'no extra fields', opts, errors)\n      }\n    } else if (_.isObject(additionalProperties)) {\n      // Otherwise, validate according to provided schema\n      keys.forEach(function (prop) {\n        opts.prop = prop\n        errors = errors.concat(validate(value[prop], additionalProperties, opts) || [])\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor61\n   *\n   * @name Schema.validationKeywords.required\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  required (value, schema, opts) {\n    const required = schema.required\n    let errors = []\n    if (!opts.existingOnly) {\n      required.forEach(function (prop) {\n        if (_.isUndefined(_.get(value, prop))) {\n          const prevProp = opts.prop\n          opts.prop = prop\n          addError(undefined, 'a value', opts, errors)\n          opts.prop = prevProp\n        }\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor79\n   *\n   * @name Schema.validationKeywords.type\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  type (value, schema, opts) {\n    let type = schema.type\n    let validType\n    // Can be one of several types\n    if (_.isString(type)) {\n      type = [type]\n    }\n    // Try to match the value against an expected type\n    type.forEach(function (_type) {\n      // TODO: throw an error if type is not defined\n      if (types[_type](value, schema, opts)) {\n        // Matched a type\n        validType = _type\n        return false\n      }\n    })\n    // Value did not match any expected type\n    if (!validType) {\n      return makeError(value ? typeof value : '' + value, `one of (${type.join(', ')})`, opts)\n    }\n    // Run keyword validators for matched type\n    // http://json-schema.org/latest/json-schema-validation.html#anchor12\n    const validator = typeGroupValidators[validType]\n    if (validator) {\n      return validator(value, schema, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor49\n   *\n   * @name Schema.validationKeywords.uniqueItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  uniqueItems (value, schema, opts) {\n    if (value && value.length && schema.uniqueItems) {\n      const length = value.length\n      let item, i, j\n      // Check n - 1 items\n      for (i = length - 1; i > 0; i--) {\n        item = value[i]\n        // Only compare against unchecked items\n        for (j = i - 1; j >= 0; j--) {\n          // Found a duplicate\n          if (item === value[j]) {\n            return makeError(item, 'no duplicates', opts)\n          }\n        }\n      }\n    }\n  }\n})\n\n_.fillIn(typeGroupValidators, {\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.array\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  array: function (value, schema, opts) {\n    return runOps(ARRAY_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.integer\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  integer: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.number\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  number: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor13.\n   *\n   * @name Schema.typeGroupValidators.numeric\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  numeric: function (value, schema, opts) {\n    return runOps(NUMERIC_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor53.\n   *\n   * @name Schema.typeGroupValidators.object\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  object: function (value, schema, opts) {\n    return runOps(OBJECT_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor25.\n   *\n   * @name Schema.typeGroupValidators.string\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  string: function (value, schema, opts) {\n    return runOps(STRING_OPS, value, schema, opts)\n  }\n})\n","import _ from './utils'\nimport {\n  belongsTo,\n  belongsToType,\n  hasMany,\n  hasManyType,\n  hasOne,\n  hasOneType\n} from './decorators'\nimport Record from './Record'\nimport Schema from './Schema'\n\n// These strings are cached for optimal performance of the change detection\nconst changingPath = 'changing'\nconst changedPath = 'changed'\nconst creatingPath = 'creating'\nconst eventIdPath = 'eventId'\nconst noValidatePath = 'noValidate'\nconst silentPath = 'silent'\nconst validationFailureMsg = 'validation failed'\n\n/**\n * Assemble a property descriptor which will be added to the prototype of\n * {@link Mapper#RecordClass}. This method is called when\n * {@link Mapper#applySchema} is set to `true`.\n *\n * @ignore\n */\nconst makeDescriptor = function (prop, schema) {\n  const descriptor = {\n    // These properties are enumerable by default, but regardless of their\n    // enumerability, they won't be \"own\" properties of individual records\n    enumerable: _.isUndefined(schema.enumerable) ? true : !!schema.enumerable\n  }\n  // Cache a few strings for optimal performance\n  const keyPath = `props.${prop}`\n  const previousPath = `previous.${prop}`\n\n  descriptor.get = function () {\n    return this._get(keyPath)\n  }\n  descriptor.set = function (value) {\n    const self = this\n    // These are accessed a lot\n    const _get = self._get\n    const _set = self._set\n    const _unset = self._unset\n\n    // Optionally check that the new value passes validation\n    if (!_get(noValidatePath)) {\n      const errors = schema.validate(value)\n      if (errors) {\n        // Immediately throw an error, preventing the record from getting into\n        // an invalid state\n        const error = new Error(validationFailureMsg)\n        error.errors = errors\n        throw error\n      }\n    }\n    // TODO: Make it so tracking can be turned on for all properties instead of\n    // only per-property\n    if (schema.track && !_get(creatingPath)) {\n      const previous = _get(previousPath)\n      const current = _get(keyPath)\n      let changing = _get(changingPath)\n      let changed = _get(changedPath)\n\n      if (!changing) {\n        // Track properties that are changing in the current event loop\n        changed = []\n      }\n\n      // Add changing properties to this array once at most\n      const index = changed.indexOf(prop)\n      if (current !== value && index === -1) {\n        changed.push(prop)\n      }\n      if (previous === value) {\n        if (index >= 0) {\n          changed.splice(index, 1)\n        }\n      }\n      // No changes in current event loop\n      if (!changed.length) {\n        changing = false\n        _unset(changingPath)\n        _unset(changedPath)\n        // Cancel pending change event\n        if (_get(eventIdPath)) {\n          clearTimeout(_get(eventIdPath))\n          _unset(eventIdPath)\n        }\n      }\n      // Changes detected in current event loop\n      if (!changing && changed.length) {\n        _set(changedPath, changed)\n        _set(changingPath, true)\n        // Saving the timeout id allows us to batch all changes in the same\n        // event loop into a single \"change\"\n        // TODO: Optimize\n        _set(eventIdPath, setTimeout(() => {\n          // Previous event loop where changes were gathered has ended, so\n          // notify any listeners of those changes and prepare for any new\n          // changes\n          _unset(changedPath)\n          _unset(eventIdPath)\n          _unset(changingPath)\n          // TODO: Optimize\n          if (!_get(silentPath)) {\n            let i\n            for (i = 0; i < changed.length; i++) {\n              self.emit('change:' + changed[i], self, _.get(self, changed[i]))\n            }\n            self.emit('change', self, self.changes())\n          }\n          _unset(silentPath)\n        }, 0))\n      }\n    }\n    _set(keyPath, value)\n    return value\n  }\n\n  return descriptor\n}\n\n/**\n * This changes properties defined in {@link Mapper#schema} from plain\n * properties to ES5 getter/setter properties, which makes possible change\n * tracking and validation on property assignment.\n *\n * @ignore\n */\nconst applySchema = function (schema, target) {\n  const properties = schema.properties || {}\n  _.forOwn(properties, function (schema, prop) {\n    Object.defineProperty(\n      target,\n      prop,\n      makeDescriptor(prop, schema)\n    )\n  })\n}\n\nconst notify = function (...args) {\n  const self = this\n  const opts = args[args.length - 1]\n  self.dbg(opts.op, ...args)\n  if (opts.notify || (opts.notify === undefined && self.notify)) {\n    setTimeout(() => {\n      self.emit(opts.op, ...args)\n    })\n  }\n}\n\nconst notify2 = function (...args) {\n  const self = this\n  const opts = args[args.length - 2]\n  self.dbg(opts.op, ...args)\n  if (opts.notify || (opts.notify === undefined && self.notify)) {\n    setTimeout(() => {\n      self.emit(opts.op, ...args)\n    })\n  }\n}\n\nconst MAPPER_DEFAULTS = {\n  /**\n   * Whether to augment {@link Mapper#RecordClass} with getter/setter property\n   * accessors according to the properties defined in {@link Mapper#schema}.\n   * This makes possible validation and change tracking on individual properties\n   * when using the dot (e.g. `user.name = \"Bob\"`) operator to modify a\n   * property.\n   *\n   * @name Mapper#applySchema\n   * @type {boolean}\n   * @default true\n   */\n  applySchema: true,\n\n  /**\n   * The name of the registered adapter that this Mapper should used by default.\n   *\n   * @name Mapper#defaultAdapter\n   * @type {string}\n   * @default \"http\"\n   */\n  defaultAdapter: 'http',\n\n  /**\n   * Whether to enable debug-level logs.\n   *\n   * @name Mapper#debug\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n\n  /**\n   * The field used as the unique identifier on records handled by this Mapper.\n   *\n   * @name Mapper#idAttribute\n   * @type {string}\n   * @default id\n   */\n  idAttribute: 'id',\n\n  /**\n   * Minimum amount of meta information required to start operating against a\n   * resource.\n   *\n   * @name Mapper#name\n   * @type {string}\n   */\n  name: null,\n\n  /**\n   * Whether this Mapper should emit operational events.\n   *\n   * Defaults to `true` in the browser and `false` in Node.js\n   *\n   * @name Mapper#notify\n   * @type {boolean}\n   */\n  notify: _.isBrowser,\n\n  /**\n   * Whether {@link Mapper#create}, {@link Mapper#createMany}, {@link Mapper#save},\n   * {@link Mapper#update}, {@link Mapper#updateAll}, {@link Mapper#updateMany},\n   * {@link Mapper#find}, {@link Mapper#findAll}, {@link Mapper#destroy}, and\n   * {@link Mapper#destroyAll} should return a raw result object that contains\n   * both the instance data returned by the adapter _and_ metadata about the\n   * operation.\n   *\n   * The default is to NOT return the result object, and instead return just the\n   * instance data.\n   *\n   * @name Mapper#raw\n   * @type {boolean}\n   * @default false\n   */\n  raw: false,\n\n  schema: null\n}\n\n/**\n * ```javascript\n * import {Mapper} from 'js-data'\n * ```\n *\n * The core of JSData's [ORM/ODM][orm] implementation. Given a minimum amout of\n * meta information about a resource, a Mapper can perform generic CRUD\n * operations against that resource. Apart from its configuration, a Mapper is\n * stateless. The particulars of various persistence layers has been abstracted\n * into adapters, which a Mapper uses to perform its operations.\n *\n * The term \"Mapper\" comes from the [Data Mapper Pattern][pattern] described in\n * Martin Fowler's [Patterns of Enterprise Application Architecture][book]. A\n * Data Mapper moves data between [in-memory object instances][record] and a\n * relational or document-based database. JSData's Mapper can work with any\n * persistence layer you can write an adapter for.\n *\n * _._(\"Model\" is a heavily overloaded term and is avoided in this documentation\n * to prevent confusion.)_\n *\n * [orm]: https://en.wikipedia.org/wiki/Object-relational_mapping\n * [pattern]: https://en.wikipedia.org/wiki/Data_mapper_pattern\n * [book]: http://martinfowler.com/books/eaa.html\n * [record]: Record.html\n *\n * @class Mapper\n * @param {Object} [opts] Configuration options.\n */\nexport default function Mapper (opts) {\n  const self = this\n  _.classCallCheck(self, Mapper)\n\n  opts || (opts = {})\n\n  /**\n   * Hash of registered adapters. Don't modify. Use {@link Mapper#registerAdapter}.\n   *\n   * @name Mapper#_adapters\n   * @private\n   */\n  Object.defineProperty(self, '_adapters', {\n    value: undefined,\n    writable: true\n  })\n\n  /**\n   * Hash of registered listeners. Don't modify. Use {@link Mapper#on} and\n   * {@link Mapper#off}.\n   *\n   * @name Mapper#_listeners\n   * @private\n   */\n  Object.defineProperty(self, '_listeners', {\n    value: undefined,\n    writable: true\n  })\n\n  /**\n   * Set the `false` to force the Mapper to work with POJO objects only.\n   *\n   * ```javascript\n   * import {Mapper, Record} from 'js-data'\n   * const UserMapper = new Mapper({ RecordClass: false })\n   * UserMapper.RecordClass // false\n   * const user = UserMapper#createRecord()\n   * user instanceof Record // false\n   * ```\n   *\n   * Set to a custom class to have records wrapped in your custom class.\n   *\n   * ```javascript\n   * import {Mapper, Record} from 'js-data'\n   *  // Custom class\n   * class User {\n   *   constructor (props = {}) {\n   *     for (var key in props) {\n   *       if (props.hasOwnProperty(key)) {\n   *         this[key] = props[key]\n   *       }\n   *     }\n   *   }\n   * }\n   * const UserMapper = new Mapper({ RecordClass: User })\n   * UserMapper.RecordClass // function User() {}\n   * const user = UserMapper#createRecord()\n   * user instanceof Record // false\n   * user instanceof User // true\n   * ```\n   *\n   * Extend the {@link Record} class.\n   *\n   * ```javascript\n   * import {Mapper, Record} from 'js-data'\n   *  // Custom class\n   * class User extends Record {\n   *   constructor () {\n   *     super(props)\n   *   }\n   * }\n   * const UserMapper = new Mapper({ RecordClass: User })\n   * UserMapper.RecordClass // function User() {}\n   * const user = UserMapper#createRecord()\n   * user instanceof Record // true\n   * user instanceof User // true\n   * ```\n   *\n   * @name Mapper#RecordClass\n   * @default {@link Record}\n   */\n  Object.defineProperty(self, 'RecordClass', {\n    value: undefined,\n    writable: true\n  })\n\n  _.fillIn(self, opts)\n  _.fillIn(self, _.copy(MAPPER_DEFAULTS))\n\n  if (!self.name) {\n    throw new Error('mapper cannot function without a name!')\n  }\n\n  self._adapters || (self._adapters = {})\n  self._listeners || (self._listeners = {})\n\n  if (!(self.schema instanceof Schema)) {\n    self.schema = new Schema(self.schema || {})\n  }\n\n  if (_.isUndefined(self.RecordClass)) {\n    self.RecordClass = Record.extend()\n  }\n\n  if (self.RecordClass) {\n    self.RecordClass.Mapper = self\n\n    // We can only apply the schema to the prototype of self.RecordClass if the\n    // class extends Record\n    if (_.getSuper(self.RecordClass, true) === Record && self.applySchema) {\n      applySchema(self.schema, self.RecordClass.prototype)\n    }\n  }\n}\n\n/**\n * Instance members\n */\n_.addHiddenPropsToTarget(Mapper.prototype, {\n  /**\n   * @name Mapper#_end\n   * @method\n   * @private\n   */\n  _end (data, opts) {\n    const self = this\n    if (opts.raw) {\n      _._(opts, data)\n    }\n    let _data = opts.raw ? data.data : data\n    if (_.isArray(_data) && _data.length && _.isObject(_data[0])) {\n      _data = _data.map(function (item) {\n        return self.createRecord(item)\n      })\n    } else if (_.isObject(_data)) {\n      _data = self.createRecord(_data)\n    }\n    if (opts.raw) {\n      data.data = _data\n    } else {\n      data = _data\n    }\n    return data\n  },\n\n  /**\n   * Create an unsaved, uncached instance of this Mapper's\n   * {@link Mapper#RecordClass}.\n   *\n   * Returns `props` if `props` is already an instance of\n   * {@link Mapper#RecordClass}.\n   *\n   * @name Mapper#createRecord\n   * @method\n   * @param {Object} props The initial properties of the new unsaved record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n   * initial properties.\n   * @return {Object} The unsaved record.\n   */\n  createRecord (props, opts) {\n    const self = this\n    const RecordClass = self.RecordClass\n    const relationList = self.relationList || []\n    relationList.forEach(function (def) {\n      const relatedMapper = def.getRelation()\n      const relationData = def.getLocalField(props)\n      if (_.isArray(relationData) && relationData.length && !relatedMapper.is(relationData[0])) {\n        def.setLocalField(props, relationData.map(function (relationDataItem) {\n          return def.getRelation().createRecord(relationDataItem)\n        }))\n      } else if (_.isObject(relationData) && !relatedMapper.is(relationData)) {\n        def.setLocalField(props, def.getRelation().createRecord(relationData))\n      }\n    })\n    // Check to make sure \"props\" is not already an instance of this Mapper.\n    return RecordClass ? (props instanceof RecordClass ? props : new RecordClass(props, opts)) : props\n  },\n\n  /**\n   * Return whether `record` is an instance of this Mappers's RecordClass.\n   *\n   * @name Mapper#is\n   * @method\n   * @param {Object} record The record to check.\n   * @return {boolean} Whether `record` is an instance of this Mappers's\n   * {@ link Mapper#RecordClass}.\n   */\n  is (record) {\n    const RecordClass = this.RecordClass\n    return RecordClass ? record instanceof RecordClass : false\n  },\n\n  /**\n   * Return a plain object representation of the given record.\n   *\n   * @name Mapper#toJSON\n   * @method\n   * @param {Object} record Record from which to create a plain object\n   * representation.\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation.\n   * @return {Object} Plain object representation of the record.\n   */\n  toJSON (record, opts) {\n    const self = this\n    opts || (opts = {})\n    const relationFields = (self ? self.relationFields : []) || []\n    let json = {}\n    let properties\n    if (self && self.schema) {\n      properties = self.schema.properties || {}\n      // TODO: Make this work recursively\n      _.forOwn(properties, function (opts, prop) {\n        json[prop] = _.plainCopy(record[prop])\n      })\n    }\n    properties || (properties = {})\n    if (!opts.strict) {\n      _.forOwn(record, function (value, key) {\n        if (!properties[key] && relationFields.indexOf(key) === -1) {\n          json[key] = _.plainCopy(value)\n        }\n      })\n    }\n    // The user wants to include relations in the resulting plain object\n    // representation\n    if (self && opts.withAll) {\n      opts.with = relationFields.slice()\n    }\n    if (self && opts.with) {\n      if (_.isString(opts.with)) {\n        opts.with = [opts.with]\n      }\n      _.forEachRelation(self, opts, function (def, __opts) {\n        const relationData = def.getLocalField(record)\n        if (relationData) {\n          // The actual recursion\n          if (_.isArray(relationData)) {\n            def.setLocalField(json, relationData.map(function (item) {\n              return def.getRelation().toJSON(item, __opts)\n            }))\n          } else {\n            def.setLocalField(json, def.getRelation().toJSON(relationData, __opts))\n          }\n        }\n      })\n    }\n    return json\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @name Mapper#getAdapter\n   * @method\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @return {Adapter} The adapter.\n   */\n  getAdapter (name) {\n    const self = this\n    self.dbg('getAdapter', 'name:', name)\n    const adapter = self.getAdapterName(name)\n    if (!adapter) {\n      throw new ReferenceError(`${adapter} not found!`)\n    }\n    return self.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @name Mapper#getAdapterName\n   * @method\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @return {string} The name of the adapter.\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (_.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || opts.defaultAdapter\n  },\n\n  /**\n   * @name Mapper#getAdapters\n   * @method\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  getSchema () {\n    return this.schema\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeCreate\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n   */\n  beforeCreate: notify,\n\n  /**\n   * Create and save a new the record using the provided `props`.\n   *\n   * {@link Mapper#beforeCreate} will be called before calling the adapter.\n   * {@link Mapper#afterCreate} will be called after calling the adapter.\n   *\n   * @name Mapper#create\n   * @method\n   * @param {Object} props The properties for the new record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * created data. If `true` return a response object that includes the created\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `props` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#create}\n   * or {@link Mapper#createMany} call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @return {Promise}\n   */\n  create (props, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    props || (props = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate'\n    return _.resolve(self[op](props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = _.isUndefined(_props) ? props : _props\n\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      _.forEachRelation(self, opts, function (def, __opts) {\n        const relationData = def.getLocalField(props)\n        if (def.type === belongsToType && relationData) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          tasks.push(def.getRelation().create(relationData, __opts).then(function (data) {\n            const relatedRecord = __opts.raw ? data.data : data\n            def.setLocalField(belongsToRelationData, relatedRecord)\n            def.setForeignKey(props, relatedRecord)\n          }))\n        }\n      })\n      return Promise.all(tasks).then(function () {\n        // Now delegate to the adapter for the main create\n        op = opts.op = 'create'\n        self.dbg(op, props, opts)\n        return _.resolve(self.getAdapter(adapter)[op](self, self.toJSON(props, { with: opts.pass || [] }), opts))\n      }).then(function (data) {\n        const createdRecord = opts.raw ? data.data : data\n        // Deep post-create hasMany and hasOne relations\n        tasks = []\n        _.forEachRelation(self, opts, function (def, __opts) {\n          const relationData = def.getLocalField(props)\n          if (!relationData) {\n            return\n          }\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType) {\n            def.setForeignKey(createdRecord, relationData)\n            task = def.getRelation().createMany(relationData, __opts).then(function (data) {\n              def.setLocalField(createdRecord, opts.raw ? data.data : data)\n            })\n          } else if (def.type === hasOneType) {\n            def.setForeignKey(createdRecord, relationData)\n            task = def.getRelation().create(relationData, __opts).then(function (data) {\n              def.setLocalField(createdRecord, opts.raw ? data.data : data)\n            })\n          } else if (def.type === belongsToType && def.getLocalField(belongsToRelationData)) {\n            def.setLocalField(createdRecord, def.getLocalField(belongsToRelationData))\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return Promise.all(tasks).then(function () {\n          return data\n        })\n      })\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterCreate lifecycle hook\n      op = opts.op = 'afterCreate'\n      return _.resolve(self[op](props, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterCreate\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n   * @param {*} result The result, if any.\n   */\n  afterCreate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeCreateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   */\n  beforeCreateMany: notify,\n\n  /**\n   * Given an array of records, batch create them via an adapter.\n   *\n   * {@link Mapper#beforeCreateMany} will be called before calling the adapter.\n   * {@link Mapper#afterCreateMany} will be called after calling the adapter.\n   *\n   * @name Mapper#createMany\n   * @method\n   * @param {Array} records Array of records to be created in one batch.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `records` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#createMany}\n   * call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @return {Promise}\n   */\n  createMany (records, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany'\n    return _.resolve(self[op](records, opts)).then(function (_records) {\n      // Allow for re-assignment from lifecycle hook\n      records = _.isUndefined(_records) ? records : _records\n\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      _.forEachRelation(self, opts, function (def, __opts) {\n        const relationData = records.map(function (record) {\n          return def.getLocalField(record)\n        }).filter(function (relatedRecord) {\n          return relatedRecord\n        })\n        if (def.type === belongsToType && relationData.length === records.length) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          tasks.push(def.getRelation().createMany(relationData, __opts).then(function (data) {\n            const relatedRecords = __opts.raw ? data.data : data\n            def.setLocalField(belongsToRelationData, relatedRecords)\n            records.forEach(function (record, i) {\n              def.setForeignKey(record, relatedRecords[i])\n            })\n          }))\n        }\n      })\n      return Promise.all(tasks).then(function () {\n        // Now delegate to the adapter\n        op = opts.op = 'createMany'\n        const json = records.map(function (record) {\n          return self.toJSON(record, { with: opts.pass || [] })\n        })\n        self.dbg(op, records, opts)\n        return _.resolve(self.getAdapter(adapter)[op](self, json, opts))\n      }).then(function (data) {\n        const createdRecords = opts.raw ? data.data : data\n\n        // Deep post-create hasOne relations\n        tasks = []\n        _.forEachRelation(self, opts, function (def, __opts) {\n          const relationData = records.map(function (record) {\n            return def.getLocalField(record)\n          }).filter(function (relatedRecord) {\n            return relatedRecord\n          })\n          if (relationData.length !== records.length) {\n            return\n          }\n          const belongsToData = def.getLocalField(belongsToRelationData)\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType) {\n            // Not supported\n            self.log('warn', 'deep createMany of hasMany type not supported!')\n          } else if (def.type === hasOneType) {\n            createdRecords.forEach(function (createdRecord, i) {\n              def.setForeignKey(createdRecord, relationData[i])\n            })\n            task = def.getRelation().createMany(relationData, __opts).then(function (data) {\n              const relatedData = opts.raw ? data.data : data\n              createdRecords.forEach(function (createdRecord, i) {\n                def.setLocalField(createdRecord, relatedData[i])\n              })\n            })\n          } else if (def.type === belongsToType && belongsToData && belongsToData.length === createdRecords.length) {\n            createdRecords.forEach(function (createdRecord, i) {\n              def.setLocalField(createdRecord, belongsToData[i])\n            })\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return Promise.all(tasks).then(function () {\n          return data\n        })\n      })\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterCreateMany lifecycle hook\n      op = opts.op = 'afterCreateMany'\n      return _.resolve(self[op](records, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterCreateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   * @param {*} result The result, if any.\n   */\n  afterCreateMany: notify2,\n\n  /**\n   * Mappers lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeFind\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n   */\n  beforeFind: notify,\n\n  /**\n   * Retrieve via an adapter the record with the given primary key.\n   *\n   * {@link Mapper#beforeFind} will be called before calling the adapter.\n   * {@link Mapper#afterFind} will be called after calling the adapter.\n   *\n   * @name Mapper#find\n   * @method\n   * @param {(string|number)} id The primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @return {Promise}\n   */\n  find (id, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mappers's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeFind lifecycle hook\n    op = opts.op = 'beforeFind'\n    return _.resolve(self[op](id, opts)).then(function () {\n      // Now delegate to the adapter\n      op = opts.op = 'find'\n      self.dbg(op, id, opts)\n      return _.resolve(self.getAdapter(adapter)[op](self, id, opts))\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterFind lifecycle hook\n      op = opts.op = 'afterFind'\n      return _.resolve(self[op](id, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterFind\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n   * @param {*} result The result, if any.\n   */\n  afterFind: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeFindAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   */\n  beforeFindAll: notify,\n\n  /**\n   * Using the `query` argument, select records to pull from an adapter.\n   * Expects back from the adapter the array of selected records.\n   *\n   * {@link Mapper#beforeFindAll} will be called before calling the adapter.\n   * {@link Mapper#afterFindAll} will be called after calling the adapter.\n   *\n   * @name Mapper#findAll\n   * @method\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * resulting data. If `true` return a response object that includes the\n   * resulting data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @return {Promise}\n   */\n  findAll (query, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    query || (query = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeFindAll lifecycle hook\n    op = opts.op = 'beforeFindAll'\n    return _.resolve(self[op](query, opts)).then(function () {\n      // Now delegate to the adapter\n      op = opts.op = 'findAll'\n      self.dbg(op, query, opts)\n      return _.resolve(self.getAdapter(adapter)[op](self, query, opts))\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterFindAll lifecycle hook\n      op = opts.op = 'afterFindAll'\n      return _.resolve(self[op](query, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterFindAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   * @param {*} result The result, if any.\n   */\n  afterFindAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdate\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n   */\n  beforeUpdate: notify,\n\n  /**\n   * Using an adapter, update the record with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Mapper#beforeUpdate} will be called before updating the record.\n   * {@link Mapper#afterUpdate} will be called after updating the record.\n   *\n   * @name Mapper#update\n   * @method\n   * @param {(string|number)} id The primary key of the record to update.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if `props` contains nested updates to relations. NOT performed in a\n   * transaction.\n   * @return {Promise}\n   */\n  update (id, props, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    props || (props = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeUpdate lifecycle hook\n    op = opts.op = 'beforeUpdate'\n    return _.resolve(self[op](id, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = _.isUndefined(_props) ? props : _props\n      // Now delegate to the adapter\n      op = opts.op = 'update'\n      const json = self.toJSON(props, opts)\n      self.dbg(op, id, json, opts)\n      return _.resolve(self.getAdapter(adapter)[op](self, id, json, opts))\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterUpdate lifecycle hook\n      op = opts.op = 'afterUpdate'\n      return _.resolve(self[op](id, props, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdate\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   */\n  beforeUpdateMany: notify,\n\n  /**\n   * Given an array of updates, perform each of the updates via an adapter. Each\n   * \"update\" is a hash of properties with which to update an record. Each\n   * update must contain the primary key to be updated.\n   *\n   * {@link Mapper#beforeUpdateMany} will be called before making the update.\n   * {@link Mapper#afterUpdateMany} will be called after making the update.\n   *\n   * @name Mapper#updateMany\n   * @method\n   * @param {Array} records Array up record updates.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if each record update contains nested updates for relations. NOT\n   * performed in a transaction.\n   * @return {Promise}\n   */\n  updateMany (records, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeUpdateMany lifecycle hook\n    op = opts.op = 'beforeUpdateMany'\n    return _.resolve(self[op](records, opts)).then(function (_records) {\n      // Allow for re-assignment from lifecycle hook\n      records = _.isUndefined(_records) ? records : _records\n      // Now delegate to the adapter\n      op = opts.op = 'updateMany'\n      const json = records.map(function (item) {\n        return self.toJSON(item, opts)\n      })\n      self.dbg(op, json, opts)\n      return _.resolve(self.getAdapter(adapter)[op](self, json, opts))\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterUpdateMany lifecycle hook\n      op = opts.op = 'afterUpdateMany'\n      return _.resolve(self[op](records, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdateAll\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   */\n  beforeUpdateAll: notify,\n\n  /**\n   * Using the `query` argument, perform the a single updated to the selected\n   * records. Expects back from the adapter an array of the updated records.\n   *\n   * {@link Mapper#beforeUpdateAll} will be called before making the update.\n   * {@link Mapper#afterUpdateAll} will be called after making the update.\n   *\n   * @name Mapper#updateAll\n   * @method\n   * @param {Object} props Update to apply to selected records.\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if `props` contains nested updates to relations. NOT performed in a\n   * transaction.\n   * @return {Promise}\n   */\n  updateAll (props, query, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeUpdateAll lifecycle hook\n    op = opts.op = 'beforeUpdateAll'\n    return _.resolve(self[op](props, query, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = _.isUndefined(_props) ? props : _props\n      // Now delegate to the adapter\n      op = opts.op = 'updateAll'\n      const json = self.toJSON(props, opts)\n      self.dbg(op, json, query, opts)\n      return _.resolve(self.getAdapter(adapter)[op](self, json, query, opts))\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterUpdateAll lifecycle hook\n      op = opts.op = 'afterUpdateAll'\n      return _.resolve(self[op](props, query, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdateAll\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdateAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeDestroy\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   */\n  beforeDestroy: notify,\n\n  /**\n   * Using an adapter, destroy the record with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Mapper#beforeDestroy} will be called before destroying the record.\n   * {@link Mapper#afterDestroy} will be called after destroying the record.\n   *\n   * @name Mapper#destroy\n   * @method\n   * @param {(string|number)} id The primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * ejected data (if any). If `true` return a response object that includes the\n   * ejected data (if any) and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n   * delete. NOT performed in a transaction.\n   * @return {Promise}\n   */\n  destroy (id, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeDestroy lifecycle hook\n    op = opts.op = 'beforeDestroy'\n    return _.resolve(self[op](id, opts)).then(function () {\n      // Now delegate to the adapter\n      op = opts.op = 'destroy'\n      self.dbg(op, id, opts)\n      return _.resolve(self.getAdapter(adapter)[op](self, id, opts))\n    }).then(function (result) {\n      if (opts.raw) {\n        _._(opts, result)\n      }\n      // afterDestroy lifecycle hook\n      op = opts.op = 'afterDestroy'\n      return _.resolve(self[op](id, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterDestroy\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   * @param {*} result The result, if any.\n   */\n  afterDestroy: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeDestroyAll\n   * @method\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   */\n  beforeDestroyAll: notify,\n\n  /**\n   * Using the `query` argument, destroy the selected records via an adapter.\n   * If no `query` is provided then all records will be destroyed.\n   *\n   * {@link Mapper#beforeDestroyAll} will be called before destroying the records.\n   * {@link Mapper#afterDestroyAll} will be called after destroying the records.\n   *\n   * @name Mapper#destroyAll\n   * @method\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * ejected data (if any). If `true` return a response object that includes the\n   * ejected data (if any) and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n   * delete. NOT performed in a transaction.\n   * @return {Promise}\n   */\n  destroyAll (query, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    query || (query = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    _._(self, opts)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeDestroyAll lifecycle hook\n    op = opts.op = 'beforeDestroyAll'\n    return _.resolve(self[op](query, opts)).then(function () {\n      // Now delegate to the adapter\n      op = opts.op = 'destroyAll'\n      self.dbg(op, query, opts)\n      return _.resolve(self.getAdapter(adapter)[op](self, query, opts))\n    }).then(function (result) {\n      if (opts.raw) {\n        _._(opts, result)\n      }\n      // afterDestroyAll lifecycle hook\n      op = opts.op = 'afterDestroyAll'\n      return _.resolve(self[op](query, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return _.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterDestroyAll\n   * @method\n   * @param {*} data The `data` returned by the adapter.\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   * @param {*} result The result, if any.\n   */\n  afterDestroyAll: notify2,\n\n  /**\n   * @name Mapper#log\n   * @method\n   */\n  log (level, ...args) {\n    if (level && !args.length) {\n      args.push(level)\n      level = 'debug'\n    }\n    if (level === 'debug' && !this.debug) {\n      return\n    }\n    const prefix = `${level.toUpperCase()}: (${this.name || 'mapper'})`\n    if (console[level]) {\n      console[level](prefix, ...args)\n    } else {\n      console.log(prefix, ...args)\n    }\n  },\n\n  /**\n   * @name Mapper#dbg\n   * @method\n   */\n  dbg (...args) {\n    this.log('debug', ...args)\n  },\n\n  /**\n   * Usage:\n   *\n   * Post.belongsTo(User, {\n   *   localKey: 'myUserId'\n   * })\n   *\n   * Comment.belongsTo(User)\n   * Comment.belongsTo(Post, {\n   *   localField: '_post'\n   * })\n   *\n   * @name Mapper#belongsTo\n   * @method\n   */\n  belongsTo (RelatedMapper, opts) {\n    return belongsTo(RelatedMapper, opts)(this)\n  },\n\n  /**\n   * Usage:\n   *\n   * User.hasMany(Post, {\n   *   localField: 'my_posts'\n   * })\n   *\n   * @name Mapper#hasMany\n   * @method\n   */\n  hasMany (RelatedMapper, opts) {\n    return hasMany(RelatedMapper, opts)(this)\n  },\n\n  /**\n   * Usage:\n   *\n   * User.hasOne(Profile, {\n   *   localField: '_profile'\n   * })\n   *\n   * @name Mapper#hasOne\n   * @method\n   */\n  hasOne (RelatedMapper, opts) {\n    return hasOne(RelatedMapper, opts)(this)\n  },\n\n  /**\n   * Register an adapter on this mapper under the given name.\n   *\n   * @name Mapper#registerAdapter\n   * @method\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for this Mapper.\n   */\n  registerAdapter (name, adapter, opts) {\n    const self = this\n    opts || (opts = {})\n    self.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      self.defaultAdapter = name\n    }\n  }\n})\n\n/**\n * Create a Mapper subclass.\n *\n * ```javascript\n * var MyMapper = Mapper.extend({\n *   foo: function () { return 'bar' }\n * })\n * var mapper = new MyMapper()\n * mapper.foo() // \"bar\"\n * ```\n *\n * @name Mapper.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Mapper.\n */\nMapper.extend = _.extend\n\n/**\n * Register a new event listener on this Mapper.\n *\n * @name Mapper#on\n * @method\n */\n\n/**\n * Remove an event listener from this Mapper.\n *\n * @name Mapper#off\n * @method\n */\n\n/**\n * Trigger an event on this Mapper.\n *\n * @name Mapper#emit\n * @method\n * @param {string} event Name of event to emit.\n */\n\n/**\n * A Mapper's registered listeners are stored at {@link Mapper#_listeners}.\n */\n_.eventify(\n  Mapper.prototype,\n  function () {\n    return this._listeners\n  },\n  function (value) {\n    this._listeners = value\n  }\n)\n","import _ from './utils'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Mapper from './Mapper'\n\nconst toProxy = [\n  /**\n   * TODO\n   *\n   * @name Container#create\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} record Passed to {@link Mapper#create}.\n   * @param {Object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @return {Promise}\n   */\n  'create',\n\n  /**\n   * TODO\n   *\n   * @name Container#createMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Array} records Passed to {@link Mapper#createMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @return {Promise}\n   */\n  'createMany',\n\n  /**\n   * Proxy for {@link Mapper#createRecord}.\n   *\n   * @name Container#createRecord\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} props Passed to {@link Mapper#createRecord}.\n   * @param {Object} [opts] Passed to {@link Mapper#createRecord}. See\n   * {@link Mapper#createRecord} for configuration options.\n   * @return {Promise}\n   */\n  'createRecord',\n\n  /**\n   * TODO\n   *\n   * @name Container#destroy\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @return {Promise}\n   */\n  'destroy',\n\n  /**\n   * TODO\n   *\n   * @name Container#destroyAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @return {Promise}\n   */\n  'destroyAll',\n\n  /**\n   * TODO\n   *\n   * @name Container#find\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#find}.\n   * @param {Object} [opts] - Passed to {@link Mapper#find}.\n   * @return {Promise}\n   */\n  'find',\n\n  /**\n   * TODO\n   *\n   * @name Container#findAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\n   * @return {Promise}\n   */\n  'findAll',\n\n  'is',\n\n  /**\n   * TODO\n   *\n   * @name Container#update\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#update}.\n   * @param {Object} record - Passed to {@link Mapper#update}.\n   * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @return {Promise}\n   */\n  'update',\n\n  /**\n   * TODO\n   *\n   * @name Container#updateAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object?} query - Passed to {@link Model.updateAll}.\n   * @param {Object} props - Passed to {@link Model.updateAll}.\n   * @param {Object} [opts] - Passed to {@link Model.updateAll}. See\n   * {@link Model.updateAll} for more configuration options.\n   * @return {Promise}\n   */\n  'updateAll',\n\n  /**\n   * TODO\n   *\n   * @name Container#updateMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @return {Promise}\n   */\n  'updateMany'\n]\n\n/**\n * ```javascript\n * import {Container} from 'js-data'\n * ```\n *\n * The `Container` class is a place to store {@link Mapper} instances.\n *\n * Without a container, you need to manage mappers yourself, including resolving\n * circular dependencies among relations. All mappers in a container share the\n * same adapters, so you don't have to add each adapter to all of your mappers.\n *\n * @example <caption>Without Container</caption>\n * import {Mapper} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const adapter = new HttpAdapter()\n * const userMapper = new Mapper({ name: 'user' })\n * userMapper.registerAdapter('http', adapter, { default: true })\n * const commentMapper = new Mapper({ name: 'comment' })\n * commentMapper.registerAdapter('http', adapter, { default: true })\n *\n * // This might be more difficult if the mappers were defined in different\n * // modules.\n * userMapper.hasMany(commentMapper, {\n *   localField: 'comments',\n *   foreignKey: 'userId'\n * })\n * commentMapper.belongsTo(userMapper, {\n *   localField: 'user',\n *   foreignKey: 'userId'\n * })\n *\n * @example <caption>With Container</caption>\n * import {Container} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const container = new Container()\n * // All mappers in container share adapters\n * container.registerAdapter('http', new HttpAdapter(), { default: true })\n *\n * // These could be defined in separate modules without a problem.\n * container.defineMapper('user', {\n *   relations: {\n *     hasMany: {\n *       comment: {\n *         localField: 'comments',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n * container.defineMapper('comment', {\n *   relations: {\n *     belongsTo: {\n *       user: {\n *         localField: 'user',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n *\n * @class Container\n * @param {Object} [opts] Configuration options.\n * @param {Function} [opts.MapperClass] Constructor function to use in\n * {@link Container#defineMapper} to create a new mapper.\n * @param {Object} [opts.mapperDefaults] Defaults options to pass to\n * {@link Container#MapperClass} when creating a new mapper.\n * @return {Container}\n */\nexport default function Container (opts) {\n  const self = this\n  _.classCallCheck(self, Container)\n\n  opts || (opts = {})\n  // Apply options provided by the user\n  _.fillIn(self, opts)\n  /**\n   * Defaults options to pass to {@link Container#MapperClass} when creating a\n   * new mapper.\n   *\n   * @name Container#mapperDefaults\n   * @type {Object}\n   */\n  self.mapperDefaults = self.mapperDefaults || {}\n  /**\n   * Constructor function to use in {@link Container#defineMapper} to create a\n   * new mapper.\n   *\n   * @name Container#MapperClass\n   * @type {Function}\n   */\n  self.MapperClass = self.MapperClass || Mapper\n\n  // Initilize private data\n\n  // Holds the adapters, shared by all mappers in this container\n  self._adapters = {}\n  // The the mappers in this container\n  self._mappers = {}\n}\n\n/**\n * Create a Container subclass.\n *\n * @example\n * var MyContainer = Container.extend({\n *   foo: function () { return 'bar' }\n * })\n * var container = new MyContainer()\n * container.foo() // \"bar\"\n *\n * @name Container.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of Container.\n */\nContainer.extend = _.extend\n\n_.addHiddenPropsToTarget(Container.prototype, {\n  /**\n   * Create a new mapper and register it in this container.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const container = new Container({\n   *   mapperDefaults: { foo: 'bar' }\n   * })\n   * const userMapper = container.defineMapper('user')\n   * userMapper.foo // \"bar\"\n   *\n   * @name Container#defineMapper\n   * @method\n   * @param {string} name Name under which to register the new {@link Mapper}.\n   * {@link Mapper#name} will be set to this value.\n   * @param {Object} [opts] Configuration options. Passed to\n   * {@link Container#MapperClass} when creating the new {@link Mapper}.\n   * @return {Mapper}\n   */\n  defineMapper (name, opts) {\n    const self = this\n\n    // For backwards compatibility with defineResource\n    if (_.isObject(name)) {\n      opts = name\n      if (!opts.name) {\n        throw new Error('name is required!')\n      }\n      name = opts.name\n    } else if (!_.isString(name)) {\n      throw new Error('name is required!')\n    }\n\n    // Default values for arguments\n    opts || (opts = {})\n    // Set Mapper#name\n    opts.name = name\n    opts.relations || (opts.relations = {})\n\n    // Check if the user is overriding the datastore's default MapperClass\n    const MapperClass = opts.MapperClass || self.MapperClass\n    delete opts.MapperClass\n\n    // Apply the datastore's defaults to the options going into the mapper\n    _.fillIn(opts, self.mapperDefaults)\n\n    // Instantiate a mapper\n    const mapper = self._mappers[name] = new MapperClass(opts)\n    // Make sure the mapper's name is set\n    mapper.name = name\n    // All mappers in this datastore will share adapters\n    mapper._adapters = self.getAdapters()\n\n    // Setup the mapper's relations, including generating Mapper#relationList\n    // and Mapper#relationFields\n    _.forOwn(mapper.relations, function (group, type) {\n      _.forOwn(group, function (relations, _name) {\n        if (_.isObject(relations)) {\n          relations = [relations]\n        }\n        relations.forEach(function (def) {\n          def.getRelation = function () {\n            return self.getMapper(_name)\n          }\n          const Relation = self._mappers[_name] || _name\n          if (type === belongsToType) {\n            mapper.belongsTo(Relation, def)\n          } else if (type === hasOneType) {\n            mapper.hasOne(Relation, def)\n          } else if (type === hasManyType) {\n            mapper.hasMany(Relation, def)\n          }\n        })\n      })\n    })\n\n    return mapper\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @name Container#getAdapter\n   * @method\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @return {Adapter} The adapter.\n   */\n  getAdapter (name) {\n    const self = this\n    const adapter = self.getAdapterName(name)\n    if (!adapter) {\n      throw new ReferenceError(`${adapter} not found!`)\n    }\n    return self.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @name Container#getAdapterName\n   * @method\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @return {string} The name of the adapter.\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (_.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || this.mapperDefaults.defaultAdapter\n  },\n\n  /**\n   * Return the registered adapters of this container.\n   *\n   * @name Container#getAdapters\n   * @method\n   * @return {Adapter}\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  /**\n   * Return the mapper registered under the specified name.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const container = new Container()\n   * const userMapper = container.defineMapper('user')\n   * userMapper === container.getMapper('user') // true\n   *\n   * @name Container#getMapper\n   * @method\n   * @param {string} name {@link Mapper#name}.\n   * @return {Mapper}\n   */\n  getMapper (name) {\n    const mapper = this._mappers[name]\n    if (!mapper) {\n      throw new ReferenceError(`${name} is not a registered mapper!`)\n    }\n    return mapper\n  },\n\n  /**\n   * Register an adapter on this container under the given name. Adapters\n   * registered on a container are shared by all mappers in the container.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import HttpAdapter from 'js-data-http'\n   * const container = new Container()\n   * container.registerAdapter('http', new HttpAdapter, { default: true })\n   *\n   * @name Container#registerAdapter\n   * @method\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for all Mappers in this container.\n   */\n  registerAdapter (name, adapter, opts) {\n    const self = this\n    opts || (opts = {})\n    self.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      self.mapperDefaults.defaultAdapter = name\n      _.forOwn(self._mappers, function (mapper) {\n        mapper.defaultAdapter = name\n      })\n    }\n  }\n})\n\nconst toAdd = {}\ntoProxy.forEach(function (method) {\n  toAdd[method] = function (name, ...args) {\n    return this.getMapper(name)[method](...args)\n  }\n})\n_.addHiddenPropsToTarget(Container.prototype, toAdd)\n","import _ from './utils'\nimport {\n  hasManyType\n} from './decorators'\nimport Collection from './Collection'\n\n/**\n * TODO\n *\n * ```javascript\n * import {LinkedCollection} from 'js-data'\n * ```\n *\n * @class LinkedCollection\n * @extends Collection\n * @param {Array} [records] Initial set of records to insert into the\n * collection. See {@link Collection}.\n * @param {Object} [opts] Configuration options. See {@link Collection}.\n * @return {Mapper}\n */\nconst LinkedCollection = Collection.extend({\n  constructor (records, opts) {\n    const self = this\n    _.classCallCheck(self, LinkedCollection)\n\n    _.getSuper(self).call(self, records, opts)\n\n    // Make sure this collection has somewhere to store \"added\" timestamps\n    self._added = {}\n\n    // Make sure this collection a reference to a datastore\n    if (!self.datastore) {\n      throw new Error('This collection must have a datastore!')\n    }\n    return self\n  },\n\n  _onRecordEvent (...args) {\n    const self = this\n    _.getSuper(self).prototype._onRecordEvent.apply(self, args)\n    const event = args[0]\n    // This is a very brute force method\n    // Lots of room for optimization\n    if (_.isString(event) && event.indexOf('change') === 0) {\n      self.updateIndexes(args[1])\n    }\n  },\n\n  add (records, opts) {\n    const self = this\n    const datastore = self.datastore\n    const mapper = self.mapper\n    const relationList = mapper.relationList || []\n    const timestamp = new Date().getTime()\n    const usesRecordClass = !!mapper.RecordClass\n    let singular\n\n    if (_.isObject(records) && !_.isArray(records)) {\n      singular = true\n      records = [records]\n    }\n\n    if (relationList.length && records.length) {\n      // Check the currently visited record for relations that need to be\n      // inserted into their respective collections.\n      mapper.relationList.forEach(function (def) {\n        const relationName = def.relation\n        // A reference to the Mapper that this Mapper is related to\n        const Relation = datastore.getMapper(relationName)\n        // The field used by the related Mapper as the primary key\n        const relationIdAttribute = Relation.idAttribute\n        // Grab the foreign key in this relationship, if there is one\n        const foreignKey = def.foreignKey\n        // A lot of this is an optimization for being able to insert a lot of\n        // data as quickly as possible\n        const relatedCollection = datastore.getCollection(relationName)\n        const type = def.type\n        const isHasMany = type === hasManyType\n        const shouldAdd = _.isUndefined(def.add) ? true : !!def.add\n        let relatedData\n\n        records.forEach(function (record) {\n          // Grab a reference to the related data attached or linked to the\n          // currently visited record\n          relatedData = def.getLocalField(record)\n\n          if (_.isFunction(def.add)) {\n            def.add(datastore, def, record)\n          } else if (relatedData) {\n            // Otherwise, if there is something to be added, add it\n            if (isHasMany) {\n              // Handle inserting hasMany relations\n              relatedData = relatedData.map(function (toInsertItem) {\n                // Check that this item isn't the same item that is already in the\n                // store\n                if (toInsertItem !== relatedCollection.get(relatedCollection.recordId(toInsertItem))) {\n                  // Make sure this item has its foreignKey\n                  if (foreignKey) {\n                    // TODO: slow, could be optimized? But user loses hook\n                    def.setForeignKey(record, toInsertItem)\n                  }\n                  // Finally add this related item\n                  if (shouldAdd) {\n                    toInsertItem = relatedCollection.add(toInsertItem)\n                  }\n                }\n                return toInsertItem\n              })\n              // If it's the parent that has the localKeys\n              if (def.localKeys) {\n                _.set(record, def.localKeys, relatedData.map(function (inserted) {\n                  return _.get(inserted, relationIdAttribute)\n                }))\n              }\n            } else {\n              const relatedDataId = _.get(relatedData, relationIdAttribute)\n              // Handle inserting belongsTo and hasOne relations\n              if (relatedData !== relatedCollection.get(relatedDataId)) {\n                // Make sure foreignKey field is set\n                def.setForeignKey(record, relatedData)\n                // Finally insert this related item\n                if (shouldAdd) {\n                  relatedData = relatedCollection.add(relatedData)\n                }\n              }\n            }\n            def.setLocalField(record, relatedData)\n          }\n        })\n      })\n    }\n\n    records = _.getSuper(self).prototype.add.call(self, records, opts)\n\n    records.forEach(function (record) {\n      // Track when this record was added\n      self._added[self.recordId(record)] = timestamp\n\n      if (usesRecordClass) {\n        record._set('$', timestamp)\n      }\n    })\n\n    return singular ? records[0] : records\n  },\n\n  remove (id, opts) {\n    const self = this\n    delete self._added[id]\n    const record = _.getSuper(self).prototype.remove.call(self, id, opts)\n    if (record) {\n      const mapper = self.mapper\n      if (mapper.RecordClass) {\n        record._set('$') // unset\n      }\n    }\n    return record\n  },\n\n  removeAll (query, opts) {\n    const self = this\n    const records = _.getSuper(self).prototype.removeAll.call(self, query, opts)\n    records.forEach(function (record) {\n      delete self._added[self.recordId(record)]\n    })\n    return records\n  }\n})\n\n/**\n * Create a LinkedCollection subclass.\n *\n * ```javascript\n * var MyLinkedCollection = LinkedCollection.extend({\n *   foo: function () { return 'bar' }\n * })\n * var collection = new MyLinkedCollection()\n * collection.foo() // \"bar\"\n * ```\n *\n * @name LinkedCollection.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of LinkedCollection.\n */\nLinkedCollection.extend = _.extend\n\nexport {\n  LinkedCollection as default\n}\n","import _ from './utils'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Container from './Container'\nimport LinkedCollection from './LinkedCollection'\n\nconst DATASTORE_DEFAULTS = {\n  /**\n   * Whether relations should be linked for records that are in the datastore.\n   *\n   * Defaults to `true` in the browser and `false` in Node.js\n   *\n   * @name DataStore#linkRelations\n   * @type {boolean}\n   */\n  linkRelations: _.isBrowser\n}\n\n/**\n * The `DataStore` class is an extension of {@link Container}. Not only does\n * `DataStore` manage mappers, but also collections. `DataStore` implements the\n * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\n * {@link Mapper#create}. If you use the asynchronous `DataStore` methods\n * instead of calling them directly on the mappers, then the results of the\n * method calls will be inserted into the store's collections. You can think of\n * a `DataStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\n * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\n * (the Mappers).\n *\n * ```javascript\n * import {DataStore} from 'js-data'\n * ```\n *\n * @example\n * import {DataStore} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const store = new DataStore()\n * const UserMapper = store.defineMapper('user')\n *\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n * UserMapper.find(1).then(function (user) {\n *   // retrieved a \"user\" record via the http adapter, but that's it\n *\n *   // Call \"find\" on \"store\" for the \"user\" mapper (Stateful DataStore)\n *   return store.find('user', 1)\n * }).then(function (user) {\n *   // not only was a \"user\" record retrieved, but it was added to the\n *   // store's \"user\" collection\n *   const cachedUser = store.getCollection('user').get(1)\n *   user === cachedUser // true\n * })\n *\n * @class DataStore\n * @extends Container\n * @param {Object} [opts] Configuration options. See {@link Container}.\n * @return {DataStore}\n */\nconst DataStore = Container.extend({\n  constructor (opts) {\n    const self = this\n    _.classCallCheck(self, DataStore)\n\n    _.getSuper(self).call(self, opts)\n    self.CollectionClass = self.CollectionClass || LinkedCollection\n    self._collections = {}\n    _.fillIn(self, DATASTORE_DEFAULTS)\n    self._pendingQueries = {}\n    self._completedQueries = {}\n    return self\n  },\n\n  _callSuper (method, ...args) {\n    return _.getSuper(this).prototype[method].apply(this, args)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#_end\n   * @method\n   * @private\n   * @param {string} name Name of the {@link LinkedCollection} to which to\n   * add the data.\n   * @param {Object} data TODO.\n   * @param {Object} [opts] Configuration options.\n   * @return {(Object|Array)} Result.\n   */\n  _end (name, data, opts) {\n    if (opts.raw) {\n      data.data = this.getCollection(name).add(data.data, opts)\n      return data\n    } else {\n      data = this.getCollection(name).add(data, opts)\n    }\n    return data\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#create\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} record Passed to {@link Mapper#create}.\n   * @param {Object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @return {Promise}\n   */\n  create (name, record, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('create', name, record, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#createMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Array} records Passed to {@link Mapper#createMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @return {Promise}\n   */\n  createMany (name, records, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('createMany', name, records, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  defineMapper (name, opts) {\n    const self = this\n    const mapper = _.getSuper(self).prototype.defineMapper.call(self, name, opts)\n    self._pendingQueries[name] = {}\n    self._completedQueries[name] = {}\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n\n    // The datastore uses a subclass of Collection that is \"datastore-aware\"\n    const collection = self._collections[name] = new self.CollectionClass(null, {\n      // Make sure the collection has somewhere to store \"added\" timestamps\n      _added: {},\n      // Give the collection a reference to this datastore\n      datastore: self,\n      // The mapper tied to the collection\n      mapper\n    })\n\n    const schema = mapper.schema || {}\n    const properties = schema.properties || {}\n    // TODO: Make it possible index nested properties?\n    _.forOwn(properties, function (opts, prop) {\n      if (opts.indexed) {\n        collection.createIndex(prop)\n      }\n    })\n\n    // Create a secondary index on the \"added\" timestamps of records in the\n    // collection\n    collection.createIndex('addedTimestamps', ['$'], {\n      fieldGetter (obj) {\n        return collection._added[collection.recordId(obj)]\n      }\n    })\n\n    const linkRelations = self.linkRelations\n\n    if (linkRelations) {\n      mapper.relationList.forEach(function (def) {\n        const relation = def.relation\n        const localField = def.localField\n        const path = `links.${localField}`\n        const foreignKey = def.foreignKey\n        const type = def.type\n        const link = _.isUndefined(def.link) ? linkRelations : def.link\n        const updateOpts = { index: foreignKey }\n        let descriptor\n\n        if (type === belongsToType) {\n          if (!collection.indexes[foreignKey]) {\n            collection.createIndex(foreignKey)\n          }\n\n          descriptor = {\n            get () {\n              const _self = this\n              if (!_self._get('$') || !link) {\n                return _self._get(path)\n              }\n              const key = def.getForeignKey(_self)\n              const item = _.isUndefined(key) ? undefined : self.getCollection(relation).get(key)\n              _self._set(path, item)\n              return item\n            },\n            set (record) {\n              const _self = this\n              _self._set(path, record)\n              def.setForeignKey(_self, record)\n              collection.updateIndex(_self, updateOpts)\n              return def.getLocalField(_self)\n            }\n          }\n        } else if (type === hasManyType) {\n          const localKeys = def.localKeys\n          const foreignKeys = def.foreignKeys\n\n          // TODO: Handle case when belongsTo relation isn't ever defined\n          if (self._collections[relation] && foreignKey && !self.getCollection(relation).indexes[foreignKey]) {\n            self.getCollection(relation).createIndex(foreignKey)\n          }\n\n          descriptor = {\n            get () {\n              const _self = this\n              if (!_self._get('$') || !link) {\n                return _self._get(path)\n              }\n              const key = def.getForeignKey(_self)\n              let items\n              const relationCollection = self.getCollection(relation)\n\n              if (foreignKey) {\n                // Really fast retrieval\n                items = relationCollection.getAll(key, {\n                  index: foreignKey\n                })\n              } else if (localKeys) {\n                const keys = _.get(_self, localKeys) || []\n                const args = _.isArray(keys) ? keys : Object.keys(keys)\n                // Really fast retrieval\n                items = relationCollection.getAll.apply(relationCollection, args)\n              } else if (foreignKeys) {\n                const query = {}\n                _.set(query, `where.${foreignKeys}.contains`, key)\n                // Make a much slower retrieval\n                items = relationCollection.filter(query)\n              }\n\n              _self._set(path, items)\n              return items\n            },\n            set (records) {\n              const _self = this\n              const key = collection.recordId(_self)\n              const relationCollection = self.getCollection(relation)\n              _self._set(path, records)\n\n              if (foreignKey) {\n                def.setForeignKey(_self, records)\n                if (_.isArray(records)) {\n                  records.forEach(function (record) {\n                    relationCollection.updateIndex(record, updateOpts)\n                  })\n                }\n              } if (localKeys) {\n                _.set(_self, localKeys, records.map(function (record) {\n                  return relationCollection.recordId(record)\n                }))\n              } else if (foreignKeys) {\n                records.forEach(function (record) {\n                  const keys = _.get(record, foreignKeys)\n                  if (keys) {\n                    if (keys.indexOf(key) === -1) {\n                      keys.push(key)\n                    }\n                  } else {\n                    _.set(record, foreignKeys, [key])\n                  }\n                })\n              }\n              return def.getLocalField(_self)\n            }\n          }\n        } else if (type === hasOneType) {\n          descriptor = {\n            get () {\n              const _self = this\n              if (!_self._get('$') || !link) {\n                return _self._get(path)\n              }\n              const key = def.getForeignKey(_self)\n              const items = self.getCollection(relation).getAll(key, {\n                index: foreignKey\n              })\n              const item = items.length ? items[0] : undefined\n              _self._set(path, item)\n              return item\n            },\n            set (record) {\n              const _self = this\n              _self._set(path, record)\n              def.setForeignKey(_self, record)\n              self.getCollection(relation).updateIndex(record, updateOpts)\n              return def.getLocalField(_self)\n            }\n          }\n        }\n\n        if (descriptor) {\n          descriptor.enumerable = _.isUndefined(def.enumerable) ? true : def.enumerable\n          if (def.get) {\n            let origGet = descriptor.get\n            descriptor.get = function () {\n              return def.get(def, this, (...args) => origGet.apply(this, args))\n            }\n          }\n          if (def.set) {\n            let origSet = descriptor.set\n            descriptor.set = function (related) {\n              return def.set(def, this, related, (value) => origSet.call(this, value === undefined ? related : value))\n            }\n          }\n          Object.defineProperty(mapper.RecordClass.prototype, localField, descriptor)\n        }\n      })\n    }\n\n    return mapper\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#destroy\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @return {Promise}\n   */\n  destroy (name, id, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('destroy', name, id, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.getCollection(name).remove(id, opts)\n      } else {\n        data = self.getCollection(name).remove(id, opts)\n      }\n      delete self._pendingQueries[name][id]\n      delete self._completedQueries[name][id]\n      return data\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#destroyAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @return {Promise}\n   */\n  destroyAll (name, query, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('destroyAll', name, query, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.getCollection(name).removeAll(query, opts)\n      } else {\n        data = self.getCollection(name).removeAll(query, opts)\n      }\n      const hash = self.hashQuery(name, query, opts)\n      delete self._pendingQueries[name][hash]\n      delete self._completedQueries[name][hash]\n      return data\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#find\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#find}.\n   * @param {Object} [opts] - Passed to {@link Mapper#find}.\n   * @return {Promise}\n   */\n  find (name, id, opts) {\n    const self = this\n    opts || (opts = {})\n    const pendingQuery = self._pendingQueries[name][id]\n\n    _.fillIn(opts, self.getMapper(name))\n\n    if (pendingQuery) {\n      return pendingQuery\n    }\n    const item = self.cachedFind(name, id, opts)\n    let promise\n\n    if (opts.force || !item) {\n      promise = self._pendingQueries[name][id] = self._callSuper('find', name, id, opts).then(function (data) {\n        delete self._pendingQueries[name][id]\n        return self._end(name, data, opts)\n      }, function (err) {\n        delete self._pendingQueries[name][id]\n        return _.reject(err)\n      }).then(function (data) {\n        self._completedQueries[name][id] = new Date().getTime()\n        return data\n      })\n    } else {\n      promise = _.resolve(item)\n    }\n    return promise\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#findAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\n   * @return {Promise}\n   */\n  findAll (name, query, opts) {\n    const self = this\n    opts || (opts = {})\n    const hash = self.hashQuery(name, query, opts)\n    const pendingQuery = self._pendingQueries[name][hash]\n\n    _.fillIn(opts, self.getMapper(name))\n\n    if (pendingQuery) {\n      return pendingQuery\n    }\n\n    const items = self.cachedFindAll(name, query, opts)\n    let promise\n\n    if (opts.force || !items) {\n      promise = self._pendingQueries[name][hash] = self._callSuper('findAll', name, query, opts).then(function (data) {\n        delete self._pendingQueries[name][hash]\n        return self._end(name, data, opts)\n      }, function (err) {\n        delete self._pendingQueries[name][hash]\n        return _.reject(err)\n      }).then(function (data) {\n        self._completedQueries[name][hash] = new Date().getTime()\n        return data\n      })\n    } else {\n      promise = _.resolve(items)\n    }\n    return promise\n  },\n\n  cachedFind (name, id, opts) {\n    return this.get(name, id, opts)\n  },\n\n  cachedFindAll (name, query, opts) {\n    const self = this\n    if (self._completedQueries[name][self.hashQuery(name, query, opts)]) {\n      return self.filter(name, query, opts)\n    }\n  },\n\n  hashQuery (name, query, opts) {\n    return _.toJson(query)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#getCollection\n   * @method\n   * @param {string} name Name of the {@link LinkedCollection} to retrieve.\n   * @return {LinkedCollection}\n   */\n  getCollection (name) {\n    const collection = this._collections[name]\n    if (!collection) {\n      throw new ReferenceError(`${name} is not a registered collection!`)\n    }\n    return collection\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#update\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#update}.\n   * @param {Object} record - Passed to {@link Mapper#update}.\n   * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @return {Promise}\n   */\n  update (name, id, record, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('update', name, id, record, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#updateAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object?} query - Passed to {@link Model.updateAll}.\n   * @param {Object} props - Passed to {@link Model.updateAll}.\n   * @param {Object} [opts] - Passed to {@link Model.updateAll}. See\n   * {@link Model.updateAll} for more configuration options.\n   * @return {Promise}\n   */\n  updateAll (name, query, props, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('updateAll', name, query, props, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#updateMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @return {Promise}\n   */\n  updateMany (name, records, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('updateMany', name, records, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  }\n})\n\nDataStore.prototype.defineResource = DataStore.prototype.defineMapper\n\n/**\n * Create a DataStore subclass.\n *\n * ```javascript\n * var MyDataStore = DataStore.extend({\n *   foo: function () { return 'bar' }\n * })\n * var store = new MyDataStore()\n * store.foo() // \"bar\"\n * ```\n *\n * @name DataStore.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of DataStore.\n */\nDataStore.extend = _.extend\n\nconst toProxy = [\n  'add',\n  'between',\n  'createIndex',\n  'filter',\n  'get',\n  'getAll',\n  'query',\n  'remove',\n  'removeAll',\n  'toJson'\n]\n\nconst methods = {}\n\ntoProxy.forEach(function (method) {\n  methods[method] = function (name, ...args) {\n    return this.getCollection(name)[method](...args)\n  }\n})\n\nmethods.inject = function (...args) {\n  // TODO: Fix logging\n  console.warn('deprecated')\n  return this.add(...args)\n}\n\n_.addHiddenPropsToTarget(DataStore.prototype, methods)\n\nexport {\n  DataStore as default\n}\n","/**\n * Registered as `js-data` in NPM and Bower.\n * #### Script tag\n * ```js\n * window.JSData\n * ```\n * #### CommonJS\n * ```js\n * var JSData = require('js-data')\n * ```\n * #### ES6 Modules\n * ```js\n * import JSData from 'js-data'\n * ```\n * #### AMD\n * ```js\n * define('myApp', ['js-data'], function (JSData) { ... })\n * ```\n *\n * @module js-data\n */\n\n/**\n * Details of the current version of the `js-data` module.\n *\n * @name version\n * @memberof module:js-data\n * @type {Object}\n * @property {string} full The full semver value.\n * @property {number} major The major version number.\n * @property {number} minor The minor version number.\n * @property {number} patch The patch version number.\n * @property {(string|boolean)} alpha The alpha version value, otherwise `false`\n * if the current version is not alpha.\n * @property {(string|boolean)} beta The beta version value, otherwise `false`\n * if the current version is not beta.\n */\nconst version = {\n  full: '<%= pkg.version %>',\n  major: parseInt('<%= major %>', 10),\n  minor: parseInt('<%= minor %>', 10),\n  patch: parseInt('<%= patch %>', 10),\n  alpha: '<%= alpha %>' !== 'false' ? '<%= alpha %>' : false,\n  beta: '<%= beta %>' !== 'false' ? '<%= beta %>' : false\n}\n\n/**\n * {@link Collection} class.\n * @name module:js-data.Collection\n */\nimport Collection from './Collection'\n/**\n * {@link Container} class.\n * @name module:js-data.Container\n */\nimport Container from './Container'\n/**\n * {@link DataStore} class.\n * @name module:js-data.DataStore\n */\nimport DataStore from './DataStore'\n/**\n * {@link LinkedCollection} class.\n * @name module:js-data.LinkedCollection\n */\nimport LinkedCollection from './LinkedCollection'\n/**\n * {@link Mapper} class.\n * @name module:js-data.Mapper\n */\nimport Mapper from './Mapper'\n/**\n * {@link Query} class.\n * @name module:js-data.Query\n */\nimport Query from './Query'\n/**\n * {@link Record} class.\n * @name module:js-data.Record\n */\nimport Record from './Record'\n/**\n * {@link Schema} class.\n * @name module:js-data.Schema\n */\nimport Schema from './Schema'\n\nimport utils from './utils'\n\nexport * from './decorators'\n\nconst DS = DataStore\n\nexport {\n  Collection,\n  Container,\n  DataStore,\n  DS, // Backwards compatiblity\n  LinkedCollection,\n  Mapper,\n  Query,\n  Record,\n  Schema,\n  utils,\n  version\n}\n"],"names":["belongsTo","hasMany","hasOne","toProxy"],"mappings":"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"}