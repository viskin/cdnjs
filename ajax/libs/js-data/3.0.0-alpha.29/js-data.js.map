{"version":3,"file":"js-data.js","sources":["../src/utils.js","../src/Component.js","../src/Query.js","../lib/mindex/utils.js","../lib/mindex/index.js","../src/Collection.js","../src/decorators.js","../src/Record.js","../src/Schema.js","../src/Mapper.js","../src/Container.js","../src/LinkedCollection.js","../src/DataStore.js","../src/index.js"],"sourcesContent":["/**\n * @name utils\n * @memberof module:js-data\n * @type {Object}\n * @property {Function} addHiddenPropsToTarget TODO\n * @property {Function} classCallCheck TODO\n * @property {Function} copy TODO\n * @property {Function} deepMixIn TODO\n * @property {Function} eventify TODO\n * @property {Function} extend TODO\n * @property {Function} fillIn TODO\n * @property {Function} fromJson TODO\n * @property {Function} get TODO\n * @property {Function} getSuper TODO\n * @property {Function} intersection TODO\n * @property {Function} isArray TODO\n * @property {Function} isBlacklisted TODO\n * @property {boolean} isBrowser TODO\n * @property {Function} isBoolean TODO\n * @property {Function} isFunction TODO\n * @property {Function} isInteger TODO\n * @property {Function} isNull TODO\n * @property {Function} isNumber TODO\n * @property {Function} isObject TODO\n * @property {Function} isRegExp TODO\n * @property {Function} isSorN TODO\n * @property {Function} isString TODO\n * @property {Function} isUndefined TODO\n * @property {Function} possibleConstructorReturn TODO\n * @property {Function} reject TODO\n * @property {Function} resolve TODO\n * @property {Function} set TODO\n * @property {Function} toJson TODO\n */\n\nconst INFINITY = 1 / 0\nconst MAX_INTEGER = 1.7976931348623157e+308\nconst BOOL_TAG = '[object Boolean]'\nconst DATE_TAG = '[object Date]'\nconst FUNC_TAG = '[object Function]'\nconst NUMBER_TAG = '[object Number]'\nconst OBJECT_TAG = '[object Object]'\nconst REGEXP_TAG = '[object RegExp]'\nconst STRING_TAG = '[object String]'\nconst objToString = Object.prototype.toString\nconst PATH = /^(.+)\\.(.+)$/\n\nconst toInteger = function (value) {\n  if (!value) {\n    return 0\n  }\n  // Coerce to number\n  value = +value\n  if (value === INFINITY || value === -INFINITY) {\n    const sign = (value < 0 ? -1 : 1)\n    return sign * MAX_INTEGER\n  }\n  const remainder = value % 1\n  return value === value ? (remainder ? value - remainder : value) : 0 // eslint-disable-line\n}\n\nconst toStr = function (value) {\n  return objToString.call(value)\n}\n\nconst isPlainObject = function (value) {\n  return (!!value && typeof value === 'object' && value.constructor === Object)\n}\n\nconst mkdirP = function (object, path) {\n  if (!path) {\n    return object\n  }\n  const parts = path.split('.')\n  parts.forEach(function (key) {\n    if (!object[key]) {\n      object[key] = {}\n    }\n    object = object[key]\n  })\n  return object\n}\n\nconst utils = {\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  Promise: Promise,\n\n  /**\n   * Shallow copy properties from src to dest that meet the following criteria:\n   * - own enumerable\n   * - not a function\n   * - does not start with \"_\"\n   *\n   * @ignore\n   * @param {Object} dest Destination object.\n   * @param {Object} src Source object.\n   */\n  _ (dest, src) {\n    utils.forOwn(src, function (value, key) {\n      if (key && utils.isUndefined(dest[key]) && !utils.isFunction(value) && key.indexOf('_') !== 0) {\n        dest[key] = value\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  _forRelation (opts, def, fn, ctx) {\n    const relationName = def.relation\n    let containedName = null\n    let index\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    if ((index = utils._getIndex(opts.with, relationName)) >= 0) {\n      containedName = relationName\n    } else if ((index = utils._getIndex(opts.with, def.localField)) >= 0) {\n      containedName = def.localField\n    }\n\n    if (opts.withAll) {\n      fn.call(ctx, def, {})\n      return\n    } else if (!containedName) {\n      return\n    }\n    let optsCopy = {}\n    utils.fillIn(optsCopy, def.getRelation())\n    utils.fillIn(optsCopy, opts)\n    optsCopy.with = opts.with.slice()\n    optsCopy._activeWith = optsCopy.with.splice(index, 1)[0]\n    optsCopy.with.forEach(function (relation, i) {\n      if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\n        optsCopy.with[i] = relation.substr(containedName.length + 1)\n      } else {\n        optsCopy.with[i] = ''\n      }\n    })\n    fn.call(ctx, def, optsCopy)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  _getIndex (list, relation) {\n    let index = -1\n    list.forEach(function (_relation, i) {\n      if (_relation === relation) {\n        index = i\n        return false\n      } else if (utils.isObject(_relation)) {\n        if (_relation.relation === relation) {\n          index = i\n          return false\n        }\n      }\n    })\n    return index\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  addHiddenPropsToTarget (target, props) {\n    const map = {}\n    utils.forOwn(props, function (value, key) {\n      map[key] = {\n        writable: true,\n        value\n      }\n    })\n    Object.defineProperties(target, map)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  areDifferent (a, b, opts) {\n    opts || (opts = {})\n    const diff = utils.diffObjects(a, b, opts)\n    const diffCount = Object.keys(diff.added).length +\n      Object.keys(diff.removed).length +\n      Object.keys(diff.changed).length\n    return diffCount > 0\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  classCallCheck (instance, ctor) {\n    if (!(instance instanceof ctor)) {\n      throw new TypeError('Cannot call a class as a function')\n    }\n  },\n\n  /**\n   * Deep copy a value.\n   *\n   * @ignore\n   * @param {*} from Value to deep copy.\n   * @return {*} Deep copy of `from`.\n   */\n  copy (from, to, stackFrom, stackTo, blacklist, plain) {\n    if (!to) {\n      to = from\n      if (from) {\n        if (utils.isArray(from)) {\n          to = utils.copy(from, [], stackFrom, stackTo, blacklist, plain)\n        } else if (utils.isDate(from)) {\n          to = new Date(from.getTime())\n        } else if (utils.isRegExp(from)) {\n          to = new RegExp(from.source, from.toString().match(/[^\\/]*$/)[0])\n          to.lastIndex = from.lastIndex\n        } else if (utils.isObject(from)) {\n          if (plain) {\n            to = utils.copy(from, {}, stackFrom, stackTo, blacklist, plain)\n          } else {\n            to = utils.copy(from, Object.create(Object.getPrototypeOf(from)), stackFrom, stackTo, blacklist, plain)\n          }\n        }\n      }\n    } else {\n      if (from === to) {\n        throw new Error('Cannot copy! Source and destination are identical.')\n      }\n\n      stackFrom = stackFrom || []\n      stackTo = stackTo || []\n\n      if (utils.isObject(from)) {\n        let index = stackFrom.indexOf(from)\n        if (index !== -1) {\n          return stackTo[index]\n        }\n\n        stackFrom.push(from)\n        stackTo.push(to)\n      }\n\n      let result\n      if (utils.isArray(from)) {\n        let i\n        to.length = 0\n        for (i = 0; i < from.length; i++) {\n          result = utils.copy(from[i], null, stackFrom, stackTo, blacklist, plain)\n          if (utils.isObject(from[i])) {\n            stackFrom.push(from[i])\n            stackTo.push(result)\n          }\n          to.push(result)\n        }\n      } else {\n        if (utils.isArray(to)) {\n          to.length = 0\n        } else {\n          utils.forOwn(to, function (value, key) {\n            delete to[key]\n          })\n        }\n        for (var key in from) {\n          if (from.hasOwnProperty(key)) {\n            if (utils.isBlacklisted(key, blacklist)) {\n              continue\n            }\n            result = utils.copy(from[key], null, stackFrom, stackTo, blacklist, plain)\n            if (utils.isObject(from[key])) {\n              stackFrom.push(from[key])\n              stackTo.push(result)\n            }\n            to[key] = result\n          }\n        }\n      }\n    }\n    return to\n  },\n\n  /**\n   * Recursively shallow fill in own enumberable properties from `source` to `dest`.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  deepFillIn (dest, source) {\n    if (source) {\n      utils.forOwn(source, function (value, key) {\n        const existing = dest[key]\n        if (isPlainObject(value) && isPlainObject(existing)) {\n          utils.deepFillIn(existing, value)\n        } else if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n          dest[key] = value\n        }\n      })\n    }\n    return dest\n  },\n\n  /**\n   * Recursively shallow copy own enumberable properties from `source` to `dest`.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  deepMixIn (dest, source) {\n    if (source) {\n      utils.forOwn(source, function (value, key) {\n        const existing = dest[key]\n        if (isPlainObject(value) && isPlainObject(existing)) {\n          utils.deepMixIn(existing, value)\n        } else {\n          dest[key] = value\n        }\n      })\n    }\n    return dest\n  },\n\n  /**\n   * @param {Object} a Base object.\n   * @param {Object} b Comparison object.\n   * @return {Object} Diff.\n   */\n  diffObjects (a, b, opts) {\n    opts || (opts = {})\n    let equalsFn = opts.equalsFn\n    let bl = opts.ignore\n    const diff = {\n      added: {},\n      changed: {},\n      removed: {}\n    }\n    if (!utils.isFunction(equalsFn)) {\n      equalsFn = utils.strictEqual\n    }\n\n    utils.forOwn(b, function (oldValue, key) {\n      const newValue = a[key]\n\n      if (utils.isBlacklisted(key, bl) || equalsFn(newValue, oldValue)) {\n        return\n      }\n\n      if (utils.isUndefined(newValue)) {\n        diff.removed[key] = undefined\n      } else if (!equalsFn(newValue, oldValue)) {\n        diff.changed[key] = newValue\n      }\n    })\n\n    utils.forOwn(a, function (newValue, key) {\n      if (!utils.isUndefined(b[key]) || utils.isBlacklisted(key, bl)) {\n        return\n      }\n      diff.added[key] = newValue\n    })\n\n    return diff\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  equal (a, b) {\n    return a == b // eslint-disable-line\n  },\n\n  /**\n   * Add eventing capabilities into the target object.\n   *\n   * @ignore\n   * @param {Object} target Target object.\n   * @param {Function} [getter] Custom getter for retrieving the object's event\n   * listeners.\n   * @param {Function} [setter] Custom setter for setting the object's event\n   * listeners.\n   */\n  eventify (target, getter, setter, enumerable) {\n    target = target || this\n    let _events = {}\n    if (!getter && !setter) {\n      getter = function () {\n        return _events\n      }\n      setter = function (value) {\n        _events = value\n      }\n    }\n    Object.defineProperties(target, {\n      emit: {\n        enumerable: !!enumerable,\n        value (...args) {\n          const events = getter.call(this) || {}\n          const type = args.shift()\n          let listeners = events[type] || []\n          let i\n          for (i = 0; i < listeners.length; i++) {\n            listeners[i].f.apply(listeners[i].c, args)\n          }\n          listeners = events.all || []\n          args.unshift(type)\n          for (i = 0; i < listeners.length; i++) {\n            listeners[i].f.apply(listeners[i].c, args)\n          }\n        }\n      },\n      off: {\n        enumerable: !!enumerable,\n        value (type, func) {\n          const events = getter.call(this)\n          const listeners = events[type]\n          if (!listeners) {\n            setter.call(this, {})\n          } else if (func) {\n            for (let i = 0; i < listeners.length; i++) {\n              if (listeners[i].f === func) {\n                listeners.splice(i, 1)\n                break\n              }\n            }\n          } else {\n            listeners.splice(0, listeners.length)\n          }\n        }\n      },\n      on: {\n        enumerable: !!enumerable,\n        value (type, func, ctx) {\n          if (!getter.call(this)) {\n            setter.call(this, {})\n          }\n          const events = getter.call(this)\n          events[type] = events[type] || []\n          events[type].push({\n            c: ctx,\n            f: func\n          })\n        }\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  extend (props, classProps) {\n    const superClass = this\n    let subClass\n\n    props || (props = {})\n    classProps || (classProps = {})\n\n    if (props.hasOwnProperty('constructor')) {\n      subClass = props.constructor\n      delete props.constructor\n    } else {\n      subClass = function (...args) {\n        utils.classCallCheck(this, subClass)\n        const _this = utils.possibleConstructorReturn(this, (subClass.__super__ || Object.getPrototypeOf(subClass)).apply(this, args))\n        return _this\n      }\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        configurable: true,\n        enumerable: false,\n        value: subClass,\n        writable: true\n      }\n    })\n\n    const obj = Object\n    if (obj.setPrototypeOf) {\n      obj.setPrototypeOf(subClass, superClass)\n    } else if (classProps.strictEs6Class) {\n      subClass.__proto__ = superClass // eslint-disable-line\n    } else {\n      utils.forOwn(superClass, function (value, key) {\n        subClass[key] = value\n      })\n    }\n    Object.defineProperty(subClass, '__super__', {\n      configurable: true,\n      value: superClass\n    })\n\n    utils.addHiddenPropsToTarget(subClass.prototype, props)\n    utils.fillIn(subClass, classProps)\n\n    return subClass\n  },\n\n  /**\n   * Shallow copy own enumerable properties from `src` to `dest` that are on `src`\n   * but are missing from `dest.\n   *\n   * @ignore\n   * @param {Object} dest The destination object.\n   * @param {Object} source The source object.\n   */\n  fillIn (dest, src) {\n    utils.forOwn(src, function (value, key) {\n      if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n        dest[key] = value\n      }\n    })\n    return dest\n  },\n\n  /**\n   * Find the index of something according to the given checker function.\n   *\n   * @ignore\n   * @param {Array} array The array to search.\n   * @param {Function} fn Checker function.\n   * @param {number} Index if found or -1 if not found.\n   */\n  findIndex (array, fn) {\n    let index = -1\n    array.forEach(function (record, i) {\n      if (fn(record)) {\n        index = i\n        return false\n      }\n    })\n    return index\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  forEachRelation (mapper, opts, fn, ctx) {\n    const relationList = mapper.relationList || []\n    if (!relationList.length) {\n      return\n    }\n    relationList.forEach(function (def) {\n      utils._forRelation(opts, def, fn, ctx)\n    })\n  },\n\n  /**\n   * Iterate over an object's own enumerable properties.\n   *\n   * @ignore\n   * @param {Object} object The object whose properties are to be enumerated.\n   * @param {Function} fn Iteration function.\n   * @param {Object} [thisArg] Content to which to bind `fn`.\n   */\n  forOwn (obj, fn, thisArg) {\n    const keys = Object.keys(obj)\n    const len = keys.length\n    let i\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, obj[keys[i]], keys[i], obj)\n    }\n  },\n\n  /**\n   * Proxy for `JSON.parse`.\n   *\n   * @ignore\n   * @param {string} json JSON to parse.\n   * @return {Object} Parsed object.\n   */\n  fromJson (json) {\n    return utils.isString(json) ? JSON.parse(json) : json\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  'get': function (object, prop) {\n    if (!prop) {\n      return\n    }\n    const parts = prop.split('.')\n    const last = parts.pop()\n\n    while (prop = parts.shift()) { // eslint-disable-line\n      object = object[prop]\n      if (object == null) { // eslint-disable-line\n        return\n      }\n    }\n\n    return object[last]\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  getSuper (instance, isCtor) {\n    const ctor = isCtor ? instance : instance.constructor\n    return (ctor.__super__ || Object.getPrototypeOf(ctor) || ctor.__proto__) // eslint-disable-line\n  },\n\n  /**\n   * Return the intersection of two arrays.\n   *\n   * @ignore\n   * @param {Array} array1 First array.\n   * @param {Array} array2 Second array.\n   * @return {Array} Array of elements common to both arrays.\n   */\n  intersection (array1, array2) {\n    if (!array1 || !array2) {\n      return []\n    }\n    const result = []\n    let item\n    let i\n    const len = array1.length\n    for (i = 0; i < len; i++) {\n      item = array1[i]\n      if (result.indexOf(item) !== -1) {\n        continue\n      }\n      if (array2.indexOf(item) !== -1) {\n        result.push(item)\n      }\n    }\n    return result\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isArray: Array.isArray,\n\n  /**\n   * Return whether `prop` is matched by any string or regular expression in `bl`.\n   *\n   * @ignore\n   * @param {string} prop The name of a property.\n   * @param {Array} bl Array of strings and regular expressions.\n   * @return {boolean} Whether `prop` was matched.\n   */\n  isBlacklisted (prop, bl) {\n    if (!bl || !bl.length) {\n      return false\n    }\n    let matches\n    for (var i = 0; i < bl.length; i++) {\n      if ((toStr(bl[i]) === REGEXP_TAG && bl[i].test(prop)) || bl[i] === prop) {\n        matches = prop\n        return matches\n      }\n    }\n    return !!matches\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isBoolean (value) {\n    return toStr(value) === BOOL_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isBrowser: false,\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isDate (value) {\n    return (value && typeof value === 'object' && toStr(value) === DATE_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isFunction (value) {\n    return typeof value === 'function' || (value && toStr(value) === FUNC_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isInteger (value) {\n    return toStr(value) === NUMBER_TAG && value == toInteger(value) // eslint-disable-line\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isNull (value) {\n    return value === null\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isNumber (value) {\n    const type = typeof value\n    return type === 'number' || (value && type === 'object' && toStr(value) === NUMBER_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isObject (value) {\n    return toStr(value) === OBJECT_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isRegExp (value) {\n    return toStr(value) === REGEXP_TAG\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isSorN (value) {\n    return utils.isString(value) || utils.isNumber(value)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isString (value) {\n    return typeof value === 'string' || (value && typeof value === 'object' && toStr(value) === STRING_TAG)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  isUndefined (value) {\n    return value === undefined\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  logify (target) {\n    utils.addHiddenPropsToTarget(target, {\n      dbg (...args) {\n        this.log('debug', ...args)\n      },\n      log (level, ...args) {\n        if (level && !args.length) {\n          args.push(level)\n          level = 'debug'\n        }\n        if (level === 'debug' && !this.debug) {\n          return\n        }\n        const prefix = `${level.toUpperCase()}: (${this.name || this.constructor.name})`\n        if (console[level]) {\n          console[level](prefix, ...args)\n        } else {\n          console.log(prefix, ...args)\n        }\n      }\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  noDupeAdd (array, record, fn) {\n    const index = this.findIndex(array, fn)\n    if (index < 0) {\n      array.push(record)\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  omit (props, keys) {\n    // Remove relations\n    const _props = {}\n    utils.forOwn(props, function (value, key) {\n      if (keys.indexOf(key) === -1) {\n        _props[key] = value\n      }\n    })\n    return _props\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  plainCopy (from) {\n    return utils.copy(from, undefined, undefined, undefined, undefined, true)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  possibleConstructorReturn (self, call) {\n    if (!self) {\n      throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called')\n    }\n\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self\n  },\n\n  /**\n   * Proxy for `Promise.reject`.\n   *\n   * @ignore\n   * @param {*} [value] Value with which to reject the Promise.\n   * @return {Promise} Promise reject with `value`.\n   */\n  reject (value) {\n    return utils.Promise.reject(value)\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  remove (array, fn) {\n    const index = this.findIndex(array, fn)\n    if (index >= 0) {\n      array.splice(index, 1)\n    }\n  },\n\n  /**\n   * Proxy for `Promise.resolve`.\n   *\n   * @ignore\n   * @param {*} [value] Value with which to resolve the Promise.\n   * @return {Promise} Promise resolved with `value`.\n   */\n  resolve (value) {\n    return utils.Promise.resolve(value)\n  },\n\n  /**\n   * Set the value at the provided key or path.\n   *\n   * @ignore\n   * @param {Object} object The object on which to set a property.\n   * @param {(string|Object)} path The key or path to the property. Can also\n   * pass in an object of path/value pairs, which will all be set on the target\n   * object.\n   * @param {*} [value] The value to set.\n   */\n  set: function (object, path, value) {\n    if (utils.isObject(path)) {\n      utils.forOwn(path, function (value, _path) {\n        utils.set(object, _path, value)\n      })\n    } else {\n      const parts = PATH.exec(path)\n      if (parts) {\n        mkdirP(object, parts[1])[parts[2]] = value\n      } else {\n        object[path] = value\n      }\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @ignore\n   */\n  strictEqual (a, b) {\n    let _equal = a === b\n    if (!_equal) {\n      if (utils.isObject(a) && utils.isObject(b)) {\n        utils.forOwn(a, function (value, key) {\n          _equal = _equal && utils.strictEqual(value, b[key])\n        })\n        utils.forOwn(b, function (value, key) {\n          _equal = _equal && utils.strictEqual(value, a[key])\n        })\n      } else if (utils.isArray(a) && utils.isArray(b)) {\n        a.forEach(function (value, i) {\n          _equal = _equal && utils.strictEqual(value, b[i])\n        })\n      }\n    }\n    return _equal\n  },\n\n  /**\n   * Proxy for `JSON.stringify`.\n   *\n   * @ignore\n   * @param {*} value Value to serialize to JSON.\n   * @return {string} JSON string.\n   */\n  toJson: JSON.stringify,\n\n  /**\n   * Unset the value at the provided key or path.\n   *\n   * @ignore\n   * @param {Object} object The object from which to delete the property.\n   * @param {string} path The key or path to the property.\n   */\n  unset (object, path) {\n    const parts = path.split('.')\n    const last = parts.pop()\n\n    while (path = parts.shift()) { // eslint-disable-line\n      object = object[path]\n      if (object == null) { // eslint-disable-line\n        return\n      }\n    }\n\n    object[last] = undefined\n  }\n}\n\n// Attempt to detect whether we are in the browser.\ntry {\n  utils.isBrowser = !!window\n} catch (e) {\n  utils.isBrowser = false\n}\n\nexport default utils\n","import utils from './utils'\n\nexport default function Component () {\n  /**\n   * Event listeners attached to this Component. Do not modify. Use\n   * {@link Component#on} and {@link Component#off} instead.\n   *\n   * @name Component#_listeners\n   * @instance\n   * @type {Object}\n   */\n  Object.defineProperty(this, '_listeners', { value: {} })\n}\n\n/**\n * Create a subclass of this component.\n *\n * @name Component.extend\n * @method\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @return {Function} Subclass of this component.\n */\nComponent.extend = utils.extend\n\n/**\n * TODO\n *\n * @name Component#dbg\n * @method\n */\n/**\n * TODO\n *\n * @name Component#log\n * @method\n */\nutils.logify(Component.prototype)\n\n/**\n * Register a new event listener on this Component.\n *\n * @name Component#on\n * @method\n * @param {string} event Name of event to subsribe to.\n * @param {Function} listener Listener function to handle the event.\n * @param {*} [ctx] Optional content in which to invoke the listener.\n */\n/**\n * Remove an event listener from this Component. If no listener is provided,\n * then all listeners for the specified event will be removed. If no event is\n * specified then all listeners for all events will be removed.\n *\n * @name Component#off\n * @method\n * @param {string} [event] Name of event to unsubsribe to.\n * @param {Function} [listener] Listener to remove.\n */\n/**\n * Trigger an event on this Component.\n *\n * @name Component#emit\n * @method\n * @param {string} event Name of event to emit.\n * @param {...*} [args] Arguments to pass to any listeners.\n */\nutils.eventify(\n  Component.prototype,\n  function () {\n    return this._listeners\n  },\n  function (value) {\n    this._listeners = value\n  }\n)\n","import utils from './utils'\nimport Component from './Component'\n\n// Reserved words used by JSData's Query Syntax\nconst reserved = {\n  limit: '',\n  offset: '',\n  orderBy: '',\n  skip: '',\n  sort: '',\n  where: ''\n}\n\n// Used by our JavaScript implementation of the LIKE operator\nconst escapeRegExp = /([.*+?^=!:${}()|[\\]\\/\\\\])/g\nconst percentRegExp = /%/g\nconst underscoreRegExp = /_/g\nconst escape = function (pattern) {\n  return pattern.replace(escapeRegExp, '\\\\$1')\n}\n\n/**\n * A class used by the {@link Collection} class to build queries to be executed\n * against the collection's data. An instance of `Query` is returned by\n * {@link Collection#query}. Query instances are typically short-lived.\n *\n * ```javascript\n * import {Query} from 'js-data'\n * ```\n *\n * @class Query\n * @extends Component\n * @param {Collection} collection The collection on which this query operates.\n */\nexport default Component.extend({\n  constructor: function Query (collection) {\n    const self = this\n    utils.classCallCheck(self, Query)\n\n    /**\n     * The {@link Collection} on which this query operates.\n     *\n     * @name Query#collection\n     * @type {Collection}\n     */\n    self.collection = collection\n\n    /**\n     * The current data result of this query.\n     *\n     * @name Query#data\n     * @type {Array}\n     */\n    self.data = null\n  },\n\n  /**\n   * Find all entities between two boundaries.\n   *\n   * Get the users ages 18 to 30\n   * ```js\n   * const users = query.between(18, 30, { index: 'age' }).run()\n   * ```\n   * Same as above\n   * ```js\n   * const users = query.between([18], [30], { index: 'age' }).run()\n   * ```\n   *\n   * @name Query#between\n   * @method\n   * @param {Array} leftKeys - Keys defining the left boundary.\n   * @param {Array} rightKeys - Keys defining the right boundary.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] - Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.limit] - Limit the result to a certain number.\n   * @param {boolean} [opts.offset] - The number of resulting entities to skip.\n   * @return {Query} A reference to itself for chaining.\n   */\n  between (leftKeys, rightKeys, opts) {\n    const self = this\n    opts || (opts = {})\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    self.data = self.collection.getIndex(opts.index).between(leftKeys, rightKeys, opts)\n    return self\n  },\n\n  /**\n   * The comparison function used by the Query class.\n   *\n   * @name Query#compare\n   * @method\n   * @param {Array} orderBy An orderBy clause used for sorting and sub-sorting.\n   * @param {number} index The index of the current orderBy clause being used.\n   * @param {*} a The first item in the comparison.\n   * @param {*} b The second item in the comparison.\n   * @return {number} -1 if `b` should preceed `a`. 0 if `a` and `b` are equal.\n   * 1 if `a` should preceed `b`.\n   */\n  compare (orderBy, index, a, b) {\n    const def = orderBy[index]\n    let cA = utils.get(a, def[0])\n    let cB = utils.get(b, def[0])\n    if (cA && utils.isString(cA)) {\n      cA = cA.toUpperCase()\n    }\n    if (cB && utils.isString(cB)) {\n      cB = cB.toUpperCase()\n    }\n    if (a === undefined) {\n      a = null\n    }\n    if (b === undefined) {\n      b = null\n    }\n    if (def[1].toUpperCase() === 'DESC') {\n      const temp = cB\n      cB = cA\n      cA = temp\n    }\n    if (cA < cB) {\n      return -1\n    } else if (cA > cB) {\n      return 1\n    } else {\n      if (index < orderBy.length - 1) {\n        return this.compare(orderBy, index + 1, a, b)\n      } else {\n        return 0\n      }\n    }\n  },\n\n  /**\n   * Predicate evaluation function used by the Query class.\n   *\n   * @name Query#evaluate\n   * @method\n   * @param {*} value The value to evaluate.\n   * @param {string} op The operator to use in this evaluation.\n   * @param {*} predicate The predicate to use in this evaluation.\n   * @return {boolean} Whether the value passed the evaluation or not.\n   */\n  evaluate (value, op, predicate) {\n    const ops = this.constructor.ops\n    if (ops[op]) {\n      return ops[op](value, predicate)\n    }\n    if (op.indexOf('like') === 0) {\n      return !utils.isNull(this.like(predicate, op.substr(4)).exec(value))\n    } else if (op.indexOf('notLike') === 0) {\n      return utils.isNull(this.like(predicate, op.substr(7)).exec(value))\n    }\n  },\n\n  /**\n   * Find the entity or entities that match the provided query or pass the\n   * provided filter function.\n   *\n   * #### Example\n   *\n   * Get the draft posts created less than three months\n   * ```js\n   * const posts = query.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * }).run()\n   * ```\n   * Use a custom filter function\n   * ```js\n   * const posts = query.filter(function (post) {\n   *   return post.isReady()\n   * }).run()\n   * ```\n   *\n   * @name Query#filter\n   * @method\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Function} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @return {Query} A reference to itself for chaining.\n   */\n  filter (query, thisArg) {\n    const self = this\n    query || (query = {})\n    self.getData()\n    if (utils.isObject(query)) {\n      let where = {}\n      // Filter\n      if (utils.isObject(query.where)) {\n        where = query.where\n      }\n      utils.forOwn(query, function (value, key) {\n        if (!(key in reserved) && !(key in where)) {\n          where[key] = {\n            '==': value\n          }\n        }\n      })\n\n      const fields = []\n      const ops = []\n      const predicates = []\n      utils.forOwn(where, function (clause, field) {\n        if (!utils.isObject(clause)) {\n          clause = {\n            '==': clause\n          }\n        }\n        utils.forOwn(clause, function (expr, op) {\n          fields.push(field)\n          ops.push(op)\n          predicates.push(expr)\n        })\n      })\n      if (fields.length) {\n        let i\n        let len = fields.length\n        self.data = self.data.filter(function (item) {\n          let first = true\n          let keep = true\n\n          for (i = 0; i < len; i++) {\n            let op = ops[i]\n            const isOr = op.charAt(0) === '|'\n            op = isOr ? op.substr(1) : op\n            const expr = self.evaluate(utils.get(item, fields[i]), op, predicates[i])\n            if (expr !== undefined) {\n              keep = first ? expr : (isOr ? keep || expr : keep && expr)\n            }\n            first = false\n          }\n          return keep\n        })\n      }\n\n      // Sort\n      let orderBy = query.orderBy || query.sort\n\n      if (utils.isString(orderBy)) {\n        orderBy = [\n          [orderBy, 'ASC']\n        ]\n      }\n      if (!utils.isArray(orderBy)) {\n        orderBy = null\n      }\n\n      // Apply 'orderBy'\n      if (orderBy) {\n        let index = 0\n        orderBy.forEach(function (def, i) {\n          if (utils.isString(def)) {\n            orderBy[i] = [def, 'ASC']\n          }\n        })\n        self.data.sort(function (a, b) {\n          return self.compare(orderBy, index, a, b)\n        })\n      }\n\n      // Skip\n      if (utils.isNumber(query.skip)) {\n        self.skip(query.skip)\n      } else if (utils.isNumber(query.offset)) {\n        self.skip(query.offset)\n      }\n      // Limit\n      if (utils.isNumber(query.limit)) {\n        self.limit(query.limit)\n      }\n    } else if (utils.isFunction(query)) {\n      self.data = self.data.filter(query, thisArg)\n    }\n    return self\n  },\n\n  /**\n   * Iterate over all entities.\n   *\n   * @name Query#forEach\n   * @method\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @return {Query} A reference to itself for chaining.\n   */\n  forEach (forEachFn, thisArg) {\n    this.getData().forEach(forEachFn, thisArg)\n    return this\n  },\n\n  /**\n   * Find the entity or entities that match the provided key.\n   *\n   * #### Example\n   *\n   * Get the entity whose primary key is 25\n   * ```js\n   * const entities = query.get(25).run()\n   * ```\n   * Same as above\n   * ```js\n   * const entities = query.get([25]).run()\n   * ```\n   * Get all users who are active and have the \"admin\" role\n   * ```js\n   * const activeAdmins = query.get(['active', 'admin'], {\n   *   index: 'activityAndRoles'\n   * }).run()\n   * ```\n   * Get all entities that match a certain weather condition\n   * ```js\n   * const niceDays = query.get(['sunny', 'humid', 'calm'], {\n   *   index: 'weatherConditions'\n   * }).run()\n   * ```\n   *\n   * @name Query#get\n   * @method\n   * @param {Array} keyList - Key(s) defining the entity to retrieve. If\n   * `keyList` is not an array (i.e. for a single-value key), it will be\n   * wrapped in an array.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.string] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Query} A reference to itself for chaining.\n   */\n  get (keyList, opts) {\n    const self = this\n    keyList || (keyList = [])\n    opts || (opts = {})\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    if (keyList && !utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n    if (!keyList.length) {\n      self.getData()\n      return self\n    }\n    self.data = self.collection.getIndex(opts.index).get(keyList)\n    return self\n  },\n\n  /**\n   * Find the entity or entities that match the provided keyLists.\n   *\n   * #### Example\n   *\n   * Get the posts where \"status\" is \"draft\" or \"inReview\"\n   * ```js\n   * const posts = query.getAll('draft', 'inReview', { index: 'status' }).run()\n   * ```\n   * Same as above\n   * ```js\n   * const posts = query.getAll(['draft'], ['inReview'], { index: 'status' }).run()\n   * ```\n   *\n   * @name Query#getAll\n   * @method\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * entities matching each keyList will be retrieved. If no keyLists are\n   * provided, all entities will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Query} A reference to itself for chaining.\n   */\n  getAll (...args) {\n    const self = this\n    let opts = {}\n    if (self.data) {\n      throw new Error('Cannot access index after first operation!')\n    }\n    if (!args.length || args.length === 1 && utils.isObject(args[0])) {\n      self.getData()\n      return self\n    } else if (args.length && utils.isObject(args[args.length - 1])) {\n      opts = args[args.length - 1]\n      args.pop()\n    }\n    const collection = self.collection\n    const index = collection.getIndex(opts.index)\n    self.data = []\n    args.forEach(function (keyList) {\n      self.data = self.data.concat(index.get(keyList))\n    })\n    return self\n  },\n\n  /**\n   * Return the current data result of this query.\n   * @name Query#getData\n   * @method\n   * @return {Array} The data in this query.\n   */\n  getData () {\n    const self = this\n    if (!self.data) {\n      self.data = self.collection.index.getAll()\n    }\n    return self.data\n  },\n\n  like (pattern, flags) {\n    return new RegExp(`^${(escape(pattern).replace(percentRegExp, '.*').replace(underscoreRegExp, '.'))}$`, flags)\n  },\n\n  /**\n   * Limit the result.\n   *\n   * #### Example\n   *\n   * Get only the first 10 draft posts\n   * ```js\n   * const posts = query.get('draft', { index: 'status' }).limit(10).run()\n   * ```\n   *\n   * @name Query#limit\n   * @method\n   * @param {number} num - The maximum number of entities to keep in the result.\n   * @return {Query} A reference to itself for chaining.\n   */\n  limit (num) {\n    if (!utils.isNumber(num)) {\n      throw new TypeError(`limit: Expected number but found ${typeof num}!`)\n    }\n    const data = this.getData()\n    this.data = data.slice(0, Math.min(data.length, num))\n    return this\n  },\n\n  /**\n   * Apply a mapping function to the result data.\n   *\n   * @name Query#map\n   * @method\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @return {Query} A reference to itself for chaining.\n   */\n  map (mapFn, thisArg) {\n    this.data = this.getData().map(mapFn, thisArg)\n    return this\n  },\n\n  /**\n   * Return the result of calling the specified function on each item in this\n   * collection's main index.\n   * @name Query#mapCall\n   * @method\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @return {Query} A reference to itself for chaining.\n   */\n  mapCall (funcName, ...args) {\n    this.data = this.getData().map(function (item) {\n      return item[funcName](...args)\n    })\n    return this\n  },\n\n  /**\n   * Complete the execution of the query and return the resulting data.\n   *\n   * @name Query#run\n   * @method\n   * @return {Array} The result of executing this query.\n   */\n  run () {\n    const data = this.data\n    this.data = null\n    return data\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * #### Example\n   *\n   * Get all but the first 10 draft posts\n   * ```js\n   * const posts = query.get('draft', { index: 'status' }).skip(10).run()\n   * ```\n   *\n   * @name Query#skip\n   * @method\n   * @param {number} num - The number of entities to skip.\n   * @return {Query} A reference to itself for chaining.\n   */\n  skip (num) {\n    if (!utils.isNumber(num)) {\n      throw new TypeError(`skip: Expected number but found ${typeof num}!`)\n    }\n    const data = this.getData()\n    if (num < data.length) {\n      this.data = data.slice(num)\n    } else {\n      this.data = []\n    }\n    return this\n  }\n}, {\n  /**\n   * TODO\n   *\n   * @name Query.ops\n   * @type {Object}\n   */\n  ops: {\n    '==': function (value, predicate) {\n      return value == predicate // eslint-disable-line\n    },\n    '===': function (value, predicate) {\n      return value === predicate\n    },\n    '!=': function (value, predicate) {\n      return value != predicate // eslint-disable-line\n    },\n    '!==': function (value, predicate) {\n      return value !== predicate\n    },\n    '>': function (value, predicate) {\n      return value > predicate\n    },\n    '>=': function (value, predicate) {\n      return value >= predicate\n    },\n    '<': function (value, predicate) {\n      return value < predicate\n    },\n    '<=': function (value, predicate) {\n      return value <= predicate\n    },\n    'isectEmpty': function (value, predicate) {\n      return !utils.intersection((value || []), (predicate || [])).length\n    },\n    'isectNotEmpty': function (value, predicate) {\n      return utils.intersection((value || []), (predicate || [])).length\n    },\n    'in': function (value, predicate) {\n      return predicate.indexOf(value) !== -1\n    },\n    'notIn': function (value, predicate) {\n      return predicate.indexOf(value) === -1\n    },\n    'contains': function (value, predicate) {\n      return (value || []).indexOf(predicate) !== -1\n    },\n    'notContains': function (value, predicate) {\n      return (value || []).indexOf(predicate) === -1\n    }\n  }\n})\n","export function sort (a, b, hashCode) {\n  // Short-curcuit comparison if a and b are strictly equal\n  // This is absolutely necessary for indexed objects that\n  // don't have the idAttribute field\n  if (a === b) {\n    return 0\n  }\n  if (hashCode) {\n    a = hashCode(a)\n    b = hashCode(b)\n  }\n  if (a === null && b === null) {\n    return 0\n  }\n\n  if (a === null) {\n    return -1\n  }\n\n  if (b === null) {\n    return 1\n  }\n\n  if (a < b) {\n    return -1\n  }\n\n  if (a > b) {\n    return 1\n  }\n\n  return 0\n}\n\nexport function insertAt (array, index, value) {\n  array.splice(index, 0, value)\n  return array\n}\n\nexport function removeAt (array, index) {\n  array.splice(index, 1)\n  return array\n}\n\nexport function binarySearch (array, value, field) {\n  let lo = 0\n  let hi = array.length\n  let compared\n  let mid\n\n  while (lo < hi) {\n    mid = ((lo + hi) / 2) | 0\n    compared = sort(value, array[mid], field)\n    if (compared === 0) {\n      return {\n        found: true,\n        index: mid\n      }\n    } else if (compared < 0) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n\n  return {\n    found: false,\n    index: hi\n  }\n}\n","// Copyright (c) 2015, InternalFX.\n\n// Permission to use, copy, modify, and/or distribute this software for any purpose with or\n// without fee is hereby granted, provided that the above copyright notice and this permission\n// notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO\n// THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT\n// SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR\n// ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\n// USE OR PERFORMANCE OF THIS SOFTWARE.\n\n// Modifications\n// Copyright 2015-2016 Jason Dobry\n//\n// Summary of modifications:\n// Converted to ES6 Class syntax\n// Reworked dependencies so as to re-use code already in js-data\nimport utils from '../../src/utils'\nimport {binarySearch, insertAt, removeAt} from './utils'\n\nexport default function Index (fieldList, opts) {\n  utils.classCallCheck(this, Index)\n  fieldList || (fieldList = [])\n\n  if (!utils.isArray(fieldList)) {\n    throw new Error('fieldList must be an array.')\n  }\n\n  opts || (opts = {})\n  this.fieldList = fieldList\n  this.fieldGetter = opts.fieldGetter\n  this.hashCode = opts.hashCode\n  this.isIndex = true\n  this.keys = []\n  this.values = []\n}\n\nutils.addHiddenPropsToTarget(Index.prototype, {\n  'set' (keyList, value) {\n    if (!utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        let dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\n        if (!dataLocation.found) {\n          insertAt(this.values[pos.index], dataLocation.index, value)\n        }\n      } else {\n        insertAt(this.keys, pos.index, key)\n        insertAt(this.values, pos.index, [value])\n      }\n    } else {\n      if (pos.found) {\n        this.values[pos.index].set(keyList, value)\n      } else {\n        insertAt(this.keys, pos.index, key)\n        let newIndex = new Index([], { hashCode: this.hashCode })\n        newIndex.set(keyList, value)\n        insertAt(this.values, pos.index, newIndex)\n      }\n    }\n  },\n\n  'get' (keyList) {\n    if (!utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    let key = keyList.shift() || null\n    let pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        if (this.values[pos.index].isIndex) {\n          return this.values[pos.index].getAll()\n        } else {\n          return this.values[pos.index]\n        }\n      } else {\n        return []\n      }\n    } else {\n      if (pos.found) {\n        return this.values[pos.index].get(keyList)\n      } else {\n        return []\n      }\n    }\n  },\n\n  getAll () {\n    let results = []\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        results = results.concat(value.getAll())\n      } else {\n        results = results.concat(value)\n      }\n    })\n    return results\n  },\n\n  visitAll (cb, thisArg) {\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        value.visitAll(cb, thisArg)\n      } else {\n        value.forEach(cb, thisArg)\n      }\n    })\n  },\n\n  between (leftKeys, rightKeys, opts) {\n    opts || (opts = {})\n    if (!utils.isArray(leftKeys)) {\n      leftKeys = [leftKeys]\n    }\n    if (!utils.isArray(rightKeys)) {\n      rightKeys = [rightKeys]\n    }\n    utils.fillIn(opts, {\n      leftInclusive: true,\n      rightInclusive: false,\n      limit: undefined,\n      offset: 0\n    })\n\n    let results = this._between(leftKeys, rightKeys, opts)\n\n    if (opts.limit) {\n      return results.slice(opts.offset, opts.limit + opts.offset)\n    } else {\n      return results.slice(opts.offset)\n    }\n  },\n\n  _between (leftKeys, rightKeys, opts) {\n    let results = []\n\n    let leftKey = leftKeys.shift()\n    let rightKey = rightKeys.shift()\n\n    let pos\n\n    if (leftKey !== undefined) {\n      pos = binarySearch(this.keys, leftKey)\n    } else {\n      pos = {\n        found: false,\n        index: 0\n      }\n    }\n\n    if (leftKeys.length === 0) {\n      if (pos.found && opts.leftInclusive === false) {\n        pos.index += 1\n      }\n\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        if (rightKey !== undefined) {\n          if (opts.rightInclusive) {\n            if (this.keys[i] > rightKey) { break }\n          } else {\n            if (this.keys[i] >= rightKey) { break }\n          }\n        }\n\n        if (this.values[i].isIndex) {\n          results = results.concat(this.values[i].getAll())\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    } else {\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        let currKey = this.keys[i]\n        if (currKey > rightKey) { break }\n\n        if (this.values[i].isIndex) {\n          if (currKey === leftKey) {\n            results = results.concat(this.values[i]._between(utils.copy(leftKeys), rightKeys.map(function () { return undefined }), opts))\n          } else if (currKey === rightKey) {\n            results = results.concat(this.values[i]._between(leftKeys.map(function () { return undefined }), utils.copy(rightKeys), opts))\n          } else {\n            results = results.concat(this.values[i].getAll())\n          }\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    }\n\n    if (opts.limit) {\n      return results.slice(0, opts.limit + opts.offset)\n    } else {\n      return results\n    }\n  },\n\n  peek () {\n    if (this.values.length) {\n      if (this.values[0].isIndex) {\n        return this.values[0].peek()\n      } else {\n        return this.values[0]\n      }\n    }\n    return []\n  },\n\n  clear () {\n    this.keys = []\n    this.values = []\n  },\n\n  insertRecord (data) {\n    let keyList = this.fieldList.map(function (field) {\n      if (utils.isFunction(field)) {\n        return field(data) || null\n      } else {\n        return data[field] || null\n      }\n    })\n    this.set(keyList, data)\n  },\n\n  removeRecord (data) {\n    let removed\n    this.values.forEach((value, i) => {\n      if (value.isIndex) {\n        if (value.removeRecord(data)) {\n          if (value.keys.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      } else {\n        const dataLocation = binarySearch(value, data, this.hashCode)\n        if (dataLocation.found) {\n          removeAt(value, dataLocation.index)\n          if (value.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      }\n    })\n    return removed ? data : undefined\n  },\n\n  updateRecord (data) {\n    this.removeRecord(data)\n    this.insertRecord(data)\n  }\n})\n","import utils from './utils'\nimport Component from './Component'\nimport Query from './Query'\nimport Index from '../lib/mindex/index'\n\nconst COLLECTION_DEFAULTS = {\n  /**\n   * Field to be used as the unique identifier for records in this collection.\n   * Defaults to `\"id\"` unless {@link Collection#mapper} is set, in which case\n   * this will default to {@link Mapper#idAttribute}.\n   *\n   * @name Collection#idAttribute\n   * @type {string}\n   * @default \"id\"\n   */\n  idAttribute: 'id',\n\n  /**\n   * What to do when inserting a record into this Collection that shares a\n   * primary key with a record already in this Collection.\n   *\n   * Possible values:\n   * - merge\n   * - replace\n   *\n   * Merge:\n   *\n   * Recursively shallow copy properties from the new record onto the existing\n   * record.\n   *\n   * Replace:\n   *\n   * Shallow copy top-level properties from the new record onto the existing\n   * record. Any top-level own properties of the existing record that are _not_\n   * on the new record will be removed.\n   *\n   * @name Collection#onConflict\n   * @type {string}\n   * @default \"merge\"\n   */\n  onConflict: 'merge'\n}\n\n/**\n * ```javascript\n * import {Collection} from 'js-data'\n * ```\n *\n * An ordered set of {@link Record} instances.\n *\n * @example\n * import {Collection, Record} from 'js-data'\n * const user1 = new Record({ id: 1 })\n * const user2 = new Record({ id: 2 })\n * const UserCollection = new Collection([user1, user2])\n * UserCollection.get(1) === user1 // true\n *\n * @class Collection\n * @extends Component\n * @param {Array} [records] Initial set of records to insert into the\n * collection.\n * @param {Object} [opts] Configuration options.\n * @param {string} [opts.idAttribute] See {@link Collection#idAttribute}.\n * @param {string} [opts.onConflict=\"merge\"] See {@link Collection#onConflict}.\n * @param {string} [opts.mapper] See {@link Collection#mapper}.\n */\nexport default Component.extend({\n  constructor: function Collection (records, opts) {\n    const self = this\n    utils.classCallCheck(self, Collection)\n    Collection.__super__.call(self)\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      opts = records\n      records = []\n    }\n    if (utils.isString(opts)) {\n      opts = { idAttribute: opts }\n    }\n\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n\n    /**\n     * Default Mapper for this collection. Optional. If a Mapper is provided, then\n     * the collection will use the {@link Mapper#idAttribute} setting, and will\n     * wrap records in {@link Mapper#recordClass}.\n     *\n     * @example\n     * import {Collection, Mapper} from 'js-data'\n     *\n     * class MyMapperClass extends Mapper {\n     *   foo () { return 'bar' }\n     * }\n     * const myMapper = new MyMapperClass()\n     * const collection = new Collection(null, { mapper: myMapper })\n     *\n     * @name Collection#mapper\n     * @type {Mapper}\n     * @default null\n     */\n    Object.defineProperty(self, 'mapper', {\n      value: undefined,\n      writable: true\n    })\n\n    utils.fillIn(self, opts)\n    utils.fillIn(self, utils.copy(COLLECTION_DEFAULTS))\n\n    const idAttribute = self.recordId()\n\n    Object.defineProperties(self, {\n      /**\n       * The main index, which uses @{link Collection#recordId} as the key.\n       *\n       * @name Collection#index\n       * @type {Index}\n       */\n      index: {\n        value: new Index([idAttribute], {\n          hashCode (obj) {\n            return utils.get(obj, idAttribute)\n          }\n        })\n      },\n\n      /**\n       * Object that holds the secondary indexes of this collection.\n       *\n       * @name Collection#indexes\n       * @type {Object.<string, Index>}\n       */\n      indexes: {\n        value: {}\n      }\n    })\n\n    const mapper = self.mapper\n\n    // Insert initial data into the collection\n    records.forEach(function (record) {\n      record = mapper ? mapper.createRecord(record, opts) : record\n      self.index.insertRecord(record)\n      if (record && utils.isFunction(record.on)) {\n        record.on('all', self._onRecordEvent, self)\n      }\n    })\n  },\n\n  /**\n   * Used to bind to events emitted by records in this Collection.\n   *\n   * @name Collection#_onRecordEvent\n   * @method\n   * @private\n   * @param {...*} [arg] Args passed to {@link Collection#emit}.\n   */\n  _onRecordEvent (...args) {\n    this.emit(...args)\n  },\n\n  /**\n   * Insert the provided record or records.\n   *\n   * If a record is already in the collection then the provided record will\n   * either merge with or replace the existing record based on the value of the\n   * `onConflict` option.\n   *\n   * The collection's secondary indexes will be updated as each record is\n   * visited.\n   *\n   * @name Collection#add\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} data The record or records to insert.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.onConflict] What to do when a record is already in\n   * the collection. Possible values are `merge` or `replace`.\n   * @return {(Object|Object[]|Record|Record[])} The added record or records.\n   */\n  add (records, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Collection's configuration\n    utils._(opts, self)\n    records = self.beforeAdd(records, opts) || records\n\n    // Track whether just one record or an array of records is being inserted\n    let singular = false\n    const idAttribute = self.recordId()\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      records = [records]\n      singular = true\n    }\n\n    // Map the provided records to existing records.\n    // New records will be inserted. If any records map to existing records,\n    // they will be merged into the existing records according to the onConflict\n    // option.\n    records = records.map(function (record) {\n      let id = self.recordId(record)\n      if (!utils.isSorN(id)) {\n        throw new TypeError(`Collection#add: Expected string or number for ${idAttribute}, found ${typeof id}!`)\n      }\n      // Grab existing record if there is one\n      const existing = self.get(id)\n      // If the currently visited record is just a reference to an existing\n      // record, then there is nothing to be done. Exit early.\n      if (record === existing) {\n        return existing\n      }\n\n      if (existing) {\n        // Here, the currently visited record corresponds to a record already\n        // in the collection, so we need to merge them\n        const onConflict = opts.onConflict || self.onConflict\n        if (onConflict === 'merge') {\n          utils.deepMixIn(existing, record)\n        } else if (onConflict === 'replace') {\n          utils.forOwn(existing, (value, key) => {\n            if (key !== idAttribute && !record.hasOwnProperty(key)) {\n              delete existing[key]\n            }\n          })\n          existing.set(record)\n        }\n        record = existing\n        // Update all indexes in the collection\n        self.updateIndexes(record)\n      } else {\n        // Here, the currently visted record does not correspond to any record\n        // in the collection, so (optionally) instantiate this record and insert\n        // it into the collection\n        record = self.mapper ? self.mapper.createRecord(record, opts) : record\n        self.index.insertRecord(record)\n        utils.forOwn(self.indexes, function (index, name) {\n          index.insertRecord(record)\n        })\n        if (record && utils.isFunction(record.on)) {\n          record.on('all', self._onRecordEvent, self)\n        }\n      }\n      return record\n    })\n    // Finally, return the inserted data\n    const result = singular ? (records.length ? records[0] : undefined) : records\n    // TODO: Make this more performant (batch events?)\n    self.emit('add', result)\n    return self.afterAdd(records, opts, result) || result\n  },\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then {@link Collection#add} will return that same value.\n   *\n   * @name Collection#method\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} result The record or records\n   * that were added to this Collection by {@link Collection#add}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  afterAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}. If this method returns\n   * a value then {@link Collection#remove} will return that same value.\n   *\n   * @name Collection#afterRemove\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n   * @param {Object} record The result that will be returned by {@link Collection#remove}.\n   */\n  afterRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}. If this method\n   * returns a value then {@link Collection#removeAll} will return that same\n   * value.\n   *\n   * @name Collection#afterRemoveAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   * @param {Object} records The result that will be returned by {@link Collection#removeAll}.\n   */\n  afterRemoveAll () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then the `records` argument in {@link Collection#add} will be\n   * re-assigned to the returned value.\n   *\n   * @name Collection#beforeAdd\n   * @method\n   * @param {(Object|Object[]|Record|Record[])} records The `records` argument passed to {@link Collection#add}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  beforeAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}.\n   *\n   * @name Collection#beforeRemove\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#remove}.\n   */\n  beforeRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}.\n   *\n   * @name Collection#beforeRemoveAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   */\n  beforeRemoveAll () {},\n\n  /**\n   * Find all records between two boundaries.\n   *\n   * Shortcut for `collection.query().between(18, 30, { index: 'age' }).run()`\n   *\n   * @example <caption>Get all users ages 18 to 30</caption>\n   * const users = collection.between(18, 30, { index: 'age' })\n   *\n   * @example <caption>Same as above</caption>\n   * const users = collection.between([18], [30], { index: 'age' })\n   *\n   * @name Collection#between\n   * @method\n   * @param {Array} leftKeys Keys defining the left boundary.\n   * @param {Array} rightKeys Keys defining the right boundary.\n   * @param {Object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.limit] Limit the result to a certain number.\n   * @param {boolean} [opts.offset] The number of resulting records to skip.\n   * @return {Array} The result.\n   */\n  between (leftKeys, rightKeys, opts) {\n    return this.query().between(leftKeys, rightKeys, opts).run()\n  },\n\n  /**\n   * Create a new secondary index on the contents of the collection.\n   *\n   * @example <caption>Index users by age</caption>\n   * collection.createIndex('age')\n   *\n   * @example <caption>Index users by status and role</caption>\n   * collection.createIndex('statusAndRole', ['status', 'role'])\n   *\n   * @name Collection#createIndex\n   * @method\n   * @param {string} name - The name of the new secondary index.\n   * @param {string[]} [fieldList] - Array of field names to use as the key or\n   * compound key of the new secondary index. If no fieldList is provided, then\n   * the name will also be the field that is used to index the collection.\n   * @return {Collection} A reference to itself for chaining.\n   */\n  createIndex (name, fieldList, opts) {\n    const self = this\n    if (utils.isString(name) && fieldList === undefined) {\n      fieldList = [name]\n    }\n    opts || (opts = {})\n    opts.hashCode = opts.hashCode || function (obj) {\n      return self.recordId(obj)\n    }\n    const index = self.indexes[name] = new Index(fieldList, opts)\n    self.index.visitAll(index.insertRecord, index)\n    return self\n  },\n\n  /**\n   * Find the record or records that match the provided query or pass the\n   * provided filter function.\n   *\n   * Shortcut for `collection.query().filter(queryOrFn[, thisArg]).run()`\n   *\n   * @example <caption>Get the draft posts created less than three months</caption>\n   * const posts = collection.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 * 60 * 60 * 24 * 30 * 3)) // 3 months ago\n   *     }\n   *   }\n   * })\n   *\n   * @example <caption>Use a custom filter function</caption>\n   * const posts = collection.filter(function (post) {\n   *   return post.isReady()\n   * })\n   *\n   * @name Collection#filter\n   * @method\n   * @param {(Object|Function)} [queryOrFn={}] - Selection query or filter\n   * function.\n   * @param {Object} [thisArg] - Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @return {Array} The result.\n   */\n  filter (query, thisArg) {\n    return this.query().filter(query, thisArg).run()\n  },\n\n  /**\n   * Iterate over all records.\n   *\n   * @example\n   * collection.forEach(function (record) {\n   *   // do something\n   * })\n   *\n   * @name Collection#forEach\n   * @method\n   * @param {Function} forEachFn - Iteration function.\n   * @param {*} [thisArg] - Context to which to bind `forEachFn`.\n   * @return {Array} The result.\n   */\n  forEach (cb, thisArg) {\n    this.index.visitAll(cb, thisArg)\n  },\n\n  /**\n   * Get the record with the given id.\n   *\n   * @name Collection#get\n   * @method\n   * @param {(string|number)} id - The primary key of the record to get.\n   * @return {(Object|Record)} The record with the given id.\n   */\n  get (id) {\n    const instances = this.query().get(id).run()\n    return instances.length ? instances[0] : undefined\n  },\n\n  /**\n   * Find the record or records that match the provided keyLists.\n   *\n   * Shortcut for `collection.query().getAll(keyList1, keyList2, ...).run()`\n   *\n   * @example <caption>Get the posts where \"status\" is \"draft\" or \"inReview\"</caption>\n   * const posts = collection.getAll('draft', 'inReview', { index: 'status' })\n   *\n   * @example <caption>Same as above</caption>\n   * const posts = collection.getAll(['draft'], ['inReview'], { index: 'status' })\n   *\n   * @name Collection#getAll\n   * @method\n   * @param {...Array} [keyList] - Provide one or more keyLists, and all\n   * records matching each keyList will be retrieved. If no keyLists are\n   * provided, all records will be returned.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] - Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @return {Array} The result.\n   */\n  getAll (...args) {\n    return this.query().getAll(...args).run()\n  },\n\n  /**\n   * Return the index with the given name. If no name is provided, return the\n   * main index. Throws an error if the specified index does not exist.\n   *\n   * @name Collection#getIndex\n   * @method\n   * @param {string} [name] The name of the index to retrieve.\n   */\n  getIndex (name) {\n    const index = name ? this.indexes[name] : this.index\n    if (!index) {\n      throw new Error(`Index ${name} does not exist!`)\n    }\n    return index\n  },\n\n  /**\n   * Limit the result.\n   *\n   * Shortcut for `collection.query().limit(maximumNumber).run()`\n   *\n   * @example\n   * const posts = collection.limit(10)\n   *\n   * @name Collection#limit\n   * @method\n   * @param {number} num - The maximum number of records to keep in the result.\n   * @return {Array} The result.\n   */\n  limit (num) {\n    return this.query().limit(num).run()\n  },\n\n  /**\n   * Apply a mapping function to all records.\n   *\n   * @example\n   * const names = collection.map(function (user) {\n   *   return user.name\n   * })\n   *\n   * @name Collection#map\n   * @method\n   * @param {Function} mapFn - Mapping function.\n   * @param {*} [thisArg] - Context to which to bind `mapFn`.\n   * @return {Array} The result of the mapping.\n   */\n  map (cb, thisArg) {\n    const data = []\n    this.index.visitAll(function (value) {\n      data.push(cb.call(thisArg, value))\n    })\n    return data\n  },\n\n  /**\n   * Return the result of calling the specified function on each record in this\n   * collection's main index.\n   *\n   * @name Collection#mapCall\n   * @method\n   * @param {string} funcName - Name of function to call\n   * @parama {...*} [args] - Remaining arguments to be passed to the function.\n   * @return {Array} The result.\n   */\n  mapCall (funcName, ...args) {\n    const data = []\n    this.index.visitAll(function (record) {\n      data.push(record[funcName](...args))\n    })\n    return data\n  },\n\n  /**\n   * Return the primary key of the given, or if no record is provided, return the\n   * name of the field that holds the primary key of records in this Collection.\n   *\n   * @name Collection#recordId\n   * @method\n   * @param {(Object|Record)} [record] The record whose primary key is to be\n   * returned.\n   * @return {(string|number)} Primary key or name of field that holds primary\n   * key.\n   */\n  recordId (record) {\n    const self = this\n    if (record) {\n      return utils.get(record, self.recordId())\n    }\n    return self.mapper ? self.mapper.idAttribute : self.idAttribute || 'id'\n  },\n\n  /**\n   * Create a new query to be executed against the contents of the collection.\n   * The result will be all or a subset of the contents of the collection.\n   *\n   * @example <caption>Grab page 2 of users between ages 18 and 30</caption>\n   * collection.query()\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n   *   .skip(10) // second page\n   *   .limit(10) // page size\n   *   .run()\n   *\n   * @name Collection#query\n   * @method\n   * @return {Query} New query object.\n   */\n  query () {\n    return new Query(this)\n  },\n\n  /**\n   * Reduce the data in the collection to a single value and return the result.\n   *\n   * @example\n   * const totalVotes = collection.reduce(function (prev, record) {\n   *   return prev + record.upVotes + record.downVotes\n   * }, 0)\n   *\n   * @name Collection#reduce\n   * @method\n   * @param {Function} cb - Reduction callback.\n   * @param {*} initialValue - Initial value of the reduction.\n   * @return {*} The result.\n   */\n  reduce (cb, initialValue) {\n    const data = this.getAll()\n    return data.reduce(cb, initialValue)\n  },\n\n  /**\n   * Remove the record with the given id from this Collection.\n   *\n   * @name Collection#remove\n   * @method\n   * @param {(string|number)} id - The primary key of the record to be removed.\n   * @param {Object} [opts] - Configuration options.\n   * @return {Object|Record} The removed record, if any.\n   */\n  remove (id, opts) {\n    const self = this\n\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemove(id, opts)\n    const record = self.get(id)\n\n    // The record is in the collection, remove it\n    if (record) {\n      self.index.removeRecord(record)\n      utils.forOwn(self.indexes, function (index, name) {\n        index.removeRecord(record)\n      })\n      if (record && utils.isFunction(record.off)) {\n        record.off('all', self._onRecordEvent, self)\n        self.emit('remove', record)\n      }\n    }\n    return self.afterRemove(id, opts, record) || record\n  },\n\n  /**\n   * Remove the record selected by \"query\" from this collection.\n   *\n   * @name Collection#removeAll\n   * @method\n   * @param {Object} [query={}] - Selection query.\n   * @param {Object} [query.where] - Filtering criteria.\n   * @param {number} [query.skip] - Number to skip.\n   * @param {number} [query.limit] - Number to limit to.\n   * @param {Array} [query.orderBy] - Sorting criteria.\n   * @param {Object} [opts] - Configuration options.\n   * @return {(Object[]|Record[])} The removed records, if any.\n   */\n  removeAll (query, opts) {\n    const self = this\n    // Default values for arguments\n    opts || (opts = {})\n    self.beforeRemoveAll(query, opts)\n    const records = self.filter(query)\n\n    // Remove each selected record from the collection\n    records.forEach(function (item) {\n      self.remove(self.recordId(item), opts)\n    })\n    return self.afterRemoveAll(query, opts, records) || records\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * Shortcut for `collection.query().skip(numberToSkip).run()`\n   *\n   * @example\n   * const posts = collection.skip(10)\n   *\n   * @name Collection#skip\n   * @method\n   * @param {number} num - The number of records to skip.\n   * @return {Array} The result.\n   */\n  skip (num) {\n    return this.query().skip(num).run()\n  },\n\n  /**\n   * Return the plain JSON representation of all items in this collection.\n   * Assumes records in this collection have a toJSON method.\n   *\n   * @name Collection#toJSON\n   * @method\n   * @param {Object} [opts] - Configuration options.\n   * @param {string[]} [opts.with] - Array of relation names or relation fields\n   * to include in the representation.\n   * @return {Array} The records.\n   */\n  toJSON (opts) {\n    return this.mapCall('toJSON', opts)\n  },\n\n  /**\n   * Update a record's position in a single index of this collection. See\n   * {@link Collection#updateIndexes} to update a record's position in all\n   * indexes at once.\n   *\n   * @name Collection#updateIndex\n   * @method\n   * @param {Object} record - The record to update.\n   * @param {Object} [opts] - Configuration options.\n   * @param {string} [opts.index] The index in which to update the record's\n   * position. If you don't specify an index then the record will be updated\n   * in the main index.\n   */\n  updateIndex (record, opts) {\n    opts || (opts = {})\n    this.getIndex(opts.index).updateRecord(record)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Collection#updateIndexes\n   * @method\n   * @param {Object} record - TODO\n   * @param {Object} [opts] - Configuration options.\n   */\n  updateIndexes (record) {\n    const self = this\n    self.index.updateRecord(record)\n    utils.forOwn(self.indexes, function (index, name) {\n      index.updateRecord(record)\n    })\n  }\n})\n","import utils from './utils'\n\nexport const belongsToType = 'belongsTo'\nexport const hasManyType = 'hasMany'\nexport const hasOneType = 'hasOne'\n\nfunction Relation (related, opts) {\n  const self = this\n\n  opts || (opts = {})\n\n  const localField = opts.localField\n  if (!localField) {\n    throw new Error('localField is required!')\n  }\n\n  const foreignKey = opts.foreignKey = opts.foreignKey || opts.localKey\n  if (!foreignKey && (opts.type === belongsToType || opts.type === hasOneType)) {\n    throw new Error('foreignKey is required!')\n  }\n  const localKeys = opts.localKeys\n  const foreignKeys = opts.foreignKeys\n  if (!foreignKey && !localKeys && !foreignKeys && opts.type === hasManyType) {\n    throw new Error('one of (foreignKey, localKeys, foreignKeys) is required!')\n  }\n\n  if (utils.isString(related)) {\n    opts.relation = related\n    if (!utils.isFunction(opts.getRelation)) {\n      throw new Error('you must provide a reference to the related mapper!')\n    }\n  } else if (related) {\n    opts.relation = related.name\n    Object.defineProperty(self, 'relatedMapper', {\n      value: related\n    })\n  } else {\n    throw new Error('no relation provided!')\n  }\n\n  Object.defineProperty(self, 'inverse', {\n    value: undefined,\n    writable: true\n  })\n\n  utils.fillIn(self, opts)\n}\n\nutils.addHiddenPropsToTarget(Relation.prototype, {\n  getRelation () {\n    return this.relatedMapper\n  },\n  getLocalKeys (record) {\n\n  },\n  getForeignKey (record) {\n    if (this.type === belongsToType) {\n      return utils.get(record, this.foreignKey)\n    }\n    return utils.get(record, this.mapper.idAttribute)\n  },\n  setForeignKey (record, relatedRecord) {\n    const self = this\n    if (!record || !relatedRecord) {\n      return\n    }\n    if (self.type === belongsToType) {\n      utils.set(record, self.foreignKey, utils.get(relatedRecord, self.getRelation().idAttribute))\n    } else {\n      const idAttribute = self.mapper.idAttribute\n      if (utils.isArray(relatedRecord)) {\n        relatedRecord.forEach(function (relatedRecordItem) {\n          utils.set(relatedRecordItem, self.foreignKey, utils.get(record, idAttribute))\n        })\n      } else {\n        utils.set(relatedRecord, self.foreignKey, utils.get(record, idAttribute))\n      }\n    }\n  },\n  getLocalField (record) {\n    return utils.get(record, this.localField)\n  },\n  setLocalField (record, data) {\n    return utils.set(record, this.localField, data)\n  },\n  getInverse (mapper) {\n    const self = this\n    if (self.inverse) {\n      return self.inverse\n    }\n    self.getRelation().relationList.forEach(function (def) {\n      if (def.getRelation() === mapper) {\n        if (def.foreignKey && def.foreignKey !== self.foreignKey) {\n          return\n        }\n        self.inverse = def\n        return false\n      }\n    })\n    return self.inverse\n  }\n})\n\nconst relatedTo = function (mapper, related, opts) {\n  opts.name = mapper.name\n  const relation = new Relation(related, opts)\n  Object.defineProperty(relation, 'mapper', {\n    value: mapper\n  })\n\n  mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n  mapper.relationFields || Object.defineProperty(mapper, 'relationFields', { value: [] })\n  mapper.relationList.push(relation)\n  mapper.relationFields.push(relation.localField)\n}\n\n/**\n * TODO\n *\n * @name module:js-data.belongsTo\n * @method\n * @param {Mapper} related The relation the target belongs to.\n * @param {Object} opts Configuration options.\n * @param {string} opts.foreignKey The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const belongsTo = function (related, opts) {\n  opts || (opts = {})\n  opts.type = belongsToType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name module:js-data.hasMany\n * @method\n * @param {Mapper} related The relation of which the target has many.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasMany = function (related, opts) {\n  opts || (opts = {})\n  opts.type = hasManyType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name module:js-data.hasOne\n * @method\n * @param {Mapper} related The relation of which the target has one.\n * @param {Object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @return {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasOne = function (related, opts) {\n  opts || (opts = {})\n  opts.type = hasOneType\n  return function (target) {\n    relatedTo(target, related, opts)\n  }\n}\n","import utils from './utils'\nimport Component from './Component'\n\nconst superMethod = function (mapper, name) {\n  const store = mapper.datastore\n  if (store && store[name]) {\n    return function (...args) {\n      return store[name](mapper.name, ...args)\n    }\n  }\n  return mapper[name].bind(mapper)\n}\n\n/**\n * js-data's Record class.\n *\n * ```javascript\n * import {Record} from 'js-data'\n * ```\n *\n * @class Record\n * @extends Component\n * @param {Object} [props] The initial properties of the new Record instance.\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n * initial properties.\n */\nconst Record = Component.extend({\n  constructor: function Record (props, opts) {\n    const self = this\n    utils.classCallCheck(self, Record)\n\n    props || (props = {})\n    opts || (opts = {})\n    const _props = {}\n    Object.defineProperties(self, {\n      _get: { value (key) { return utils.get(_props, key) } },\n      _set: { value (key, value) { return utils.set(_props, key, value) } },\n      _unset: { value (key) { return utils.unset(_props, key) } }\n    })\n    const _set = self._set\n    // TODO: Optimize these strings\n    _set('creating', true)\n    if (opts.noValidate) {\n      _set('noValidate', true)\n    }\n    utils.fillIn(self, props)\n    _set('creating', false)\n    _set('noValidate', false)\n    _set('previous', utils.copy(props))\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#_mapper\n   * @method\n   * @ignore\n   */\n  _mapper () {\n    if (!this.constructor.mapper) {\n      throw new Error('This recordClass has no Mapper!')\n    }\n    return this.constructor.mapper\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#afterLoadRelations\n   * @method\n   * @param {string[]} relations TODO\n   * @param {Object} opts TODO\n   */\n  afterLoadRelations () {},\n\n  /**\n   * TODO\n   *\n   * @name Record#beforeLoadRelations\n   * @method\n   * @param {string[]} relations TODO\n   * @param {Object} opts TODO\n   */\n  beforeLoadRelations () {},\n\n  /**\n   * Return changes to this record since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @name Record#changes\n   * @method\n   * @param [opts] Configuration options.\n   * @param {Function} [opts.equalsFn] Equality function. Default uses `===`.\n   * @param {Array} [opts.ignore] Array of strings or RegExp of fields to ignore.\n   */\n  changes (opts) {\n    const self = this\n    opts || (opts = {})\n    return utils.diffObjects(self, self._get('previous'), opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#commit\n   * @method\n   */\n  commit () {\n    const self = this\n    self._set('changed') // unset\n    self._set('previous', utils.copy(self))\n    return self\n  },\n\n  /**\n   * Call {@link Mapper#destroy} using this record's primary key.\n   *\n   * @name Record#destroy\n   * @method\n   * @param {Object} [opts] Configuration options passed to {@link Mapper#destroy}.\n   * @return {Promise} The result of calling {@link Mapper#destroy}.\n   */\n  destroy (opts) {\n    const self = this\n    opts || (opts = {})\n    const mapper = self._mapper()\n    return superMethod(mapper, 'destroy')(utils.get(self, mapper.idAttribute), opts)\n  },\n\n  /**\n   * Return the value at the given path for this instance.\n   *\n   * @name Record#get\n   * @method\n   * @param {string} key - Path of value to retrieve.\n   * @return {*} Value at path.\n   */\n  'get' (key) {\n    return utils.get(this, key)\n  },\n\n  /**\n   * Return whether this record has changed since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @name Record#hasChanges\n   * @method\n   * @param [opts] Configuration options.\n   * @param {Function} [opts.equalsFn] Equality function. Default uses `===`.\n   * @param {Array} [opts.ignore] Array of strings or RegExp of fields to ignore.\n   */\n  hasChanges (opts) {\n    const self = this\n    const quickHasChanges = !!(self._get('changed') || []).length\n    return quickHasChanges || utils.areDifferent(self, self._get('previous'), opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#hashCode\n   * @method\n   */\n  hashCode () {\n    const self = this\n    return utils.get(self, self._mapper().idAttribute)\n  },\n\n  isValid (opts) {\n    const self = this\n    return !self._mapper().validate(self, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#loadRelations\n   * @method\n   * @param {string[]} [relations] TODO\n   * @param {Object} [opts] TODO\n   */\n  loadRelations (relations, opts) {\n    let op\n    const self = this\n    const mapper = self._mapper()\n\n    // Default values for arguments\n    relations || (relations = [])\n    if (utils.isString(relations)) {\n      relations = [relations]\n    }\n    opts || (opts = {})\n    opts.with = relations\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(opts, mapper)\n    opts.adapter = mapper.getAdapterName(opts)\n\n    // beforeLoadRelations lifecycle hook\n    op = opts.op = 'beforeLoadRelations'\n    return utils.resolve(self[op](relations, opts)).then(function () {\n      if (utils.isString(relations)) {\n        relations = [relations]\n      }\n      // Now delegate to the adapter\n      op = opts.op = 'loadRelations'\n      mapper.dbg(op, self, relations, opts)\n      let tasks = []\n      let task\n      utils.forEachRelation(mapper, opts, function (def, optsCopy) {\n        const relatedMapper = def.getRelation()\n        optsCopy.raw = false\n        if (utils.isFunction(def.load)) {\n          task = def.load(mapper, def, self, opts)\n        } else if (def.type === 'hasMany') {\n          if (def.foreignKey) {\n            task = superMethod(relatedMapper, 'findAll')({\n              [def.foreignKey]: utils.get(self, mapper.idAttribute)\n            }, optsCopy)\n          } else if (def.localKeys) {\n            task = superMethod(relatedMapper, 'findAll')({\n              where: {\n                [relatedMapper.idAttribute]: {\n                  'in': utils.get(self, def.localKeys)\n                }\n              }\n            })\n          } else if (def.foreignKeys) {\n            task = superMethod(relatedMapper, 'findAll')({\n              where: {\n                [def.foreignKeys]: {\n                  'contains': utils.get(self, mapper.idAttribute)\n                }\n              }\n            }, opts)\n          }\n        } else if (def.type === 'belongsTo' || def.type === 'hasOne') {\n          const key = utils.get(self, def.foreignKey)\n          if (utils.isSorN(key)) {\n            task = superMethod(relatedMapper, 'find')(key, optsCopy)\n          }\n        }\n        if (task) {\n          task = task.then(function (relatedData) {\n            def.setLocalField(self, relatedData)\n          })\n          tasks.push(task)\n        }\n      })\n      return Promise.all(tasks)\n    }).then(function () {\n      // afterLoadRelations lifecycle hook\n      op = opts.op = 'afterLoadRelations'\n      return utils.resolve(self[op](relations, opts)).then(function () {\n        return self\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#previous\n   * @method\n   * @param {string} [key] TODO\n   */\n  previous (key) {\n    const self = this\n    if (key) {\n      return self._get(`previous.${key}`)\n    }\n    return self._get('previous')\n  },\n\n  /**\n   * TODO\n   *\n   * @name Record#revert\n   * @method\n   * @param {Object} [opts] Configuration options.\n   */\n  revert (opts) {\n    const self = this\n    const previous = self._get('previous')\n    opts || (opts = {})\n    opts.preserve || (opts.preserve = [])\n    utils.forOwn(self, (value, key) => {\n      if (key !== self._mapper().idAttribute && !previous.hasOwnProperty(key) && self.hasOwnProperty(key) && opts.preserve.indexOf(key) === -1) {\n        delete self[key]\n      }\n    })\n    utils.forOwn(previous, (value, key) => {\n      if (opts.preserve.indexOf(key) === -1) {\n        self[key] = value\n      }\n    })\n    self.commit()\n    return self\n  },\n\n  /**\n   * Delegates to {@link Mapper#create} or {@link Mapper#update}.\n   *\n   * @name Record#save\n   * @method\n   * @param {Object} [opts] Configuration options. See {@link Mapper#create}.\n   * @param [opts] Configuration options.\n   * @param {boolean} [opts.changesOnly] Equality function. Default uses `===`.\n   * @param {Function} [opts.equalsFn] Passed to {@link Record#changes} when\n   * `changesOnly` is `true`.\n   * @param {Array} [opts.ignore] Passed to {@link Record#changes} when\n   * `changesOnly` is `true`.\n   * @return {Promise} The result of calling {@link Mapper#create} or\n   * {@link Mapper#update}.\n   */\n  save (opts) {\n    const self = this\n    opts || (opts = {})\n    const mapper = self._mapper()\n    const id = utils.get(self, mapper.idAttribute)\n    let props = self\n    if (utils.isUndefined(id)) {\n      return superMethod(mapper, 'create')(props, opts)\n    }\n    if (opts.changesOnly) {\n      const changes = self.changes(opts)\n      props = {}\n      utils.fillIn(props, changes.added)\n      utils.fillIn(props, changes.changed)\n    }\n    return superMethod(mapper, 'update')(id, props, opts)\n  },\n\n  /**\n   * Set the value for a given key, or the values for the given keys if \"key\" is\n   * an object.\n   *\n   * @name Record#set\n   * @method\n   * @param {(string|Object)} key - Key to set or hash of key-value pairs to set.\n   * @param {*} [value] - Value to set for the given key.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  'set' (key, value, opts) {\n    const self = this\n    if (utils.isObject(key)) {\n      opts = value\n    }\n    opts || (opts = {})\n    if (opts.silent) {\n      self._set('silent', true)\n    }\n    utils.set(self, key, value)\n    if (!self._get('eventId')) {\n      self._set('silent') // unset\n    }\n  },\n\n  // TODO: move logic for single-item async operations onto the instance.\n\n  /**\n   * Return a plain object representation of this record. If the class from\n   * which this record was created has a mapper, then {@link Mapper#toJSON} will\n   * be called instead.\n   *\n   * @name Record#toJSON\n   * @method\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation. Only available as an option if the class\n   * from which this record was created has a mapper.\n   * @return {Object} Plain object representation of this record.\n   */\n  toJSON (opts) {\n    const mapper = this.constructor.mapper\n    if (mapper) {\n      return mapper.toJSON(this, opts)\n    } else {\n      const json = {}\n      utils.forOwn(this, function (prop, key) {\n        json[key] = utils.copy(prop)\n      })\n      return json\n    }\n  },\n\n  /**\n   * Unset the value for a given key.\n   *\n   * @name Record#unset\n   * @method\n   * @param {string} key - Key to unset.\n   * @param {Object} [opts] - Optional configuration.\n   * @param {boolean} [opts.silent=false] - Whether to trigger change events.\n   */\n  unset (key, opts) {\n    this.set(key, undefined, opts)\n  },\n\n  validate (opts) {\n    return this._mapper().validate(this, opts)\n  }\n})\n\n/**\n * Allow records to emit events.\n *\n * An record's registered listeners are stored in the record's private data.\n */\nutils.eventify(\n  Record.prototype,\n  function () {\n    return this._get('events')\n  },\n  function (value) {\n    this._set('events', value)\n  }\n)\n\nexport default Record\n","import utils from './utils'\nimport Component from './Component'\n\n/**\n * TODO\n *\n * @name Schema.types\n * @type {Object}\n */\nconst types = {\n  array: utils.isArray,\n  boolean: utils.isBoolean,\n  integer: utils.isInteger,\n  'null': utils.isNull,\n  number: utils.isNumber,\n  object: utils.isObject,\n  string: utils.isString\n}\n\n/**\n * @ignore\n */\nconst segmentToString = function (segment, prev) {\n  let str = ''\n  if (segment) {\n    if (utils.isNumber(segment)) {\n      str += `[${segment}]`\n    } else if (prev) {\n      str += `.${segment}`\n    } else {\n      str += `${segment}`\n    }\n  }\n  return str\n}\n\n/**\n * @ignore\n */\nconst makePath = function (opts) {\n  opts || (opts = {})\n  let path = ''\n  const segments = opts.path || []\n  segments.forEach(function (segment) {\n    path += segmentToString(segment, path)\n  })\n  path += segmentToString(opts.prop, path)\n  return path\n}\n\n/**\n * @ignore\n */\nconst makeError = function (actual, expected, opts) {\n  return {\n    expected,\n    actual: '' + actual,\n    path: makePath(opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst addError = function (actual, expected, opts, errors) {\n  errors.push(makeError(actual, expected, opts))\n}\n\n/**\n * @ignore\n */\nconst maxLengthCommon = function (keyword, value, schema, opts) {\n  const max = schema[keyword]\n  if (value.length > max) {\n    return makeError(value.length, `length no more than ${max}`, opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst minLengthCommon = function (keyword, value, schema, opts) {\n  const min = schema[keyword]\n  if (value.length < min) {\n    return makeError(value.length, `length no less than ${min}`, opts)\n  }\n}\n\n/**\n * TODO\n *\n * @name Schema.validationKeywords\n * @type {Object}\n */\nconst validationKeywords = {\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor82\n   *\n   * @name Schema.validationKeywords.allOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  allOf (value, schema, opts) {\n    let allErrors = []\n    schema.allOf.forEach(function (_schema) {\n      allErrors = allErrors.concat(validate(value, _schema, opts) || [])\n    })\n    return allErrors.length ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor85\n   *\n   * @name Schema.validationKeywords.anyOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  anyOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.anyOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor70\n   *\n   * @name Schema.validationKeywords.dependencies\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  dependencies (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor76\n   *\n   * @name Schema.validationKeywords.enum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  enum (value, schema, opts) {\n    const possibleValues = schema['enum']\n    if (possibleValues.indexOf(value) === -1) {\n      return makeError(value, `one of (${possibleValues.join(', ')})`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor37\n   *\n   * @name Schema.validationKeywords.items\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  items (value, schema, opts) {\n    opts || (opts = {})\n    // TODO: additionalItems\n    let items = schema.items\n    let errors = []\n    const checkingTuple = utils.isArray(items)\n    const length = value.length\n    for (var prop = 0; prop < length; prop++) {\n      if (checkingTuple) {\n        // Validating a tuple, instead of just checking each item against the\n        // same schema\n        items = schema.items[prop]\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], items, opts) || [])\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor17\n   *\n   * @name Schema.validationKeywords.maximum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maximum (value, schema, opts) {\n    // Must be a number\n    const maximum = schema.maximum\n    // Must be a boolean\n    // Depends on maximum\n    // default: false\n    const exclusiveMaximum = schema.exclusiveMaximum\n    if (typeof value === typeof maximum && (exclusiveMaximum ? maximum < value : maximum <= value)) {\n      // TODO: Account for value of exclusiveMaximum in messaging\n      return makeError(value, `no more than ${maximum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.maxItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxItems (value, schema, opts) {\n    return maxLengthCommon('maxItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor26\n   *\n   * @name Schema.validationKeywords.maxLength\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxLength (value, schema, opts) {\n    return maxLengthCommon('maxLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor54\n   *\n   * @name Schema.validationKeywords.maxProperties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  maxProperties (value, schema, opts) {\n    const maxProperties = schema.maxProperties\n    const length = Object.keys(value).length\n    if (length > maxProperties) {\n      return makeError(length, `no more than ${maxProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor21\n   *\n   * @name Schema.validationKeywords.minimum\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minimum (value, schema, opts) {\n    // Must be a number\n    const minimum = schema.minimum\n    // Must be a boolean\n    // Depends on minimum\n    // default: false\n    const exclusiveMinimum = schema.exclusiveMinimum\n    if (typeof value === typeof minimum && (exclusiveMinimum ? minimum > value : minimum >= value)) {\n      // TODO: Account for value of exclusiveMinimum in messaging\n      return makeError(value, `no less than ${minimum}`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.minItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minItems (value, schema, opts) {\n    return minLengthCommon('minItems', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor29\n   *\n   * @name Schema.validationKeywords.minLength\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minLength (value, schema, opts) {\n    return minLengthCommon('minLength', value, schema, opts)\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor57\n   *\n   * @name Schema.validationKeywords.minProperties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  minProperties (value, schema, opts) {\n    const minProperties = schema.minProperties\n    const length = Object.keys(value).length\n    if (length < minProperties) {\n      return makeError(length, `no more than ${minProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor14\n   *\n   * @name Schema.validationKeywords.multipleOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  multipleOf (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor91\n   *\n   * @name Schema.validationKeywords.not\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  not (value, schema, opts) {\n    if (!validate(value, schema.not, opts)) {\n      // TODO: better messaging\n      return makeError('succeeded', 'should have failed', opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor88\n   *\n   * @name Schema.validationKeywords.oneOf\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  oneOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.oneOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else if (validated) {\n        allErrors = [makeError('valid against more than one', 'valid against only one', opts)]\n        validated = false\n        return false\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor33\n   *\n   * @name Schema.validationKeywords.pattern\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  pattern (value, schema, opts) {\n    const pattern = schema.pattern\n    if (utils.isString(value) && !value.match(pattern)) {\n      return makeError(value, pattern, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor64\n   *\n   * @name Schema.validationKeywords.properties\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  properties (value, schema, opts) {\n    opts || (opts = {})\n    // Can be a boolean or an object\n    // Technically the default is an \"empty schema\", but here \"true\" is\n    // functionally the same\n    const additionalProperties = utils.isUndefined(schema.additionalProperties) ? true : schema.additionalProperties\n    // \"s\": The property set of the instance to validate.\n    const toValidate = {}\n    // \"p\": The property set from \"properties\".\n    // Default is an object\n    const properties = schema.properties || {}\n    // \"pp\": The property set from \"patternProperties\".\n    // Default is an object\n    const patternProperties = schema.patternProperties || {}\n    let errors = []\n\n    // Collect set \"s\"\n    utils.forOwn(value, function (_value, prop) {\n      toValidate[prop] = undefined\n    })\n    // Remove from \"s\" all elements of \"p\", if any.\n    utils.forOwn(properties || {}, function (_schema, prop) {\n      if (utils.isUndefined(value[prop]) && !utils.isUndefined(_schema['default'])) {\n        value[prop] = utils.copy(_schema['default'])\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], _schema, opts) || [])\n      delete toValidate[prop]\n    })\n    // For each regex in \"pp\", remove all elements of \"s\" which this regex\n    // matches.\n    utils.forOwn(patternProperties, function (_schema, pattern) {\n      utils.forOwn(toValidate, function (undef, prop) {\n        if (prop.match(pattern)) {\n          opts.prop = prop\n          errors = errors.concat(validate(value[prop], _schema, opts) || [])\n          delete toValidate[prop]\n        }\n      })\n    })\n    const keys = Object.keys(toValidate)\n    // If \"s\" is not empty, validation fails\n    if (additionalProperties === false) {\n      if (keys.length) {\n        addError(`extra fields: ${keys.join(', ')}`, 'no extra fields', opts, errors)\n      }\n    } else if (utils.isObject(additionalProperties)) {\n      // Otherwise, validate according to provided schema\n      keys.forEach(function (prop) {\n        opts.prop = prop\n        errors = errors.concat(validate(value[prop], additionalProperties, opts) || [])\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor61\n   *\n   * @name Schema.validationKeywords.required\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  required (value, schema, opts) {\n    const required = schema.required\n    let errors = []\n    if (!opts.existingOnly) {\n      required.forEach(function (prop) {\n        if (utils.isUndefined(utils.get(value, prop))) {\n          const prevProp = opts.prop\n          opts.prop = prop\n          addError(undefined, 'a value', opts, errors)\n          opts.prop = prevProp\n        }\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor79\n   *\n   * @name Schema.validationKeywords.type\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  type (value, schema, opts) {\n    let type = schema.type\n    let validType\n    // Can be one of several types\n    if (utils.isString(type)) {\n      type = [type]\n    }\n    // Try to match the value against an expected type\n    type.forEach(function (_type) {\n      // TODO: throw an error if type is not defined\n      if (types[_type](value, schema, opts)) {\n        // Matched a type\n        validType = _type\n        return false\n      }\n    })\n    // Value did not match any expected type\n    if (!validType) {\n      return makeError(value ? typeof value : '' + value, `one of (${type.join(', ')})`, opts)\n    }\n    // Run keyword validators for matched type\n    // http://json-schema.org/latest/json-schema-validation.html#anchor12\n    const validator = typeGroupValidators[validType]\n    if (validator) {\n      return validator(value, schema, opts)\n    }\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor49\n   *\n   * @name Schema.validationKeywords.uniqueItems\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  uniqueItems (value, schema, opts) {\n    if (value && value.length && schema.uniqueItems) {\n      const length = value.length\n      let item, i, j\n      // Check n - 1 items\n      for (i = length - 1; i > 0; i--) {\n        item = value[i]\n        // Only compare against unchecked items\n        for (j = i - 1; j >= 0; j--) {\n          // Found a duplicate\n          if (item === value[j]) {\n            return makeError(item, 'no duplicates', opts)\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nconst validateKeyword = function (op, value, schema, opts) {\n  return !utils.isUndefined(schema[op]) && validationKeywords[op](value, schema, opts)\n}\n\n/**\n * @ignore\n */\nconst runOps = function (ops, value, schema, opts) {\n  let errors = []\n  ops.forEach(function (op) {\n    errors = errors.concat(validateKeyword(op, value, schema, opts) || [])\n  })\n  return errors.length ? errors : undefined\n}\n\nconst ANY_OPS = ['enum', 'type', 'allOf', 'anyOf', 'oneOf', 'not']\nconst ARRAY_OPS = ['items', 'maxItems', 'minItems', 'uniqueItems']\nconst NUMERIC_OPS = ['multipleOf', 'maximum', 'minimum']\nconst OBJECT_OPS = ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies']\nconst STRING_OPS = ['maxLength', 'minLength', 'pattern']\n\n/**\n * http://json-schema.org/latest/json-schema-validation.html#anchor75\n * @ignore\n */\nconst validateAny = function (value, schema, opts) {\n  return runOps(ANY_OPS, value, schema, opts)\n}\n\n/**\n * TODO\n *\n * @name Schema.validate\n * @method\n * @param {*} value TODO\n * @param {Object} [schema] TODO\n * @param {Object} [opts] Configuration options.\n */\nconst validate = function (value, schema, opts) {\n  let errors = []\n  opts || (opts = {})\n  let shouldPop\n  let prevProp = opts.prop\n  if (utils.isUndefined(schema)) {\n    return\n  }\n  if (!utils.isObject(schema)) {\n    throw new Error(`Invalid schema at path: \"${opts.path}\"`)\n  }\n  if (utils.isUndefined(opts.path)) {\n    opts.path = []\n  }\n  // Track our location as we recurse\n  if (!utils.isUndefined(opts.prop)) {\n    shouldPop = true\n    opts.path.push(opts.prop)\n    opts.prop = undefined\n  }\n  // Validate against parent schema\n  if (schema['extends']) {\n    // opts.path = path\n    // opts.prop = prop\n    if (utils.isFunction(schema['extends'].validate)) {\n      errors = errors.concat(schema['extends'].validate(value, opts) || [])\n    } else {\n      errors = errors.concat(validate(value, schema['extends'], opts) || [])\n    }\n  }\n  if (utils.isUndefined(value)) {\n    // Check if property is required\n    if (schema.required === true) {\n      addError(value, 'a value', opts, errors)\n    }\n    if (shouldPop) {\n      opts.path.pop()\n      opts.prop = prevProp\n    }\n    return errors.length ? errors : undefined\n  }\n  errors = errors.concat(validateAny(value, schema, opts) || [])\n  if (shouldPop) {\n    opts.path.pop()\n    opts.prop = prevProp\n  }\n  return errors.length ? errors : undefined\n}\n\n// These strings are cached for optimal performance of the change detection\n// boolean - Whether a Record is changing in the current execution frame\nconst changingPath = 'changing'\n// string[] - Properties that have changed in the current execution frame\nconst changedPath = 'changed'\n// boolean - Whether a Record is currently being instantiated\nconst creatingPath = 'creating'\n// number - The setTimeout change event id of a Record, if any\nconst eventIdPath = 'eventId'\n// boolean - Whether to skip validation for a Record's currently changing property\nconst noValidatePath = 'noValidate'\n// boolean - Whether to skip change notification for a Record's currently\n// changing property\nconst silentPath = 'silent'\nconst validationFailureMsg = 'validation failed'\n\n/**\n * Assemble a property descriptor which will be added to the prototype of\n * {@link Mapper#recordClass}. This method is called when\n * {@link Mapper#applySchema} is set to `true`.\n *\n * TODO: Make this more configurable, i.e. not so tied to the Record class.\n *\n * @ignore\n */\nconst makeDescriptor = function (prop, schema, opts) {\n  const descriptor = {\n    // These properties are enumerable by default, but regardless of their\n    // enumerability, they won't be \"own\" properties of individual records\n    enumerable: utils.isUndefined(schema.enumerable) ? true : !!schema.enumerable\n  }\n  // Cache a few strings for optimal performance\n  const keyPath = `props.${prop}`\n  const previousPath = `previous.${prop}`\n  const getter = opts.getter\n  const setter = opts.setter\n  const unsetter = opts.unsetter\n\n  descriptor.get = function () { return this._get(keyPath) }\n  descriptor.set = function (value) {\n    const self = this\n    // These are accessed a lot\n    const _get = self[getter]\n    const _set = self[setter]\n    const _unset = self[unsetter]\n\n    // Optionally check that the new value passes validation\n    if (!_get(noValidatePath)) {\n      const errors = schema.validate(value)\n      if (errors) {\n        // Immediately throw an error, preventing the record from getting into\n        // an invalid state\n        const error = new Error(validationFailureMsg)\n        error.errors = errors\n        throw error\n      }\n    }\n    // TODO: Make it so tracking can be turned on for all properties instead of\n    // only per-property\n    if (schema.track && !_get(creatingPath)) {\n      const previous = _get(previousPath)\n      const current = _get(keyPath)\n      let changing = _get(changingPath)\n      let changed = _get(changedPath)\n\n      if (!changing) {\n        // Track properties that are changing in the current event loop\n        changed = []\n      }\n\n      // Add changing properties to this array once at most\n      const index = changed.indexOf(prop)\n      if (current !== value && index === -1) {\n        changed.push(prop)\n      }\n      if (previous === value) {\n        if (index >= 0) {\n          changed.splice(index, 1)\n        }\n      }\n      // No changes in current event loop\n      if (!changed.length) {\n        changing = false\n        _unset(changingPath)\n        _unset(changedPath)\n        // Cancel pending change event\n        if (_get(eventIdPath)) {\n          clearTimeout(_get(eventIdPath))\n          _unset(eventIdPath)\n        }\n      }\n      // Changes detected in current event loop\n      if (!changing && changed.length) {\n        _set(changedPath, changed)\n        _set(changingPath, true)\n        // Saving the timeout id allows us to batch all changes in the same\n        // event loop into a single \"change\"\n        // TODO: Optimize\n        _set(eventIdPath, setTimeout(() => {\n          // Previous event loop where changes were gathered has ended, so\n          // notify any listeners of those changes and prepare for any new\n          // changes\n          _unset(changedPath)\n          _unset(eventIdPath)\n          _unset(changingPath)\n          // TODO: Optimize\n          if (!_get(silentPath)) {\n            let i\n            for (i = 0; i < changed.length; i++) {\n              self.emit('change:' + changed[i], self, utils.get(self, changed[i]))\n            }\n            self.emit('change', self, self.changes())\n          }\n          _unset(silentPath)\n        }, 0))\n      }\n    }\n    _set(keyPath, value)\n    return value\n  }\n\n  return descriptor\n}\n\n/**\n * TODO\n *\n * @name Schema.typeGroupValidators\n * @type {Object}\n */\nconst typeGroupValidators = {\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.array\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  array: function (value, schema, opts) {\n    return runOps(ARRAY_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.integer\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  integer: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name Schema.typeGroupValidators.number\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  number: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor13.\n   *\n   * @name Schema.typeGroupValidators.numeric\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  numeric: function (value, schema, opts) {\n    return runOps(NUMERIC_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor53.\n   *\n   * @name Schema.typeGroupValidators.object\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  object: function (value, schema, opts) {\n    return runOps(OBJECT_OPS, value, schema, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor25.\n   *\n   * @name Schema.typeGroupValidators.string\n   * @method\n   * @param {*} value TODO\n   * @param {Object} schema TODO\n   * @param {Object} opts TODO\n   */\n  string: function (value, schema, opts) {\n    return runOps(STRING_OPS, value, schema, opts)\n  }\n}\n\n/**\n * js-data's Schema class.\n *\n * ```javascript\n * import {Schema} from 'js-data'\n * ```\n *\n * @class Schema\n * @extends Component\n * @param {Object} definition Schema definition according to json-schema.org\n */\nexport default Component.extend({\n  constructor: function Schema (definition) {\n    // const self = this\n    definition || (definition = {})\n    // TODO: schema validation\n    utils.fillIn(this, definition)\n\n    // TODO: rework this to make sure all possible keywords are converted\n    if (definition.properties) {\n      utils.forOwn(definition.properties, function (_definition, prop) {\n        if (!(_definition instanceof Schema)) {\n          definition.properties[prop] = new Schema(_definition)\n        }\n      })\n    }\n  },\n\n  /**\n   * This adds ES5 getters/setters to the target based on the \"properties\" in\n   * this Schema, which makes possible change tracking and validation on\n   * property assignment.\n   *\n   * @name Schema#validate\n   * @method\n   * @param {Object} target The prototype to which to apply this schema.\n   */\n  apply (target, opts) {\n    opts || (opts = {})\n    opts.getter = opts.getter || '_get'\n    opts.setter = opts.setter || '_set'\n    opts.unsetter = opts.unsetter || '_unset'\n    const properties = this.properties || {}\n    utils.forOwn(properties, function (schema, prop) {\n      Object.defineProperty(\n        target,\n        prop,\n        makeDescriptor(prop, schema, opts)\n      )\n    })\n  },\n\n  /**\n   * Validate the provided value against this schema.\n   *\n   * @name Schema#validate\n   * @method\n   * @param {*} value Value to validate.\n   * @param {Object} [opts] Configuration options.\n   * @return {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  validate (value, opts) {\n    return validate(value, this, opts)\n  }\n}, {\n  typeGroupValidators,\n  types,\n  validate,\n  validationKeywords\n})\n","import utils from './utils'\nimport Component from './Component'\nimport Record from './Record'\nimport Schema from './Schema'\nimport {\n  belongsTo,\n  belongsToType,\n  hasMany,\n  hasManyType,\n  hasOne,\n  hasOneType\n} from './decorators'\n\nconst makeNotify = function (num) {\n  return function (...args) {\n    const self = this\n    const opts = args[args.length - num]\n    self.dbg(opts.op, ...args)\n    if (opts.notify || (opts.notify === undefined && self.notify)) {\n      setTimeout(() => {\n        self.emit(opts.op, ...args)\n      })\n    }\n  }\n}\n\n// These are the default implementations of all of the lifecycle hooks\nconst notify = makeNotify(1)\nconst notify2 = makeNotify(2)\n\n// This object provides meta information used by Mapper#crud to actually\n// execute each lifecycle method\nconst LIFECYCLE_METHODS = {\n  count: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  destroy: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  destroyAll: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  find: {\n    defaults: [undefined, {}],\n    types: []\n  },\n  findAll: {\n    defaults: [{}, {}],\n    types: []\n  },\n  sum: {\n    defaults: [undefined, {}, {}],\n    skip: true,\n    types: []\n  },\n  update: {\n    adapterArgs (mapper, id, props, opts) {\n      return [id, mapper.toJSON(props, opts), opts]\n    },\n    beforeAssign: 1,\n    defaults: [undefined, {}, {}],\n    types: []\n  },\n  updateAll: {\n    adapterArgs (mapper, props, query, opts) {\n      return [mapper.toJSON(props, opts), query, opts]\n    },\n    beforeAssign: 0,\n    defaults: [{}, {}, {}],\n    types: []\n  },\n  updateMany: {\n    adapterArgs (mapper, records, opts) {\n      return [records.map(function (record) {\n        return mapper.toJSON(record, opts)\n      }), opts]\n    },\n    beforeAssign: 0,\n    defaults: [[], {}],\n    types: []\n  }\n}\n\nconst MAPPER_DEFAULTS = {\n  /**\n   * Hash of registered adapters. Don't modify directly. Use {@link Mapper#registerAdapter}.\n   *\n   * @name Mapper#_adapters\n   */\n  _adapters: {},\n\n  /**\n   * Whether to augment {@link Mapper#recordClass} with getter/setter property\n   * accessors according to the properties defined in {@link Mapper#schema}.\n   * This makes possible validation and change tracking on individual properties\n   * when using the dot (e.g. `user.name = \"Bob\"`) operator to modify a\n   * property.\n   *\n   * @name Mapper#applySchema\n   * @type {boolean}\n   * @default true\n   */\n  applySchema: true,\n\n  /**\n   * Whether to enable debug-level logs.\n   *\n   * @name Mapper#debug\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n\n  /**\n   * The name of the registered adapter that this Mapper should used by default.\n   *\n   * @name Mapper#defaultAdapter\n   * @type {string}\n   * @default \"http\"\n   */\n  defaultAdapter: 'http',\n\n  /**\n   * The field used as the unique identifier on records handled by this Mapper.\n   *\n   * @name Mapper#idAttribute\n   * @type {string}\n   * @default id\n   */\n  idAttribute: 'id',\n\n  /**\n   * Whether this Mapper should emit operational events.\n   *\n   * Defaults to `true` in the browser and `false` in Node.js\n   *\n   * @name Mapper#notify\n   * @type {boolean}\n   */\n  notify: utils.isBrowser,\n\n  /**\n   * Whether {@link Mapper#create}, {@link Mapper#createMany}, {@link Mapper#save},\n   * {@link Mapper#update}, {@link Mapper#updateAll}, {@link Mapper#updateMany},\n   * {@link Mapper#find}, {@link Mapper#findAll}, {@link Mapper#destroy}, and\n   * {@link Mapper#destroyAll} should return a raw result object that contains\n   * both the instance data returned by the adapter _and_ metadata about the\n   * operation.\n   *\n   * The default is to NOT return the result object, and instead return just the\n   * instance data.\n   *\n   * @name Mapper#raw\n   * @type {boolean}\n   * @default false\n   */\n  raw: false\n}\n\n/**\n * ```javascript\n * import {Mapper} from 'js-data'\n * ```\n *\n * The core of JSData's [ORM/ODM][orm] implementation. Given a minimum amout of\n * meta information about a resource, a Mapper can perform generic CRUD\n * operations against that resource. Apart from its configuration, a Mapper is\n * stateless. The particulars of various persistence layers has been abstracted\n * into adapters, which a Mapper uses to perform its operations.\n *\n * The term \"Mapper\" comes from the [Data Mapper Pattern][pattern] described in\n * Martin Fowler's [Patterns of Enterprise Application Architecture][book]. A\n * Data Mapper moves data between [in-memory object instances][record] and a\n * relational or document-based database. JSData's Mapper can work with any\n * persistence layer you can write an adapter for.\n *\n * _(\"Model\" is a heavily overloaded term and is avoided in this documentation\n * to prevent confusion.)_\n *\n * [orm]: https://en.wikipedia.org/wiki/Object-relational_mapping\n * [pattern]: https://en.wikipedia.org/wiki/Data_mapper_pattern\n * [book]: http://martinfowler.com/books/eaa.html\n * [record]: Record.html\n *\n * @class Mapper\n * @extends Component\n * @param {Object} opts Configuration options.\n * @param {boolean} [opts.applySchema=true] Whether to apply this Mapper's\n * {@link Schema} to the prototype of this Mapper's Record class. The enables\n * features like active change detection, validation during use of the\n * assignment operator, etc.\n * @param {boolean} [opts.debug=false] Wether to log debugging information\n * during operation.\n * @param {string} [opts.defaultAdapter=http] The name of the adapter to use by\n * default.\n * @param {string} [opts.idAttribute=id] The field that uniquely identifies\n * Records that this Mapper will be dealing with. Typically called a primary\n * key.\n * @param {string} opts.name The name for this Mapper. This is the minimum\n * amount of meta information required for a Mapper to be able to execute CRUD\n * operations for a \"Resource\".\n * @param {boolean} [opts.notify] Whether to emit lifecycle events.\n * @param {boolean} [opts.raw=false] Whether lifecycle methods should return a\n * more detailed reponse object instead of just a Record instance or Record\n * instances.\n */\nexport default Component.extend({\n  constructor: function Mapper (opts) {\n    const self = this\n    utils.classCallCheck(self, Mapper)\n    Mapper.__super__.call(self)\n    opts || (opts = {})\n\n    // Prepare certain properties to be non-enumerable\n    Object.defineProperties(self, {\n      _adapters: {\n        value: undefined,\n        writable: true\n      },\n\n      /**\n       * Set the `false` to force the Mapper to work with POJO objects only.\n       *\n       * ```javascript\n       * import {Mapper, Record} from 'js-data'\n       * const UserMapper = new Mapper({ recordClass: false })\n       * UserMapper.recordClass // false\n       * const user = UserMapper#createRecord()\n       * user instanceof Record // false\n       * ```\n       *\n       * Set to a custom class to have records wrapped in your custom class.\n       *\n       * ```javascript\n       * import {Mapper, Record} from 'js-data'\n       *  // Custom class\n       * class User {\n       *   constructor (props = {}) {\n       *     for (var key in props) {\n       *       if (props.hasOwnProperty(key)) {\n       *         this[key] = props[key]\n       *       }\n       *     }\n       *   }\n       * }\n       * const UserMapper = new Mapper({ recordClass: User })\n       * UserMapper.recordClass // function User() {}\n       * const user = UserMapper#createRecord()\n       * user instanceof Record // false\n       * user instanceof User // true\n       * ```\n       *\n       * Extend the {@link Record} class.\n       *\n       * ```javascript\n       * import {Mapper, Record} from 'js-data'\n       *  // Custom class\n       * class User extends Record {\n       *   constructor () {\n       *     super(props)\n       *   }\n       * }\n       * const UserMapper = new Mapper({ recordClass: User })\n       * UserMapper.recordClass // function User() {}\n       * const user = UserMapper#createRecord()\n       * user instanceof Record // true\n       * user instanceof User // true\n       * ```\n       *\n       * @name Mapper#recordClass\n       * @default {@link Record}\n       */\n      recordClass: {\n        value: undefined,\n        writable: true\n      },\n\n      lifecycleMethods: {\n        value: LIFECYCLE_METHODS\n      },\n\n      schema: {\n        value: undefined,\n        writable: true\n      }\n    })\n\n    // Apply user-provided configuration\n    utils.fillIn(self, opts)\n    // Fill in any missing options with the defaults\n    utils.fillIn(self, utils.copy(MAPPER_DEFAULTS))\n\n    /**\n     * Minimum amount of meta information required for a Mapper to be able to\n     * execute CRUD operations for a \"Resource\".\n     *\n     * @name Mapper#name\n     * @type {string}\n     */\n    if (!self.name) {\n      throw new Error('name is required!')\n    }\n\n    // Setup schema, with an empty default schema if necessary\n    if (!(self.schema instanceof Schema)) {\n      self.schema = new Schema(self.schema || {})\n    }\n\n    // Create a subclass of Record that's tied to this Mapper\n    if (utils.isUndefined(self.recordClass)) {\n      const superClass = Record\n      self.recordClass = superClass.extend({\n        constructor: (function () {\n          var subClass = function Record (props, opts) {\n            utils.classCallCheck(this, subClass)\n            superClass.call(this, props, opts)\n          }\n          return subClass\n        })()\n      })\n    }\n\n    if (self.recordClass) {\n      self.recordClass.mapper = self\n\n      // We can only apply the schema to the prototype of self.recordClass if the\n      // class extends Record\n      if (utils.getSuper(self.recordClass, true) === Record && self.schema && self.schema.apply && self.applySchema) {\n        self.schema.apply(self.recordClass.prototype)\n      }\n    }\n  },\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n   * returns a promise then {@link Mapper#count} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterCount\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#count}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#count}.\n   * @param {*} result The result, if any.\n   */\n  afterCount: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterCreate\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n   * @param {*} result The result, if any.\n   */\n  afterCreate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterCreateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   * @param {*} result The result, if any.\n   */\n  afterCreateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterDestroy\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   * @param {*} result The result, if any.\n   */\n  afterDestroy: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterDestroyAll\n   * @method\n   * @param {*} data The `data` returned by the adapter.\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   * @param {*} result The result, if any.\n   */\n  afterDestroyAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterFind\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n   * @param {*} result The result, if any.\n   */\n  afterFind: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterFindAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   * @param {*} result The result, if any.\n   */\n  afterFindAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n   * returns a promise then {@link Mapper#sum} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterSum\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#sum}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#sum}.\n   * @param {*} result The result, if any.\n   */\n  afterSum: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdate\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdateAll\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdateAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#afterUpdateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   * @param {*} result The result, if any.\n   */\n  afterUpdateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeCreate\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#create}.\n   */\n  beforeCreate: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeCreateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   */\n  beforeCreateMany: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n   * returns a promise then {@link Mapper#count} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeCount\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#count}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#count}.\n   */\n  beforeCount: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeDestroy\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   */\n  beforeDestroy: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeDestroyAll\n   * @method\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   */\n  beforeDestroyAll: notify,\n\n  /**\n   * Mappers lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeFind\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#find}.\n   */\n  beforeFind: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeFindAll\n   * @method\n   * @param {Object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   */\n  beforeFindAll: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n   * returns a promise then {@link Mapper#sum} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeSum\n   * @method\n   * @param {string} field The `field` argument passed to {@link Mapper#sum}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#sum}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#sum}.\n   */\n  beforeSum: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdate\n   * @method\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#update}.\n   */\n  beforeUpdate: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdateAll\n   * @method\n   * @param {Object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   */\n  beforeUpdateAll: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @name Mapper#beforeUpdateMany\n   * @method\n   * @param {Array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {Object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   */\n  beforeUpdateMany: notify,\n\n  /**\n   * This method is called at the end of most lifecycle methods. It does the\n   * following:\n   *\n   * 1. If `opts.raw` is `true`, add this Mapper's configuration to the `opts`\n   * argument as metadata for the operation.\n   * 2. Wrap the result data appropriately using {@link Mapper#wrap}, which\n   * calls {@link Mapper#createRecord}.\n   *\n   * @name Mapper#_end\n   * @method\n   * @private\n   */\n  _end (result, opts, skip) {\n    const self = this\n    if (opts.raw) {\n      utils._(result, opts)\n    }\n    if (skip) {\n      return result\n    }\n    let _data = opts.raw ? result.data : result\n    if (_data && utils.isFunction(self.wrap)) {\n      _data = self.wrap(_data, opts)\n      if (opts.raw) {\n        result.data = _data\n      } else {\n        result = _data\n      }\n    }\n    return result\n  },\n\n  /**\n   * Define a belongsTo relationship. Only useful if you're managing your\n   * Mappers manually and not using a Container or DataStore component.\n   *\n   * ```\n   * Post.belongsTo(User, {\n   *   localKey: 'myUserId'\n   * })\n   *\n   * Comment.belongsTo(User)\n   * Comment.belongsTo(Post, {\n   *   localField: '_post'\n   * })\n   * ```\n   *\n   * @name Mapper#belongsTo\n   * @method\n   */\n  belongsTo (relatedMapper, opts) {\n    return belongsTo(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Using the `query` argument, select records to pull from an adapter.\n   * Expects back from the adapter the array of selected records.\n   *\n   * {@link Mapper#beforeCount} will be called before calling the adapter.\n   * {@link Mapper#afterCount} will be called after calling the adapter.\n   *\n   * @name Mapper#count\n   * @method\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * resulting data. If `true` return a response object that includes the\n   * resulting data and metadata about the operation.\n   * @return {Promise}\n   */\n  count (query, opts) {\n    return this.crud('count', query, opts)\n  },\n\n  /**\n   * Create and save a new the record using the provided `props`.\n   *\n   * {@link Mapper#beforeCreate} will be called before calling the adapter.\n   * {@link Mapper#afterCreate} will be called after calling the adapter.\n   *\n   * @name Mapper#create\n   * @method\n   * @param {Object} props The properties for the new record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * created data. If `true` return a response object that includes the created\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `props` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#create}\n   * or {@link Mapper#createMany} call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @return {Promise}\n   */\n  create (props, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    props || (props = {})\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, self)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate'\n    return utils.resolve(self[op](props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = utils.isUndefined(_props) ? props : _props\n\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = def.getLocalField(props)\n        const relatedMapper = def.getRelation()\n        const relatedIdAttribute = relatedMapper.idAttribute\n        optsCopy.raw = false\n        if (!relationData) {\n          return\n        }\n        if (def.type === belongsToType) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          tasks.push(relatedMapper.create(relationData, optsCopy).then(function (data) {\n            def.setLocalField(belongsToRelationData, data)\n            def.setForeignKey(props, data)\n          }))\n        } else if (def.type === hasManyType && def.localKeys) {\n          // Create his hasMany relation first because it uses localKeys\n          tasks.push(relatedMapper.createMany(relationData, optsCopy)).then(function (data) {\n            def.setLocalField(belongsToRelationData, data)\n            utils.set(props, def.localKeys, data.map(function (record) {\n              return utils.get(record, relatedIdAttribute)\n            }))\n          })\n        }\n      })\n      return utils.Promise.all(tasks).then(function () {\n        // Now delegate to the adapter for the main create\n        op = opts.op = 'create'\n        self.dbg(op, props, opts)\n        return utils.resolve(self.getAdapter(adapter)[op](self, self.toJSON(props, { with: opts.pass || [] }), opts))\n      }).then(function (data) {\n        const createdRecord = opts.raw ? data.data : data\n        // Deep post-create hasMany and hasOne relations\n        tasks = []\n        utils.forEachRelation(self, opts, function (def, optsCopy) {\n          const relationData = def.getLocalField(props)\n          if (!relationData) {\n            return\n          }\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType && def.foreignKey) {\n            def.setForeignKey(createdRecord, relationData)\n            task = def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n              def.setLocalField(createdRecord, opts.raw ? data.data : data)\n            })\n          } else if (def.type === hasOneType) {\n            def.setForeignKey(createdRecord, relationData)\n            task = def.getRelation().create(relationData, optsCopy).then(function (data) {\n              def.setLocalField(createdRecord, opts.raw ? data.data : data)\n            })\n          } else if (def.type === belongsToType && def.getLocalField(belongsToRelationData)) {\n            def.setLocalField(createdRecord, def.getLocalField(belongsToRelationData))\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return utils.Promise.all(tasks).then(function () {\n          return data\n        })\n      })\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterCreate lifecycle hook\n      op = opts.op = 'afterCreate'\n      return utils.resolve(self[op](props, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  createInstance (props, opts) {\n    return this.createRecord(props, opts)\n  },\n\n  /**\n   * Given an array of records, batch create them via an adapter.\n   *\n   * {@link Mapper#beforeCreateMany} will be called before calling the adapter.\n   * {@link Mapper#afterCreateMany} will be called after calling the adapter.\n   *\n   * @name Mapper#createMany\n   * @method\n   * @param {Array} records Array of records to be created in one batch.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `records` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#createMany}\n   * call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @return {Promise}\n   */\n  createMany (records, opts) {\n    let op, adapter\n    const self = this\n\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, self)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany'\n    return utils.resolve(self[op](records, opts)).then(function (_records) {\n      // Allow for re-assignment from lifecycle hook\n      records = utils.isUndefined(_records) ? records : _records\n\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = records.map(function (record) {\n          return def.getLocalField(record)\n        }).filter(function (relatedRecord) {\n          return relatedRecord\n        })\n        if (def.type === belongsToType && relationData.length === records.length) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          tasks.push(def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n            const relatedRecords = optsCopy.raw ? data.data : data\n            def.setLocalField(belongsToRelationData, relatedRecords)\n            records.forEach(function (record, i) {\n              def.setForeignKey(record, relatedRecords[i])\n            })\n          }))\n        }\n      })\n      return utils.Promise.all(tasks).then(function () {\n        // Now delegate to the adapter\n        op = opts.op = 'createMany'\n        const json = records.map(function (record) {\n          return self.toJSON(record, { with: opts.pass || [] })\n        })\n        self.dbg(op, records, opts)\n        return utils.resolve(self.getAdapter(adapter)[op](self, json, opts))\n      }).then(function (data) {\n        const createdRecords = opts.raw ? data.data : data\n\n        // Deep post-create hasOne relations\n        tasks = []\n        utils.forEachRelation(self, opts, function (def, optsCopy) {\n          const relationData = records.map(function (record) {\n            return def.getLocalField(record)\n          }).filter(function (relatedRecord) {\n            return relatedRecord\n          })\n          if (relationData.length !== records.length) {\n            return\n          }\n          const belongsToData = def.getLocalField(belongsToRelationData)\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType) {\n            // Not supported\n            self.log('warn', 'deep createMany of hasMany type not supported!')\n          } else if (def.type === hasOneType) {\n            createdRecords.forEach(function (createdRecord, i) {\n              def.setForeignKey(createdRecord, relationData[i])\n            })\n            task = def.getRelation().createMany(relationData, optsCopy).then(function (data) {\n              const relatedData = opts.raw ? data.data : data\n              createdRecords.forEach(function (createdRecord, i) {\n                def.setLocalField(createdRecord, relatedData[i])\n              })\n            })\n          } else if (def.type === belongsToType && belongsToData && belongsToData.length === createdRecords.length) {\n            createdRecords.forEach(function (createdRecord, i) {\n              def.setLocalField(createdRecord, belongsToData[i])\n            })\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return utils.Promise.all(tasks).then(function () {\n          return data\n        })\n      })\n    }).then(function (result) {\n      result = self._end(result, opts)\n      // afterCreateMany lifecycle hook\n      op = opts.op = 'afterCreateMany'\n      return utils.resolve(self[op](records, opts, result)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Create an unsaved, uncached instance of this Mapper's\n   * {@link Mapper#recordClass}.\n   *\n   * Returns `props` if `props` is already an instance of\n   * {@link Mapper#recordClass}.\n   *\n   * @name Mapper#createRecord\n   * @method\n   * @param {Object|Array} props The properties for the Record instance or an\n   * array of property objects for the Record instances.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.noValidate=false] Whether to skip validation when\n   * the Record instances are created.\n   * @return {Object|Array} The Record instance or Record instances.\n   */\n  createRecord (props, opts) {\n    props || (props = {})\n    const self = this\n    if (utils.isArray(props)) {\n      return props.map(function (_props) {\n        return self.createRecord(_props, opts)\n      })\n    }\n    if (!utils.isObject(props)) {\n      throw new Error('Cannot create a record from ' + props + '!')\n    }\n    const recordClass = self.recordClass\n    const relationList = self.relationList || []\n    relationList.forEach(function (def) {\n      const relatedMapper = def.getRelation()\n      const relationData = def.getLocalField(props)\n      if (relationData && !relatedMapper.is(relationData)) {\n        if (utils.isArray(relationData) && (!relationData.length || relatedMapper.is(relationData[0]))) {\n          return\n        }\n        utils.set(props, def.localField, relatedMapper.createRecord(relationData, opts))\n      }\n    })\n    // Check to make sure \"props\" is not already an instance of this Mapper.\n    return recordClass ? (props instanceof recordClass ? props : new recordClass(props, opts)) : props // eslint-disable-line\n  },\n\n  /**\n   * Lifecycle invocation method.\n   *\n   * @name Mapper#crud\n   * @method\n   * @param {string} method Name of the lifecycle method to invoke.\n   * @param {...*} args Arguments to pass to the lifecycle method.\n   * @return {Promise}\n   */\n  crud (method, ...args) {\n    const self = this\n    const config = self.lifecycleMethods[method]\n    if (!config) {\n      throw new Error(`${method}: No such CRUD method!`)\n    }\n\n    const upper = `${method.charAt(0).toUpperCase()}${method.substr(1)}`\n    const before = `before${upper}`\n    const after = `after${upper}`\n\n    let op, adapter\n\n    // Default values for arguments\n    config.defaults.forEach(function (value, i) {\n      if (utils.isUndefined(args[i])) {\n        args[i] = utils.copy(value)\n      }\n    })\n\n    const opts = args[args.length - 1]\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, self)\n    adapter = opts.adapter = self.getAdapterName(opts)\n\n    // before lifecycle hook\n    op = opts.op = before\n    return utils.resolve(self[op](...args)).then(function (_value) {\n      if (!utils.isUndefined(config.beforeAssign)) {\n        // Allow for re-assignment from lifecycle hook\n        args[config.beforeAssign] = utils.isUndefined(_value) ? args[config.beforeAssign] : _value\n      }\n      // Now delegate to the adapter\n      op = opts.op = method\n      args = config.adapterArgs ? config.adapterArgs(self, ...args) : args\n      self.dbg(op, ...args)\n      return utils.resolve(self.getAdapter(adapter)[op](self, ...args))\n    }).then(function (result) {\n      result = self._end(result, opts, !!config.skip)\n      args.push(result)\n      // after lifecycle hook\n      op = opts.op = after\n      return utils.resolve(self[op](...args)).then(function (_result) {\n        // Allow for re-assignment from lifecycle hook\n        return utils.isUndefined(_result) ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Using an adapter, destroy the record with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Mapper#beforeDestroy} will be called before destroying the record.\n   * {@link Mapper#afterDestroy} will be called after destroying the record.\n   *\n   * @name Mapper#destroy\n   * @method\n   * @param {(string|number)} id The primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * ejected data (if any). If `true` return a response object that includes the\n   * ejected data (if any) and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n   * delete. NOT performed in a transaction.\n   * @return {Promise}\n   */\n  destroy (id, opts) {\n    return this.crud('destroy', id, opts)\n  },\n\n  /**\n   * Using the `query` argument, destroy the selected records via an adapter.\n   * If no `query` is provided then all records will be destroyed.\n   *\n   * {@link Mapper#beforeDestroyAll} will be called before destroying the records.\n   * {@link Mapper#afterDestroyAll} will be called after destroying the records.\n   *\n   * @name Mapper#destroyAll\n   * @method\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * ejected data (if any). If `true` return a response object that includes the\n   * ejected data (if any) and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to destroy in a cascading\n   * delete. NOT performed in a transaction.\n   * @return {Promise}\n   */\n  destroyAll (query, opts) {\n    return this.crud('destroyAll', query, opts)\n  },\n\n  /**\n   * Retrieve via an adapter the record with the given primary key.\n   *\n   * {@link Mapper#beforeFind} will be called before calling the adapter.\n   * {@link Mapper#afterFind} will be called after calling the adapter.\n   *\n   * @name Mapper#find\n   * @method\n   * @param {(string|number)} id The primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @return {Promise}\n   */\n  find (id, opts) {\n    return this.crud('find', id, opts)\n  },\n\n  /**\n   * Using the `query` argument, select records to pull from an adapter.\n   * Expects back from the adapter the array of selected records.\n   *\n   * {@link Mapper#beforeFindAll} will be called before calling the adapter.\n   * {@link Mapper#afterFindAll} will be called after calling the adapter.\n   *\n   * @name Mapper#findAll\n   * @method\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * resulting data. If `true` return a response object that includes the\n   * resulting data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @return {Promise}\n   */\n  findAll (query, opts) {\n    return this.crud('findAll', query, opts)\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @name Mapper#getAdapter\n   * @method\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @return {Adapter} The adapter.\n   */\n  getAdapter (name) {\n    const self = this\n    self.dbg('getAdapter', 'name:', name)\n    const adapter = self.getAdapterName(name)\n    if (!adapter) {\n      throw new ReferenceError(`${adapter} not found!`)\n    }\n    return self.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @name Mapper#getAdapterName\n   * @method\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @return {string} The name of the adapter.\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || opts.defaultAdapter\n  },\n\n  /**\n   * @name Mapper#getAdapters\n   * @method\n   * @return {Object} This Mapper's adapters\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  /**\n   * Returns this Mapper's schema.\n   *\n   * @return {Schema} This Mapper's schema.\n   */\n  getSchema () {\n    return this.schema\n  },\n\n  /**\n   * Defines a hasMany relationship. Only useful if you're managing your\n   * Mappers manually and not using a Container or DataStore component.\n   *\n   * ```\n   * User.hasMany(Post, {\n   *   localField: 'my_posts'\n   * })\n   * ```\n   *\n   * @name Mapper#hasMany\n   * @method\n   */\n  hasMany (relatedMapper, opts) {\n    return hasMany(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Defines a hasOne relationship. Only useful if you're managing your\n   * Mappers manually and not using a Container or DataStore component.\n   *\n   * ```\n   * User.hasOne(Profile, {\n   *   localField: '_profile'\n   * })\n   * ```\n   *\n   * @name Mapper#hasOne\n   * @method\n   */\n  hasOne (relatedMapper, opts) {\n    return hasOne(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Return whether `record` is an instance of this Mapper's recordClass.\n   *\n   * @name Mapper#is\n   * @method\n   * @param {Object} record The record to check.\n   * @return {boolean} Whether `record` is an instance of this Mapper's\n   * {@link Mapper#recordClass}.\n   */\n  is (record) {\n    const recordClass = this.recordClass\n    return recordClass ? record instanceof recordClass : false\n  },\n\n  /**\n   * Register an adapter on this mapper under the given name.\n   *\n   * @name Mapper#registerAdapter\n   * @method\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for this Mapper.\n   */\n  registerAdapter (name, adapter, opts) {\n    const self = this\n    opts || (opts = {})\n    self.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      self.defaultAdapter = name\n    }\n  },\n\n  /**\n   * Using the `query` argument, select records to pull from an adapter.\n   * Expects back from the adapter the array of selected records.\n   *\n   * {@link Mapper#beforeSum} will be called before calling the adapter.\n   * {@link Mapper#afterSum} will be called after calling the adapter.\n   *\n   * @name Mapper#sum\n   * @method\n   * @param {string} field The field to sum.\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * resulting data. If `true` return a response object that includes the\n   * resulting data and metadata about the operation.\n   * @return {Promise}\n   */\n  sum (field, query, opts) {\n    return this.crud('sum', field, query, opts)\n  },\n\n  /**\n   * Return a plain object representation of the given record.\n   *\n   * @name Mapper#toJSON\n   * @method\n   * @param {Object} record Record from which to create a plain object\n   * representation.\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation.\n   * @return {Object} Plain object representation of the record.\n   */\n  toJSON (record, opts) {\n    const self = this\n    opts || (opts = {})\n    const relationFields = (self ? self.relationFields : []) || []\n    let json = {}\n    let properties\n    if (self && self.schema) {\n      properties = self.schema.properties || {}\n      // TODO: Make this work recursively\n      utils.forOwn(properties, function (opts, prop) {\n        json[prop] = utils.plainCopy(record[prop])\n      })\n    }\n    properties || (properties = {})\n    if (!opts.strict) {\n      for (var key in record) {\n        if (!properties[key] && relationFields.indexOf(key) === -1) {\n          json[key] = utils.plainCopy(record[key])\n        }\n      }\n    }\n    // The user wants to include relations in the resulting plain object\n    // representation\n    if (self && opts.withAll) {\n      opts.with = relationFields.slice()\n    }\n    if (self && opts.with) {\n      if (utils.isString(opts.with)) {\n        opts.with = [opts.with]\n      }\n      utils.forEachRelation(self, opts, function (def, optsCopy) {\n        const relationData = def.getLocalField(record)\n        if (relationData) {\n          // The actual recursion\n          if (utils.isArray(relationData)) {\n            def.setLocalField(json, relationData.map(function (item) {\n              return def.getRelation().toJSON(item, optsCopy)\n            }))\n          } else {\n            def.setLocalField(json, def.getRelation().toJSON(relationData, optsCopy))\n          }\n        }\n      })\n    }\n    return json\n  },\n\n  /**\n   * Using an adapter, update the record with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Mapper#beforeUpdate} will be called before updating the record.\n   * {@link Mapper#afterUpdate} will be called after updating the record.\n   *\n   * @name Mapper#update\n   * @method\n   * @param {(string|number)} id The primary key of the record to update.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if `props` contains nested updates to relations. NOT performed in a\n   * transaction.\n   * @return {Promise}\n   */\n  update (id, props, opts) {\n    return this.crud('update', id, props, opts)\n  },\n\n  /**\n   * Using the `query` argument, perform the a single updated to the selected\n   * records. Expects back from the adapter an array of the updated records.\n   *\n   * {@link Mapper#beforeUpdateAll} will be called before making the update.\n   * {@link Mapper#afterUpdateAll} will be called after making the update.\n   *\n   * @name Mapper#updateAll\n   * @method\n   * @param {Object} props Update to apply to selected records.\n   * @param {Object} [query={}] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {number} [query.skip] Number to skip.\n   * @param {number} [query.limit] Number to limit to.\n   * @param {Array} [query.orderBy] Sorting criteria.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if `props` contains nested updates to relations. NOT performed in a\n   * transaction.\n   * @return {Promise}\n   */\n  updateAll (props, query, opts) {\n    return this.crud('updateAll', props, query, opts)\n  },\n\n  /**\n   * Given an array of updates, perform each of the updates via an adapter. Each\n   * \"update\" is a hash of properties with which to update an record. Each\n   * update must contain the primary key to be updated.\n   *\n   * {@link Mapper#beforeUpdateMany} will be called before making the update.\n   * {@link Mapper#afterUpdateMany} will be called after making the update.\n   *\n   * @name Mapper#updateMany\n   * @method\n   * @param {Array} records Array up record updates.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] Whether to emit\n   * lifecycle events.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] If `false`, return the\n   * updated data. If `true` return a response object that includes the updated\n   * data and metadata about the operation.\n   * @param {string[]} [opts.with=[]] Relations to update in a cascading\n   * update if each record update contains nested updates for relations. NOT\n   * performed in a transaction.\n   * @return {Promise}\n   */\n  updateMany (records, opts) {\n    return this.crud('updateMany', records, opts)\n  },\n\n  /**\n   * Validate the given record or records according to this Mapper's\n   * {@link Schema}. No return value means no errors.\n   *\n   * @name Mapper#validate\n   * @method\n   * @param {Object|Array} record The record or records to validate.\n   * @param {Object} [opts] Configuration options. Passed to\n   * {@link Schema#validate}.\n   * @return {Array} Array of errors or undefined if no errors.\n   */\n  validate (record, opts) {\n    const self = this\n    const schema = self.getSchema()\n    if (!schema) {\n      throw new Error(`${self.name} mapper has no schema!`)\n    }\n    if (utils.isArray(record)) {\n      return record.map(function (_record) {\n        return schema.validate(_record, opts)\n      })\n    } else if (utils.isObject(record)) {\n      return schema.validate(record, opts)\n    } else {\n      throw new Error('not a record!')\n    }\n  },\n\n  /**\n   * Method used to wrap data returned by an adapter with this Mapper's Record\n   * class.\n   *\n   * @name Mapper#wrap\n   * @method\n   * @param {Object|Array} data The data to be wrapped.\n   * @param {Object} [opts] Configuration options. Passed to {@link Mapper#createRecord}.\n   * @return {Object|Array}\n   */\n  wrap (data, opts) {\n    return this.createRecord(data, opts)\n  }\n})\n","import utils from './utils'\nimport Component from './Component'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Mapper from './Mapper'\n\nconst toProxy = [\n  /**\n   * Proxy for {@link Mapper#count}.\n   *\n   * @name Container#count\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.count}.\n   * @param {Object} [opts] - Passed to {@link Model.count}.\n   * @return {Promise}\n   */\n  'count',\n\n  /**\n   * Proxy for {@link Mapper#create}.\n   *\n   * @name Container#create\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} record Passed to {@link Mapper#create}.\n   * @param {Object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @return {Promise}\n   */\n  'create',\n\n  /**\n   * Proxy for {@link Mapper#createMany}.\n   *\n   * @name Container#createMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Array} records Passed to {@link Mapper#createMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @return {Promise}\n   */\n  'createMany',\n\n  /**\n   * Proxy for {@link Mapper#createRecord}.\n   *\n   * @name Container#createRecord\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} props Passed to {@link Mapper#createRecord}.\n   * @param {Object} [opts] Passed to {@link Mapper#createRecord}. See\n   * {@link Mapper#createRecord} for configuration options.\n   * @return {Promise}\n   */\n  'createRecord',\n\n  /**\n   * Proxy for {@link Mapper#dbg}.\n   *\n   * @name Container#dbg\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#dbg}.\n   */\n  'dbg',\n\n  /**\n   * Proxy for {@link Mapper#destroy}.\n   *\n   * @name Container#destroy\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @return {Promise}\n   */\n  'destroy',\n\n  /**\n   * Proxy for {@link Mapper#destroyAll}.\n   *\n   * @name Container#destroyAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @return {Promise}\n   */\n  'destroyAll',\n\n  /**\n   * Proxy for {@link Mapper#find}.\n   *\n   * @name Container#find\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#find}.\n   * @param {Object} [opts] - Passed to {@link Mapper#find}.\n   * @return {Promise}\n   */\n  'find',\n\n  /**\n   * Proxy for {@link Mapper#createRecord}.\n   *\n   * @name Container#findAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\n   * @return {Promise}\n   */\n  'findAll',\n\n  /**\n   * Proxy for {@link Mapper#is}.\n   *\n   * @name Container#getSchema\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   */\n  'getSchema',\n\n  /**\n   * Proxy for {@link Mapper#is}.\n   *\n   * @name Container#is\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#is}.\n   */\n  'is',\n\n  /**\n   * Proxy for {@link Mapper#log}.\n   *\n   * @name Container#log\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#log}.\n   */\n  'log',\n\n  /**\n   * Proxy for {@link Mapper#sum}.\n   *\n   * @name Container#sum\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {string} field - Passed to {@link Model.sum}.\n   * @param {Object} [query] - Passed to {@link Model.sum}.\n   * @param {Object} [opts] - Passed to {@link Model.sum}.\n   * @return {Promise}\n   */\n  'sum',\n\n  /**\n   * Proxy for {@link Mapper#toJSON}.\n   *\n   * @name Container#toJSON\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {...*} args - Passed to {@link Mapper#toJSON}.\n   */\n  'toJSON',\n\n  /**\n   * Proxy for {@link Mapper#update}.\n   *\n   * @name Container#update\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#update}.\n   * @param {Object} record - Passed to {@link Mapper#update}.\n   * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @return {Promise}\n   */\n  'update',\n\n  /**\n   * Proxy for {@link Mapper#updateAll}.\n   *\n   * @name Container#updateAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object?} query - Passed to {@link Model.updateAll}.\n   * @param {Object} props - Passed to {@link Model.updateAll}.\n   * @param {Object} [opts] - Passed to {@link Model.updateAll}. See\n   * {@link Model.updateAll} for more configuration options.\n   * @return {Promise}\n   */\n  'updateAll',\n\n  /**\n   * Proxy for {@link Mapper#updateMany}.\n   *\n   * @name Container#updateMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @return {Promise}\n   */\n  'updateMany'\n]\n\nconst props = {\n  constructor: function Container (opts) {\n    const self = this\n    utils.classCallCheck(self, Container)\n    Container.__super__.call(self)\n    opts || (opts = {})\n\n    // Apply options provided by the user\n    utils.fillIn(self, opts)\n    /**\n     * Defaults options to pass to {@link Container#mapperClass} when creating a\n     * new mapper.\n     *\n     * @name Container#mapperDefaults\n     * @type {Object}\n     */\n    self.mapperDefaults = self.mapperDefaults || {}\n    /**\n     * Constructor function to use in {@link Container#defineMapper} to create a\n     * new mapper.\n     *\n     * @name Container#mapperClass\n     * @type {Function}\n     */\n    self.mapperClass = self.mapperClass || Mapper\n\n    // Initilize private data\n\n    // Holds the adapters, shared by all mappers in this container\n    self._adapters = {}\n    // The the mappers in this container\n    self._mappers = {}\n  },\n\n  /**\n   * Register a new event listener on this Container.\n   *\n   * Proxy for {@link Component#on}. If an event was emitted by a Mapper in the\n   * Container, then the name of the Mapper will be prepended to the arugments\n   * passed to the listener.\n   *\n   * @name Container#on\n   * @method\n   * @param {string} event Name of event to subsribe to.\n   * @param {Function} listener Listener function to handle the event.\n   * @param {*} [ctx] Optional content in which to invoke the listener.\n   */\n\n  /**\n   * Used to bind to events emitted by mappers in this container.\n   *\n   * @name Container#_onMapperEvent\n   * @method\n   * @private\n   * @param {string} name Name of the mapper that emitted the event.\n   * @param {...*} [args] Args passed to {@link Mapper#emit}.\n   */\n  _onMapperEvent (name, ...args) {\n    const type = args.shift()\n    this.emit(type, name, ...args)\n  },\n\n  /**\n   * Create a new mapper and register it in this container.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const container = new Container({\n   *   mapperDefaults: { foo: 'bar' }\n   * })\n   * const userMapper = container.defineMapper('user')\n   * userMapper.foo // \"bar\"\n   *\n   * @name Container#defineMapper\n   * @method\n   * @param {string} name Name under which to register the new {@link Mapper}.\n   * {@link Mapper#name} will be set to this value.\n   * @param {Object} [opts] Configuration options. Passed to\n   * {@link Container#mapperClass} when creating the new {@link Mapper}.\n   * @return {Mapper}\n   */\n  defineMapper (name, opts) {\n    const self = this\n\n    // For backwards compatibility with defineResource\n    if (utils.isObject(name)) {\n      opts = name\n      if (!opts.name) {\n        throw new Error('name is required!')\n      }\n      name = opts.name\n    } else if (!utils.isString(name)) {\n      throw new Error('name is required!')\n    }\n\n    // Default values for arguments\n    opts || (opts = {})\n    // Set Mapper#name\n    opts.name = name\n    opts.relations || (opts.relations = {})\n\n    // Check if the user is overriding the datastore's default mapperClass\n    const mapperClass = opts.mapperClass || self.mapperClass\n    delete opts.mapperClass\n\n    // Apply the datastore's defaults to the options going into the mapper\n    utils.fillIn(opts, self.mapperDefaults)\n\n    // Instantiate a mapper\n    const mapper = self._mappers[name] = new mapperClass(opts) // eslint-disable-line\n    // Make sure the mapper's name is set\n    mapper.name = name\n    // All mappers in this datastore will share adapters\n    mapper._adapters = self.getAdapters()\n\n    mapper.datastore = self\n\n    mapper.on('all', function (...args) {\n      self._onMapperEvent(name, ...args)\n    })\n\n    // Setup the mapper's relations, including generating Mapper#relationList\n    // and Mapper#relationFields\n    utils.forOwn(mapper.relations, function (group, type) {\n      utils.forOwn(group, function (relations, _name) {\n        if (utils.isObject(relations)) {\n          relations = [relations]\n        }\n        relations.forEach(function (def) {\n          def.getRelation = function () {\n            return self.getMapper(_name)\n          }\n          const relatedMapper = self._mappers[_name] || _name\n          if (type === belongsToType) {\n            mapper.belongsTo(relatedMapper, def)\n          } else if (type === hasOneType) {\n            mapper.hasOne(relatedMapper, def)\n          } else if (type === hasManyType) {\n            mapper.hasMany(relatedMapper, def)\n          }\n        })\n      })\n    })\n\n    return mapper\n  },\n\n  defineResource (name, opts) {\n    return this.defineMapper(name, opts)\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @name Container#getAdapter\n   * @method\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @return {Adapter} The adapter.\n   */\n  getAdapter (name) {\n    const self = this\n    const adapter = self.getAdapterName(name)\n    if (!adapter) {\n      throw new ReferenceError(`${adapter} not found!`)\n    }\n    return self.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @name Container#getAdapterName\n   * @method\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @return {string} The name of the adapter.\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || this.mapperDefaults.defaultAdapter\n  },\n\n  /**\n   * Return the registered adapters of this container.\n   *\n   * @name Container#getAdapters\n   * @method\n   * @return {Adapter}\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  /**\n   * Return the mapper registered under the specified name.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * const container = new Container()\n   * const userMapper = container.defineMapper('user')\n   * userMapper === container.getMapper('user') // true\n   *\n   * @name Container#getMapper\n   * @method\n   * @param {string} name {@link Mapper#name}.\n   * @return {Mapper}\n   */\n  getMapper (name) {\n    const mapper = this._mappers[name]\n    if (!mapper) {\n      throw new ReferenceError(`${name} is not a registered mapper!`)\n    }\n    return mapper\n  },\n\n  /**\n   * Register an adapter on this container under the given name. Adapters\n   * registered on a container are shared by all mappers in the container.\n   *\n   * @example\n   * import {Container} from 'js-data'\n   * import HttpAdapter from 'js-data-http'\n   * const container = new Container()\n   * container.registerAdapter('http', new HttpAdapter, { default: true })\n   *\n   * @name Container#registerAdapter\n   * @method\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for all Mappers in this container.\n   */\n  registerAdapter (name, adapter, opts) {\n    const self = this\n    opts || (opts = {})\n    self.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      self.mapperDefaults.defaultAdapter = name\n      utils.forOwn(self._mappers, function (mapper) {\n        mapper.defaultAdapter = name\n      })\n    }\n  }\n}\n\ntoProxy.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getMapper(name)[method](...args)\n  }\n})\n\n/**\n * ```javascript\n * import {Container} from 'js-data'\n * ```\n *\n * The `Container` class is a place to store {@link Mapper} instances.\n *\n * Without a container, you need to manage mappers yourself, including resolving\n * circular dependencies among relations. All mappers in a container share the\n * same adapters, so you don't have to add each adapter to all of your mappers.\n *\n * @example <caption>Without Container</caption>\n * import {Mapper} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const adapter = new HttpAdapter()\n * const userMapper = new Mapper({ name: 'user' })\n * userMapper.registerAdapter('http', adapter, { default: true })\n * const commentMapper = new Mapper({ name: 'comment' })\n * commentMapper.registerAdapter('http', adapter, { default: true })\n *\n * // This might be more difficult if the mappers were defined in different\n * // modules.\n * userMapper.hasMany(commentMapper, {\n *   localField: 'comments',\n *   foreignKey: 'userId'\n * })\n * commentMapper.belongsTo(userMapper, {\n *   localField: 'user',\n *   foreignKey: 'userId'\n * })\n *\n * @example <caption>With Container</caption>\n * import {Container} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const container = new Container()\n * // All mappers in container share adapters\n * container.registerAdapter('http', new HttpAdapter(), { default: true })\n *\n * // These could be defined in separate modules without a problem.\n * container.defineMapper('user', {\n *   relations: {\n *     hasMany: {\n *       comment: {\n *         localField: 'comments',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n * container.defineMapper('comment', {\n *   relations: {\n *     belongsTo: {\n *       user: {\n *         localField: 'user',\n *         foreignKey: 'userId'\n *       }\n *     }\n *   }\n * })\n *\n * @class Container\n * @extends Component\n * @param {Object} [opts] Configuration options.\n * @param {Function} [opts.mapperClass] Constructor function to use in\n * {@link Container#defineMapper} to create a new mapper.\n * @param {Object} [opts.mapperDefaults] Defaults options to pass to\n * {@link Container#mapperClass} when creating a new mapper.\n * @return {Container}\n */\nexport default Component.extend(props)\n","import utils from './utils'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Collection from './Collection'\n\n/**\n * TODO\n *\n * ```javascript\n * import {LinkedCollection} from 'js-data'\n * ```\n *\n * @class LinkedCollection\n * @extends Collection\n * @param {Array} [records] Initial set of records to insert into the\n * collection. See {@link Collection}.\n * @param {Object} [opts] Configuration options. See {@link Collection}.\n * @return {Mapper}\n */\nexport default Collection.extend({\n  constructor: function LinkedCollection (records, opts) {\n    const self = this\n    utils.classCallCheck(self, LinkedCollection)\n    LinkedCollection.__super__.call(self, records, opts)\n\n    // Make sure this collection has somewhere to store \"added\" timestamps\n    self._added = {}\n\n    // Make sure this collection a reference to a datastore\n    if (!self.datastore) {\n      throw new Error('This collection must have a datastore!')\n    }\n    return self\n  },\n\n  _onRecordEvent (...args) {\n    const self = this\n    utils.getSuper(self).prototype._onRecordEvent.apply(self, args)\n    const event = args[0]\n    // This is a very brute force method\n    // Lots of room for optimization\n    if (utils.isString(event) && event.indexOf('change') === 0) {\n      self.updateIndexes(args[1])\n    }\n  },\n\n  add (records, opts) {\n    const self = this\n    const datastore = self.datastore\n    const mapper = self.mapper\n    const relationList = mapper.relationList || []\n    const timestamp = new Date().getTime()\n    const usesRecordClass = !!mapper.recordClass\n    const idAttribute = mapper.idAttribute\n    let singular\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      singular = true\n      records = [records]\n    }\n\n    records = utils.getSuper(self).prototype.add.call(self, records, opts)\n\n    if (relationList.length && records.length) {\n      // Check the currently visited record for relations that need to be\n      // inserted into their respective collections.\n      mapper.relationList.forEach(function (def) {\n        const relationName = def.relation\n        // A reference to the Mapper that this Mapper is related to\n        const relatedMapper = datastore.getMapper(relationName)\n        // The field used by the related Mapper as the primary key\n        const relationIdAttribute = relatedMapper.idAttribute\n        // Grab the foreign key in this relationship, if there is one\n        const foreignKey = def.foreignKey\n        // A lot of this is an optimization for being able to insert a lot of\n        // data as quickly as possible\n        const relatedCollection = datastore.getCollection(relationName)\n        const type = def.type\n        const isHasMany = type === hasManyType\n        const shouldAdd = utils.isUndefined(def.add) ? true : !!def.add\n        let relatedData\n\n        records.forEach(function (record) {\n          // Grab a reference to the related data attached or linked to the\n          // currently visited record\n          relatedData = def.getLocalField(record)\n          const id = utils.get(record, idAttribute)\n\n          if (utils.isFunction(def.add)) {\n            relatedData = def.add(datastore, def, record)\n          } else if (relatedData) {\n            // Otherwise, if there is something to be added, add it\n            if (isHasMany) {\n              // Handle inserting hasMany relations\n              relatedData = relatedData.map(function (toInsertItem) {\n                // Check that this item isn't the same item that is already in the\n                // store\n                if (toInsertItem !== relatedCollection.get(relatedCollection.recordId(toInsertItem))) {\n                  // Make sure this item has its foreignKey\n                  if (foreignKey) {\n                    // TODO: slow, could be optimized? But user loses hook\n                    def.setForeignKey(record, toInsertItem)\n                  }\n                  // Finally add this related item\n                  if (shouldAdd) {\n                    toInsertItem = relatedCollection.add(toInsertItem)\n                  }\n                }\n                return toInsertItem\n              })\n              // If it's the parent that has the localKeys\n              if (def.localKeys && !utils.get(record, def.localKeys)) {\n                utils.set(record, def.localKeys, relatedData.map(function (inserted) {\n                  return utils.get(inserted, relationIdAttribute)\n                }))\n              }\n            } else {\n              const relatedDataId = utils.get(relatedData, relationIdAttribute)\n              // Handle inserting belongsTo and hasOne relations\n              if (relatedData !== relatedCollection.get(relatedDataId)) {\n                // Make sure foreignKey field is set\n                def.setForeignKey(record, relatedData)\n                // Finally insert this related item\n                if (shouldAdd) {\n                  relatedData = relatedCollection.add(relatedData)\n                }\n              }\n            }\n          }\n\n          if (!relatedData || (utils.isArray(relatedData) && !relatedData.length)) {\n            if (type === belongsToType) {\n              const relatedId = utils.get(record, foreignKey)\n              if (!utils.isUndefined(relatedId)) {\n                relatedData = relatedCollection.get(relatedId)\n              }\n            } else if (type === hasOneType) {\n              const _records = relatedCollection.filter({\n                [foreignKey]: id\n              })\n              relatedData = _records.length ? _records[0] : undefined\n            } else if (type === hasManyType) {\n              if (foreignKey) {\n                const _records = relatedCollection.filter({\n                  [foreignKey]: id\n                })\n                relatedData = _records.length ? _records : undefined\n              } else if (def.localKeys) {\n                const _records = relatedCollection.filter({\n                  where: {\n                    [relationIdAttribute]: {\n                      'in': utils.get(record, def.localKeys || [])\n                    }\n                  }\n                })\n                relatedData = _records.length ? _records : undefined\n              } else if (def.foreignKeys) {\n                const _records = relatedCollection.filter({\n                  where: {\n                    [def.foreignKeys]: {\n                      'contains': id\n                    }\n                  }\n                })\n                relatedData = _records.length ? _records : undefined\n              }\n            }\n          }\n          if (relatedData) {\n            def.setLocalField(record, relatedData)\n          }\n        })\n      })\n    }\n\n    records.forEach(function (record) {\n      // Track when this record was added\n      self._added[self.recordId(record)] = timestamp\n\n      if (usesRecordClass) {\n        record._set('$', timestamp)\n      }\n    })\n\n    return singular ? records[0] : records\n  },\n\n  remove (id, opts) {\n    const self = this\n    const mapper = self.mapper\n    const record = utils.getSuper(self).prototype.remove.call(self, id, opts)\n    if (record) {\n      delete self._added[id]\n      if (mapper.recordClass) {\n        record._set('$') // unset\n      }\n    }\n    return record\n  },\n\n  removeAll (query, opts) {\n    const self = this\n    const mapper = self.mapper\n    const records = utils.getSuper(self).prototype.removeAll.call(self, query, opts)\n    records.forEach(function (record) {\n      delete self._added[self.recordId(record)]\n      if (mapper.recordClass) {\n        record._set('$') // unset\n      }\n    })\n    return records\n  }\n})\n","import utils from './utils'\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport Container from './Container'\nimport LinkedCollection from './LinkedCollection'\n\nconst DATASTORE_DEFAULTS = {}\n\nconst safeSet = function (record, field, value) {\n  if (record && record._set) {\n    record._set(field, value)\n  } else {\n    utils.set(record, field, value)\n  }\n}\n\nconst cachedFn = function (name, hashOrId, opts) {\n  const self = this\n  const cached = self._completedQueries[name][hashOrId]\n  if (utils.isFunction(cached)) {\n    return cached(name, hashOrId, opts)\n  }\n  return cached\n}\n\nconst props = {\n  constructor: function DataStore (opts) {\n    const self = this\n    utils.classCallCheck(self, DataStore)\n    DataStore.__super__.call(self, opts)\n\n    self.collectionClass = self.collectionClass || LinkedCollection\n    self._collections = {}\n    utils.fillIn(self, DATASTORE_DEFAULTS)\n    self._pendingQueries = {}\n    self._completedQueries = {}\n    return self\n  },\n\n  _callSuper (method, ...args) {\n    return this.constructor.__super__.prototype[method].apply(this, args)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#_end\n   * @method\n   * @private\n   * @param {string} name Name of the {@link LinkedCollection} to which to\n   * add the data.\n   * @param {Object} data TODO.\n   * @param {Object} [opts] Configuration options.\n   * @return {(Object|Array)} Result.\n   */\n  _end (name, result, opts) {\n    let _data = opts.raw ? result.data : result\n    if (_data && utils.isFunction(this.addToCache)) {\n      _data = this.addToCache(name, _data, opts)\n      if (opts.raw) {\n        result.data = _data\n      } else {\n        result = _data\n      }\n    }\n    return result\n  },\n\n  /**\n   * Register a new event listener on this DataStore.\n   *\n   * Proxy for {@link Container#on}. If an event was emitted by a Mapper or\n   * Collection in the DataStore, then the name of the Mapper or Collection will\n   * be prepended to the arugments passed to the provided event handler.\n   *\n   * @name DataStore#on\n   * @method\n   * @param {string} event Name of event to subsribe to.\n   * @param {Function} listener Listener function to handle the event.\n   * @param {*} [ctx] Optional content in which to invoke the listener.\n   */\n\n  /**\n   * Used to bind to events emitted by collections in this store.\n   *\n   * @name DataStore#_onCollectionEvent\n   * @method\n   * @private\n   * @param {string} name Name of the collection that emitted the event.\n   * @param {...*} [args] Args passed to {@link Collection#emit}.\n   */\n  _onCollectionEvent (name, ...args) {\n    const type = args.shift()\n    this.emit(type, name, ...args)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#addToCache\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {*} data - Data from which data should be selected for add.\n   * @param {Object} [opts] - Configuration options.\n   */\n  addToCache (name, data, opts) {\n    return this.getCollection(name).add(data, opts)\n  },\n\n  /**\n   * Retrieve a cached `find` result, if any.\n   *\n   * @name DataStore#cachedFind\n   * @method\n   * @param {string} name The `name` argument passed to {@link DataStore#find}.\n   * @param {(string|number)} id The `id` argument passed to {@link DataStore#find}.\n   * @param {Object} opts The `opts` argument passed to {@link DataStore#find}.\n   */\n  cachedFind: cachedFn,\n\n  /**\n   * Retrieve a cached `findAll` result, if any.\n   *\n   * @name DataStore#cachedFindAll\n   * @method\n   * @param {string} name The `name` argument passed to {@link DataStore#findAll}.\n   * @param {string} hash The result of calling {@link DataStore#hashQuery} on\n   * the `query` argument passed to {@link DataStore#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link DataStore#findAll}.\n   */\n  cachedFindAll: cachedFn,\n\n  /**\n   * Cache a `find` result. The default implementation does the following:\n   *\n   * ```\n   * // Find and return the record from the data store\n   * return this.get(name, id)\n   * ```\n   *\n   * Override this method to customize.\n   *\n   * @name DataStore#cacheFind\n   * @method\n   * @param {string} name The `name` argument passed to {@link DataStore#find}.\n   * @param {*} data The result to cache.\n   * @param {(string|number)} id The `id` argument passed to {@link DataStore#find}.\n   * @param {Object} opts The `opts` argument passed to {@link DataStore#find}.\n   */\n  cacheFind (name, data, id, opts) {\n    const self = this\n    self._completedQueries[name][id] = function (name, id, opts) {\n      return self.get(name, id)\n    }\n  },\n\n  /**\n   * Cache a `findAll` result. The default implementation does the following:\n   *\n   * ```\n   * // Find and return the records from the data store\n   * return this.filter(name, utils.fromJson(hash))\n   * ```\n   *\n   * Override this method to customize.\n   *\n   * @name DataStore#cacheFindAll\n   * @method\n   * @param {string} name The `name` argument passed to {@link DataStore#findAll}.\n   * @param {*} data The result to cache.\n   * @param {string} hash The result of calling {@link DataStore#hashQuery} on\n   * the `query` argument passed to {@link DataStore#findAll}.\n   * @param {Object} opts The `opts` argument passed to {@link DataStore#findAll}.\n   */\n  cacheFindAll (name, data, hash, opts) {\n    const self = this\n    self._completedQueries[name][hash] = function (name, hash, opts) {\n      return self.filter(name, utils.fromJson(hash))\n    }\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#create\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object} record Passed to {@link Mapper#create}.\n   * @param {Object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @return {Promise}\n   */\n  create (name, record, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('create', name, record, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#createMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Array} records Passed to {@link Mapper#createMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @return {Promise}\n   */\n  createMany (name, records, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('createMany', name, records, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  defineMapper (name, opts) {\n    const self = this\n    const mapper = utils.getSuper(self).prototype.defineMapper.call(self, name, opts)\n    self._pendingQueries[name] = {}\n    self._completedQueries[name] = {}\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n\n    // The datastore uses a subclass of Collection that is \"datastore-aware\"\n    const collection = self._collections[name] = new self.collectionClass(null, { // eslint-disable-line\n      // Make sure the collection has somewhere to store \"added\" timestamps\n      _added: {},\n      // Give the collection a reference to this datastore\n      datastore: self,\n      // The mapper tied to the collection\n      mapper\n    })\n\n    const schema = mapper.schema || {}\n    const properties = schema.properties || {}\n    // TODO: Make it possible index nested properties?\n    utils.forOwn(properties, function (opts, prop) {\n      if (opts.indexed) {\n        collection.createIndex(prop)\n      }\n    })\n\n    // Create a secondary index on the \"added\" timestamps of records in the\n    // collection\n    collection.createIndex('addedTimestamps', ['$'], {\n      fieldGetter (obj) {\n        return collection._added[collection.recordId(obj)]\n      }\n    })\n\n    collection.on('all', function (...args) {\n      self._onCollectionEvent(name, ...args)\n    })\n\n    const idAttribute = mapper.idAttribute\n\n    mapper.relationList.forEach(function (def) {\n      const relation = def.relation\n      const localField = def.localField\n      const path = `links.${localField}`\n      const foreignKey = def.foreignKey\n      const type = def.type\n      const updateOpts = { index: foreignKey }\n      let descriptor\n\n      const getter = function () { return this._get(path) }\n\n      if (type === belongsToType) {\n        if (!collection.indexes[foreignKey]) {\n          collection.createIndex(foreignKey)\n        }\n\n        descriptor = {\n          get: getter,\n          set (record) {\n            const _self = this\n            const current = this._get(path)\n            if (record === current) {\n              return current\n            }\n            const id = utils.get(_self, idAttribute)\n            const inverseDef = def.getInverse(mapper)\n\n            if (record) {\n              const relatedIdAttribute = def.getRelation().idAttribute\n              const relatedId = utils.get(record, relatedIdAttribute)\n\n              // Prefer store record\n              if (!utils.isUndefined(relatedId)) {\n                record = self.get(relation, relatedId) || record\n              }\n\n              // Set locals\n              _self._set(path, record)\n              safeSet(_self, foreignKey, relatedId)\n              collection.updateIndex(_self, updateOpts)\n\n              // Update (set) inverse relation\n              if (inverseDef.type === hasOneType) {\n                utils.set(record, inverseDef.localField, _self)\n              } else if (inverseDef.type === hasManyType) {\n                const children = utils.get(record, inverseDef.localField)\n                utils.noDupeAdd(children, _self, function (_record) {\n                  return id === utils.get(_record, idAttribute)\n                })\n              }\n            } else {\n              // Unset locals\n              _self._set(path, undefined)\n              safeSet(_self, foreignKey, undefined)\n              collection.updateIndex(_self, updateOpts)\n            }\n            if (current) {\n              if (inverseDef.type === hasOneType) {\n                utils.set(current, inverseDef.localField, undefined)\n              } else if (inverseDef.type === hasManyType) {\n                const children = utils.get(current, inverseDef.localField)\n                utils.remove(children, function (_record) {\n                  return id === utils.get(_record, idAttribute)\n                })\n              }\n            }\n            return record\n          }\n        }\n\n        if (mapper.recordClass.prototype.hasOwnProperty(foreignKey)) {\n          const superClass = mapper.recordClass\n          mapper.recordClass = superClass.extend({\n            constructor: (function () {\n              var subClass = function Record (props, opts) {\n                utils.classCallCheck(this, subClass)\n                superClass.call(this, props, opts)\n              }\n              return subClass\n            })()\n          })\n        }\n        Object.defineProperty(mapper.recordClass.prototype, foreignKey, {\n          enumerable: true,\n          get () { return this._get(foreignKey) },\n          set (value) {\n            const _self = this\n            if (utils.isUndefined(value)) {\n              // Unset locals\n              utils.set(_self, localField, undefined)\n            } else {\n              safeSet(_self, foreignKey, value)\n              let storeRecord = self.get(relation, value)\n              if (storeRecord) {\n                utils.set(_self, localField, storeRecord)\n              }\n            }\n          }\n        })\n      } else if (type === hasManyType) {\n        const localKeys = def.localKeys\n        const foreignKeys = def.foreignKeys\n\n        // TODO: Handle case when belongsTo relation isn't ever defined\n        if (self._collections[relation] && foreignKey && !self.getCollection(relation).indexes[foreignKey]) {\n          self.getCollection(relation).createIndex(foreignKey)\n        }\n\n        descriptor = {\n          get () {\n            const _self = this\n            let current = getter.call(_self)\n            if (!current) {\n              _self._set(path, [])\n            }\n            return getter.call(_self)\n          },\n          set (records) {\n            const _self = this\n            records || (records = [])\n            if (records && !utils.isArray(records)) {\n              records = [records]\n            }\n            const id = utils.get(_self, idAttribute)\n            const relatedIdAttribute = def.getRelation().idAttribute\n            const inverseDef = def.getInverse(mapper)\n            const inverseLocalField = inverseDef.localField\n            let linked = _self._get(path)\n            if (!linked) {\n              linked = []\n            }\n\n            const current = linked\n            linked = []\n            const toLink = {}\n            records.forEach(function (record) {\n              const relatedId = utils.get(record, relatedIdAttribute)\n              if (!utils.isUndefined(relatedId)) {\n                // Prefer store record\n                record = self.get(relation, relatedId) || record\n                toLink[relatedId] = record\n              }\n              linked.push(record)\n            })\n            if (foreignKey) {\n              records.forEach(function (record) {\n                // Update (set) inverse relation\n                safeSet(record, foreignKey, id)\n                self.getCollection(relation).updateIndex(record, updateOpts)\n                utils.set(record, inverseLocalField, _self)\n              })\n              current.forEach(function (record) {\n                const relatedId = utils.get(record, relatedIdAttribute)\n                if (!utils.isUndefined(relatedId) && !toLink.hasOwnProperty(relatedId)) {\n                  // Update (unset) inverse relation\n                  safeSet(record, foreignKey, undefined)\n                  self.getCollection(relation).updateIndex(record, updateOpts)\n                  utils.set(record, inverseLocalField, undefined)\n                }\n              })\n            } else if (localKeys) {\n              const _localKeys = []\n              records.forEach(function (record) {\n                // Update (set) inverse relation\n                utils.set(record, inverseLocalField, _self)\n                _localKeys.push(utils.get(record, relatedIdAttribute))\n              })\n              // Update locals\n              utils.set(_self, localKeys, _localKeys)\n              // Update (unset) inverse relation\n              current.forEach(function (record) {\n                const relatedId = utils.get(record, relatedIdAttribute)\n                if (!utils.isUndefined(relatedId) && !toLink.hasOwnProperty(relatedId)) {\n                  // Update inverse relation\n                  utils.set(record, inverseLocalField, undefined)\n                }\n              })\n            } else if (foreignKeys) {\n              // Update (unset) inverse relation\n              current.forEach(function (record) {\n                const _localKeys = utils.get(record, foreignKeys) || []\n                utils.remove(_localKeys, function (_key) {\n                  return id === _key\n                })\n                const _localField = utils.get(record, inverseLocalField) || []\n                utils.remove(_localField, function (_record) {\n                  return id === utils.get(_record, idAttribute)\n                })\n              })\n              // Update (set) inverse relation\n              records.forEach(function (record) {\n                const _localKeys = utils.get(record, foreignKeys) || []\n                utils.noDupeAdd(_localKeys, id, function (_key) {\n                  return id === _key\n                })\n                const _localField = utils.get(record, inverseLocalField) || []\n                utils.noDupeAdd(_localField, _self, function (_record) {\n                  return id === utils.get(_record, idAttribute)\n                })\n              })\n            }\n\n            _self._set(path, linked)\n            return linked\n          }\n        }\n      } else if (type === hasOneType) {\n        // TODO: Handle case when belongsTo relation isn't ever defined\n        if (self._collections[relation] && foreignKey && !self.getCollection(relation).indexes[foreignKey]) {\n          self.getCollection(relation).createIndex(foreignKey)\n        }\n        descriptor = {\n          get: getter,\n          set (record) {\n            const _self = this\n            const current = this._get(path)\n            if (record === current) {\n              return current\n            }\n            const relatedId = utils.get(record, def.getRelation().idAttribute)\n            const inverseLocalField = def.getInverse(mapper).localField\n            // Update (unset) inverse relation\n            if (current) {\n              safeSet(current, foreignKey, undefined)\n              self.getCollection(relation).updateIndex(current, updateOpts)\n              utils.set(current, inverseLocalField, undefined)\n            }\n            if (record) {\n              // Prefer store record\n              if (!utils.isUndefined(relatedId)) {\n                record = self.get(relation, relatedId) || record\n              }\n\n              // Set locals\n              _self._set(path, record)\n\n              // Update (set) inverse relation\n              safeSet(record, foreignKey, utils.get(_self, idAttribute))\n              self.getCollection(relation).updateIndex(record, updateOpts)\n              utils.set(record, inverseLocalField, _self)\n            } else {\n              // Set locals\n              _self._set(path, undefined)\n            }\n            return record\n          }\n        }\n      }\n\n      if (descriptor) {\n        descriptor.enumerable = utils.isUndefined(def.enumerable) ? true : def.enumerable\n        if (def.get) {\n          let origGet = descriptor.get\n          descriptor.get = function () {\n            return def.get(def, this, (...args) => origGet.apply(this, args))\n          }\n        }\n        if (def.set) {\n          let origSet = descriptor.set\n          descriptor.set = function (related) {\n            return def.set(def, this, related, (value) => origSet.call(this, value === undefined ? related : value))\n          }\n        }\n        Object.defineProperty(mapper.recordClass.prototype, localField, descriptor)\n      }\n    })\n\n    return mapper\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#destroy\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#destroy}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @return {Promise}\n   */\n  destroy (name, id, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('destroy', name, id, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.getCollection(name).remove(id, opts)\n      } else {\n        data = self.getCollection(name).remove(id, opts)\n      }\n      delete self._pendingQueries[name][id]\n      delete self._completedQueries[name][id]\n      return data\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#destroyAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Mapper#destroyAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @return {Promise}\n   */\n  destroyAll (name, query, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('destroyAll', name, query, opts).then(function (data) {\n      if (opts.raw) {\n        data.data = self.getCollection(name).removeAll(query, opts)\n      } else {\n        data = self.getCollection(name).removeAll(query, opts)\n      }\n      const hash = self.hashQuery(name, query, opts)\n      delete self._pendingQueries[name][hash]\n      delete self._completedQueries[name][hash]\n      return data\n    })\n  },\n\n  eject (id, opts) {\n    return this.remove(id, opts)\n  },\n\n  ejectAll (query, opts) {\n    return this.removeAll(query, opts)\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#find\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#find}.\n   * @param {Object} [opts] - Passed to {@link Mapper#find}.\n   * @return {Promise}\n   */\n  find (name, id, opts) {\n    const self = this\n    opts || (opts = {})\n    const pendingQuery = self._pendingQueries[name][id]\n\n    utils.fillIn(opts, self.getMapper(name))\n\n    if (pendingQuery) {\n      return pendingQuery\n    }\n    const item = self.cachedFind(name, id, opts)\n    let promise\n\n    if (opts.force || !item) {\n      promise = self._pendingQueries[name][id] = self._callSuper('find', name, id, opts).then(function (data) {\n        delete self._pendingQueries[name][id]\n        const result = self._end(name, data, opts)\n        self.cacheFind(name, result, id, opts)\n        return result\n      }, function (err) {\n        delete self._pendingQueries[name][id]\n        return utils.reject(err)\n      })\n    } else {\n      promise = utils.resolve(item)\n    }\n    return promise\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#findAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} [query] - Passed to {@link Model.findAll}.\n   * @param {Object} [opts] - Passed to {@link Model.findAll}.\n   * @return {Promise}\n   */\n  findAll (name, query, opts) {\n    const self = this\n    opts || (opts = {})\n    const hash = self.hashQuery(name, query, opts)\n    const pendingQuery = self._pendingQueries[name][hash]\n\n    utils.fillIn(opts, self.getMapper(name))\n\n    if (pendingQuery) {\n      return pendingQuery\n    }\n\n    const items = self.cachedFindAll(name, hash, opts)\n    let promise\n\n    if (opts.force || !items) {\n      promise = self._pendingQueries[name][hash] = self._callSuper('findAll', name, query, opts).then(function (data) {\n        delete self._pendingQueries[name][hash]\n        const result = self._end(name, data, opts)\n        self.cacheFindAll(name, result, hash, opts)\n        return result\n      }, function (err) {\n        delete self._pendingQueries[name][hash]\n        return utils.reject(err)\n      })\n    } else {\n      promise = utils.resolve(items)\n    }\n    return promise\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#getCollection\n   * @method\n   * @param {string} name Name of the {@link LinkedCollection} to retrieve.\n   * @return {LinkedCollection}\n   */\n  getCollection (name) {\n    const collection = this._collections[name]\n    if (!collection) {\n      throw new ReferenceError(`${name} is not a registered collection!`)\n    }\n    return collection\n  },\n\n  hashQuery (name, query, opts) {\n    return utils.toJson(query)\n  },\n\n  inject (records, opts) {\n    return this.add(records, opts)\n  },\n\n  remove (name, id, opts) {\n    const self = this\n    const record = self.getCollection(name).remove(id, opts)\n    if (record) {\n      self.removeRelated(name, [record], opts)\n    }\n    return record\n  },\n\n  removeAll (name, query, opts) {\n    const self = this\n    const records = self.getCollection(name).removeAll(query, opts)\n    if (records.length) {\n      self.removeRelated(name, records, opts)\n    }\n    return records\n  },\n\n  removeRelated (name, records, opts) {\n    const self = this\n    utils.forEachRelation(self.getMapper(name), opts, function (def, optsCopy) {\n      records.forEach(function (record) {\n        let relatedData\n        let query\n        if (def.foreignKey && (def.type === hasOneType || def.type === hasManyType)) {\n          query = { [def.foreignKey]: def.getForeignKey(record) }\n        } else if (def.type === hasManyType && def.localKeys) {\n          query = {\n            where: {\n              [def.getRelation().idAttribute]: {\n                'in': utils.get(record, def.localKeys)\n              }\n            }\n          }\n        } else if (def.type === hasManyType && def.foreignKeys) {\n          query = {\n            where: {\n              [def.foreignKeys]: {\n                'contains': def.getForeignKey(record)\n              }\n            }\n          }\n        } else if (def.type === belongsToType) {\n          relatedData = self.remove(def.relation, def.getForeignKey(record), optsCopy)\n        }\n        if (query) {\n          relatedData = self.removeAll(def.relation, query, optsCopy)\n        }\n        if (relatedData) {\n          if (utils.isArray(relatedData) && !relatedData.length) {\n            return\n          }\n          if (def.type === hasOneType) {\n            relatedData = relatedData[0]\n          }\n          def.setLocalField(record, relatedData)\n        }\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#update\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {(string|number)} id - Passed to {@link Mapper#update}.\n   * @param {Object} record - Passed to {@link Mapper#update}.\n   * @param {Object} [opts] - Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @return {Promise}\n   */\n  update (name, id, record, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('update', name, id, record, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#updateAll\n   * @method\n   * @param {string} name - Name of the {@link Mapper} to target.\n   * @param {Object} props - Passed to {@link Mapper#updateAll}.\n   * @param {Object} [query] - Passed to {@link Mapper#updateAll}.\n   * @param {Object} [opts] - Passed to {@link Mapper#updateAll}. See\n   * {@link Mapper#updateAll} for more configuration options.\n   * @return {Promise}\n   */\n  updateAll (name, props, query, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('updateAll', name, query, props, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name DataStore#updateMany\n   * @method\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {Object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @return {Promise}\n   */\n  updateMany (name, records, opts) {\n    const self = this\n    opts || (opts = {})\n    return self._callSuper('updateMany', name, records, opts).then(function (data) {\n      return self._end(name, data, opts)\n    })\n  }\n}\n\nconst toProxy = [\n  'add',\n  'between',\n  'createIndex',\n  'filter',\n  'get',\n  'getAll',\n  'query',\n  'toJson'\n]\n\ntoProxy.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getCollection(name)[method](...args)\n  }\n})\n\n/**\n * The `DataStore` class is an extension of {@link Container}. Not only does\n * `DataStore` manage mappers, but also collections. `DataStore` implements the\n * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\n * {@link Mapper#create}. If you use the asynchronous `DataStore` methods\n * instead of calling them directly on the mappers, then the results of the\n * method calls will be inserted into the store's collections. You can think of\n * a `DataStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\n * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\n * (the Mappers).\n *\n * ```javascript\n * import {DataStore} from 'js-data'\n * ```\n *\n * @example\n * import {DataStore} from 'js-data'\n * import HttpAdapter from 'js-data-http'\n * const store = new DataStore()\n * const UserMapper = store.defineMapper('user')\n *\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n * UserMapper.find(1).then(function (user) {\n *   // retrieved a \"user\" record via the http adapter, but that's it\n *\n *   // Call \"find\" on \"store\" for the \"user\" mapper (Stateful DataStore)\n *   return store.find('user', 1)\n * }).then(function (user) {\n *   // not only was a \"user\" record retrieved, but it was added to the\n *   // store's \"user\" collection\n *   const cachedUser = store.getCollection('user').get(1)\n *   user === cachedUser // true\n * })\n *\n * @class DataStore\n * @extends Container\n * @param {Object} [opts] Configuration options. See {@link Container}.\n * @return {DataStore}\n */\nexport default Container.extend(props)\n","/**\n * Registered as `js-data` in NPM and Bower.\n * #### Script tag\n * ```js\n * window.JSData\n * ```\n * #### CommonJS\n * ```js\n * var JSData = require('js-data')\n * ```\n * #### ES6 Modules\n * ```js\n * import JSData from 'js-data'\n * ```\n * #### AMD\n * ```js\n * define('myApp', ['js-data'], function (JSData) { ... })\n * ```\n *\n * @module js-data\n */\n\n/**\n * Details of the current version of the `js-data` module.\n *\n * @name version\n * @memberof module:js-data\n * @type {Object}\n * @property {string} full The full semver value.\n * @property {number} major The major version number.\n * @property {number} minor The minor version number.\n * @property {number} patch The patch version number.\n * @property {(string|boolean)} alpha The alpha version value, otherwise `false`\n * if the current version is not alpha.\n * @property {(string|boolean)} beta The beta version value, otherwise `false`\n * if the current version is not beta.\n */\nexport const version = {\n  alpha: '<%= alpha %>' !== 'false' ? '<%= alpha %>' : false,\n  beta: '<%= beta %>' !== 'false' ? '<%= beta %>' : false,\n  full: '<%= pkg.version %>',\n  major: parseInt('<%= major %>', 10),\n  minor: parseInt('<%= minor %>', 10),\n  patch: parseInt('<%= patch %>', 10)\n}\n\nimport utils from './utils'\n\n/**\n * {@link Collection} class.\n * @name module:js-data.Collection\n */\nimport Collection from './Collection'\n\n/**\n * {@link Component} class.\n * @name module:js-data.Component\n */\nimport Component from './Component'\n\n/**\n * {@link Container} class.\n * @name module:js-data.Container\n */\nimport Container from './Container'\n\n/**\n * {@link DataStore} class.\n * @name module:js-data.DataStore\n */\nimport DataStore from './DataStore'\n\n/**\n * {@link LinkedCollection} class.\n * @name module:js-data.LinkedCollection\n */\nimport LinkedCollection from './LinkedCollection'\n\n/**\n * {@link Mapper} class.\n * @name module:js-data.Mapper\n */\nimport Mapper from './Mapper'\n\n/**\n * {@link Query} class.\n * @name module:js-data.Query\n */\nimport Query from './Query'\n\n/**\n * {@link Record} class.\n * @name module:js-data.Record\n */\nimport Record from './Record'\n\n/**\n * {@link Schema} class.\n * @name module:js-data.Schema\n */\nimport Schema from './Schema'\n\nexport * from './decorators'\n\nexport {\n  Collection,\n  Component,\n  Container,\n  DataStore,\n  LinkedCollection,\n  Mapper,\n  Query,\n  Record,\n  Schema,\n  utils\n}\n"],"names":["utils","belongsTo","hasMany","hasOne","props","toProxy"],"mappings":"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"}