{"version":3,"file":null,"sources":["/Users/anon/projects/my/kefir/src/utils/objects.js","/Users/anon/projects/my/kefir/src/constants.js","/Users/anon/projects/my/kefir/src/utils/collections.js","/Users/anon/projects/my/kefir/src/dispatcher.js","/Users/anon/projects/my/kefir/src/observable.js","/Users/anon/projects/my/kefir/src/stream.js","/Users/anon/projects/my/kefir/src/property.js","/Users/anon/projects/my/kefir/src/primary/never.js","/Users/anon/projects/my/kefir/src/patterns/time-based.js","/Users/anon/projects/my/kefir/src/time-based/later.js","/Users/anon/projects/my/kefir/src/time-based/interval.js","/Users/anon/projects/my/kefir/src/time-based/sequentially.js","/Users/anon/projects/my/kefir/src/time-based/from-poll.js","/Users/anon/projects/my/kefir/src/emitter.js","/Users/anon/projects/my/kefir/src/time-based/with-interval.js","/Users/anon/projects/my/kefir/src/primary/stream.js","/Users/anon/projects/my/kefir/src/primary/from-callback.js","/Users/anon/projects/my/kefir/src/primary/from-node-callback.js","/Users/anon/projects/my/kefir/src/utils/functions.js","/Users/anon/projects/my/kefir/src/primary/from-sub-unsub.js","/Users/anon/projects/my/kefir/src/primary/from-events.js","/Users/anon/projects/my/kefir/src/primary/constant.js","/Users/anon/projects/my/kefir/src/primary/constant-error.js","/Users/anon/projects/my/kefir/src/patterns/one-source.js","/Users/anon/projects/my/kefir/src/one-source/to-property.js","/Users/anon/projects/my/kefir/src/one-source/changes.js","/Users/anon/projects/my/kefir/src/interop/from-promise.js","/Users/anon/projects/my/kefir/src/interop/to-promise.js","/Users/anon/projects/my/kefir/src/utils/symbol.js","/Users/anon/projects/my/kefir/src/interop/from-es-observable.js","/Users/anon/projects/my/kefir/src/interop/to-es-observable.js","/Users/anon/projects/my/kefir/src/one-source/map.js","/Users/anon/projects/my/kefir/src/one-source/filter.js","/Users/anon/projects/my/kefir/src/one-source/take.js","/Users/anon/projects/my/kefir/src/one-source/take-errors.js","/Users/anon/projects/my/kefir/src/one-source/take-while.js","/Users/anon/projects/my/kefir/src/one-source/last.js","/Users/anon/projects/my/kefir/src/one-source/skip.js","/Users/anon/projects/my/kefir/src/one-source/skip-while.js","/Users/anon/projects/my/kefir/src/one-source/skip-duplicates.js","/Users/anon/projects/my/kefir/src/one-source/diff.js","/Users/anon/projects/my/kefir/src/one-source/scan.js","/Users/anon/projects/my/kefir/src/one-source/flatten.js","/Users/anon/projects/my/kefir/src/one-source/delay.js","/Users/anon/projects/my/kefir/src/utils/now.js","/Users/anon/projects/my/kefir/src/one-source/throttle.js","/Users/anon/projects/my/kefir/src/one-source/debounce.js","/Users/anon/projects/my/kefir/src/one-source/map-errors.js","/Users/anon/projects/my/kefir/src/one-source/filter-errors.js","/Users/anon/projects/my/kefir/src/one-source/ignore-values.js","/Users/anon/projects/my/kefir/src/one-source/ignore-errors.js","/Users/anon/projects/my/kefir/src/one-source/ignore-end.js","/Users/anon/projects/my/kefir/src/one-source/before-end.js","/Users/anon/projects/my/kefir/src/one-source/sliding-window.js","/Users/anon/projects/my/kefir/src/one-source/buffer-while.js","/Users/anon/projects/my/kefir/src/one-source/buffer-with-count.js","/Users/anon/projects/my/kefir/src/one-source/buffer-with-time-or-count.js","/Users/anon/projects/my/kefir/src/one-source/transduce.js","/Users/anon/projects/my/kefir/src/one-source/with-handler.js","/Users/anon/projects/my/kefir/src/many-sources/combine.js","/Users/anon/projects/my/kefir/src/many-sources/zip.js","/Users/anon/projects/my/kefir/src/many-sources/abstract-pool.js","/Users/anon/projects/my/kefir/src/many-sources/merge.js","/Users/anon/projects/my/kefir/src/many-sources/repeat.js","/Users/anon/projects/my/kefir/src/many-sources/concat.js","/Users/anon/projects/my/kefir/src/many-sources/pool.js","/Users/anon/projects/my/kefir/src/many-sources/flat-map.js","/Users/anon/projects/my/kefir/src/many-sources/flat-map-errors.js","/Users/anon/projects/my/kefir/src/patterns/two-sources.js","/Users/anon/projects/my/kefir/src/two-sources/filter-by.js","/Users/anon/projects/my/kefir/src/two-sources/sampled-by.js","/Users/anon/projects/my/kefir/src/two-sources/skip-until-by.js","/Users/anon/projects/my/kefir/src/two-sources/take-until-by.js","/Users/anon/projects/my/kefir/src/two-sources/buffer-by.js","/Users/anon/projects/my/kefir/src/two-sources/buffer-while-by.js","/Users/anon/projects/my/kefir/src/two-sources/awaiting.js","/Users/anon/projects/my/kefir/src/one-source/values-to-errors.js","/Users/anon/projects/my/kefir/src/one-source/errors-to-values.js","/Users/anon/projects/my/kefir/src/one-source/end-on-error.js","/Users/anon/projects/my/kefir/src/index.js"],"sourcesContent":["function createObj(proto) {\n  let F = function() {};\n  F.prototype = proto;\n  return new F();\n}\n\nfunction extend(target /*, mixin1, mixin2...*/) {\n  let length = arguments.length\n    , i, prop;\n  for (i = 1; i < length; i++) {\n    for (prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n}\n\nfunction inherit(Child, Parent /*, mixin1, mixin2...*/) {\n  let length = arguments.length\n    , i;\n  Child.prototype = createObj(Parent.prototype);\n  Child.prototype.constructor = Child;\n  for (i = 2; i < length; i++) {\n    extend(Child.prototype, arguments[i]);\n  }\n  return Child;\n}\n\nexport {extend, inherit};\n","export const NOTHING = ['<nothing>'];\nexport const END = 'end';\nexport const VALUE = 'value';\nexport const ERROR = 'error';\nexport const ANY = 'any';\n","function concat(a, b) {\n  let result, length, i, j;\n  if (a.length === 0) {\n    return b;\n  }\n  if (b.length === 0) {\n    return a;\n  }\n  j = 0;\n  result = new Array(a.length + b.length);\n  length = a.length;\n  for (i = 0; i < length; i++, j++) {\n    result[j] = a[i];\n  }\n  length = b.length;\n  for (i = 0; i < length; i++, j++) {\n    result[j] = b[i];\n  }\n  return result;\n}\n\nfunction circleShift(arr, distance) {\n  let length = arr.length\n    , result = new Array(length)\n    , i;\n  for (i = 0; i < length; i++) {\n    result[(i + distance) % length] = arr[i];\n  }\n  return result;\n}\n\nfunction find(arr, value) {\n  let length = arr.length\n    , i;\n  for (i = 0; i < length; i++) {\n    if (arr[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction findByPred(arr, pred) {\n  let length = arr.length\n    , i;\n  for (i = 0; i < length; i++) {\n    if (pred(arr[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction cloneArray(input) {\n  let length = input.length\n    , result = new Array(length)\n    , i;\n  for (i = 0; i < length; i++) {\n    result[i] = input[i];\n  }\n  return result;\n}\n\nfunction remove(input, index) {\n  let length = input.length\n    , result, i, j;\n  if (index >= 0 && index < length) {\n    if (length === 1) {\n      return [];\n    } else {\n      result = new Array(length - 1);\n      for (i = 0, j = 0; i < length; i++) {\n        if (i !== index) {\n          result[j] = input[i];\n          j++;\n        }\n      }\n      return result;\n    }\n  } else {\n    return input;\n  }\n}\n\nfunction removeByPred(input, pred) {\n  return remove(input, findByPred(input, pred));\n}\n\nfunction map(input, fn) {\n  let length = input.length\n    , result = new Array(length)\n    , i;\n  for (i = 0; i < length; i++) {\n    result[i] = fn(input[i]);\n  }\n  return result;\n}\n\nfunction forEach(arr, fn) {\n  let length = arr.length\n    , i;\n  for (i = 0; i < length; i++) {\n    fn(arr[i]);\n  }\n}\n\nfunction fillArray(arr, value) {\n  let length = arr.length\n    , i;\n  for (i = 0; i < length; i++) {\n    arr[i] = value;\n  }\n}\n\nfunction contains(arr, value) {\n  return find(arr, value) !== -1;\n}\n\nfunction slide(cur, next, max) {\n  let length = Math.min(max, cur.length + 1),\n      offset = cur.length - length + 1,\n      result = new Array(length),\n      i;\n  for (i = offset; i < length; i++) {\n    result[i - offset] = cur[i];\n  }\n  result[length - 1] = next;\n  return result;\n}\n\n\n\n\nexport {\n  concat,\n  circleShift,\n  find,\n  findByPred,\n  cloneArray,\n  remove,\n  removeByPred,\n  map,\n  forEach,\n  fillArray,\n  contains,\n  slide\n};\n","import {extend} from './utils/objects';\nimport {VALUE, ERROR, ANY} from './constants';\nimport {concat, findByPred, remove, contains} from './utils/collections';\n\nfunction callSubscriber(type, fn, event) {\n  if (type === ANY) {\n    fn(event);\n  } else if (type === event.type) {\n    if (type === VALUE || type === ERROR) {\n      fn(event.value);\n    } else {\n      fn();\n    }\n  }\n}\n\nfunction Dispatcher() {\n  this._items = [];\n  this._inLoop = 0;\n  this._removedItems = null;\n}\n\nextend(Dispatcher.prototype, {\n\n  add(type, fn) {\n    this._items = concat(this._items, [{type, fn}]);\n    return this._items.length;\n  },\n\n  remove(type, fn) {\n    const index = findByPred(this._items, (x) => x.type === type && x.fn === fn);\n\n    // if we're currently in a notification loop,\n    // remember this subscriber was removed\n    if (this._inLoop !== 0 && index !== -1) {\n      if (this._removedItems === null) {\n        this._removedItems = [];\n      }\n      this._removedItems.push(this._items[index]);\n    }\n\n    this._items = remove(this._items, index);\n    return this._items.length;\n  },\n\n  dispatch(event) {\n    this._inLoop++;\n    for (let i = 0, items = this._items; i < items.length; i++) {\n\n      // cleanup was called\n      if (this._items === null) {\n        break;\n      }\n\n      // this subscriber was removed\n      if (this._removedItems !== null && contains(this._removedItems, items[i])) {\n        continue;\n      }\n\n      callSubscriber(items[i].type, items[i].fn, event);\n    }\n    this._inLoop--;\n    if (this._inLoop === 0) {\n      this._removedItems = null;\n    }\n  },\n\n  cleanup() {\n    this._items = null;\n  }\n\n});\n\n\nexport {callSubscriber, Dispatcher};\n","import {extend} from './utils/objects';\nimport {VALUE, ERROR, ANY, END} from './constants';\nimport {Dispatcher, callSubscriber} from './dispatcher';\nimport {findByPred} from './utils/collections';\n\n\n\nfunction Observable() {\n  this._dispatcher = new Dispatcher();\n  this._active = false;\n  this._alive = true;\n  this._activating = false;\n  this._logHandlers = null;\n}\n\nextend(Observable.prototype, {\n\n  _name: 'observable',\n\n  _onActivation() {},\n  _onDeactivation() {},\n\n  _setActive(active) {\n    if (this._active !== active) {\n      this._active = active;\n      if (active) {\n        this._activating = true;\n        this._onActivation();\n        this._activating = false;\n      } else {\n        this._onDeactivation();\n      }\n    }\n  },\n\n  _clear() {\n    this._setActive(false);\n    this._dispatcher.cleanup();\n    this._dispatcher = null;\n    this._logHandlers = null;\n  },\n\n  _emit(type, x) {\n    switch (type) {\n      case VALUE: return this._emitValue(x);\n      case ERROR: return this._emitError(x);\n      case END: return this._emitEnd();\n    }\n  },\n\n  _emitValue(value) {\n    if (this._alive) {\n      this._dispatcher.dispatch({type: VALUE, value});\n    }\n  },\n\n  _emitError(value) {\n    if (this._alive) {\n      this._dispatcher.dispatch({type: ERROR, value});\n    }\n  },\n\n  _emitEnd() {\n    if (this._alive) {\n      this._alive = false\n      this._dispatcher.dispatch({type: END});\n      this._clear();\n    }\n  },\n\n  _on(type, fn) {\n    if (this._alive) {\n      this._dispatcher.add(type, fn);\n      this._setActive(true);\n    } else {\n      callSubscriber(type, fn, {type: END});\n    }\n    return this;\n  },\n\n  _off(type, fn) {\n    if (this._alive) {\n      let count = this._dispatcher.remove(type, fn);\n      if (count === 0) {\n        this._setActive(false);\n      }\n    }\n    return this;\n  },\n\n  onValue(fn) {\n    return this._on(VALUE, fn);\n  },\n  onError(fn) {\n    return this._on(ERROR, fn);\n  },\n  onEnd(fn) {\n    return this._on(END, fn);\n  },\n  onAny(fn) {\n    return this._on(ANY, fn);\n  },\n\n  offValue(fn) {\n    return this._off(VALUE, fn);\n  },\n  offError(fn) {\n    return this._off(ERROR, fn);\n  },\n  offEnd(fn) {\n    return this._off(END, fn);\n  },\n  offAny(fn) {\n    return this._off(ANY, fn);\n  },\n\n  // A and B must be subclasses of Stream and Property (order doesn't matter)\n  _ofSameType(A, B) {\n    return A.prototype.getType() === this.getType() ? A : B;\n  },\n\n  setName(sourceObs /* optional */, selfName) {\n    this._name = selfName ? `${sourceObs._name}.${selfName}` : sourceObs;\n    return this;\n  },\n\n\n  log(name = this.toString()) {\n\n    let isCurrent\n    let handler = function(event) {\n      let type = `<${event.type}${isCurrent ? ':current' : ''}>`;\n      if (event.type === END) {\n        console.log(name, type);\n      } else {\n        console.log(name, type, event.value);\n      }\n    };\n\n    if (this._alive) {\n      if (!this._logHandlers) {\n        this._logHandlers = [];\n      }\n      this._logHandlers.push({name: name, handler: handler});\n    }\n\n    isCurrent = true;\n    this.onAny(handler);\n    isCurrent = false;\n\n    return this;\n  },\n\n  offLog(name = this.toString()) {\n\n    if (this._logHandlers) {\n      let handlerIndex = findByPred(this._logHandlers, obj => obj.name === name);\n      if (handlerIndex !== -1) {\n        this.offAny(this._logHandlers[handlerIndex].handler);\n        this._logHandlers.splice(handlerIndex, 1);\n      }\n    }\n\n    return this;\n  }\n});\n\n// extend() can't handle `toString` in IE8\nObservable.prototype.toString = function() {\n  return `[${this._name}]`;\n};\n\n\nexport default Observable;\n","import {inherit} from './utils/objects';\nimport Observable from './observable';\n\n\nfunction Stream() {\n  Observable.call(this);\n}\n\ninherit(Stream, Observable, {\n\n  _name: 'stream',\n\n  getType() {\n    return 'stream';\n  }\n\n});\n\nexport default Stream;\n","import {inherit} from './utils/objects';\nimport {VALUE, ERROR, END} from './constants';\nimport {callSubscriber} from './dispatcher';\nimport Observable from './observable';\n\n\n\nfunction Property() {\n  Observable.call(this);\n  this._currentEvent = null;\n}\n\ninherit(Property, Observable, {\n\n  _name: 'property',\n\n  _emitValue(value) {\n    if (this._alive) {\n      this._currentEvent = {type: VALUE, value};\n      if (!this._activating) {\n        this._dispatcher.dispatch({type: VALUE, value});\n      }\n    }\n  },\n\n  _emitError(value) {\n    if (this._alive) {\n      this._currentEvent = {type: ERROR, value};\n      if (!this._activating) {\n        this._dispatcher.dispatch({type: ERROR, value});\n      }\n    }\n  },\n\n  _emitEnd() {\n    if (this._alive) {\n      this._alive = false\n      if (!this._activating) {\n        this._dispatcher.dispatch({type: END});\n      }\n      this._clear();\n    }\n  },\n\n\n  _on(type, fn) {\n    if (this._alive) {\n      this._dispatcher.add(type, fn);\n      this._setActive(true);\n    }\n    if (this._currentEvent !== null) {\n      callSubscriber(type, fn, this._currentEvent);\n    }\n    if (!this._alive) {\n      callSubscriber(type, fn, {type: END});\n    }\n    return this;\n  },\n\n  getType() {\n    return 'property';\n  }\n\n});\n\nexport default Property;\n\n\n\n\n\n\n","import Stream from '../stream';\n\n\nconst neverS = new Stream();\nneverS._emitEnd();\nneverS._name = 'never';\n\nexport default function never() {\n  return neverS;\n}\n","import {inherit} from '../utils/objects';\nimport Stream from '../stream';\n\nexport default function timeBased(mixin) {\n\n  function AnonymousStream(wait, options) {\n    Stream.call(this);\n    this._wait = wait;\n    this._intervalId = null;\n    this._$onTick = () => this._onTick();\n    this._init(options);\n  }\n\n  inherit(AnonymousStream, Stream, {\n\n    _init() {},\n    _free() {},\n\n    _onTick() {},\n\n    _onActivation() {\n      this._intervalId = setInterval(this._$onTick, this._wait);\n    },\n\n    _onDeactivation() {\n      if (this._intervalId !== null) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      }\n    },\n\n    _clear() {\n      Stream.prototype._clear.call(this);\n      this._$onTick = null;\n      this._free();\n    }\n\n  }, mixin);\n\n  return AnonymousStream;\n}\n","import timeBased from '../patterns/time-based';\n\nconst S = timeBased({\n\n  _name: 'later',\n\n  _init({x}) {\n    this._x = x;\n  },\n\n  _free() {\n    this._x = null;\n  },\n\n  _onTick() {\n    this._emitValue(this._x);\n    this._emitEnd();\n  }\n\n});\n\n\nexport default function later(wait, x) {\n  return new S(wait, {x});\n}\n","import timeBased from '../patterns/time-based';\n\nconst S = timeBased({\n\n  _name: 'interval',\n\n  _init({x}) {\n    this._x = x;\n  },\n\n  _free() {\n    this._x = null;\n  },\n\n  _onTick() {\n    this._emitValue(this._x);\n  }\n\n});\n\n\nexport default function interval(wait, x) {\n  return new S(wait, {x});\n}\n","import timeBased from '../patterns/time-based';\nimport {cloneArray} from '../utils/collections';\nimport never from '../primary/never';\n\nconst S = timeBased({\n\n  _name: 'sequentially',\n\n  _init({xs}) {\n    this._xs = cloneArray(xs);\n  },\n\n  _free() {\n    this._xs = null;\n  },\n\n  _onTick() {\n    if (this._xs.length === 1) {\n      this._emitValue(this._xs[0]);\n      this._emitEnd();\n    } else {\n      this._emitValue(this._xs.shift());\n    }\n  }\n\n});\n\n\nexport default function sequentially(wait, xs) {\n  return xs.length === 0 ? never() : new S(wait, {xs});\n}\n","import timeBased from '../patterns/time-based';\n\nconst S = timeBased({\n\n  _name: 'fromPoll',\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _onTick() {\n    const fn = this._fn;\n    this._emitValue(fn());\n  }\n\n});\n\n\nexport default function fromPoll(wait, fn) {\n  return new S(wait, {fn});\n}\n","export default function emitter(obs) {\n\n  function value(x) {\n    obs._emitValue(x);\n    return obs._active;\n  }\n\n  function error(x) {\n    obs._emitError(x);\n    return obs._active;\n  }\n\n  function end() {\n    obs._emitEnd();\n    return obs._active;\n  }\n\n  function event(e) {\n    obs._emit(e.type, e.value);\n    return obs._active;\n  }\n\n  return {value, error, end, event, emit: value, emitEvent: event};\n}\n","import timeBased from '../patterns/time-based';\nimport emitter from '../emitter';\n\n\nconst S = timeBased({\n\n  _name: 'withInterval',\n\n  _init({fn}) {\n    this._fn = fn;\n    this._emitter = emitter(this);\n  },\n\n  _free() {\n    this._fn = null;\n    this._emitter = null;\n  },\n\n  _onTick() {\n    const fn = this._fn;\n    fn(this._emitter);\n  }\n\n});\n\n\nexport default function withInterval(wait, fn) {\n  return new S(wait, {fn});\n}\n","import {inherit} from '../utils/objects';\nimport Stream from '../stream';\nimport emitter from '../emitter';\n\nfunction S(fn) {\n  Stream.call(this);\n  this._fn = fn;\n  this._unsubscribe = null;\n}\n\ninherit(S, Stream, {\n\n  _name: 'stream',\n\n  _onActivation() {\n    const fn = this._fn;\n    const unsubscribe = fn(emitter(this));\n    this._unsubscribe = (typeof unsubscribe === 'function') ? unsubscribe : null;\n\n    // fix https://github.com/rpominov/kefir/issues/35\n    if (!this._active) {\n      this._callUnsubscribe();\n    }\n  },\n\n  _callUnsubscribe() {\n    if (this._unsubscribe !== null) {\n      this._unsubscribe();\n      this._unsubscribe = null;\n    }\n  },\n\n  _onDeactivation() {\n    this._callUnsubscribe();\n  },\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._fn = null;\n  }\n\n});\n\nexport default function stream(fn) {\n  return new S(fn);\n}\n","import stream from './stream';\n\nexport default function fromCallback(callbackConsumer) {\n\n  let called = false;\n\n  return stream(function(emitter) {\n\n    if (!called) {\n      callbackConsumer(function(x) {\n        emitter.emit(x);\n        emitter.end();\n      });\n      called = true;\n    }\n\n  }).setName('fromCallback');\n}\n","import stream from './stream';\n\nexport default function fromNodeCallback(callbackConsumer) {\n\n  let called = false;\n\n  return stream(function(emitter) {\n\n    if (!called) {\n      callbackConsumer(function(error, x) {\n        if (error) {\n          emitter.error(error);\n        } else {\n          emitter.emit(x);\n        }\n        emitter.end();\n      });\n      called = true;\n    }\n\n  }).setName('fromNodeCallback');\n\n}\n","function spread(fn, length) {\n  switch(length) {\n    case 0: return function() {return fn();};\n    case 1: return function(a) {return fn(a[0]);};\n    case 2: return function(a) {return fn(a[0], a[1]);};\n    case 3: return function(a) {return fn(a[0], a[1], a[2]);};\n    case 4: return function(a) {return fn(a[0], a[1], a[2], a[3]);};\n    default: return function(a) {return fn.apply(null, a);};\n  }\n}\n\nfunction apply(fn, c, a) {\n  let aLength = a ? a.length : 0;\n  if (c == null) {\n    switch (aLength) {\n      case 0: return fn();\n      case 1: return fn(a[0]);\n      case 2: return fn(a[0], a[1]);\n      case 3: return fn(a[0], a[1], a[2]);\n      case 4: return fn(a[0], a[1], a[2], a[3]);\n      default: return fn.apply(null, a);\n    }\n  } else {\n    switch (aLength) {\n      case 0: return fn.call(c);\n      default: return fn.apply(c, a);\n    }\n  }\n}\n\nexport {spread, apply};\n","import stream from './stream';\nimport {apply} from '../utils/functions';\n\nexport default function fromSubUnsub(sub, unsub, transformer /* Function | falsey */) {\n  return stream(function(emitter) {\n\n    let handler = transformer\n      ? function() {\n        emitter.emit(apply(transformer, this, arguments));\n      }\n      : x => {\n        emitter.emit(x)\n      };\n\n    sub(handler);\n    return () => unsub(handler);\n\n  }).setName('fromSubUnsub');\n}\n","import fromSubUnsub from './from-sub-unsub';\n\nconst pairs = [\n  ['addEventListener', 'removeEventListener'],\n  ['addListener', 'removeListener'],\n  ['on', 'off']\n];\n\nexport default function fromEvents(target, eventName, transformer) {\n  let sub, unsub;\n\n  for (let i = 0; i < pairs.length; i++) {\n    if (typeof target[pairs[i][0]] === 'function' && typeof target[pairs[i][1]] === 'function') {\n      sub = pairs[i][0];\n      unsub = pairs[i][1];\n      break;\n    }\n  }\n\n  if (sub === undefined) {\n    throw new Error('target don\\'t support any of ' +\n      'addEventListener/removeEventListener, addListener/removeListener, on/off method pair');\n  }\n\n  return fromSubUnsub(\n    (handler) => target[sub](eventName, handler),\n    (handler) => target[unsub](eventName, handler),\n    transformer\n  ).setName('fromEvents');\n}\n","import {inherit} from '../utils/objects';\nimport Property from '../property';\n\n// HACK:\n//   We don't call parent Class constructor, but instead putting all necessary\n//   properties into prototype to simulate ended Property\n//   (see Propperty and Observable classes).\n\nfunction P(value) {\n  this._currentEvent = {type: 'value', value, current: true};\n}\n\ninherit(P, Property, {\n  _name: 'constant',\n  _active: false,\n  _activating: false,\n  _alive: false,\n  _dispatcher: null,\n  _logHandlers: null\n});\n\nexport default function constant(x) {\n  return new P(x);\n}\n","import {inherit} from '../utils/objects';\nimport Property from '../property';\n\n\n// HACK:\n//   We don't call parent Class constructor, but instead putting all necessary\n//   properties into prototype to simulate ended Property\n//   (see Propperty and Observable classes).\n\nfunction P(value) {\n  this._currentEvent = {type: 'error', value, current: true};\n}\n\ninherit(P, Property, {\n  _name: 'constantError',\n  _active: false,\n  _activating: false,\n  _alive: false,\n  _dispatcher: null,\n  _logHandlers: null\n});\n\nexport default function constantError(x) {\n  return new P(x);\n}\n","import Stream from '../stream';\nimport Property from '../property';\nimport {inherit} from '../utils/objects';\nimport {VALUE, ERROR, END} from '../constants';\n\n\nfunction createConstructor(BaseClass, name) {\n  return function AnonymousObservable(source, options) {\n    BaseClass.call(this);\n    this._source = source;\n    this._name = `${source._name}.${name}`;\n    this._init(options);\n    this._$handleAny = (event) => this._handleAny(event);\n  }\n}\n\nfunction createClassMethods(BaseClass) {\n  return {\n\n    _init() {},\n    _free() {},\n\n    _handleValue(x) {\n      this._emitValue(x);\n    },\n    _handleError(x) {\n      this._emitError(x);\n    },\n    _handleEnd() {\n      this._emitEnd();\n    },\n\n    _handleAny(event) {\n      switch (event.type) {\n        case VALUE: return this._handleValue(event.value);\n        case ERROR: return this._handleError(event.value);\n        case END: return this._handleEnd();\n      }\n    },\n\n    _onActivation() {\n      this._source.onAny(this._$handleAny);\n    },\n    _onDeactivation() {\n      this._source.offAny(this._$handleAny);\n    },\n\n    _clear() {\n      BaseClass.prototype._clear.call(this);\n      this._source = null;\n      this._$handleAny = null;\n      this._free();\n    }\n\n  };\n}\n\n\n\nfunction createStream(name, mixin) {\n  const S = createConstructor(Stream, name);\n  inherit(S, Stream, createClassMethods(Stream), mixin);\n  return S;\n}\n\n\nfunction createProperty(name, mixin) {\n  const P = createConstructor(Property, name);\n  inherit(P, Property, createClassMethods(Property), mixin);\n  return P;\n}\n\n\nexport {createStream, createProperty};\n","import {createProperty} from '../patterns/one-source';\n\n\nconst P = createProperty('toProperty', {\n\n  _init({fn}) {\n    this._getInitialCurrent = fn;\n  },\n\n  _onActivation() {\n    if (this._getInitialCurrent !== null) {\n      const getInitial = this._getInitialCurrent;\n      this._emitValue(getInitial());\n    }\n    this._source.onAny(this._$handleAny);  // copied from patterns/one-source\n  }\n\n});\n\n\n\nexport default function toProperty(obs, fn = null) {\n  if (fn !== null && typeof fn !== 'function') {\n    throw new Error('You should call toProperty() with a function or no arguments.');\n  }\n  return new P(obs, {fn});\n}\n","import {createStream} from '../patterns/one-source';\n\n\n\nconst S = createStream('changes', {\n\n  _handleValue(x) {\n    if (!this._activating) {\n      this._emitValue(x);\n    }\n  },\n\n  _handleError(x) {\n    if (!this._activating) {\n      this._emitError(x);\n    }\n  }\n\n});\n\n\nexport default function changes(obs) {\n  return new S(obs);\n}\n","import stream from '../primary/stream';\nimport toProperty from '../one-source/to-property';\n\nexport default function fromPromise(promise) {\n\n  let called = false;\n\n  let result = stream(function(emitter) {\n    if (!called) {\n      let onValue = function(x) {\n        emitter.emit(x);\n        emitter.end();\n      };\n      let onError = function(x) {\n        emitter.error(x);\n        emitter.end();\n      };\n      let _promise = promise.then(onValue, onError);\n\n      // prevent libraries like 'Q' or 'when' from swallowing exceptions\n      if (_promise && typeof _promise.done === 'function') {\n        _promise.done();\n      }\n\n      called = true;\n    }\n  })\n\n  return toProperty(result, null).setName('fromPromise');\n\n}\n","import {VALUE, END} from '../constants';\n\nfunction getGlodalPromise() {\n  if (typeof Promise === 'function') {\n    return Promise;\n  } else {\n    throw new Error('There isn\\'t default Promise, use shim or parameter');\n  }\n}\n\nexport default function(obs, Promise = getGlodalPromise()) {\n  let last = null;\n  return new Promise((resolve, reject) => {\n    obs.onAny(event => {\n      if (event.type === END && last !== null) {\n        (last.type === VALUE ? resolve : reject)(last.value);\n        last = null;\n      } else {\n        last = event;\n      }\n    });\n  });\n}\n","export default function(key) {\n  if (typeof Symbol !== 'undefined' && Symbol[key]) {\n    return Symbol[key];\n  } else if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    return Symbol.for(key);\n  } else {\n    return '@@' + key;\n  }\n}\n","import stream from '../primary/stream';\nimport symbol_ from '../utils/symbol';\nconst symbol = symbol_('observable');\n\nexport default function fromESObservable(_observable) {\n  const observable = _observable[symbol] ? _observable[symbol]() : _observable;\n  return stream(function(emitter) {\n    const unsub = observable.subscribe({\n      error(error) {\n        emitter.error(error);\n        emitter.end();\n      },\n      next(value) {\n        emitter.emit(value);\n      },\n      complete() {\n        emitter.end();\n      }\n    })\n\n    if (unsub.unsubscribe) {\n      return function () { unsub.unsubscribe(); };\n    } else {\n      return unsub;\n    }\n  }).setName('fromESObservable');\n}\n","import {extend} from '../utils/objects';\nimport {VALUE, ERROR, END} from '../constants';\n\nfunction ESObservable(observable) {\n  this._observable = observable.takeErrors(1);\n}\n\nextend(ESObservable.prototype, {\n  subscribe(observer) {\n    let fn = function(event) {\n      if (event.type === VALUE && observer.next) {\n        observer.next(event.value);\n      } else if (event.type === ERROR && observer.error) {\n        observer.error(event.value);\n      } else if (event.type === END && observer.complete) {\n        observer.complete(event.value);\n      }\n    }\n\n    this._observable.onAny(fn);\n    return () => this._observable.offAny(fn);\n  }\n});\n\n\nexport default function toESObservable() {\n  return new ESObservable(this);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    this._emitValue(fn(x));\n  }\n\n};\n\nconst S = createStream('map', mixin);\nconst P = createProperty('map', mixin);\n\n\nconst id = x => x;\n\nexport default function map(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (fn(x)) {\n      this._emitValue(x);\n    }\n  }\n\n};\n\nconst S = createStream('filter', mixin);\nconst P = createProperty('filter', mixin);\n\n\nconst id = x => x;\n\nexport default function filter(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({n}) {\n    this._n = n;\n    if (n <= 0) {\n      this._emitEnd();\n    }\n  },\n\n  _handleValue(x) {\n    this._n--;\n    this._emitValue(x);\n    if (this._n === 0) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('take', mixin);\nconst P = createProperty('take', mixin);\n\n\nexport default function take(obs, n) {\n  return new (obs._ofSameType(S, P))(obs, {n});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({n}) {\n    this._n = n;\n    if (n <= 0) {\n      this._emitEnd();\n    }\n  },\n\n  _handleError(x) {\n    this._n--;\n    this._emitError(x);\n    if (this._n === 0) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('takeErrors', mixin);\nconst P = createProperty('takeErrors', mixin);\n\n\nexport default function takeErrors(obs, n) {\n  return new (obs._ofSameType(S, P))(obs, {n});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (fn(x)) {\n      this._emitValue(x);\n    } else {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('takeWhile', mixin);\nconst P = createProperty('takeWhile', mixin);\n\n\nconst id = x => x;\n\nexport default function takeWhile(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport {NOTHING} from '../constants';\n\nconst mixin = {\n\n  _init() {\n    this._lastValue = NOTHING;\n  },\n\n  _free() {\n    this._lastValue = null;\n  },\n\n  _handleValue(x) {\n    this._lastValue = x;\n  },\n\n  _handleEnd() {\n    if (this._lastValue !== NOTHING) {\n      this._emitValue(this._lastValue);\n    }\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('last', mixin);\nconst P = createProperty('last', mixin);\n\n\nexport default function last(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({n}) {\n    this._n = Math.max(0, n);\n  },\n\n  _handleValue(x) {\n    if (this._n === 0) {\n      this._emitValue(x);\n    } else {\n      this._n--;\n    }\n  }\n\n};\n\nconst S = createStream('skip', mixin);\nconst P = createProperty('skip', mixin);\n\n\nexport default function skip(obs, n) {\n  return new (obs._ofSameType(S, P))(obs, {n});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (this._fn !== null && !fn(x)) {\n      this._fn = null;\n    }\n    if (this._fn === null) {\n      this._emitValue(x);\n    }\n  }\n\n};\n\nconst S = createStream('skipWhile', mixin);\nconst P = createProperty('skipWhile', mixin);\n\n\nconst id = x => x;\n\nexport default function skipWhile(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport {NOTHING} from '../constants';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n    this._prev = NOTHING;\n  },\n\n  _free() {\n    this._fn = null;\n    this._prev = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (this._prev === NOTHING || !fn(this._prev, x)) {\n      this._prev = x;\n      this._emitValue(x);\n    }\n  }\n\n};\n\nconst S = createStream('skipDuplicates', mixin);\nconst P = createProperty('skipDuplicates', mixin);\n\n\nconst eq = (a, b) => a === b;\n\nexport default function skipDuplicates(obs, fn = eq) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport {NOTHING} from '../constants';\n\nconst mixin = {\n\n  _init({fn, seed}) {\n    this._fn = fn;\n    this._prev = seed;\n  },\n\n  _free() {\n    this._prev = null;\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    if (this._prev !== NOTHING) {\n      const fn = this._fn;\n      this._emitValue(fn(this._prev, x));\n    }\n    this._prev = x;\n  }\n\n};\n\nconst S = createStream('diff', mixin);\nconst P = createProperty('diff', mixin);\n\n\nfunction defaultFn(a, b) {\n  return [a, b];\n}\n\nexport default function diff(obs, fn, seed = NOTHING) {\n  return new (obs._ofSameType(S, P))(obs, {fn: fn || defaultFn, seed});\n}\n","import {createProperty} from '../patterns/one-source';\nimport {ERROR, NOTHING} from '../constants';\n\n\nconst P = createProperty('scan', {\n\n  _init({fn, seed}) {\n    this._fn = fn;\n    this._seed = seed;\n    if (seed !== NOTHING) {\n      this._emitValue(seed);\n    }\n  },\n\n  _free() {\n    this._fn = null;\n    this._seed = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    if (this._currentEvent === null || this._currentEvent.type === ERROR) {\n      this._emitValue(this._seed === NOTHING ? x : fn(this._seed, x));\n    } else {\n      this._emitValue(fn(this._currentEvent.value, x));\n    }\n  }\n\n});\n\n\nexport default function scan(obs, fn, seed = NOTHING) {\n  return new P(obs, {fn, seed});\n}\n","import {createStream} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    const xs = fn(x);\n    for (let i = 0; i < xs.length; i++) {\n      this._emitValue(xs[i]);\n    }\n  }\n\n};\n\nconst S = createStream('flatten', mixin);\n\n\nconst id = x => x;\n\nexport default function flatten(obs, fn = id) {\n  return new S(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst END_MARKER = {};\n\nconst mixin = {\n\n  _init({wait}) {\n    this._wait = Math.max(0, wait);\n    this._buff = [];\n    this._$shiftBuff = () => {\n      const value = this._buff.shift();\n      if (value === END_MARKER) {\n        this._emitEnd();\n      } else {\n        this._emitValue(value);\n      }\n    };\n  },\n\n  _free() {\n    this._buff = null;\n    this._$shiftBuff = null;\n  },\n\n  _handleValue(x) {\n    if (this._activating) {\n      this._emitValue(x);\n    } else {\n      this._buff.push(x);\n      setTimeout(this._$shiftBuff, this._wait);\n    }\n  },\n\n  _handleEnd() {\n    if (this._activating) {\n      this._emitEnd();\n    } else {\n      this._buff.push(END_MARKER);\n      setTimeout(this._$shiftBuff, this._wait);\n    }\n  }\n\n};\n\nconst S = createStream('delay', mixin);\nconst P = createProperty('delay', mixin);\n\nexport default function delay(obs, wait) {\n  return new (obs._ofSameType(S, P))(obs, {wait});\n}\n","export default Date.now ?\n  (() => Date.now()) :\n  (() => new Date().getTime());\n","import {createStream, createProperty} from '../patterns/one-source';\nimport now from '../utils/now';\n\n\nconst mixin = {\n\n  _init({wait, leading, trailing}) {\n    this._wait = Math.max(0, wait);\n    this._leading = leading;\n    this._trailing = trailing;\n    this._trailingValue = null;\n    this._timeoutId = null;\n    this._endLater = false;\n    this._lastCallTime = 0;\n    this._$trailingCall = () => this._trailingCall();\n  },\n\n  _free() {\n    this._trailingValue = null;\n    this._$trailingCall = null;\n  },\n\n  _handleValue(x) {\n    if (this._activating) {\n      this._emitValue(x);\n    } else {\n      let curTime = now();\n      if (this._lastCallTime === 0 && !this._leading) {\n        this._lastCallTime = curTime;\n      }\n      let remaining = this._wait - (curTime - this._lastCallTime);\n      if (remaining <= 0) {\n        this._cancelTrailing();\n        this._lastCallTime = curTime;\n        this._emitValue(x);\n      } else if (this._trailing) {\n        this._cancelTrailing();\n        this._trailingValue = x;\n        this._timeoutId = setTimeout(this._$trailingCall, remaining);\n      }\n    }\n  },\n\n  _handleEnd() {\n    if (this._activating) {\n      this._emitEnd();\n    } else {\n      if (this._timeoutId) {\n        this._endLater = true;\n      } else {\n        this._emitEnd();\n      }\n    }\n  },\n\n  _cancelTrailing() {\n    if (this._timeoutId !== null) {\n      clearTimeout(this._timeoutId);\n      this._timeoutId = null;\n    }\n  },\n\n  _trailingCall() {\n    this._emitValue(this._trailingValue);\n    this._timeoutId = null;\n    this._trailingValue = null;\n    this._lastCallTime = !this._leading ? 0 : now();\n    if (this._endLater) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('throttle', mixin);\nconst P = createProperty('throttle', mixin);\n\n\nexport default function throttle(obs, wait, {leading = true, trailing = true} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {wait, leading, trailing});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport now from '../utils/now';\n\n\nconst mixin = {\n\n  _init({wait, immediate}) {\n    this._wait = Math.max(0, wait);\n    this._immediate = immediate;\n    this._lastAttempt = 0;\n    this._timeoutId = null;\n    this._laterValue = null;\n    this._endLater = false;\n    this._$later = () => this._later();\n  },\n\n  _free() {\n    this._laterValue = null;\n    this._$later = null;\n  },\n\n  _handleValue(x) {\n    if (this._activating) {\n      this._emitValue(x);\n    } else {\n      this._lastAttempt = now();\n      if (this._immediate && !this._timeoutId) {\n        this._emitValue(x);\n      }\n      if (!this._timeoutId) {\n        this._timeoutId = setTimeout(this._$later, this._wait);\n      }\n      if (!this._immediate) {\n        this._laterValue = x;\n      }\n    }\n  },\n\n  _handleEnd() {\n    if (this._activating) {\n      this._emitEnd();\n    } else {\n      if (this._timeoutId && !this._immediate) {\n        this._endLater = true;\n      } else {\n        this._emitEnd();\n      }\n    }\n  },\n\n  _later() {\n    let last = now() - this._lastAttempt;\n    if (last < this._wait && last >= 0) {\n      this._timeoutId = setTimeout(this._$later, this._wait - last);\n    } else {\n      this._timeoutId = null;\n      if (!this._immediate) {\n        this._emitValue(this._laterValue);\n        this._laterValue = null;\n      }\n      if (this._endLater) {\n        this._emitEnd();\n      }\n    }\n  }\n\n};\n\nconst S = createStream('debounce', mixin);\nconst P = createProperty('debounce', mixin);\n\nexport default function debounce(obs, wait, {immediate = false} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {wait, immediate});\n}\n\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleError(x) {\n    const fn = this._fn;\n    this._emitError(fn(x));\n  }\n\n};\n\nconst S = createStream('mapErrors', mixin);\nconst P = createProperty('mapErrors', mixin);\n\n\nconst id = x => x;\n\nexport default function mapErrors(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleError(x) {\n    const fn = this._fn;\n    if (fn(x)) {\n      this._emitError(x);\n    }\n  }\n\n};\n\nconst S = createStream('filterErrors', mixin);\nconst P = createProperty('filterErrors', mixin);\n\n\nconst id = x => x;\n\nexport default function filterErrors(obs, fn = id) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n  _handleValue() {}\n};\n\nconst S = createStream('ignoreValues', mixin);\nconst P = createProperty('ignoreValues', mixin);\n\n\nexport default function ignoreValues(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n  _handleError() {}\n};\n\nconst S = createStream('ignoreErrors', mixin);\nconst P = createProperty('ignoreErrors', mixin);\n\n\nexport default function ignoreErrors(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n  _handleEnd() {}\n};\n\nconst S = createStream('ignoreEnd', mixin);\nconst P = createProperty('ignoreEnd', mixin);\n\n\nexport default function ignoreEnd(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleEnd() {\n    const fn = this._fn;\n    this._emitValue(fn());\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('beforeEnd', mixin);\nconst P = createProperty('beforeEnd', mixin);\n\nexport default function beforeEnd(obs, fn) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport {slide} from '../utils/collections';\n\nconst mixin = {\n\n  _init({min, max}) {\n    this._max = max;\n    this._min = min;\n    this._buff = [];\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _handleValue(x) {\n    this._buff = slide(this._buff, x, this._max);\n    if (this._buff.length >= this._min) {\n      this._emitValue(this._buff);\n    }\n  }\n\n};\n\nconst S = createStream('slidingWindow', mixin);\nconst P = createProperty('slidingWindow', mixin);\n\n\nexport default function slidingWindow(obs, max, min = 0) {\n  return new (obs._ofSameType(S, P))(obs, {min, max});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn, flushOnEnd}) {\n    this._fn = fn;\n    this._flushOnEnd = flushOnEnd;\n    this._buff = [];\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null && this._buff.length !== 0) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handleValue(x) {\n    this._buff.push(x);\n    const fn = this._fn;\n    if (!fn(x)) {\n      this._flush();\n    }\n  },\n\n  _handleEnd() {\n    if (this._flushOnEnd) {\n      this._flush();\n    }\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('bufferWhile', mixin);\nconst P = createProperty('bufferWhile', mixin);\n\n\nconst id = x => x;\n\nexport default function bufferWhile(obs, fn, {flushOnEnd = true} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {fn: fn || id, flushOnEnd});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({count, flushOnEnd}) {\n    this._count = count;\n    this._flushOnEnd = flushOnEnd;\n    this._buff = [];\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null && this._buff.length !== 0) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handleValue(x) {\n    this._buff.push(x);\n    if (this._buff.length >= this._count) {\n      this._flush();\n    }\n  },\n\n  _handleEnd() {\n    if (this._flushOnEnd) {\n      this._flush();\n    }\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('bufferWithCount', mixin);\nconst P = createProperty('bufferWithCount', mixin);\n\nexport default function bufferWhile(obs, count, {flushOnEnd = true} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {count: count, flushOnEnd});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({wait, count, flushOnEnd}) {\n    this._wait = wait;\n    this._count = count;\n    this._flushOnEnd = flushOnEnd;\n    this._intervalId = null;\n    this._$onTick = () => this._flush();\n    this._buff = [];\n  },\n\n  _free() {\n    this._$onTick = null;\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handleValue(x) {\n    this._buff.push(x);\n    if (this._buff.length >= this._count) {\n      clearInterval(this._intervalId);\n      this._flush();\n      this._intervalId = setInterval(this._$onTick, this._wait);\n    }\n  },\n\n  _handleEnd() {\n    if (this._flushOnEnd && this._buff.length !== 0) {\n      this._flush();\n    }\n    this._emitEnd();\n  },\n\n  _onActivation() {\n    this._source.onAny(this._$handleAny); // copied from patterns/one-source\n    this._intervalId = setInterval(this._$onTick, this._wait);\n  },\n\n  _onDeactivation() {\n    if (this._intervalId !== null) {\n      clearInterval(this._intervalId);\n      this._intervalId = null;\n    }\n    this._source.offAny(this._$handleAny); // copied from patterns/one-source\n  }\n\n};\n\n\nconst S = createStream('bufferWithTimeOrCount', mixin);\nconst P = createProperty('bufferWithTimeOrCount', mixin);\n\nexport default function bufferWithTimeOrCount(obs, wait, count, {flushOnEnd = true} = {}) {\n  return new (obs._ofSameType(S, P))(obs, {wait, count, flushOnEnd});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nfunction xformForObs(obs) {\n  return {\n\n    '@@transducer/step'(res, input) {\n      obs._emitValue(input);\n      return null;\n    },\n\n    '@@transducer/result'() {\n      obs._emitEnd();\n      return null;\n    }\n\n  };\n}\n\nconst mixin = {\n\n  _init({transducer}) {\n    this._xform = transducer(xformForObs(this));\n  },\n\n  _free() {\n    this._xform = null;\n  },\n\n  _handleValue(x) {\n    if (this._xform['@@transducer/step'](null, x) !== null) {\n      this._xform['@@transducer/result'](null);\n    }\n  },\n\n  _handleEnd() {\n    this._xform['@@transducer/result'](null);\n  }\n\n};\n\nconst S = createStream('transduce', mixin);\nconst P = createProperty('transduce', mixin);\n\n\nexport default function transduce(obs, transducer) {\n  return new (obs._ofSameType(S, P))(obs, {transducer});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\nimport emitter from '../emitter';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._handler = fn;\n    this._emitter = emitter(this);\n  },\n\n  _free() {\n    this._handler = null;\n    this._emitter = null;\n  },\n\n  _handleAny(event) {\n    this._handler(this._emitter, event);\n  }\n\n};\n\nconst S = createStream('withHandler', mixin);\nconst P = createProperty('withHandler', mixin);\n\n\n\nexport default function withHandler(obs, fn) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import Stream from '../stream';\nimport {VALUE, ERROR, NOTHING} from '../constants';\nimport {inherit} from '../utils/objects';\nimport {concat, fillArray} from '../utils/collections';\nimport {spread} from '../utils/functions';\nimport never from '../primary/never';\n\n\n\nfunction defaultErrorsCombinator(errors) {\n  let latestError;\n  for (let i = 0; i < errors.length; i++) {\n    if (errors[i] !== undefined) {\n      if (latestError === undefined || latestError.index < errors[i].index) {\n        latestError = errors[i];\n      }\n    }\n  }\n  return latestError.error;\n}\n\nfunction Combine(active, passive, combinator) {\n  Stream.call(this);\n  this._activeCount = active.length;\n  this._sources = concat(active, passive);\n  this._combinator = combinator ? spread(combinator, this._sources.length) : (x => x);\n  this._aliveCount = 0;\n  this._latestValues = new Array(this._sources.length);\n  this._latestErrors = new Array(this._sources.length);\n  fillArray(this._latestValues, NOTHING);\n  this._emitAfterActivation = false;\n  this._endAfterActivation = false;\n  this._latestErrorIndex = 0;\n\n  this._$handlers = [];\n  for (let i = 0; i < this._sources.length; i++) {\n    this._$handlers.push((event) => this._handleAny(i, event));\n  }\n\n}\n\n\ninherit(Combine, Stream, {\n\n  _name: 'combine',\n\n  _onActivation() {\n    this._aliveCount = this._activeCount;\n\n    // we need to suscribe to _passive_ sources before _active_\n    // (see https://github.com/rpominov/kefir/issues/98)\n    for (let i = this._activeCount; i < this._sources.length; i++) {\n      this._sources[i].onAny(this._$handlers[i]);\n    }\n    for (let i = 0; i < this._activeCount; i++) {\n      this._sources[i].onAny(this._$handlers[i]);\n    }\n\n    if (this._emitAfterActivation) {\n      this._emitAfterActivation = false;\n      this._emitIfFull();\n    }\n    if (this._endAfterActivation) {\n      this._emitEnd();\n    }\n  },\n\n  _onDeactivation() {\n    let length = this._sources.length,\n        i;\n    for (i = 0; i < length; i++) {\n      this._sources[i].offAny(this._$handlers[i]);\n    }\n  },\n\n  _emitIfFull() {\n    let hasAllValues = true;\n    let hasErrors = false;\n    let length = this._latestValues.length;\n    let valuesCopy = new Array(length);\n    let errorsCopy = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n      valuesCopy[i] = this._latestValues[i];\n      errorsCopy[i] = this._latestErrors[i];\n\n      if (valuesCopy[i] === NOTHING) {\n        hasAllValues = false;\n      }\n\n      if (errorsCopy[i] !== undefined) {\n        hasErrors = true;\n      }\n    }\n\n    if (hasAllValues) {\n      const combinator = this._combinator;\n      this._emitValue(combinator(valuesCopy));\n    }\n    if (hasErrors) {\n      this._emitError(defaultErrorsCombinator(errorsCopy));\n    }\n  },\n\n  _handleAny(i, event) {\n\n    if (event.type === VALUE || event.type === ERROR) {\n\n      if (event.type === VALUE) {\n        this._latestValues[i] = event.value;\n        this._latestErrors[i] = undefined;\n      }\n      if (event.type === ERROR) {\n        this._latestValues[i] = NOTHING;\n        this._latestErrors[i] = {\n          index: this._latestErrorIndex++,\n          error: event.value\n        };\n      }\n\n      if (i < this._activeCount) {\n        if (this._activating) {\n          this._emitAfterActivation = true;\n        } else {\n          this._emitIfFull();\n        }\n      }\n\n    } else { // END\n\n      if (i < this._activeCount) {\n        this._aliveCount--;\n        if (this._aliveCount === 0) {\n          if (this._activating) {\n            this._endAfterActivation = true;\n          } else {\n            this._emitEnd();\n          }\n        }\n      }\n\n    }\n  },\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._sources = null;\n    this._latestValues = null;\n    this._latestErrors = null;\n    this._combinator = null;\n    this._$handlers = null;\n  }\n\n});\n\n\nexport default function combine(active, passive = [], combinator) {\n  if (typeof passive === 'function') {\n    combinator = passive;\n    passive = [];\n  }\n  return active.length === 0 ? never() : new Combine(active, passive, combinator);\n}\n","import Stream from '../stream';\nimport {VALUE, ERROR, END} from '../constants';\nimport {inherit} from '../utils/objects';\nimport {map, cloneArray} from '../utils/collections';\nimport {spread} from '../utils/functions';\nimport never from '../primary/never';\n\n\nconst isArray = Array.isArray || function(xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\nfunction Zip(sources, combinator) {\n  Stream.call(this);\n\n  this._buffers = map(sources, (source) => isArray(source) ? cloneArray(source) : []);\n  this._sources = map(sources, (source) => isArray(source) ? never() : source);\n\n  this._combinator = combinator ? spread(combinator, this._sources.length) : (x => x);\n  this._aliveCount = 0;\n\n  this._$handlers = [];\n  for (let i = 0; i < this._sources.length; i++) {\n    this._$handlers.push((event) => this._handleAny(i, event));\n  }\n}\n\n\ninherit(Zip, Stream, {\n\n  _name: 'zip',\n\n  _onActivation() {\n\n    // if all sources are arrays\n    while (this._isFull()) {\n      this._emit();\n    }\n\n    const length = this._sources.length;\n    this._aliveCount = length;\n    for (let i = 0; i < length && this._active; i++) {\n      this._sources[i].onAny(this._$handlers[i]);\n    }\n  },\n\n  _onDeactivation() {\n    for (let i = 0; i < this._sources.length; i++) {\n      this._sources[i].offAny(this._$handlers[i]);\n    }\n  },\n\n  _emit() {\n    let values = new Array(this._buffers.length);\n    for (let i = 0; i < this._buffers.length; i++) {\n      values[i] = this._buffers[i].shift();\n    }\n    const combinator = this._combinator;\n    this._emitValue(combinator(values));\n  },\n\n  _isFull() {\n    for (let i = 0; i < this._buffers.length; i++) {\n      if (this._buffers[i].length === 0) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  _handleAny(i, event) {\n    if (event.type === VALUE) {\n      this._buffers[i].push(event.value);\n      if (this._isFull()) {\n        this._emit();\n      }\n    }\n    if (event.type === ERROR) {\n      this._emitError(event.value);\n    }\n    if (event.type === END) {\n      this._aliveCount--;\n      if (this._aliveCount === 0) {\n        this._emitEnd();\n      }\n    }\n  },\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._sources = null;\n    this._buffers = null;\n    this._combinator = null;\n    this._$handlers = null;\n  }\n\n});\n\n\n\nexport default function zip(observables, combinator /* Function | falsey */) {\n  return observables.length === 0 ? never() : new Zip(observables, combinator);\n}\n","import Stream from '../stream';\nimport {VALUE, ERROR} from '../constants';\nimport {inherit} from '../utils/objects';\nimport {concat, forEach, findByPred, find, remove, cloneArray} from '../utils/collections';\n\nconst id = (x => x);\n\nfunction AbstractPool({queueLim = 0, concurLim = -1, drop = 'new'} = {}) {\n  Stream.call(this);\n\n  this._queueLim = queueLim < 0 ? -1 : queueLim;\n  this._concurLim = concurLim < 0 ? -1 : concurLim;\n  this._drop = drop;\n  this._queue = [];\n  this._curSources = [];\n  this._$handleSubAny = (event) => this._handleSubAny(event);\n  this._$endHandlers = [];\n  this._currentlyAdding = null;\n\n  if (this._concurLim === 0) {\n    this._emitEnd();\n  }\n}\n\ninherit(AbstractPool, Stream, {\n\n  _name: 'abstractPool',\n\n  _add(obj, toObs /* Function | falsey */) {\n    toObs = toObs || id;\n    if (this._concurLim === -1 || this._curSources.length < this._concurLim) {\n      this._addToCur(toObs(obj));\n    } else {\n      if (this._queueLim === -1 || this._queue.length < this._queueLim) {\n        this._addToQueue(toObs(obj));\n      } else if (this._drop === 'old') {\n        this._removeOldest();\n        this._add(obj, toObs);\n      }\n    }\n  },\n\n  _addAll(obss) {\n    forEach(obss, (obs) => this._add(obs));\n  },\n\n  _remove(obs) {\n    if (this._removeCur(obs) === -1) {\n      this._removeQueue(obs);\n    }\n  },\n\n  _addToQueue(obs) {\n    this._queue = concat(this._queue, [obs]);\n  },\n\n  _addToCur(obs) {\n    if (this._active) {\n\n      // HACK:\n      //\n      // We have two optimizations for cases when `obs` is ended. We don't want\n      // to add such observable to the list, but only want to emit events\n      // from it (if it has some).\n      //\n      // Instead of this hacks, we could just did following,\n      // but it would be 5-8 times slower:\n      //\n      //     this._curSources = concat(this._curSources, [obs]);\n      //     this._subscribe(obs);\n      //\n\n      // #1\n      // This one for cases when `obs` already ended\n      // e.g., Kefir.constant() or Kefir.never()\n      if (!obs._alive) {\n        if (obs._currentEvent) {\n          this._emit(obs._currentEvent.type, obs._currentEvent.value);\n        }\n        return;\n      }\n\n      // #2\n      // This one is for cases when `obs` going to end synchronously on\n      // first subscriber e.g., Kefir.stream(em => {em.emit(1); em.end()})\n      this._currentlyAdding = obs;\n      obs.onAny(this._$handleSubAny);\n      this._currentlyAdding = null;\n      if (obs._alive) {\n        this._curSources = concat(this._curSources, [obs]);\n        if (this._active) {\n          this._subToEnd(obs);\n        }\n      }\n\n    } else {\n      this._curSources = concat(this._curSources, [obs]);\n    }\n  },\n\n  _subToEnd(obs) {\n    const onEnd = () => this._removeCur(obs);\n    this._$endHandlers.push({obs: obs, handler: onEnd});\n    obs.onEnd(onEnd);\n  },\n\n  _subscribe(obs) {\n    obs.onAny(this._$handleSubAny);\n\n    // it can become inactive in responce of subscribing to `obs.onAny` above\n    if (this._active) {\n      this._subToEnd(obs);\n    }\n  },\n\n  _unsubscribe(obs) {\n    obs.offAny(this._$handleSubAny);\n\n    let onEndI = findByPred(this._$endHandlers, (obj) => obj.obs === obs);\n    if (onEndI !== -1) {\n      obs.offEnd(this._$endHandlers[onEndI].handler);\n      this._$endHandlers.splice(onEndI, 1);\n    }\n  },\n\n  _handleSubAny(event) {\n    if (event.type === VALUE) {\n      this._emitValue(event.value);\n    } else if (event.type === ERROR) {\n      this._emitError(event.value);\n    }\n  },\n\n  _removeQueue(obs) {\n    let index = find(this._queue, obs);\n    this._queue = remove(this._queue, index);\n    return index;\n  },\n\n  _removeCur(obs) {\n    if (this._active) {\n      this._unsubscribe(obs);\n    }\n    let index = find(this._curSources, obs);\n    this._curSources = remove(this._curSources, index);\n    if (index !== -1) {\n      if (this._queue.length !== 0) {\n        this._pullQueue();\n      } else if (this._curSources.length === 0) {\n        this._onEmpty();\n      }\n    }\n    return index;\n  },\n\n  _removeOldest() {\n    this._removeCur(this._curSources[0]);\n  },\n\n  _pullQueue() {\n    if (this._queue.length !== 0) {\n      this._queue = cloneArray(this._queue);\n      this._addToCur(this._queue.shift());\n    }\n  },\n\n  _onActivation() {\n    for (let i = 0, sources = this._curSources; i < sources.length && this._active; i++) {\n      this._subscribe(sources[i]);\n    }\n  },\n\n  _onDeactivation() {\n    for (let i = 0, sources = this._curSources; i < sources.length; i++) {\n      this._unsubscribe(sources[i]);\n    }\n    if (this._currentlyAdding !== null) {\n      this._unsubscribe(this._currentlyAdding);\n    }\n  },\n\n  _isEmpty() {\n    return this._curSources.length === 0;\n  },\n\n  _onEmpty() {},\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._queue = null;\n    this._curSources = null;\n    this._$handleSubAny = null;\n    this._$endHandlers = null;\n  }\n\n});\n\nexport default AbstractPool;\n","import {inherit} from '../utils/objects';\nimport AbstractPool from './abstract-pool';\nimport never from '../primary/never';\n\n\nfunction Merge(sources) {\n  AbstractPool.call(this);\n  this._addAll(sources);\n  this._initialised = true;\n}\n\ninherit(Merge, AbstractPool, {\n\n  _name: 'merge',\n\n  _onEmpty() {\n    if (this._initialised) {\n      this._emitEnd();\n    }\n  }\n\n});\n\nexport default function merge(observables) {\n  return observables.length === 0 ? never() : new Merge(observables);\n}\n","import {inherit} from '../utils/objects';\nimport Stream from '../stream';\nimport {END} from '../constants';\n\n\n\nfunction S(generator) {\n  Stream.call(this);\n  this._generator = generator;\n  this._source = null;\n  this._inLoop = false;\n  this._iteration = 0;\n  this._$handleAny = (event) => this._handleAny(event);\n}\n\ninherit(S, Stream, {\n\n  _name: 'repeat',\n\n  _handleAny(event) {\n    if (event.type === END) {\n      this._source = null;\n      this._getSource();\n    } else {\n      this._emit(event.type, event.value);\n    }\n  },\n\n  _getSource() {\n    if (!this._inLoop) {\n      this._inLoop = true;\n      const generator = this._generator;\n      while (this._source === null && this._alive && this._active) {\n        this._source = generator(this._iteration++);\n        if (this._source) {\n          this._source.onAny(this._$handleAny);\n        } else {\n          this._emitEnd();\n        }\n      }\n      this._inLoop = false;\n    }\n  },\n\n  _onActivation() {\n    if (this._source) {\n      this._source.onAny(this._$handleAny);\n    } else {\n      this._getSource();\n    }\n  },\n\n  _onDeactivation() {\n    if (this._source) {\n      this._source.offAny(this._$handleAny);\n    }\n  },\n\n  _clear() {\n    Stream.prototype._clear.call(this);\n    this._generator = null;\n    this._source = null;\n    this._$handleAny = null;\n  }\n\n});\n\n\nexport default function(generator) {\n  return new S(generator);\n}\n","import repeat from './repeat';\n\nexport default function concat(observables) {\n  return repeat(function(index) {\n    return observables.length > index ? observables[index] : false;\n  }).setName('concat');\n}\n","import {inherit} from '../utils/objects';\nimport AbstractPool from './abstract-pool';\n\n\n\nfunction Pool() {\n  AbstractPool.call(this);\n}\n\ninherit(Pool, AbstractPool, {\n\n  _name: 'pool',\n\n  plug(obs) {\n    this._add(obs);\n    return this;\n  },\n\n  unplug(obs) {\n    this._remove(obs);\n    return this;\n  }\n\n});\n\nexport default Pool;\n","import {VALUE, ERROR, END} from '../constants';\nimport {inherit} from '../utils/objects';\nimport AbstractPool from './abstract-pool';\n\n\n\n\nfunction FlatMap(source, fn, options) {\n  AbstractPool.call(this, options);\n  this._source = source;\n  this._fn = fn;\n  this._mainEnded = false;\n  this._lastCurrent = null;\n  this._$handleMain = (event) => this._handleMain(event);\n}\n\ninherit(FlatMap, AbstractPool, {\n\n  _onActivation() {\n    AbstractPool.prototype._onActivation.call(this);\n    if (this._active) {\n      this._source.onAny(this._$handleMain);\n    }\n  },\n\n  _onDeactivation() {\n    AbstractPool.prototype._onDeactivation.call(this);\n    this._source.offAny(this._$handleMain);\n    this._hadNoEvSinceDeact = true;\n  },\n\n  _handleMain(event) {\n\n    if (event.type === VALUE) {\n      // Is latest value before deactivation survived, and now is 'current' on this activation?\n      // We don't want to handle such values, to prevent to constantly add\n      // same observale on each activation/deactivation when our main source\n      // is a `Kefir.conatant()` for example.\n      let sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;\n      if (!sameCurr) {\n        this._add(event.value, this._fn);\n      }\n      this._lastCurrent = event.value;\n      this._hadNoEvSinceDeact = false;\n    }\n\n    if (event.type === ERROR) {\n      this._emitError(event.value);\n    }\n\n    if (event.type === END) {\n      if (this._isEmpty()) {\n        this._emitEnd();\n      } else {\n        this._mainEnded = true;\n      }\n    }\n\n  },\n\n  _onEmpty() {\n    if (this._mainEnded) {\n      this._emitEnd();\n    }\n  },\n\n  _clear() {\n    AbstractPool.prototype._clear.call(this);\n    this._source = null;\n    this._lastCurrent = null;\n    this._$handleMain = null;\n  }\n\n});\n\n\n\n\nexport default FlatMap;\n","import {VALUE, ERROR, END} from '../constants';\nimport {inherit} from '../utils/objects';\nimport FlatMap from './flat-map';\n\nfunction FlatMapErrors(source, fn) {\n  FlatMap.call(this, source, fn);\n}\n\ninherit(FlatMapErrors, FlatMap, {\n\n  // Same as in FlatMap, only VALUE/ERROR flipped\n  _handleMain(event) {\n\n    if (event.type === ERROR) {\n      let sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;\n      if (!sameCurr) {\n        this._add(event.value, this._fn);\n      }\n      this._lastCurrent = event.value;\n      this._hadNoEvSinceDeact = false;\n    }\n\n    if (event.type === VALUE) {\n      this._emitValue(event.value);\n    }\n\n    if (event.type === END) {\n      if (this._isEmpty()) {\n        this._emitEnd();\n      } else {\n        this._mainEnded = true;\n      }\n    }\n\n  }\n\n\n\n});\n\nexport default FlatMapErrors;\n","import Stream from '../stream';\nimport Property from '../property';\nimport {inherit} from '../utils/objects';\nimport {VALUE, ERROR, END, NOTHING} from '../constants';\n\n\n\n\n\nfunction createConstructor(BaseClass, name) {\n  return function AnonymousObservable(primary, secondary, options) {\n    BaseClass.call(this);\n    this._primary = primary;\n    this._secondary = secondary;\n    this._name = `${primary._name}.${name}`;\n    this._lastSecondary = NOTHING;\n    this._$handleSecondaryAny = (event) => this._handleSecondaryAny(event);\n    this._$handlePrimaryAny = (event) => this._handlePrimaryAny(event);\n    this._init(options);\n  }\n}\n\nfunction createClassMethods(BaseClass) {\n  return {\n    _init() {},\n    _free() {},\n\n    _handlePrimaryValue(x) {\n      this._emitValue(x);\n    },\n    _handlePrimaryError(x) {\n      this._emitError(x);\n    },\n    _handlePrimaryEnd() {\n      this._emitEnd();\n    },\n\n    _handleSecondaryValue(x) {\n      this._lastSecondary = x;\n    },\n    _handleSecondaryError(x) {\n      this._emitError(x);\n    },\n    _handleSecondaryEnd() {},\n\n    _handlePrimaryAny(event) {\n      switch (event.type) {\n        case VALUE: return this._handlePrimaryValue(event.value);\n        case ERROR: return this._handlePrimaryError(event.value);\n        case END: return this._handlePrimaryEnd(event.value);\n      }\n    },\n    _handleSecondaryAny(event) {\n      switch (event.type) {\n        case VALUE: return this._handleSecondaryValue(event.value);\n        case ERROR: return this._handleSecondaryError(event.value);\n        case END:\n          this._handleSecondaryEnd(event.value);\n          this._removeSecondary();\n      }\n    },\n\n    _removeSecondary() {\n      if (this._secondary !== null) {\n        this._secondary.offAny(this._$handleSecondaryAny);\n        this._$handleSecondaryAny = null;\n        this._secondary = null;\n      }\n    },\n\n    _onActivation() {\n      if (this._secondary !== null) {\n        this._secondary.onAny(this._$handleSecondaryAny);\n      }\n      if (this._active) {\n        this._primary.onAny(this._$handlePrimaryAny);\n      }\n    },\n    _onDeactivation() {\n      if (this._secondary !== null) {\n        this._secondary.offAny(this._$handleSecondaryAny);\n      }\n      this._primary.offAny(this._$handlePrimaryAny);\n    },\n\n    _clear() {\n      BaseClass.prototype._clear.call(this);\n      this._primary = null;\n      this._secondary = null;\n      this._lastSecondary = null;\n      this._$handleSecondaryAny = null;\n      this._$handlePrimaryAny = null;\n      this._free();\n    }\n\n  };\n}\n\n\n\nfunction createStream(name, mixin) {\n  const S = createConstructor(Stream, name);\n  inherit(S, Stream, createClassMethods(Stream), mixin);\n  return S;\n}\n\n\nfunction createProperty(name, mixin) {\n  const P = createConstructor(Property, name);\n  inherit(P, Property, createClassMethods(Property), mixin);\n  return P;\n}\n\n\nexport {createStream, createProperty};\n\n","import {createStream, createProperty} from '../patterns/two-sources';\nimport {NOTHING} from '../constants';\n\n\nconst mixin = {\n\n  _handlePrimaryValue(x) {\n    if (this._lastSecondary !== NOTHING && this._lastSecondary) {\n      this._emitValue(x);\n    }\n  },\n\n  _handleSecondaryEnd() {\n    if (this._lastSecondary === NOTHING || !this._lastSecondary) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('filterBy', mixin);\nconst P = createProperty('filterBy', mixin);\n\n\nexport default function filterBy(primary, secondary) {\n  return new (primary._ofSameType(S, P))(primary, secondary);\n}\n\n","import combine from '../many-sources/combine';\n\nconst id2 = (_, x) => x;\n\nexport default function sampledBy(passive, active, combinator) {\n  let _combinator = combinator ? ((a, b) => combinator(b, a)) : id2;\n  return combine([active], [passive], _combinator).setName(passive, 'sampledBy');\n}\n","import {createStream, createProperty} from '../patterns/two-sources';\nimport {NOTHING} from '../constants';\n\n\nconst mixin = {\n\n  _handlePrimaryValue(x) {\n    if (this._lastSecondary !== NOTHING) {\n      this._emitValue(x);\n    }\n  },\n\n  _handleSecondaryEnd() {\n    if (this._lastSecondary === NOTHING) {\n      this._emitEnd();\n    }\n  }\n\n};\n\nconst S = createStream('skipUntilBy', mixin);\nconst P = createProperty('skipUntilBy', mixin);\n\n\nexport default function skipUntilBy(primary, secondary) {\n  return new (primary._ofSameType(S, P))(primary, secondary);\n}\n\n","import {createStream, createProperty} from '../patterns/two-sources';\n\nconst mixin = {\n\n  _handleSecondaryValue() {\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('takeUntilBy', mixin);\nconst P = createProperty('takeUntilBy', mixin);\n\n\nexport default function takeUntilBy(primary, secondary) {\n  return new (primary._ofSameType(S, P))(primary, secondary);\n}\n\n","import {createStream, createProperty} from '../patterns/two-sources';\n\n\nconst mixin = {\n\n  _init({flushOnEnd = true} = {}) {\n    this._buff = [];\n    this._flushOnEnd = flushOnEnd;\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handlePrimaryEnd() {\n    if (this._flushOnEnd) {\n      this._flush();\n    }\n    this._emitEnd();\n  },\n\n  _onActivation() {\n    this._primary.onAny(this._$handlePrimaryAny);\n    if (this._alive && this._secondary !== null) {\n      this._secondary.onAny(this._$handleSecondaryAny);\n    }\n  },\n\n  _handlePrimaryValue(x) {\n    this._buff.push(x);\n  },\n\n  _handleSecondaryValue() {\n    this._flush();\n  },\n\n  _handleSecondaryEnd() {\n    if (!this._flushOnEnd) {\n      this._emitEnd();\n    }\n  }\n\n};\n\n\nconst S = createStream('bufferBy', mixin);\nconst P = createProperty('bufferBy', mixin);\n\n\nexport default function bufferBy(primary, secondary, options /* optional */) {\n  return new (primary._ofSameType(S, P))(primary, secondary, options);\n}\n","import {createStream, createProperty} from '../patterns/two-sources';\nimport {NOTHING} from '../constants';\n\n\nconst mixin = {\n\n  _init({flushOnEnd = true, flushOnChange = false} = {}) {\n    this._buff = [];\n    this._flushOnEnd = flushOnEnd;\n    this._flushOnChange = flushOnChange;\n  },\n\n  _free() {\n    this._buff = null;\n  },\n\n  _flush() {\n    if (this._buff !== null) {\n      this._emitValue(this._buff);\n      this._buff = [];\n    }\n  },\n\n  _handlePrimaryEnd() {\n    if (this._flushOnEnd) {\n      this._flush();\n    }\n    this._emitEnd();\n  },\n\n  _handlePrimaryValue(x) {\n    this._buff.push(x);\n    if (this._lastSecondary !== NOTHING && !this._lastSecondary) {\n      this._flush();\n    }\n  },\n\n  _handleSecondaryEnd() {\n    if (!this._flushOnEnd && (this._lastSecondary === NOTHING || this._lastSecondary)) {\n      this._emitEnd();\n    }\n  },\n\n  _handleSecondaryValue(x) {\n    if (this._flushOnChange && !x) {\n      this._flush();\n    }\n\n    // from default _handleSecondaryValue\n    this._lastSecondary = x;\n  }\n\n};\n\n\nconst S = createStream('bufferWhileBy', mixin);\nconst P = createProperty('bufferWhileBy', mixin);\n\n\nexport default function bufferWhileBy(primary, secondary, options /* optional */) {\n  return new (primary._ofSameType(S, P))(primary, secondary, options);\n}\n","import merge from '../many-sources/merge';\nimport map from '../one-source/map';\nimport skipDuplicates from '../one-source/skip-duplicates';\nimport toProperty from '../one-source/to-property';\n\nconst f = () => false;\nconst t = () => true;\n\nexport default function awaiting(a, b) {\n  let result = merge([map(a, t), map(b, f)]);\n  result = skipDuplicates(result);\n  result = toProperty(result, f);\n  return result.setName(a, 'awaiting');\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleValue(x) {\n    const fn = this._fn;\n    let result = fn(x);\n    if (result.convert) {\n      this._emitError(result.error);\n    } else {\n      this._emitValue(x);\n    }\n  }\n\n};\n\nconst S = createStream('valuesToErrors', mixin);\nconst P = createProperty('valuesToErrors', mixin);\n\n\nconst defFn = x => ({convert: true, error: x});\n\nexport default function valuesToErrors(obs, fn = defFn) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _init({fn}) {\n    this._fn = fn;\n  },\n\n  _free() {\n    this._fn = null;\n  },\n\n  _handleError(x) {\n    const fn = this._fn;\n    const result = fn(x);\n    if (result.convert) {\n      this._emitValue(result.value);\n    } else {\n      this._emitError(x);\n    }\n  }\n\n};\n\nconst S = createStream('errorsToValues', mixin);\nconst P = createProperty('errorsToValues', mixin);\n\n\nconst defFn = x => ({convert: true, value: x});\n\nexport default function errorsToValues(obs, fn = defFn) {\n  return new (obs._ofSameType(S, P))(obs, {fn});\n}\n","import {createStream, createProperty} from '../patterns/one-source';\n\nconst mixin = {\n\n  _handleError(x) {\n    this._emitError(x);\n    this._emitEnd();\n  }\n\n};\n\nconst S = createStream('endOnError', mixin);\nconst P = createProperty('endOnError', mixin);\n\n\nexport default function endOnError(obs) {\n  return new (obs._ofSameType(S, P))(obs);\n}\n","import Observable from './observable';\nimport Stream from './stream';\nimport Property from './property';\n\n\n\n// Create a stream\n// -----------------------------------------------------------------------------\n\n// () -> Stream\nimport never from './primary/never';\n\n// (number, any) -> Stream\nimport later from './time-based/later';\n\n// (number, any) -> Stream\nimport interval from './time-based/interval';\n\n// (number, Array<any>) -> Stream\nimport sequentially from './time-based/sequentially';\n\n// (number, Function) -> Stream\nimport fromPoll from './time-based/from-poll';\n\n// (number, Function) -> Stream\nimport withInterval from './time-based/with-interval';\n\n// (Function) -> Stream\nimport fromCallback from './primary/from-callback';\n\n// (Function) -> Stream\nimport fromNodeCallback from './primary/from-node-callback';\n\n// Target = {addEventListener, removeEventListener}|{addListener, removeListener}|{on, off}\n// (Target, string, Function|undefined) -> Stream\nimport fromEvents from './primary/from-events';\n\n// (Function) -> Stream\nimport stream from './primary/stream';\n\n\n\n// Create a property\n// -----------------------------------------------------------------------------\n\n// (any) -> Property\nimport constant from './primary/constant';\n\n// (any) -> Property\nimport constantError from './primary/constant-error';\n\n\n\n// Convert observables\n// -----------------------------------------------------------------------------\n\n// (Stream|Property, Function|undefined) -> Property\nimport toProperty from './one-source/to-property';\nObservable.prototype.toProperty = function(fn) {\n  return toProperty(this, fn);\n};\n\n// (Stream|Property) -> Stream\nimport changes from './one-source/changes';\nObservable.prototype.changes = function() {\n  return changes(this);\n};\n\n\n\n// Interoperation with other implimentations\n// -----------------------------------------------------------------------------\n\n// (Promise) -> Property\nimport fromPromise from './interop/from-promise';\n\n// (Stream|Property, Function|undefined) -> Promise\nimport toPromise from './interop/to-promise';\nObservable.prototype.toPromise = function(Promise) {\n  return toPromise(this, Promise);\n};\n\n// (ESObservable) -> Stream\nimport fromESObservable from './interop/from-es-observable';\n\n// (Stream|Property) -> ES7 Observable\nimport toESObservable from './interop/to-es-observable';\nObservable.prototype.toESObservable = toESObservable;\nimport symbol from './utils/symbol'\nObservable.prototype[symbol('observable')] = toESObservable;\n\n\n\n// Modify an observable\n// -----------------------------------------------------------------------------\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport map from './one-source/map';\nObservable.prototype.map = function(fn) {\n  return map(this, fn);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport filter from './one-source/filter';\nObservable.prototype.filter = function(fn) {\n  return filter(this, fn);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport take from './one-source/take';\nObservable.prototype.take = function(n) {\n  return take(this, n);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport takeErrors from './one-source/take-errors';\nObservable.prototype.takeErrors = function(n) {\n  return takeErrors(this, n);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport takeWhile from './one-source/take-while';\nObservable.prototype.takeWhile = function(fn) {\n  return takeWhile(this, fn);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport last from './one-source/last';\nObservable.prototype.last = function() {\n  return last(this);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport skip from './one-source/skip';\nObservable.prototype.skip = function(n) {\n  return skip(this, n);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport skipWhile from './one-source/skip-while';\nObservable.prototype.skipWhile = function(fn) {\n  return skipWhile(this, fn);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport skipDuplicates from './one-source/skip-duplicates';\nObservable.prototype.skipDuplicates = function(fn) {\n  return skipDuplicates(this, fn);\n};\n\n// (Stream, Function|falsey, any|undefined) -> Stream\n// (Property, Function|falsey, any|undefined) -> Property\nimport diff from './one-source/diff';\nObservable.prototype.diff = function(fn, seed) {\n  return diff(this, fn, seed);\n};\n\n// (Stream|Property, Function, any|undefined) -> Property\nimport scan from './one-source/scan';\nObservable.prototype.scan = function(fn, seed) {\n  return scan(this, fn, seed);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport flatten from './one-source/flatten';\nObservable.prototype.flatten = function(fn) {\n  return flatten(this, fn);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport delay from './one-source/delay';\nObservable.prototype.delay = function(wait) {\n  return delay(this, wait);\n};\n\n// Options = {leading: boolean|undefined, trailing: boolean|undefined}\n// (Stream, number, Options|undefined) -> Stream\n// (Property, number, Options|undefined) -> Property\nimport throttle from './one-source/throttle';\nObservable.prototype.throttle = function(wait, options) {\n  return throttle(this, wait, options);\n};\n\n// Options = {immediate: boolean|undefined}\n// (Stream, number, Options|undefined) -> Stream\n// (Property, number, Options|undefined) -> Property\nimport debounce from './one-source/debounce';\nObservable.prototype.debounce = function(wait, options) {\n  return debounce(this, wait, options);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport mapErrors from './one-source/map-errors';\nObservable.prototype.mapErrors = function(fn) {\n  return mapErrors(this, fn);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport filterErrors from './one-source/filter-errors';\nObservable.prototype.filterErrors = function(fn) {\n  return filterErrors(this, fn);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport ignoreValues from './one-source/ignore-values';\nObservable.prototype.ignoreValues = function() {\n  return ignoreValues(this);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport ignoreErrors from './one-source/ignore-errors';\nObservable.prototype.ignoreErrors = function() {\n  return ignoreErrors(this);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport ignoreEnd from './one-source/ignore-end';\nObservable.prototype.ignoreEnd = function() {\n  return ignoreEnd(this);\n};\n\n// (Stream, Function) -> Stream\n// (Property, Function) -> Property\nimport beforeEnd from './one-source/before-end';\nObservable.prototype.beforeEnd = function(fn) {\n  return beforeEnd(this, fn);\n};\n\n// (Stream, number, number|undefined) -> Stream\n// (Property, number, number|undefined) -> Property\nimport slidingWindow from './one-source/sliding-window';\nObservable.prototype.slidingWindow = function(max, min) {\n  return slidingWindow(this, max, min);\n};\n\n// Options = {flushOnEnd: boolean|undefined}\n// (Stream, Function|falsey, Options|undefined) -> Stream\n// (Property, Function|falsey, Options|undefined) -> Property\nimport bufferWhile from './one-source/buffer-while';\nObservable.prototype.bufferWhile = function(fn, options) {\n  return bufferWhile(this, fn, options);\n};\n\n// (Stream, number) -> Stream\n// (Property, number) -> Property\nimport bufferWithCount from './one-source/buffer-with-count';\nObservable.prototype.bufferWithCount = function(count, options) {\n  return bufferWithCount(this, count, options);\n};\n\n// Options = {flushOnEnd: boolean|undefined}\n// (Stream, number, number, Options|undefined) -> Stream\n// (Property, number, number, Options|undefined) -> Property\nimport bufferWithTimeOrCount from './one-source/buffer-with-time-or-count';\nObservable.prototype.bufferWithTimeOrCount = function(wait, count, options) {\n  return bufferWithTimeOrCount(this, wait, count, options);\n};\n\n// (Stream, Function) -> Stream\n// (Property, Function) -> Property\nimport transduce from './one-source/transduce';\nObservable.prototype.transduce = function(transducer) {\n  return transduce(this, transducer);\n};\n\n// (Stream, Function) -> Stream\n// (Property, Function) -> Property\nimport withHandler from './one-source/with-handler';\nObservable.prototype.withHandler = function(fn) {\n  return withHandler(this, fn);\n};\n\n\n\n// Combine observables\n// -----------------------------------------------------------------------------\n\n// (Array<Stream|Property>, Function|undefiend) -> Stream\n// (Array<Stream|Property>, Array<Stream|Property>, Function|undefiend) -> Stream\nimport combine from './many-sources/combine';\nObservable.prototype.combine = function(other, combinator) {\n  return combine([this, other], combinator);\n};\n\n// (Array<Stream|Property>, Function|undefiend) -> Stream\nimport zip from './many-sources/zip';\nObservable.prototype.zip = function(other, combinator) {\n  return zip([this, other], combinator);\n};\n\n// (Array<Stream|Property>) -> Stream\nimport merge from './many-sources/merge';\nObservable.prototype.merge = function(other) {\n  return merge([this, other]);\n};\n\n// (Array<Stream|Property>) -> Stream\nimport concat from './many-sources/concat';\nObservable.prototype.concat = function(other) {\n  return concat([this, other]);\n};\n\n// () -> Pool\nimport Pool from './many-sources/pool';\nconst pool = function() {\n  return new Pool();\n};\n\n// (Function) -> Stream\nimport repeat from './many-sources/repeat';\n\n// Options = {concurLim: number|undefined, queueLim: number|undefined, drop: 'old'|'new'|undefiend}\n// (Stream|Property, Function|falsey, Options|undefined) -> Stream\nimport FlatMap from './many-sources/flat-map';\nObservable.prototype.flatMap = function(fn) {\n  return new FlatMap(this, fn).setName(this, 'flatMap');\n};\nObservable.prototype.flatMapLatest = function(fn) {\n  return new FlatMap(this, fn, {concurLim: 1, drop: 'old'}).setName(this, 'flatMapLatest');\n};\nObservable.prototype.flatMapFirst = function(fn) {\n  return new FlatMap(this, fn, {concurLim: 1}).setName(this, 'flatMapFirst');\n};\nObservable.prototype.flatMapConcat = function(fn) {\n  return new FlatMap(this, fn, {queueLim: -1, concurLim: 1}).setName(this, 'flatMapConcat');\n};\nObservable.prototype.flatMapConcurLimit = function(fn, limit) {\n  return new FlatMap(this, fn, {queueLim: -1, concurLim: limit}).setName(this, 'flatMapConcurLimit');\n};\n\n// (Stream|Property, Function|falsey) -> Stream\nimport FlatMapErrors from './many-sources/flat-map-errors';\nObservable.prototype.flatMapErrors = function(fn) {\n  return new FlatMapErrors(this, fn).setName(this, 'flatMapErrors');\n};\n\n\n\n// Combine two observables\n// -----------------------------------------------------------------------------\n\n// (Stream, Stream|Property) -> Stream\n// (Property, Stream|Property) -> Property\nimport filterBy from './two-sources/filter-by';\nObservable.prototype.filterBy = function(other) {\n  return filterBy(this, other);\n};\n\n// (Stream, Stream|Property, Function|undefiend) -> Stream\n// (Property, Stream|Property, Function|undefiend) -> Property\nimport sampledBy2items from './two-sources/sampled-by';\nObservable.prototype.sampledBy = function(other, combinator) {\n  return sampledBy2items(this, other, combinator);\n};\n\n// (Stream, Stream|Property) -> Stream\n// (Property, Stream|Property) -> Property\nimport skipUntilBy from './two-sources/skip-until-by';\nObservable.prototype.skipUntilBy = function(other) {\n  return skipUntilBy(this, other);\n};\n\n// (Stream, Stream|Property) -> Stream\n// (Property, Stream|Property) -> Property\nimport takeUntilBy from './two-sources/take-until-by';\nObservable.prototype.takeUntilBy = function(other) {\n  return takeUntilBy(this, other);\n};\n\n// Options = {flushOnEnd: boolean|undefined}\n// (Stream, Stream|Property, Options|undefined) -> Stream\n// (Property, Stream|Property, Options|undefined) -> Property\nimport bufferBy from './two-sources/buffer-by';\nObservable.prototype.bufferBy = function(other, options) {\n  return bufferBy(this, other, options);\n};\n\n// Options = {flushOnEnd: boolean|undefined}\n// (Stream, Stream|Property, Options|undefined) -> Stream\n// (Property, Stream|Property, Options|undefined) -> Property\nimport bufferWhileBy from './two-sources/buffer-while-by';\nObservable.prototype.bufferWhileBy = function(other, options) {\n  return bufferWhileBy(this, other, options);\n};\n\n\n\n// Deprecated\n// -----------------------------------------------------------------------------\n\nfunction warn(msg) {\n  if (Kefir.DEPRECATION_WARNINGS !== false && console && typeof console.warn === 'function') {\n    const msg2 = '\\nHere is an Error object for you containing the call stack:';\n    console.warn(msg, msg2, new Error());\n  }\n}\n\n// (Stream|Property, Stream|Property) -> Property\nimport awaiting from './two-sources/awaiting';\nObservable.prototype.awaiting = function(other) {\n  warn('You are using deprecated .awaiting() method, see https://github.com/rpominov/kefir/issues/145')\n  return awaiting(this, other);\n};\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport valuesToErrors from './one-source/values-to-errors';\nObservable.prototype.valuesToErrors = function(fn) {\n  warn('You are using deprecated .valuesToErrors() method, see https://github.com/rpominov/kefir/issues/149')\n  return valuesToErrors(this, fn);\n};\n\n\n// (Stream, Function|undefined) -> Stream\n// (Property, Function|undefined) -> Property\nimport errorsToValues from './one-source/errors-to-values';\nObservable.prototype.errorsToValues = function(fn) {\n  warn('You are using deprecated .errorsToValues() method, see https://github.com/rpominov/kefir/issues/149')\n  return errorsToValues(this, fn);\n};\n\n// (Stream) -> Stream\n// (Property) -> Property\nimport endOnError from './one-source/end-on-error';\nObservable.prototype.endOnError = function() {\n  warn('You are using deprecated .endOnError() method, see https://github.com/rpominov/kefir/issues/150')\n  return endOnError(this);\n};\n\n\n\n// Exports\n// --------------------------------------------------------------------------\n\nconst Kefir = { Observable, Stream, Property, never, later, interval, sequentially,\nfromPoll, withInterval, fromCallback, fromNodeCallback, fromEvents, stream,\nconstant, constantError, fromPromise, fromESObservable, combine, zip, merge,\nconcat, Pool, pool, repeat };\n\nKefir.Kefir = Kefir;\n\nexport { Kefir, Observable, Stream, Property, never, later, interval, sequentially,\nfromPoll, withInterval, fromCallback, fromNodeCallback, fromEvents, stream,\nconstant, constantError, fromPromise, fromESObservable, combine, zip, merge,\nconcat, Pool, pool, repeat };\n\nexport default Kefir\n"],"names":["createObj","proto","F","prototype","extend","target","length","arguments","i","prop","inherit","Child","Parent","constructor","concat","a","b","result","j","Array","find","arr","value","findByPred","pred","cloneArray","input","remove","index","map","fn","forEach","fillArray","contains","slide","cur","next","max","Math","min","offset","callSubscriber","type","event","ANY","VALUE","ERROR","Dispatcher","_items","_inLoop","_removedItems","Observable","_dispatcher","_active","_alive","_activating","_logHandlers","Stream","call","this","Property","_currentEvent","never","neverS","timeBased","mixin","AnonymousStream","wait","options","_wait","_intervalId","_$onTick","_this","_onTick","_init","setInterval","_clear","_free","later","x","S","interval","sequentially","xs","fromPoll","emitter","obs","_emitValue","error","_emitError","end","_emitEnd","e","_emit","emit","emitEvent","withInterval","_fn","_unsubscribe","stream","fromCallback","callbackConsumer","called","setName","fromNodeCallback","spread","apply","c","aLength","fromSubUnsub","sub","unsub","transformer","handler","fromEvents","eventName","pairs","undefined","Error","P","current","constant","constantError","createConstructor","BaseClass","name","source","_source","_name","_$handleAny","_handleAny","createClassMethods","_handleValue","_handleError","END","_handleEnd","onAny","offAny","createStream","createProperty","toProperty","changes","fromPromise","promise","onValue","onError","_promise","then","done","getGlodalPromise","Promise","last","resolve","reject","key","Symbol","fromESObservable","_observable","observable","symbol","subscribe","unsubscribe","ESObservable","takeErrors","toESObservable","id","_ofSameType","filter","take","n","takeWhile","skip","skipWhile","skipDuplicates","eq","defaultFn","diff","seed","NOTHING","scan","flatten","delay","throttle","leading","trailing","debounce","immediate","mapErrors","filterErrors","ignoreValues","ignoreErrors","ignoreEnd","beforeEnd","slidingWindow","bufferWhile","flushOnEnd","count","bufferWithTimeOrCount","xformForObs","res","transduce","transducer","withHandler","defaultErrorsCombinator","errors","latestError","Combine","active","passive","combinator","_activeCount","_sources","_combinator","_aliveCount","_latestValues","_latestErrors","_emitAfterActivation","_endAfterActivation","_latestErrorIndex","_$handlers","push","combine","Zip","sources","_buffers","isArray","zip","observables","AbstractPool","queueLim","concurLim","drop","_queueLim","_concurLim","_drop","_queue","_curSources","_$handleSubAny","_handleSubAny","_$endHandlers","_currentlyAdding","Merge","_addAll","_initialised","merge","generator","_generator","_iteration","repeat","Pool","FlatMap","_mainEnded","_lastCurrent","_$handleMain","_handleMain","FlatMapErrors","primary","secondary","_primary","_secondary","_lastSecondary","_$handleSecondaryAny","_handleSecondaryAny","_$handlePrimaryAny","_handlePrimaryAny","_handlePrimaryValue","_handlePrimaryError","_handlePrimaryEnd","_handleSecondaryValue","_handleSecondaryError","_handleSecondaryEnd","_removeSecondary","filterBy","sampledBy","id2","skipUntilBy","takeUntilBy","bufferBy","bufferWhileBy","awaiting","t","f","valuesToErrors","defFn","errorsToValues","endOnError","warn","msg","Kefir","DEPRECATION_WARNINGS","console","msg2","items","_onActivation","_onDeactivation","_setActive","cleanup","dispatch","add","_on","_off","A","B","getType","sourceObs","selfName","toString","isCurrent","log","handlerIndex","obj","splice","_x","_xs","shift","_emitter","_callUnsubscribe","_getInitialCurrent","getInitial","symbol_","observer","complete","_n","_lastValue","_prev","_seed","END_MARKER","_buff","_$shiftBuff","Date","now","getTime","_leading","_trailing","_trailingValue","_timeoutId","_endLater","_lastCallTime","_$trailingCall","_trailingCall","curTime","remaining","_cancelTrailing","setTimeout","_immediate","_lastAttempt","_laterValue","_$later","_later","_max","_min","_flushOnEnd","_flush","_count","_xform","_handler","_emitIfFull","hasAllValues","hasErrors","valuesCopy","errorsCopy","Object","_isFull","values","toObs","_addToCur","_addToQueue","_removeOldest","_add","obss","_this2","_removeCur","_removeQueue","_subToEnd","onEnd","_this3","onEndI","offEnd","_pullQueue","_onEmpty","_subscribe","_getSource","_remove","_hadNoEvSinceDeact","sameCurr","_isEmpty","_","flushOnChange","_flushOnChange","convert","toPromise","bufferWithCount","other","pool","flatMap","flatMapLatest","flatMapFirst","flatMapConcat","flatMapConcurLimit","limit","flatMapErrors","sampledBy2items"],"mappings":"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"}