/*! http://github.com/joeyvandijk/rimg/ - 2013-08-27 */
"use strict";!function(){var Rimg=function(){function parseBreakpoints(value){if("string"==typeof value){var breakpoints=value.split(",");if(0===breakpoints.length)return hidden.status="error",console.error("Rimg: your breakpoint-definition "+value+" is invalid, check the documentation."),null;for(var definition=[],i=0,il=breakpoints.length;il>i;){for(var bp=breakpoints[i],bpDefinition={src:[],width:-1,height:-1,pixelRatio:[],getSrc:function(value){var ratios=this.pixelRatio.length;if(0===ratios)return hidden.status="error",console.error("Rimg: missing a pixelRatio definition, check the documentation."),"";if(1===ratios)return this.src[0];if(2===ratios)return 1>=value?this.src[0]:this.src[1];for(var s=0,sl=this.pixelRatio.length;sl>s;){if(value==this.pixelRatio[s]||Math.round(value)==this.pixelRatio[s])return this.src[s];s++}return this.src[ratios-1]}},parts=bp.split(" "),p=0,pl=parts.length;pl>p;){var part=parts[p];""===part.replace(" ","")||(null!=part.match(/^[0-9]{0,4}w/gi)?bpDefinition.width=Number(part.substr(0,part.length-1)):null!=part.match(/^[0-9]{0,4}h/gi)?bpDefinition.height=Number(part.substr(0,part.length-1)):null!=part.match(/[0-9]{1}x/gi)?bpDefinition.pixelRatio.push(Number(part.substr(0,part.length-1))):bpDefinition.src.push(part)),p++}for(var d=0,dl=definition.length,found=!1;dl>d;){var def=definition[d];if(def.width===bpDefinition.width&&-1!=def.width||def.height===bpDefinition.height&&-1!=def.height){def.pixelRatio.push(bpDefinition.pixelRatio[0]),def.src.push(bpDefinition.src[0]),found=!0;break}d++}found||definition.push(bpDefinition),i++}return definition.length>0?definition:(hidden.status="error",console.error("Rimg: your breakpoint-definition misses valid breakpoints, check the documentation."),null)}return hidden.status="error",console.error("Rimg: your breakpoint-definition is not a String, check the documentation."),null}function event(type,evt,func,target){void 0===target&&(target=document),"resize"===evt&&(target=window),"add"==type?target.addEventListener(evt,func,!1):target.removeEventListener(evt,func,!1)}function adjust(value){var orientation="landscape";null!=window.matchMedia&&window.matchMedia("(orientation: portrait)").matches&&(orientation="portrait"),console.log("orientation:",orientation);var ratio=window.devicePixelRatio||1,data=value.getAttribute("data-src");if(null!=data){for(var breakpoint,file=data.substr(0,data.lastIndexOf(".")),extension=data.substr(data.lastIndexOf(".")),size={x:value.width,y:value.height},i=0,il=hidden.breakpoints.length;il>i;){var bp=hidden.breakpoints[i],wd=size.x;if(size.x<size.y&&(wd=size.y),wd<=bp.width){breakpoint=bp;break}i++}void 0===breakpoint&&(breakpoint=hidden.breakpoints[hidden.breakpoints.length-1]);var id=telemetryData.identifier;value.getAttribute("src")!=file+breakpoint.getSrc(ratio)+extension&&(telemetry({type:"start",image:data+id,time:(new Date).getTime()}),value.setAttribute("src",file+breakpoint.getSrc(ratio)+extension),value.setAttribute("data-telemetry",data+id),event("add","load",telemetryData.done,value),event("add","error",telemetryData.error,value),telemetryData.identifier++)}}function inspect(value){if("img"===value.nodeName.toLowerCase())adjust(value);else for(var i=0,il=value.children.length;il>i;){var item=value.children[i];inspect(item),i++}}function resize(){clearInterval(hidden.resizeWait);var nw=window.innerWidth+"x"+window.innerHeight;hidden.resizeDimensions!==nw&&(hidden.resizeDimensions=nw,this.execute(document))}function nodeInserted(e){this.execute(e.target)}function telemetry(value){if("start"===value.type)telemetryData.connections[value.image]=value.time;else if("end"===value.type){if(null!=value.time){var diff=Number(value.time)-Number(telemetryData.connections[value.image]);telemetryData.values.push(diff),telemetryData.length>50&&telemetryData.shift()}delete telemetryData.connections[value.image]}else"debug"===value.type&&telemetryData.values.length>0&&console.debug("Rimg:","show all telemetry data (in ms):",telemetryData.values,"connections:",telemetryData.connections)}var hidden={status:"init",observer:null,breakpoints:[],resizeWait:null,resizeDimensions:"",disableIntrospection:!1};if("undefined"!=typeof RimgBreakpoint){var bpts=parseBreakpoints(RimgBreakpoint);null!=bpts&&(hidden.breakpoints=bpts),RimgBreakpoint=void 0}else console.log("(remark) Rimg: no breakpoints defined, check the documentation.");var telemetryData={identifier:0,values:[],connections:{},done:function(e){telemetry({type:"end",image:e.target.getAttribute("data-telemetry"),time:(new Date).getTime()}),event("remove","load",telemetryData.done,e.target),event("remove","error",telemetryData.done,e.target)},error:function(e){telemetry({type:"end",image:e.target.getAttribute("data-telemetry"),time:null}),event("remove","load",telemetryData.done,e.target),event("remove","error",telemetryData.done,e.target)}};return{version:"0.2.5",execute:function(target){return"error"===hidden.status?(console.error("Rimg.execute(): error-status so no actions can be executed, check your code."),void 0):void 0===target?(console.error("Rimg.execute(): undefined value, check your code to add a valid DOM element to this function."),void 0):("#document"===target.nodeName?target.childNodes.length>1?inspect(target.childNodes[1].children[1]):console.error("Rimg.execute(): not a valid DOM representation, check your code."):void 0!=target&&void 0!=target.nodeName&&"img"===target.nodeName.toLowerCase()?inspect(target):void 0!=target[0]&&"img"===target[0].nodeName.toLowerCase()?inspect(target[0]):console.error("Rimg.execute(): no <img> element found"),void 0)},configure:function(value){var breakpoints=parseBreakpoints(value);null!=breakpoints&&(hidden.breakpoints=breakpoints),"ready"!==hidden.status||hidden.disableIntrospection||this.execute(document)},resized:function(){"ready"==hidden.status&&(null!=hidden.resizeWait&&clearInterval(hidden.resizeWait),hidden.resizeWait=setInterval(resize.bind(this),100))},loaded:function(e){"progress"==hidden.status&&(event("remove","DOMContentLoaded",this.loaded),hidden.disableIntrospection||(null===hidden.observer?this.execute(e.target):hidden.observer.observe(document.body,{attributes:!0,childList:!0,characterData:!0,subtree:!0,attributeFilter:["data-src"]}),event("add","resize",this.resized.bind(this)),this.execute(document)),hidden.status="ready")},disableIntrospection:function(){hidden.disableIntrospection=!0,hidden.observer?hidden.observer.disconnect():event("remove","DOMNodeInserted",nodeInserted)},initialize:function(){if("init"!=hidden.status)return"error"!=hidden.status&&console.error("Rimg.initialize(): Already initialized. No forced initialization supported, check your code."),void 0;var base=this,MutationObserver=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;void 0===MutationObserver?(event("add","DOMAttrModified",function(){}),event("add","DOMNodeInserted",nodeInserted.bind(base)),event("add","DOMSubtreeModified",function(){})):hidden.observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){mutation.addedNodes.length>0?base.execute(mutation.addedNodes):"data-src"===mutation.attributeName&&base.execute(mutation.target)})}),hidden.status="progress",event("add","DOMContentLoaded",this.loaded.bind(this))}}};window.Rimg=Object.create(Rimg()),window.Rimg.initialize()}();