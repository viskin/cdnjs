!function(e){function n(e){throw RangeError(L[e])}function o(e,n){for(var o=e.length;o--;)e[o]=n(e[o]);return e}function r(e,n){var r=".";return o(e.split(r),n).join(r)}function t(e){for(var n,o,r=[],t=0,i=e.length;i>t;)n=e.charCodeAt(t++),55296==(63488&n)&&i>t?(o=e.charCodeAt(t++),56320==(64512&o)?r.push(((1023&n)<<10)+(1023&o)+65536):r.push(n,o)):r.push(n);return r}function i(e){return o(e,function(e){var n="";return e>65535&&(e-=65536,n+=R(e>>>10&1023|55296),e=56320|1023&e),n+=R(e)}).join("")}function f(e){return 10>e-48?e-22:26>e-65?e-65:26>e-97?e-97:x}function u(e,n){return e+22+75*(26>e)-((0!=n)<<5)}function c(e,n,o){var r=0;for(e=o?P(e/A):e>>1,e+=P(e/n);e>M*b>>1;r+=x)e=P(e/M);return P(r+(M+1)*e/(e+j))}function s(e){var o,r,t,u,s,d,a,l,p,h,v=[],w=e.length,g=0,j=I,A=m;for(r=e.lastIndexOf(O),0>r&&(r=0),t=0;r>t;++t)e.charCodeAt(t)>=128&&n("not-basic"),v.push(e.charCodeAt(t));for(u=r>0?r+1:0;w>u;){for(s=g,d=1,a=x;u>=w&&n("invalid-input"),l=f(e.charCodeAt(u++)),(l>=x||l>P((C-g)/d))&&n("overflow"),g+=l*d,p=A>=a?y:a>=A+b?b:a-A,!(p>l);a+=x)h=x-p,d>P(C/h)&&n("overflow"),d*=h;o=v.length+1,A=c(g-s,o,0==s),P(g/o)>C-j&&n("overflow"),j+=P(g/o),g%=o,v.splice(g++,0,j)}return i(v)}function d(e){var o,r,i,f,s,d,a,l,p,h,v,w,g,j,A,S=[];for(e=t(e),w=e.length,o=I,r=0,s=m,d=0;w>d;++d)v=e[d],128>v&&S.push(R(v));for(i=f=S.length,f&&S.push(O);w>i;){for(a=C,d=0;w>d;++d)v=e[d],v>=o&&a>v&&(a=v);for(g=i+1,a-o>P((C-r)/g)&&n("overflow"),r+=(a-o)*g,o=a,d=0;w>d;++d)if(v=e[d],o>v&&++r>C&&n("overflow"),v==o){for(l=r,p=x;h=s>=p?y:p>=s+b?b:p-s,!(h>l);p+=x)A=l-h,j=x-h,S.push(R(u(h+A%j,0))),l=P(A/j);S.push(R(u(l,0))),s=c(r,g,i==f),r=0,++i}++r,++o}return S.join("")}function a(e){return r(e,function(e){return E.test(e)?s(e.slice(4).toLowerCase()):e})}function l(e){return r(e,function(e){return S.test(e)?"xn--"+d(e):e})}var p,h,v="function"==typeof define&&"object"==typeof define.amd&&define.amd&&define,w="object"==typeof exports&&exports,g="object"==typeof module&&module,C=2147483647,x=36,y=1,b=26,j=38,A=700,m=72,I=128,O="-",S=/[^ -~]/,E=/^xn--/,L={overflow:"Overflow: input needs wider integers to process.","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},M=x-y,P=Math.floor,R=String.fromCharCode;if(p={version:"1.1.1",ucs2:{decode:t,encode:i},decode:s,encode:d,toASCII:l,toUnicode:a},w)if(g&&g.exports==w)g.exports=p;else for(h in p)p.hasOwnProperty(h)&&(w[h]=p[h]);else v?define("punycode",p):e.punycode=p}(this);