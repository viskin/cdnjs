L.TileLayer.Ajax=L.TileLayer.extend({_requests:[],_addTile:function(e){var t={datum:null,processed:!1};this._tiles[e.x+":"+e.y]=t,this._loadTile(t,e)},_xhrHandler:function(e,t,a,i){return function(){if(4===e.readyState){var r=e.status;r>=200&&300>r&&204!=r||304===r?(a.datum=JSON.parse(e.responseText),t._tileLoaded(a,i)):t._tileLoaded(a,i)}}},_loadTile:function(e,t){this._adjustTilePoint(t);var a=this,i=new XMLHttpRequest;this._requests.push(i),i.onreadystatechange=this._xhrHandler(i,a,e,t),i.open("GET",this.getTileUrl(t),!0),i.send()},_reset:function(){L.TileLayer.prototype._reset.apply(this,arguments);for(var e=0;e<this._requests.length;e++)this._requests[e].abort();this._requests=[]},_update:function(){this._map&&this._map._panTransition&&this._map._panTransition._inProgress||(this._tilesToLoad<0&&(this._tilesToLoad=0),L.TileLayer.prototype._update.apply(this,arguments))}}),L.TileLayer.GeoJSON=L.TileLayer.Ajax.extend({_keyLayers:{},_clipPathRectangles:{},initialize:function(e,t,a){L.TileLayer.Ajax.prototype.initialize.call(this,e,t),this.geojsonLayer=new L.GeoJSON(null,a)},onAdd:function(e){this._map=e,L.TileLayer.Ajax.prototype.onAdd.call(this,e),e.addLayer(this.geojsonLayer)},onRemove:function(e){e.removeLayer(this.geojsonLayer),L.TileLayer.Ajax.prototype.onRemove.call(this,e)},_reset:function(){this.geojsonLayer.clearLayers(),this._keyLayers={},this._removeOldClipPaths(),L.TileLayer.Ajax.prototype._reset.apply(this,arguments)},_removeOldClipPaths:function(){for(var e in this._clipPathRectangles){var t=e.split("_").slice(1),a=parseInt(t[0],10);if(a!==this._map.getZoom()){var i=this._clipPathRectangles[e];this._map.removeLayer(i);var r=document.getElementById(e);null!==r&&r.parentNode.removeChild(r),delete this._clipPathRectangles[e]}}},_recurseLayerUntilPath:function(e,t){t instanceof L.Path?e(t):t instanceof L.LayerGroup&&t.getLayers().forEach(this._recurseLayerUntilPath.bind(this,e),this)},_clipLayerToTileBoundary:function(e,t){if(L.Path.SVG&&this._map){this._map._pathRoot||(this._map._pathRoot=L.Path.prototype._createElement("svg"),this._map._panes.overlayPane.appendChild(this._map._pathRoot));var a=this._map._pathRoot,i=null;0===a.getElementsByTagName("defs").length?(i=document.createElementNS(L.Path.SVG_NS,"defs"),a.insertBefore(i,a.firstChild)):i=a.getElementsByTagName("defs")[0];var r="tileClipPath_"+t.z+"_"+t.x+"_"+t.y,s=document.getElementById(r);if(null===s){s=document.createElementNS(L.Path.SVG_NS,"clipPath"),s.id=r;var o=this.options.tileSize,n=t.multiplyBy(o),l=n.add([o,o]),h=this._map.unproject(n),p=this._map.unproject(l);this._clipPathRectangles[r]=new L.Rectangle(new L.LatLngBounds([h,p]),{opacity:0,fillOpacity:0,clickable:!1,noClip:!0}),this._map.addLayer(this._clipPathRectangles[r]);var y=document.createElementNS(L.Path.SVG_NS,"path"),u=this._clipPathRectangles[r].getPathString();y.setAttribute("d",u),s.appendChild(y),i.appendChild(s)}this._recurseLayerUntilPath(function(e){e._container.setAttribute("clip-path","url(#"+r+")")},e)}},addTileData:function(e,t){var a,i,r,s=L.Util.isArray(e)?e:e.features;if(s){for(a=0,i=s.length;i>a;a++)r=s[a],(r.geometries||r.geometry||r.features||r.coordinates)&&this.addTileData(s[a],t);return this}var o=this.geojsonLayer.options;if(!o.filter||o.filter(e)){var n=this.geojsonLayer,l=null;if(this.options.unique&&"function"==typeof this.options.unique){var h=this.options.unique(e);h in this._keyLayers&&"GeometryCollection"!==e.geometry.type||(e.geometry={type:"GeometryCollection",geometries:[e.geometry]});try{l=L.GeoJSON.geometryToLayer(e,o.pointToLayer,o.coordsToLatLng)}catch(p){return this}l.feature=L.GeoJSON.asFeature(e),h in this._keyLayers?(n=this._keyLayers[h],n.feature.geometry.geometries.push(e.geometry)):this._keyLayers[h]=l}else{try{l=L.GeoJSON.geometryToLayer(e,o.pointToLayer,o.coordsToLatLng)}catch(p){return this}l.feature=L.GeoJSON.asFeature(e)}return l.defaultOptions=l.options,this.geojsonLayer.resetStyle(l),o.onEachFeature&&o.onEachFeature(e,l),n.addLayer(l),this.options.clipTiles&&this._clipLayerToTileBoundary(l,t),this}},_tileLoaded:function(e,t){return L.TileLayer.Ajax.prototype._tileLoaded.apply(this,arguments),null===e.datum?null:void this.addTileData(e.datum,t)}});
//# sourceMappingURL=TileLayer.GeoJSON.min.js.map