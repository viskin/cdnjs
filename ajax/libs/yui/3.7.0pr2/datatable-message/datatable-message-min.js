YUI.add("datatable-message",function(Y,NAME){var Message;Y.namespace("DataTable").Message=Message=function(){},Message.ATTRS={showMessages:{value:!0,validator:Y.Lang.isBoolean}},Y.mix(Message.prototype,{MESSAGE_TEMPLATE:'<tbody class="{className}"><tr><td class="{contentClass}" colspan="{colspan}"></td></tr></tbody>',hideMessage:function(){return this.get("boundingBox").removeClass(this.getClassName("message","visible")),this},showMessage:function(message){var content=this.getString(message)||message;return this._messageNode||this._initMessageNode(),this.get("showMessages")&&(content?(this._messageNode.one("."+this.getClassName("message","content")).setHTML(content),this.get("boundingBox").addClass(this.getClassName("message","visible"))):this.hideMessage()),this},_afterMessageColumnsChange:function(e){var contentNode;this._messageNode&&(contentNode=this._messageNode.one("."+this.getClassName("message","content")),contentNode&&contentNode.set("colSpan",this._displayColumns.length))},_afterMessageDataChange:function(e){this._uiSetMessage()},_afterShowMessagesChange:function(e){e.newVal?this._uiSetMessage(e):this._messageNode&&(this.get("boundingBox").removeClass(this.getClassName("message","visible")),this._messageNode.remove().destroy(!0),this._messageNode=null)},_bindMessageUI:function(){this.after(["dataChange","*:add","*:remove","*:reset"],Y.bind("_afterMessageDataChange",this)),this.after("columnsChange",Y.bind("_afterMessageColumnsChange",this)),this.after("showMessagesChange",Y.bind("_afterShowMessagesChange",this))},initializer:function(){this._initMessageStrings(),this.get("showMessages")&&this.after("renderBody",Y.bind("_initMessageNode",this)),this.after(Y.bind("_bindMessageUI",this),this,"bindUI"),this.after(Y.bind("_syncMessageUI",this),this,"syncUI")},_initMessageNode:function(){this._messageNode||(this._messageNode=Y.Node.create(Y.Lang.sub(this.MESSAGE_TEMPLATE,{className:this.getClassName("message"),contentClass:this.getClassName("message","content"),colspan:this._displayColumns.length||1})),this._tableNode.insertBefore(this._messageNode,this._tbodyNode))},_initMessageStrings:function(){this.set("strings",Y.mix(this.get("strings")||{},Y.Intl.get("datatable-message")))},_syncMessageUI:function(){this._uiSetMessage()},_uiSetMessage:function(e){this.data.size()?this.hideMessage():this.showMessage(e&&e.message||"emptyMessage")}}),Y.Lang.isFunction(Y.DataTable)&&Y.Base.mix(Y.DataTable,[Message])},"@VERSION@",{requires:["datatable-base"],lang:["en"],skinnable:!0})