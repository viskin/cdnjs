


<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=1020">
    
    
    <title>epoch/epoch.0.3.0.min.js at 0.3.0 · epochjs/epoch · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="epochjs/epoch" name="twitter:title" /><meta content="epoch - A general purpose, real-time visualization library." name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/14932104?v=3&amp;s=400" name="twitter:image:src" />
      <meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/14932104?v=3&amp;s=400" property="og:image" /><meta content="epochjs/epoch" property="og:title" /><meta content="https://github.com/epochjs/epoch" property="og:url" /><meta content="epoch - A general purpose, real-time visualization library." property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    
    <meta name="pjax-timeout" content="1000">
    

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="8C71D04C:1166:194BA7F0:5610F50E" name="octolytics-dimension-request_id" />

<meta content="Rails, view, blob#show" data-pjax-transient="true" name="analytics-event" />


  <meta class="js-ga-set" name="dimension1" content="Logged Out">
    <meta class="js-ga-set" name="dimension4" content="Current repo nav">




    <meta name="is-dotcom" content="true">
        <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

      <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#4078c0">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

      <!-- </textarea> --><!-- '"` --><meta content="authenticity_token" name="csrf-param" />
<meta content="GKtBacUbEfhvkAQs9/XGcfoWiCDJnkTX7y1mu5++ammVXGRg7tka3MSxCoVTcud18pg1+e8R17zkt+WnKLB6bA==" name="csrf-token" />
    

    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-7d448613a60a84dcd1e1f4f2d4939266979ea193aa79a9525436f58f3f66b98c.css" media="all" rel="stylesheet" />
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github2-4a69aa85ab5a62a47bdaae736e455ee040443ccfb3564d1472a088d07f9a1cbd.css" media="all" rel="stylesheet" />
    
    
    


    <meta http-equiv="x-pjax-version" content="a9fc5a900b5ca90c888ebebc183cea5a">

      
  <meta name="description" content="epoch - A general purpose, real-time visualization library.">
  <meta name="go-import" content="github.com/epochjs/epoch git https://github.com/epochjs/epoch.git">

  <meta content="14932104" name="octolytics-dimension-user_id" /><meta content="epochjs" name="octolytics-dimension-user_login" /><meta content="11010098" name="octolytics-dimension-repository_id" /><meta content="epochjs/epoch" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="11010098" name="octolytics-dimension-repository_network_root_id" /><meta content="epochjs/epoch" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/epochjs/epoch/commits/0.3.0.atom" rel="alternate" title="Recent Commits to epoch:0.3.0" type="application/atom+xml">

  </head>


  <body class="logged_out   env-production  vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>

    
    
    



      
      <div class="header header-logged-out" role="banner">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions" role="navigation">
        <a class="btn btn-primary" href="/join" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
      <a class="btn" href="/login?return_to=%2Fepochjs%2Fepoch%2Fblob%2F0.3.0%2Fepoch.0.3.0.min.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
    </div>

    <div class="site-search repo-scope js-site-search" role="search">
      <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/epochjs/epoch/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/epochjs/epoch/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <label class="js-chromeless-input-container form-control">
    <div class="scope-badge">This repository</div>
    <input type="text"
      class="js-site-search-focus js-site-search-field is-clearable chromeless-input"
      data-hotkey="s"
      name="q"
      placeholder="Search"
      aria-label="Search this repository"
      data-global-scope-placeholder="Search GitHub"
      data-repo-scope-placeholder="Search"
      tabindex="1"
      autocapitalize="off">
  </label>
</form>
    </div>

      <ul class="header-nav left" role="navigation">
          <li class="header-nav-item">
            <a class="header-nav-link" href="/explore" data-ga-click="(Logged out) Header, go to explore, text:explore">Explore</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/features" data-ga-click="(Logged out) Header, go to features, text:features">Features</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://enterprise.github.com/" data-ga-click="(Logged out) Header, go to enterprise, text:enterprise">Enterprise</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/pricing" data-ga-click="(Logged out) Header, go to pricing, text:pricing">Pricing</a>
          </li>
      </ul>

  </div>
</div>



    <div id="start-of-content" class="accessibility-aid"></div>

    <div id="js-flash-container">
</div>


    <div role="main" class="main-content">
        <div itemscope itemtype="http://schema.org/WebPage">
    <div class="pagehead repohead instapaper_ignore readability-menu">

      <div class="container">

        <div class="clearfix">
          
<ul class="pagehead-actions">

  <li>
      <a href="/login?return_to=%2Fepochjs%2Fepoch"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to watch a repository" rel="nofollow">
    <span class="octicon octicon-eye"></span>
    Watch
  </a>
  <a class="social-count" href="/epochjs/epoch/watchers">
    205
  </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fepochjs%2Fepoch"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>
    Star
  </a>

    <a class="social-count js-social-count" href="/epochjs/epoch/stargazers">
      4,269
    </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fepochjs%2Fepoch"
        class="btn btn-sm btn-with-count tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-repo-forked"></span>
        Fork
      </a>

    <a href="/epochjs/epoch/network" class="social-count">
      228
    </a>
  </li>
</ul>

          <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public ">
  <span class="mega-octicon octicon-repo"></span>
  <span class="author"><a href="/epochjs" class="url fn" itemprop="url" rel="author"><span itemprop="title">epochjs</span></a></span><!--
--><span class="path-divider">/</span><!--
--><strong><a href="/epochjs/epoch" data-pjax="#js-repo-pjax-container">epoch</a></strong>

  <span class="page-context-loader">
    <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
  </span>

</h1>

        </div>
      </div>
    </div>

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline ">
        <div class="repository-sidebar clearfix">
          
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/epochjs/epoch/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/epochjs/epoch/tree/0.3.0" aria-label="Code" aria-selected="true" class="js-selected-navigation-item selected sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /epochjs/epoch/tree/0.3.0">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/epochjs/epoch/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /epochjs/epoch/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull requests">
      <a href="/epochjs/epoch/pulls" aria-label="Pull requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /epochjs/epoch/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/epochjs/epoch/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /epochjs/epoch/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/epochjs/epoch/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /epochjs/epoch/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>
  </ul>


</nav>

            <div class="only-with-full-nav">
                
<div class="js-clone-url clone-url open"
  data-protocol-type="http">
  <h3 class="text-small"><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini text-small input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/epochjs/epoch.git" readonly="readonly" aria-label="HTTPS clone URL">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="js-clone-url clone-url "
  data-protocol-type="subversion">
  <h3 class="text-small"><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini text-small input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/epochjs/epoch" readonly="readonly" aria-label="Subversion checkout URL">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<div class="clone-options text-small">You can clone with
  <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone" class="inline-form js-clone-selector-form " data-form-nonce="cd0f7e5f6ffadc375369732c76cf062ba6382bc4" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="BpsWq7tfmV+2qfAdAVo4ITwLTDpo6GgOEoD5WZGd8fdY7dLAbZ+sTkvBXMECpX5Ah7s6uB31/5iRqU8oOK2U1g==" /></div><button class="btn-link js-clone-selector" data-protocol="http" type="submit">HTTPS</button></form> or <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone" class="inline-form js-clone-selector-form " data-form-nonce="cd0f7e5f6ffadc375369732c76cf062ba6382bc4" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="KvScfuhpyreGGtgVaD01E38Ag2Ab4SpNnH+Dq96m0kjrncF5VQPg3nwcPT+SeGqRuSQpjIYEOSLFbrbk59FKfA==" /></div><button class="btn-link js-clone-selector" data-protocol="subversion" type="submit">Subversion</button></form>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</div>

              <a href="/epochjs/epoch/archive/0.3.0.zip"
                 class="btn btn-sm sidebar-button"
                 aria-label="Download the contents of epochjs/epoch as a zip file"
                 title="Download the contents of epochjs/epoch as a zip file"
                 rel="nofollow">
                <span class="octicon octicon-cloud-download"></span>
                Download ZIP
              </a>
            </div>
        </div>
        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>

          

<a href="/epochjs/epoch/blob/2e004b28fd318b571b9e60a292eaad731ca2dfd2/epoch.0.3.0.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:b0b6b1fe0c7adaaeb59ed99b18ad1f95 -->

  <div class="file-navigation js-zeroclipboard-container">
    
<div class="select-menu js-menu-container js-select-menu left">
  <span class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    title="0.3.0"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Tag:</i>
    <span class="js-select-button css-truncate-target">0.3.0</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/epochjs/epoch/blob/gh-pages/epoch.0.3.0.min.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="gh-pages">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/epochjs/epoch/blob/james-hasOwnProperty/epoch.0.3.0.min.js"
               data-name="james-hasOwnProperty"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="james-hasOwnProperty">
                james-hasOwnProperty
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/epochjs/epoch/blob/master/epoch.0.3.0.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="master">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/epochjs/epoch/blob/rsandor/bar-ticks/epoch.0.3.0.min.js"
               data-name="rsandor/bar-ticks"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="rsandor/bar-ticks">
                rsandor/bar-ticks
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/v0.7.1/epoch.0.3.0.min.js"
                 data-name="v0.7.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.7.1">v0.7.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/v0.7.0/epoch.0.3.0.min.js"
                 data-name="v0.7.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.7.0">v0.7.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.6.0/epoch.0.3.0.min.js"
                 data-name="0.6.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.6.0">0.6.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.5.2/epoch.0.3.0.min.js"
                 data-name="0.5.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.5.2">0.5.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.3.5/epoch.0.3.0.min.js"
                 data-name="0.3.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.5">0.3.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.3.4/epoch.0.3.0.min.js"
                 data-name="0.3.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.4">0.3.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.3.3/epoch.0.3.0.min.js"
                 data-name="0.3.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.3">0.3.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.3.2/epoch.0.3.0.min.js"
                 data-name="0.3.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.2">0.3.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.3.1/epoch.0.3.0.min.js"
                 data-name="0.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.1">0.3.1</a>
            </div>
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.3.0/epoch.0.3.0.min.js"
                 data-name="0.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.0">0.3.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.2.4/epoch.0.3.0.min.js"
                 data-name="0.2.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.4">0.2.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.2.3/epoch.0.3.0.min.js"
                 data-name="0.2.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.3">0.2.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.2.2/epoch.0.3.0.min.js"
                 data-name="0.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.2">0.2.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.2.1/epoch.0.3.0.min.js"
                 data-name="0.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.1">0.2.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.1.1/epoch.0.3.0.min.js"
                 data-name="0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.1.1">0.1.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/epochjs/epoch/tree/0.1.0/epoch.0.3.0.min.js"
                 data-name="0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.1.0">0.1.0</a>
            </div>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="btn-group right">
      <a href="/epochjs/epoch/find/0.3.0"
            class="js-show-file-finder btn btn-sm empty-icon tooltipped tooltipped-nw"
            data-pjax
            data-hotkey="t"
            aria-label="Quickly jump between files">
        <span class="octicon octicon-list-unordered"></span>
      </a>
      <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </div>

    <div class="breadcrumb js-zeroclipboard-target">
      <span class="repo-root js-repo-root"><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/epochjs/epoch/tree/0.3.0" class="" data-branch="0.3.0" data-pjax="true" itemscope="url"><span itemprop="title">epoch</span></a></span></span><span class="separator">/</span><strong class="final-path">epoch.0.3.0.min.js</strong>
    </div>
  </div>

<include-fragment class="commit commit-loader file-history-tease" src="/epochjs/epoch/contributors/0.3.0/epoch.0.3.0.min.js">
  <div class="file-history-tease-header">
    Fetching contributors&hellip;
  </div>

  <div class="participation">
    <p class="loader-loading"><img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
    <p class="loader-error">Cannot retrieve contributors at this time</p>
  </div>
</include-fragment>
<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="btn-group">
      <a href="/epochjs/epoch/raw/0.3.0/epoch.0.3.0.min.js" class="btn btn-sm " id="raw-url">Raw</a>
        <a href="/epochjs/epoch/blame/0.3.0/epoch.0.3.0.min.js" class="btn btn-sm js-update-url-with-hash">Blame</a>
      <a href="/epochjs/epoch/commits/0.3.0/epoch.0.3.0.min.js" class="btn btn-sm " rel="nofollow">History</a>
    </div>


        <button type="button" class="octicon-btn disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <span class="octicon octicon-pencil"></span>
        </button>
        <button type="button" class="octicon-btn octicon-btn-danger disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <span class="octicon octicon-trashcan"></span>
        </button>
  </div>

  <div class="file-info">
      82 lines (81 sloc)
      <span class="file-info-divider"></span>
    37.4 KB
  </div>
</div>

  

  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">k</span>){<span class="pl-k">var</span> m,d<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[-+,&gt; ]</span><span class="pl-pds">/</span></span>;k([],<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">l</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){q<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">&amp;&amp;</span>q<span class="pl-k">!=</span>v)<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">==</span>l<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">||</span>(n<span class="pl-k">=</span>d.<span class="pl-c1">test</span>(x)<span class="pl-k">&amp;&amp;</span>c.<span class="pl-c1">createDocumentFragment</span>()))<span class="pl-k">||</span>v).<span class="pl-c1">insertBefore</span>(q,u<span class="pl-k">||</span><span class="pl-c1">null</span>)}<span class="pl-k">for</span>(<span class="pl-k">var</span> n,p,u,v,q,m<span class="pl-k">=</span>arguments,k<span class="pl-k">=</span>m[<span class="pl-c1">0</span>],z<span class="pl-k">=</span><span class="pl-c1">0</span>;z<span class="pl-k">&lt;</span>m.<span class="pl-c1">length</span>;z<span class="pl-k">++</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span>m[z];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==typeof</span> x){p<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(x <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span>){q<span class="pl-k">=</span>c.<span class="pl-c1">createDocumentFragment</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">0</span>;y<span class="pl-k">&lt;</span>x.<span class="pl-c1">length</span>;y<span class="pl-k">++</span>)q.<span class="pl-c1">appendChild</span>(a(x[y]));x<span class="pl-k">=</span>q}<span class="pl-k">if</span>(x.<span class="pl-c1">nodeType</span>)q<span class="pl-k">=</span>x,f(),v<span class="pl-k">=</span>x,u<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">for</span>(y <span class="pl-k">in</span> x)q[y]<span class="pl-k">=</span>x[y]}<span class="pl-k">else</span> <span class="pl-k">if</span>(p)p<span class="pl-k">=!</span><span class="pl-c1">1</span>,q.<span class="pl-c1">appendChild</span>(c.<span class="pl-c1">createTextNode</span>(x));<span class="pl-k">else</span>{<span class="pl-c1">1</span><span class="pl-k">&gt;</span>z<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line">p<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(k<span class="pl-k">=</span>x.<span class="pl-c1">replace</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>,<span class="pl-smi">n</span>,<span class="pl-smi">p</span>,<span class="pl-smi">k</span>,<span class="pl-smi">y</span>){d<span class="pl-k">&amp;&amp;</span>(f(),<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d<span class="pl-k">?</span>(v<span class="pl-k">=</span>(u<span class="pl-k">=</span>q<span class="pl-k">||</span>v).<span class="pl-c1">parentNode</span>,q<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span>u.<span class="pl-c1">nextSibling</span>))<span class="pl-k">:</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d<span class="pl-k">?</span>v<span class="pl-k">=</span>q<span class="pl-k">=</span>(q<span class="pl-k">||</span>v).<span class="pl-c1">parentNode</span><span class="pl-k">:</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>d<span class="pl-k">?</span>v<span class="pl-k">=</span>l<span class="pl-k">:</span>q<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span>q),q<span class="pl-k">=</span><span class="pl-c1">null</span>),u<span class="pl-k">=</span><span class="pl-c1">0</span>),q<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span>q));<span class="pl-k">if</span>((e<span class="pl-k">=!</span>n<span class="pl-k">&amp;&amp;</span>p)<span class="pl-k">||!</span>q<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">||</span>k))<span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>e<span class="pl-k">?</span>(e<span class="pl-k">=</span>m[<span class="pl-k">++</span>z],v.<span class="pl-c1">appendChild</span>(c.<span class="pl-c1">createTextNode</span>(e)))<span class="pl-k">:</span>(e<span class="pl-k">=</span>e<span class="pl-k">||</span>a.defaultTag,(d<span class="pl-k">=</span>t<span class="pl-k">&amp;&amp;</span>m[z<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>m[z<span class="pl-k">+</span><span class="pl-c1">1</span>].<span class="pl-c1">name</span>)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span> name=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span>),q<span class="pl-k">=</span>s<span class="pl-k">&amp;&amp;~</span>(h<span class="pl-k">=</span>e.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>))<span class="pl-k">?</span>c.createElementNS(s[e.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,h)],e.<span class="pl-c1">slice</span>(h<span class="pl-k">+</span><span class="pl-c1">1</span>))<span class="pl-k">:</span>c.<span class="pl-c1">createElement</span>(e));<span class="pl-k">if</span>(n)<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>p<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span>m[<span class="pl-k">++</span>z]),<span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>n)q.<span class="pl-c1">id</span><span class="pl-k">=</span>p;<span class="pl-k">else</span> <span class="pl-k">if</span>(d<span class="pl-k">=</span>(e<span class="pl-k">=</span>q.<span class="pl-c1">className</span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>n)q.<span class="pl-c1">className</span><span class="pl-k">=</span>e<span class="pl-k">?</span>(d<span class="pl-k">+</span>p).<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>)<span class="pl-k">:</span>p;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>x){<span class="pl-k">var</span> B;t<span class="pl-k">?</span>a(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>,q,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>).innerHTML<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>(B<span class="pl-k">=</span>q.<span class="pl-c1">parentNode</span>)<span class="pl-k">&amp;&amp;</span>B.removeChild(q)}<span class="pl-k">else</span> d<span class="pl-k">=</span>d.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>,d.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>),d<span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>(q.<span class="pl-c1">className</span><span class="pl-k">=</span>d);k<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>y<span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span>m[<span class="pl-k">++</span>z]),<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>k<span class="pl-k">?</span>q.<span class="pl-c1">style</span>.cssText<span class="pl-k">=</span>y<span class="pl-k">:</span>(n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>k.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">?</span>(k<span class="pl-k">=</span>k.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>removeAttribute<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>setAttribute<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>y<span class="pl-k">?</span>k<span class="pl-k">:</span>y,s<span class="pl-k">&amp;&amp;~</span>(h<span class="pl-k">=</span>k.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>))<span class="pl-k">?</span>q[n<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>NS<span class="pl-pds">&quot;</span></span>](s[k.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,h)],k.<span class="pl-c1">slice</span>(h<span class="pl-k">+</span><span class="pl-c1">1</span>),y)<span class="pl-k">:</span>q[n](k,y)));<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">SyntaxError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unexpected char <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> in <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>x);f();</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line">v<span class="pl-k">=</span>k<span class="pl-k">=</span>q<span class="pl-k">||</span>v}}l<span class="pl-k">&amp;&amp;</span>n<span class="pl-k">&amp;&amp;</span>l.<span class="pl-c1">appendChild</span>(n);<span class="pl-k">return</span> k}d<span class="pl-k">=</span>f<span class="pl-k">||</span>d;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(?:<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[-+ ,&lt;&gt;]</span>))<span class="pl-k">?</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-cce">\.</span><span class="pl-k">|</span>!<span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-k">|</span>#)<span class="pl-k">?</span>(<span class="pl-c1">[-<span class="pl-c1">\w</span>%$|]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(?:<span class="pl-cce">\[</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\]</span>=]</span><span class="pl-k">+</span>)=<span class="pl-k">?</span><span class="pl-c1">[&#39;&quot;]</span><span class="pl-k">?</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\]</span>&#39;&quot;]</span><span class="pl-k">*</span>)<span class="pl-c1">[&#39;&quot;]</span><span class="pl-k">?</span><span class="pl-cce">\]</span>)<span class="pl-k">?</span><span class="pl-pds">/</span>g</span>,h,s<span class="pl-k">=!</span><span class="pl-c1">1</span>;c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">document</span>;<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==typeof</span> c.createElement;<span class="pl-c1">a</span>.<span class="pl-en">addNamespace</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){c.createElementNS<span class="pl-k">?</span>(s<span class="pl-k">||</span>(s<span class="pl-k">=</span>{}))[a]<span class="pl-k">=</span>e<span class="pl-k">:</span>c.<span class="pl-c1">namespaces</span>.<span class="pl-c1">add</span>(a,e)};a.defaultTag<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>;a.forDocument<span class="pl-k">=</span>m;<span class="pl-k">return</span> a})})(<span class="pl-k">function</span>(<span class="pl-smi">k</span>,<span class="pl-smi">m</span>,<span class="pl-smi">d</span>){d<span class="pl-k">=</span>d<span class="pl-k">||</span>m;<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> define<span class="pl-k">?</span>define([],<span class="pl-k">function</span>(){<span class="pl-k">return</span> d()})<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==typeof</span> <span class="pl-c1">window</span><span class="pl-k">?</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>./node-html<span class="pl-pds">&quot;</span></span>)(<span class="pl-c1">module</span>,d)<span class="pl-k">:</span>put<span class="pl-k">=</span>d()});</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k,m,d,c<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>a}<span class="pl-k">for</span>(<span class="pl-k">var</span> s <span class="pl-k">in</span> e)c.<span class="pl-c1">call</span>(e,s)<span class="pl-k">&amp;&amp;</span>(a[s]<span class="pl-k">=</span>e[s]);<span class="pl-c1">h</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>e.<span class="pl-c1">prototype</span>;<span class="pl-c1">a</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">h</span>;a.__super__<span class="pl-k">=</span>e.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> a};<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-c1">window</span>.Epoch<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">window</span>.Epoch<span class="pl-k">=</span>{});<span class="pl-c1">null</span><span class="pl-k">==</span>(d<span class="pl-k">=</span><span class="pl-c1">window</span>.Epoch).Chart<span class="pl-k">&amp;&amp;</span>(d.Chart<span class="pl-k">=</span>{});<span class="pl-c1">null</span><span class="pl-k">==</span>(d<span class="pl-k">=</span><span class="pl-c1">window</span>.Epoch).Time<span class="pl-k">&amp;&amp;</span>(d.Time<span class="pl-k">=</span>{});<span class="pl-c1">null</span><span class="pl-k">==</span>(d<span class="pl-k">=</span><span class="pl-c1">window</span>.Epoch).Util<span class="pl-k">&amp;&amp;</span>(d.Util<span class="pl-k">=</span>{});<span class="pl-c1">null</span><span class="pl-k">==</span>(d<span class="pl-k">=</span><span class="pl-c1">window</span>.Epoch).Formats<span class="pl-k">&amp;&amp;</span>(d.Formats<span class="pl-k">=</span>{});<span class="pl-c1">Epoch</span>.<span class="pl-en">isArray</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>array<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>$.<span class="pl-c1">type</span>(a)};<span class="pl-c1">Epoch</span>.<span class="pl-en">isObject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">$.<span class="pl-c1">type</span>(a)};<span class="pl-c1">Epoch</span>.<span class="pl-en">isString</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>$.<span class="pl-c1">type</span>(a)};<span class="pl-c1">Epoch</span>.<span class="pl-en">isFunction</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>$.<span class="pl-c1">type</span>(a)};<span class="pl-c1">Epoch</span>.<span class="pl-en">warn</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-en">console</span>.warn<span class="pl-k">||</span><span class="pl-en">console</span>.log)(<span class="pl-s"><span class="pl-pds">&quot;</span>Warning: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a)};<span class="pl-c1">Epoch</span>.<span class="pl-en">exception</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Epoch Error: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a;};<span class="pl-c1">Epoch.Util</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e,h,s;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span>a)<span class="pl-k">return</span> <span class="pl-c1">null</span>;e<span class="pl-k">=</span>{};<span class="pl-k">for</span>(h <span class="pl-k">in</span> a)s<span class="pl-k">=</span>a[h],e[h]<span class="pl-k">=</span>s;<span class="pl-k">return</span> e};<span class="pl-c1">Epoch.Util</span>.<span class="pl-en">defaults</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> h,s;s<span class="pl-k">=</span>Epoch.Util.copy(a);<span class="pl-k">for</span>(h <span class="pl-k">in</span> e)<span class="pl-c1">null</span><span class="pl-k">!=</span>a[h]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!=</span>e[h]<span class="pl-k">?!</span>Epoch.isArray(a[h])<span class="pl-k">&amp;&amp;</span>Epoch.isObject(a[h])<span class="pl-k">&amp;&amp;</span>Epoch.isObject(e[h])<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line">s[h]<span class="pl-k">=</span>Epoch.Util.defaults(a[h],e[h])<span class="pl-k">:</span>s[h]<span class="pl-k">=</span>a[h]<span class="pl-k">:</span>s[h]<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>a[h]<span class="pl-k">?</span>a[h]<span class="pl-k">:</span>e[h];<span class="pl-k">return</span> s};<span class="pl-c1">Epoch.Util</span>.<span class="pl-en">formatSI</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> s,c,f,d;<span class="pl-c1">null</span><span class="pl-k">==</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">1E3</span><span class="pl-k">&gt;</span>a)<span class="pl-k">return</span> a;d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>KMGTPEZY<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(c <span class="pl-k">in</span> d)<span class="pl-k">if</span>(f<span class="pl-k">=</span>d[c],s<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>,<span class="pl-c1">3</span><span class="pl-k">*</span>((c|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>)),a<span class="pl-k">&gt;=</span>s<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>,<span class="pl-c1">3</span><span class="pl-k">*</span>((c|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span>))){a<span class="pl-k">/=</span>s;<span class="pl-k">if</span>((a|<span class="pl-c1">0</span>)<span class="pl-k">!==</span>a<span class="pl-k">||</span>h)a<span class="pl-k">=</span>a.toFixed(e);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f}};<span class="pl-c1">Epoch.Util</span>.<span class="pl-en">dasherize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>()};<span class="pl-c1">Epoch.Util</span>.<span class="pl-en">domain</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> h,s,c,f,d,n,p,u;<span class="pl-c1">null</span><span class="pl-k">==</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span>{};f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(n<span class="pl-k">=</span>a.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>n;f<span class="pl-k">++</span>)<span class="pl-k">for</span>(h<span class="pl-k">=</span>a[f],u<span class="pl-k">=</span>h.values,d<span class="pl-k">=</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span>u.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>p;d<span class="pl-k">++</span>)h<span class="pl-k">=</span>u[d],c[h[e]]<span class="pl-k">=!</span><span class="pl-c1">0</span>;f<span class="pl-k">=</span>[];<span class="pl-k">for</span>(s <span class="pl-k">in</span> c)f.<span class="pl-c1">push</span>(s);<span class="pl-k">return</span> f};<span class="pl-c1">Epoch</span>.<span class="pl-en">toRGBA</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> h,c;<span class="pl-k">if</span>(a.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgba<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span></span>))h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>r<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">=</span>d3.rgb(a))h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c.r<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c.g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c.b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> h};<span class="pl-c1">Epoch.Formats</span>.<span class="pl-en">regular</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a};<span class="pl-c1">Epoch.Formats</span>.<span class="pl-en">si</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> Epoch.Util.formatSI(a)};<span class="pl-c1">Epoch.Formats</span>.<span class="pl-en">percent</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-c1">100</span><span class="pl-k">*</span>a).toFixed(<span class="pl-c1">1</span>)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>};m<span class="pl-k">=</span>d3.time.format(<span class="pl-s"><span class="pl-pds">&quot;</span>%I:%M:%S %p<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">Epoch.Formats</span>.<span class="pl-en">seconds</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> m(<span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-c1">1E3</span><span class="pl-k">*</span>a))};<span class="pl-c1">Epoch</span>.<span class="pl-en">Events</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(){<span class="pl-v">this</span>._events<span class="pl-k">=</span>{}}<span class="pl-c1">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">on</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> c;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>h)<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">==</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>._events)[a]<span class="pl-k">&amp;&amp;</span>(c[a]<span class="pl-k">=</span>[]),<span class="pl-v">this</span>._events[a].<span class="pl-c1">push</span>(h)};<span class="pl-c1">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">off</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> c,t;<span class="pl-k">if</span>(Epoch.isObject(<span class="pl-v">this</span>._events[a])){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span>h)<span class="pl-k">return</span> <span class="pl-k">delete</span> <span class="pl-v">this</span>._events[a];<span class="pl-k">for</span>(t<span class="pl-k">=</span>[];<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>._events[a].<span class="pl-c1">indexOf</span>(h));)t.<span class="pl-c1">push</span>(<span class="pl-v">this</span>._events[a].<span class="pl-c1">splice</span>(c,<span class="pl-c1">1</span>));<span class="pl-k">return</span> t}};<span class="pl-c1">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">trigger</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> h,</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line">c,t,f,d,n,p,u;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>._events[a]){<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,e,h;h<span class="pl-k">=</span>[];f<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span>arguments.<span class="pl-c1">length</span>;<span class="pl-c1">1</span><span class="pl-k">&lt;=</span>e<span class="pl-k">?</span>a<span class="pl-k">&lt;</span>e<span class="pl-k">:</span>a<span class="pl-k">&gt;</span>e;f<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&lt;=</span>e<span class="pl-k">?++</span>a<span class="pl-k">:--</span>a)h.<span class="pl-c1">push</span>(arguments[f]);<span class="pl-k">return</span> h}.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments);p<span class="pl-k">=</span><span class="pl-v">this</span>._events[a];u<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(n<span class="pl-k">=</span>p.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>n;d<span class="pl-k">++</span>)c<span class="pl-k">=</span>p[d],t<span class="pl-k">=</span><span class="pl-c1">null</span>,Epoch.isString(c)<span class="pl-k">?</span>t<span class="pl-k">=</span><span class="pl-v">this</span>[c]<span class="pl-k">:</span>Epoch.isFunction(c)<span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span>c),<span class="pl-c1">null</span><span class="pl-k">==</span>t<span class="pl-k">&amp;&amp;</span>Epoch.exception(<span class="pl-s"><span class="pl-pds">&quot;</span>Callback for event &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; is not a function or reference to a method.<span class="pl-pds">&quot;</span></span>),u.<span class="pl-c1">push</span>(t.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,h));<span class="pl-k">return</span> u}};<span class="pl-k">return</span> a}();<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">Base</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>a;</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line">e.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.setData(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span><span class="pl-k">||</span>[]);<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.el<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.el<span class="pl-k">=</span>$(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.el));<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">width</span>;<span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">height</span>;<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.el<span class="pl-k">?</span>(<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>$(<span class="pl-v">this</span>.el).<span class="pl-c1">width</span>()),<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>$(<span class="pl-v">this</span>.el).<span class="pl-c1">height</span>()))<span class="pl-k">:</span>(<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>h.dimensions.<span class="pl-c1">width</span>),<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>h.dimensions.<span class="pl-c1">height</span>))}<span class="pl-k">var</span> h;f(e,a);h<span class="pl-k">=</span>{dimensions<span class="pl-k">:</span>{width<span class="pl-k">:</span><span class="pl-c1">320</span>,height<span class="pl-k">:</span><span class="pl-c1">240</span>}};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setData</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e,h,c,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">f,d;e<span class="pl-k">=</span><span class="pl-c1">1</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>a.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>d;f<span class="pl-k">++</span>)c<span class="pl-k">=</span>a[f],h<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>layer<span class="pl-pds">&quot;</span></span>],h.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>category<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e),<span class="pl-c1">null</span><span class="pl-k">!=</span>c.<span class="pl-c1">label</span><span class="pl-k">&amp;&amp;</span>h.<span class="pl-c1">push</span>(Epoch.Util.dasherize(c.<span class="pl-c1">label</span>)),c.<span class="pl-c1">className</span><span class="pl-k">=</span>h.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),e<span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>a};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.setData(a);<span class="pl-k">if</span>(e)<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extent</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[d3.<span class="pl-c1">min</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> d3.<span class="pl-c1">min</span>(e.values,a)}),d3.<span class="pl-c1">max</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> d3.<span class="pl-c1">max</span>(e.values,a)})]};<span class="pl-k">return</span> e}(Epoch.Events);<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">SVG</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>{};e.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span>);<span class="pl-v">this</span>.svg<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.el<span class="pl-k">?</span>d3.<span class="pl-c1">select</span>(<span class="pl-v">this</span>.el.get(<span class="pl-c1">0</span>)).append(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>d3.<span class="pl-c1">select</span>(<span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>));<span class="pl-v">this</span>.svg.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">width</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>)}f(e,a);<span class="pl-k">return</span> e}(Epoch.Chart.Base);<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">Canvas</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>{};e.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span>);<span class="pl-v">this</span>.canvas<span class="pl-k">=</span>$(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;canvas&gt;&lt;/canvas&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.canvas.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">width</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>);<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.el<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.el.append(<span class="pl-v">this</span>.canvas);</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.ctx<span class="pl-k">=</span><span class="pl-v">this</span>.canvas.get(<span class="pl-c1">0</span>).getContext(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>)}f(e,a);<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getStyles</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> k.getStyles(a,<span class="pl-v">this</span>.el)};<span class="pl-k">return</span> e}(Epoch.Chart.Base);<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(){}a.cache<span class="pl-k">=</span>{};a.styleList<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>];a.container<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">a</span>.<span class="pl-en">load</span><span class="pl-k">=</span><span class="pl-k">function</span>(){$(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>).append(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div id=&quot;_canvas_css_reference&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-k">return</span> a.container<span class="pl-k">=</span>$(<span class="pl-s"><span class="pl-pds">&quot;</span>#_canvas_css_reference<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">a</span>.<span class="pl-en">containerId</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">a</span>.<span class="pl-en">getSVG</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> h,c;c<span class="pl-k">=</span>a.containerId(e);h<span class="pl-k">=</span>a.svgElements[c];</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>$(e).clone().html(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;svg&gt;&lt;/svg&gt;<span class="pl-pds">&quot;</span></span>),a.svgContainer.append(e),h<span class="pl-k">=</span>a.svgElements[c]<span class="pl-k">=</span>$(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>,e));<span class="pl-k">return</span> h};<span class="pl-c1">a</span>.<span class="pl-en">getStyles</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> c,f,d,w,n,p,u,v;f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.containerId(h)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>__<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e;c<span class="pl-k">=</span>a.cache[f];<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>c)<span class="pl-k">return</span> c;c<span class="pl-k">=</span>$(h).clone().html(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;svg&gt;&lt;/svg&gt;<span class="pl-pds">&quot;</span></span>);c.removeAttr(<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>);a.container.append(c);u<span class="pl-k">=</span>$(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>,c);w<span class="pl-k">=</span>e.<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>);<span class="pl-k">for</span>(n<span class="pl-k">=</span>p<span class="pl-k">=</span>put(w.<span class="pl-c1">shift</span>());w.<span class="pl-c1">length</span>;)d<span class="pl-k">=</span>put(w.<span class="pl-c1">shift</span>()),n.<span class="pl-c1">appendChild</span>(d),n<span class="pl-k">=</span>d;u.html(p);w<span class="pl-k">=</span>$(e,u);n<span class="pl-k">=</span>{};v<span class="pl-k">=</span>a.styleList;p<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(u<span class="pl-k">=</span>v.<span class="pl-c1">length</span>;p<span class="pl-k">&lt;</span>u;p<span class="pl-k">++</span>)d<span class="pl-k">=</span>v[p],n[d]<span class="pl-k">=</span>w.css(d);a.cache[f]<span class="pl-k">=</span>n;$(c,</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">a.container).remove();<span class="pl-k">return</span> n};<span class="pl-k">return</span> a}();$(k.load);<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">Plot</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c,f,d,n;<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>{};a<span class="pl-k">=</span>Epoch.Util.copy(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.margins)<span class="pl-k">||</span>{};e.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-c1">options</span>,h));<span class="pl-v">this</span>.margins<span class="pl-k">=</span>{};n<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>];f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>n.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>d;f<span class="pl-k">++</span>)c<span class="pl-k">=</span>n[f],<span class="pl-v">this</span>.margins[c]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.margins[c],<span class="pl-c1">null</span><span class="pl-k">!=</span>a[c]<span class="pl-k">||</span><span class="pl-v">this</span>.hasAxis(c)<span class="pl-k">||</span>(<span class="pl-v">this</span>.margins[c]<span class="pl-k">=</span><span class="pl-c1">6</span>);<span class="pl-v">this</span>.svg<span class="pl-k">=</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">left</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">var</span> h;f(e,a);h<span class="pl-k">=</span>{margins<span class="pl-k">:</span>{top<span class="pl-k">:</span><span class="pl-c1">25</span>,right<span class="pl-k">:</span><span class="pl-c1">50</span>,bottom<span class="pl-k">:</span><span class="pl-c1">25</span>,left<span class="pl-k">:</span><span class="pl-c1">50</span>},axes<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>],ticks<span class="pl-k">:</span>{top<span class="pl-k">:</span><span class="pl-c1">14</span>,bottom<span class="pl-k">:</span><span class="pl-c1">14</span>,left<span class="pl-k">:</span><span class="pl-c1">5</span>,right<span class="pl-k">:</span><span class="pl-c1">5</span>},tickFormats<span class="pl-k">:</span>{top<span class="pl-k">:</span>Epoch.Formats.regular,bottom<span class="pl-k">:</span>Epoch.Formats.regular,left<span class="pl-k">:</span>Epoch.Formats.si,right<span class="pl-k">:</span>Epoch.Formats.si}};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setTickFormat</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats[a]<span class="pl-k">=</span>e};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">hasAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.axes.<span class="pl-c1">indexOf</span>(a)};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">innerWidth</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.margins.<span class="pl-c1">left</span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">right</span>)};</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">innerHeight</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">bottom</span>)};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">x</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.scale.linear().domain(<span class="pl-v">this</span>.extent(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">x</span>})).range([<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-c1">innerWidth</span>()])};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.scale.linear().domain(<span class="pl-v">this</span>.extent(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">y</span>})).range([<span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>(),<span class="pl-c1">0</span>])};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">bottomAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-c1">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-c1">x</span>()).orient(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks.<span class="pl-c1">bottom</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats.<span class="pl-c1">bottom</span>)};</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">topAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-c1">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-c1">x</span>()).orient(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks.<span class="pl-c1">top</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats.<span class="pl-c1">top</span>)};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">leftAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-c1">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-c1">y</span>()).orient(<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks.<span class="pl-c1">left</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats.<span class="pl-c1">left</span>)};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">rightAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-c1">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-c1">y</span>()).orient(<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks.<span class="pl-c1">right</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats.<span class="pl-c1">right</span>)};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){e.__super__.draw.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-v">this</span>._axesDrawn<span class="pl-k">?</span><span class="pl-v">this</span>.redrawAxes()<span class="pl-k">:</span><span class="pl-v">this</span>.drawAxes()};<span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">redrawAxes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.x.axis.bottom<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>.bottomAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.x.axis.top<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>.topAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.y.axis.left<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>.leftAxis());<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> <span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.y.axis.right<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>.rightAxis())};</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">e</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">drawAxes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>x axis bottom<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(0, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>.bottomAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>x axis top<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>.topAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y axis left<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>.leftAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y axis right<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">innerWidth</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, 0)<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>.rightAxis());</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-v">this</span>._axesDrawn<span class="pl-k">=!</span><span class="pl-c1">0</span>};<span class="pl-k">return</span> e}(Epoch.Chart.SVG)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">Area</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-k">return</span> c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments)}m(c,d);<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> c,a,e,h,s,d,l;c<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(s<span class="pl-k">=</span>d.<span class="pl-c1">length</span>;h<span class="pl-k">&lt;</span>s;h<span class="pl-k">++</span>)<span class="pl-k">for</span>(a <span class="pl-k">in</span> e<span class="pl-k">=</span>d[h],l<span class="pl-k">=</span>e.values,l)e<span class="pl-k">=</span>l[a],<span class="pl-c1">null</span><span class="pl-k">!=</span>c[a]<span class="pl-k">&amp;&amp;</span>(c[a]<span class="pl-k">+=</span>e.<span class="pl-c1">y</span>),<span class="pl-c1">null</span><span class="pl-k">==</span>c[a]<span class="pl-k">&amp;&amp;</span>(c[a]<span class="pl-k">=</span>e.<span class="pl-c1">y</span>);<span class="pl-k">return</span> d3.scale.linear().domain([<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line">d3.<span class="pl-c1">max</span>(c)]).range([<span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-c1">bottom</span>,<span class="pl-c1">0</span>])};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> d,a,e,h;a<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">x</span>(),<span class="pl-v">this</span>.<span class="pl-c1">y</span>()];e<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];h<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];d<span class="pl-k">=</span>d3.svg.area().<span class="pl-c1">x</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> e(a.<span class="pl-c1">x</span>)}).y0(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> h(a.y0)}).y1(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> h(a.y0<span class="pl-k">+</span>a.<span class="pl-c1">y</span>)});d3.layout.stack().values(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.values})(<span class="pl-v">this</span>.<span class="pl-c1">data</span>);a<span class="pl-k">=</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">label</span>});a.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.area<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> d(a.values)});a.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">className</span>});a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> d(a.values)});a.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>).remove();<span class="pl-k">return</span> c.__super__.draw.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-k">return</span> c}(Epoch.Chart.Plot)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">Bar</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>{};c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-c1">options</span>,f))}<span class="pl-k">var</span> f;m(c,d);f<span class="pl-k">=</span>{style<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>grouped<span class="pl-pds">&quot;</span></span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">x</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.scale.ordinal().domain(Epoch.Util.domain(<span class="pl-v">this</span>.<span class="pl-c1">data</span>)).rangeRoundBands([<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-c1">innerWidth</span>()],</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0.1</span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">x1</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e;<span class="pl-k">return</span> d3.scale.ordinal().domain(<span class="pl-k">function</span>(){<span class="pl-k">var</span> a,c,d,f;d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;f<span class="pl-k">=</span>[];a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>d.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)e<span class="pl-k">=</span>d[a],f.<span class="pl-c1">push</span>(e.<span class="pl-c1">label</span>);<span class="pl-k">return</span> f}.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)).rangeRoundBands([<span class="pl-c1">0</span>,a.rangeBand()],<span class="pl-c1">0.08</span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;a<span class="pl-k">=</span><span class="pl-v">this</span>.extent(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">y</span>});a[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">0</span>,a[<span class="pl-c1">0</span>]);<span class="pl-k">return</span> d3.scale.linear().domain(a).range([<span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-c1">bottom</span>,<span class="pl-c1">0</span>])};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_remapData</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,e,c,d,f,l,w,n,p,u,v,q;f<span class="pl-k">=</span>{};v<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(n<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">v.<span class="pl-c1">length</span>;l<span class="pl-k">&lt;</span>n;l<span class="pl-k">++</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span>v[l],a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>bar <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d.<span class="pl-c1">className</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span>layer<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),q<span class="pl-k">=</span>d.values,w<span class="pl-k">=</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span>q.<span class="pl-c1">length</span>;w<span class="pl-k">&lt;</span>p;w<span class="pl-k">++</span>)e<span class="pl-k">=</span>q[w],<span class="pl-c1">null</span><span class="pl-k">==</span>f[u<span class="pl-k">=</span>e.<span class="pl-c1">x</span>]<span class="pl-k">&amp;&amp;</span>(f[u]<span class="pl-k">=</span>[]),f[e.<span class="pl-c1">x</span>].<span class="pl-c1">push</span>({label<span class="pl-k">:</span>d.<span class="pl-c1">label</span>,y<span class="pl-k">:</span>e.<span class="pl-c1">y</span>,className<span class="pl-k">:</span>a});e<span class="pl-k">=</span>[];<span class="pl-k">for</span>(c <span class="pl-k">in</span> f)a<span class="pl-k">=</span>f[c],e.<span class="pl-c1">push</span>({group<span class="pl-k">:</span>c,values<span class="pl-k">:</span>a});<span class="pl-k">return</span> e};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,e,h,d,f,l;a<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">x</span>(),<span class="pl-v">this</span>.<span class="pl-c1">y</span>()];d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];l<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];f<span class="pl-k">=</span><span class="pl-v">this</span>.x1(d);e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-c1">bottom</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>._remapData();a<span class="pl-k">=</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.group});a.transition().duration(<span class="pl-c1">750</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d(a.group)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, 0)<span class="pl-pds">&quot;</span></span>});a.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>layer<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d(a.group)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, 0)<span class="pl-pds">&quot;</span></span>});h<span class="pl-k">=</span>a.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.values});h.transition().duration(<span class="pl-c1">600</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> f(a.<span class="pl-c1">label</span>)}).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> l(a.<span class="pl-c1">y</span>)}).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,f.rangeBand()).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> e<span class="pl-k">-</span>l(a.<span class="pl-c1">y</span>)});h.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">className</span>}).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> f(a.<span class="pl-c1">label</span>)}).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> l(a.<span class="pl-c1">y</span>)}).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,f.rangeBand()).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> e<span class="pl-k">-</span>l(a.<span class="pl-c1">y</span>)});h.exit().transition().duration(<span class="pl-c1">150</span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>).remove();a.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>).remove();<span class="pl-k">return</span> c.__super__.draw.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-k">return</span> c}(Epoch.Chart.Plot)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">Line</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-k">return</span> c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments)}m(c,d);<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">line</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> c,a,e;e<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">x</span>(),<span class="pl-v">this</span>.<span class="pl-c1">y</span>()];c<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];a<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];<span class="pl-k">return</span> d3.svg.line().<span class="pl-c1">x</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> c(a.<span class="pl-c1">x</span>)}).<span class="pl-c1">y</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> a(e.<span class="pl-c1">y</span>)})};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> d,a;a<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">x</span>(),</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-c1">y</span>(),<span class="pl-v">this</span>.line()][<span class="pl-c1">2</span>];d<span class="pl-k">=</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">label</span>});d.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.line<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> a(e.values)});d.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">className</span>}).append(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> a(e.values)});d.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>).remove();<span class="pl-k">return</span> c.__super__.draw.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)};<span class="pl-k">return</span> c}(Epoch.Chart.Plot)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">Pie</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>{};c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-c1">options</span>,f));a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-v">this</span>.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-v">this</span>.pie<span class="pl-k">=</span>d3.layout.pie().<span class="pl-c1">sort</span>(<span class="pl-c1">null</span>).<span class="pl-c1">value</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">value</span>});<span class="pl-v">this</span>.arc<span class="pl-k">=</span>d3.svg.arc().outerRadius(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.margin).innerRadius(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.inner);</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.svg<span class="pl-k">=</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">var</span> f;m(c,d);f<span class="pl-k">=</span>{margin<span class="pl-k">:</span><span class="pl-c1">10</span>,inner<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,e<span class="pl-k">=</span><span class="pl-v">this</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.arc<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(<span class="pl-v">this</span>.pie(<span class="pl-v">this</span>.<span class="pl-c1">data</span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">data</span>.<span class="pl-c1">label</span>});a.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>arc pie <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.<span class="pl-c1">data</span>.<span class="pl-c1">className</span>});a.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.arc);a.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e.arc.centroid(a)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">text</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">data</span>.<span class="pl-c1">label</span>});</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.arc).each(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>._current<span class="pl-k">=</span>a});a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e.arc.centroid(a)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>}).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>.35em<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">text</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">data</span>.<span class="pl-c1">label</span>});<span class="pl-k">return</span> a.exit().remove()};<span class="pl-k">return</span> c}(Epoch.Chart.SVG)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Chart</span>.<span class="pl-en">Scatter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>{};c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-c1">options</span>,f))}<span class="pl-k">var</span> f;m(c,d);f<span class="pl-k">=</span>{radius<span class="pl-k">:</span><span class="pl-c1">3.5</span>,axes<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>]};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,e,h,d;c.__super__.draw.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);a<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">x</span>(),</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-c1">y</span>()];h<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];e<span class="pl-k">=</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">label</span>});e.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">className</span>});a<span class="pl-k">=</span>e.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.dot<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.values});a.transition().duration(<span class="pl-c1">500</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> h(a.<span class="pl-c1">x</span>)}).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> d(a.<span class="pl-c1">y</span>)});a.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dot<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span>.radius).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> h(a.<span class="pl-c1">x</span>)}).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> d(a.<span class="pl-c1">y</span>)});a.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>).remove();<span class="pl-k">return</span> e.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>).remove()};<span class="pl-k">return</span> c}(Epoch.Chart.Plot)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Time</span>.<span class="pl-en">Plot</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e,h,d,t,l<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>a;a<span class="pl-k">=</span>Epoch.Util.copy(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.margins)<span class="pl-k">||</span>{};c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-c1">options</span>,f));<span class="pl-v">this</span>._queueSize<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.queueSize;<span class="pl-v">this</span>._queue<span class="pl-k">=</span>[];<span class="pl-v">this</span>.margins<span class="pl-k">=</span>{};t<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>];</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>t.<span class="pl-c1">length</span>;h<span class="pl-k">&lt;</span>d;h<span class="pl-k">++</span>)e<span class="pl-k">=</span>t[h],<span class="pl-v">this</span>.margins[e]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.margins[e],<span class="pl-c1">null</span><span class="pl-k">!=</span>a[e]<span class="pl-k">||</span><span class="pl-v">this</span>.hasAxis(e)<span class="pl-k">||</span>(<span class="pl-v">this</span>.margins[e]<span class="pl-k">=</span><span class="pl-c1">6</span>);<span class="pl-v">this</span>.svg<span class="pl-k">=</span>d3.<span class="pl-c1">select</span>(<span class="pl-v">this</span>.el.get(<span class="pl-c1">0</span>)).insert(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>:first-child<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">width</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-v">this</span>.el.css(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-v">this</span>.el.css(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.el.css(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.canvas.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">innerWidth</span>());<span class="pl-v">this</span>.canvas.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>()<span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">bottom</span>);<span class="pl-v">this</span>.canvas.css({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">left</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z-index<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-1<span class="pl-pds">&quot;</span></span>});<span class="pl-v">this</span>.animation<span class="pl-k">=</span>{interval<span class="pl-k">:</span><span class="pl-c1">null</span>,active<span class="pl-k">:!</span><span class="pl-c1">1</span>,delta<span class="pl-k">:-</span>(<span class="pl-v">this</span>.w()<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.fps),frame<span class="pl-k">:</span><span class="pl-c1">0</span>,duration<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.fps};<span class="pl-v">this</span>._prepareTimeAxes();<span class="pl-v">this</span>._prepareRangeAxes();<span class="pl-c1">this</span>.<span class="pl-en">animationCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> l._animate()}}<span class="pl-k">var</span> f;m(c,d);f<span class="pl-k">=</span>{fps<span class="pl-k">:</span><span class="pl-c1">24</span>,historySize<span class="pl-k">:</span><span class="pl-c1">120</span>,windowSize<span class="pl-k">:</span><span class="pl-c1">40</span>,queueSize<span class="pl-k">:</span><span class="pl-c1">10</span>,margins<span class="pl-k">:</span>{top<span class="pl-k">:</span><span class="pl-c1">25</span>,right<span class="pl-k">:</span><span class="pl-c1">50</span>,bottom<span class="pl-k">:</span><span class="pl-c1">25</span>,left<span class="pl-k">:</span><span class="pl-c1">50</span>},axes<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>],ticks<span class="pl-k">:</span>{time<span class="pl-k">:</span><span class="pl-c1">15</span>,left<span class="pl-k">:</span><span class="pl-c1">5</span>,right<span class="pl-k">:</span><span class="pl-c1">5</span>},tickFormats<span class="pl-k">:</span>{top<span class="pl-k">:</span>Epoch.Formats.seconds,bottom<span class="pl-k">:</span>Epoch.Formats.seconds,</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">left<span class="pl-k">:</span>Epoch.Formats.si,right<span class="pl-k">:</span>Epoch.Formats.si}};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setData</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e,c,d,f,l;<span class="pl-v">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>[];l<span class="pl-k">=</span>[];<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)f<span class="pl-k">=</span>a[d],c<span class="pl-k">=</span>Epoch.Util.copy(f),e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,f.values.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.historySize),c.values<span class="pl-k">=</span>f.values.<span class="pl-c1">slice</span>(e),e<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>layer<span class="pl-pds">&quot;</span></span>],e.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>category<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>((d|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>)),<span class="pl-c1">null</span><span class="pl-k">!=</span>f.<span class="pl-c1">label</span><span class="pl-k">&amp;&amp;</span>e.<span class="pl-c1">push</span>(Epoch.Util.dasherize(f.<span class="pl-c1">label</span>)),c.<span class="pl-c1">className</span><span class="pl-k">=</span>e.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),l.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">push</span>(c));<span class="pl-k">return</span> l};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_offsetX</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0</span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_prepareTimeAxes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,e,c,d,f;<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">(a<span class="pl-k">=</span><span class="pl-v">this</span>.bottomAxis<span class="pl-k">=</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>x axis bottom canvas<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.margins.<span class="pl-c1">left</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>()<span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>),a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>domain<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M0,0H<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-c1">innerWidth</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>)));<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.topAxis<span class="pl-k">=</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>x axis top canvas<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.margins.<span class="pl-c1">left</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>),a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>domain<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M0,0H<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-c1">innerWidth</span>()<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>)));d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks.time;<span class="pl-v">this</span>._ticks<span class="pl-k">=</span>[];<span class="pl-v">this</span>._tickTimer<span class="pl-k">=</span>d;f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>f.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-k">if</span>(a<span class="pl-k">=</span>f[e],<span class="pl-c1">null</span><span class="pl-k">!=</span>a.values<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>a.values.<span class="pl-c1">length</span>){c<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize<span class="pl-k">-</span><span class="pl-c1">1</span>,a.values.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];e<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];<span class="pl-k">for</span>(c<span class="pl-k">=</span>c[<span class="pl-c1">1</span>];<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c;)<span class="pl-v">this</span>._pushTick(e,a.values[c].time,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),e<span class="pl-k">-=</span>d,c<span class="pl-k">-=</span>d;<span class="pl-k">break</span>}<span class="pl-k">return</span>[]};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_prepareRangeAxes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y axis left<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.margins.<span class="pl-c1">left</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>._leftAxis());</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> <span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y axis right<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-c1">right</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>._rightAxis())};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_leftAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-c1">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-c1">y</span>()).orient(<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks.<span class="pl-c1">left</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats.<span class="pl-c1">left</span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_rightAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-c1">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-c1">y</span>()).orient(<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks.<span class="pl-c1">right</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats.<span class="pl-c1">right</span>)};</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">hasAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.axes.<span class="pl-c1">indexOf</span>(a)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">innerWidth</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.margins.<span class="pl-c1">left</span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">right</span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">innerHeight</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.margins.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-c1">bottom</span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_prepareEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_prepareLayers</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_startTransition</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.animation.active<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>._queue.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-v">this</span>.trigger(<span class="pl-s"><span class="pl-pds">&quot;</span>transition:start<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>._shift(),</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.animation.active<span class="pl-k">=!</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.animation.interval<span class="pl-k">=</span><span class="pl-c1">setInterval</span>(<span class="pl-v">this</span>.animationCallback,<span class="pl-c1">1E3</span><span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.fps)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_stopTransition</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,e,c,d;<span class="pl-k">if</span>(<span class="pl-v">this</span>.inTransition()){d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>d.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)a<span class="pl-k">=</span>d[e],a.values.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a.values.<span class="pl-c1">shift</span>();e<span class="pl-k">=</span>[<span class="pl-v">this</span>._ticks[<span class="pl-c1">0</span>],<span class="pl-v">this</span>._ticks[<span class="pl-v">this</span>._ticks.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]];a<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];e<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];<span class="pl-c1">null</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>e.enter<span class="pl-k">&amp;&amp;</span>(e.enter<span class="pl-k">=!</span><span class="pl-c1">1</span>,e.opacity<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span>a.exit<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>._shiftTick();<span class="pl-v">this</span>.animation.<span class="pl-c1">frame</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.trigger(<span class="pl-s"><span class="pl-pds">&quot;</span>transition:end<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>._queue.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-v">this</span>._shift();</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.animation.active<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">clearInterval</span>(<span class="pl-v">this</span>.animation.interval)}};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">inTransition</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.animation.active};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">push</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>._prepareLayers(a);<span class="pl-v">this</span>._queue.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>._queueSize<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>._queue.<span class="pl-c1">splice</span>(<span class="pl-v">this</span>._queueSize,<span class="pl-v">this</span>._queue.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-v">this</span>._queueSize);<span class="pl-k">if</span>(<span class="pl-v">this</span>._queue.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-v">this</span>._queueSize)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>._queue.<span class="pl-c1">push</span>(a.map(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> e._prepareEntry(a)}));<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.inTransition())<span class="pl-k">return</span> <span class="pl-v">this</span>._startTransition()};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_shift</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">e,c,d;<span class="pl-v">this</span>.trigger(<span class="pl-s"><span class="pl-pds">&quot;</span>before:shift<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-v">this</span>._queue.<span class="pl-c1">shift</span>();d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;<span class="pl-k">for</span>(e <span class="pl-k">in</span> d)c<span class="pl-k">=</span>d[e],c.values.<span class="pl-c1">push</span>(a[e]);<span class="pl-v">this</span>._updateTicks(a[<span class="pl-c1">0</span>].time);<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.y.axis.left<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>._leftAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.y.axis.right<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>._rightAxis());<span class="pl-k">return</span> <span class="pl-v">this</span>.trigger(<span class="pl-s"><span class="pl-pds">&quot;</span>after:shift<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_animate</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.inTransition())<span class="pl-k">return</span><span class="pl-k">++</span><span class="pl-v">this</span>.animation.<span class="pl-c1">frame</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.animation.duration<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>._stopTransition(),<span class="pl-v">this</span>.draw(<span class="pl-v">this</span>.animation.<span class="pl-c1">frame</span><span class="pl-k">*</span><span class="pl-v">this</span>.animation.delta),<span class="pl-v">this</span>._updateTimeAxes()};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.scale.linear().domain(<span class="pl-v">this</span>.extent(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a.<span class="pl-c1">y</span>})).range([<span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>(),<span class="pl-c1">0</span>])};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">w</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">innerWidth</span>()<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_updateTicks</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>))<span class="pl-k">if</span>(<span class="pl-k">++</span><span class="pl-v">this</span>._tickTimer<span class="pl-k">%</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks.time<span class="pl-k">||</span><span class="pl-v">this</span>._pushTick(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize,a,<span class="pl-k">!</span><span class="pl-c1">0</span>),</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-v">this</span>._ticks[<span class="pl-c1">0</span>].<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-v">this</span>.w()))<span class="pl-k">return</span> <span class="pl-v">this</span>._ticks[<span class="pl-c1">0</span>].exit<span class="pl-k">=!</span><span class="pl-c1">0</span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_pushTick</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> e<span class="pl-k">=</span>{time<span class="pl-k">:</span>e,x<span class="pl-k">:</span>a<span class="pl-k">*</span><span class="pl-v">this</span>.w()<span class="pl-k">+</span><span class="pl-v">this</span>._offsetX(),opacity<span class="pl-k">:</span>c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>,enter<span class="pl-k">:</span>c<span class="pl-k">?!</span><span class="pl-c1">0</span><span class="pl-k">:!</span><span class="pl-c1">1</span>,exit<span class="pl-k">:!</span><span class="pl-c1">1</span>},<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.bottomAxis.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tick major<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(e.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,e.opacity),a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">6</span>),a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">19</span>).<span class="pl-c1">text</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats.<span class="pl-c1">bottom</span>(e.time)),e.bottomEl<span class="pl-k">=</span>$(a[<span class="pl-c1">0</span>])),<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.topAxis.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tick major<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(e.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,e.opacity),a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">6</span>),a.append(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">10</span>).<span class="pl-c1">text</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickFormats.<span class="pl-c1">top</span>(e.time)),e.topEl<span class="pl-k">=</span>$(a[<span class="pl-c1">0</span>])),d<span class="pl-k">?</span><span class="pl-v">this</span>._ticks.<span class="pl-c1">unshift</span>(e)<span class="pl-k">:</span><span class="pl-v">this</span>._ticks.<span class="pl-c1">push</span>(e),e};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_shiftTick</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>._ticks.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>._ticks.<span class="pl-c1">shift</span>(),</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">!=</span>a.topEl<span class="pl-k">&amp;&amp;</span>a.topEl.remove(),<span class="pl-c1">null</span><span class="pl-k">!=</span>a.bottomEl))<span class="pl-k">return</span> a.bottomEl.remove()};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_updateTimeAxes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,e,c,d,f,l,w;<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)){a<span class="pl-k">=</span>[<span class="pl-v">this</span>.animation.delta,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.fps];e<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];a<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];l<span class="pl-k">=</span><span class="pl-v">this</span>._ticks;w<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span>l.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>f;d<span class="pl-k">++</span>)c<span class="pl-k">=</span>l[d],c.<span class="pl-c1">x</span><span class="pl-k">+=</span>e,<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c.bottomEl.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(c.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c.topEl.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(c.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>),c.enter<span class="pl-k">?</span>c.opacity<span class="pl-k">+=</span>a<span class="pl-k">:</span>c.exit<span class="pl-k">&amp;&amp;</span>(c.opacity<span class="pl-k">-=</span>a),c.enter<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">c.exit<span class="pl-k">?</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c.bottomEl.css(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,c.opacity),<span class="pl-v">this</span>.hasAxis(<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span>w.<span class="pl-c1">push</span>(c.topEl.css(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,c.opacity))<span class="pl-k">:</span>w.<span class="pl-c1">push</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>))<span class="pl-k">:</span>w.<span class="pl-c1">push</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>);<span class="pl-k">return</span> w}};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.clearRect(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-k">return</span> c}(Epoch.Chart.Canvas);<span class="pl-c1">Epoch.Time</span>.<span class="pl-en">Stack</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-k">return</span> c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments)}m(c,d);<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_prepareLayers</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a,e,d;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>c.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>d;e<span class="pl-k">++</span>)a<span class="pl-k">=</span>c[e],</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line">a.y0<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> c};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setData</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> a,e,h,s,t;c.__super__.setData.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,d);t<span class="pl-k">=</span>[];a<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(s<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>[<span class="pl-c1">0</span>].values.<span class="pl-c1">length</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>s<span class="pl-k">?</span>d<span class="pl-k">&lt;</span>s<span class="pl-k">:</span>d<span class="pl-k">&gt;</span>s;a<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>s<span class="pl-k">?++</span>d<span class="pl-k">:--</span>d)h<span class="pl-k">=</span><span class="pl-c1">0</span>,t.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> c,d,f,s;f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;s<span class="pl-k">=</span>[];c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>f.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)e<span class="pl-k">=</span>f[c],e.values[a].y0<span class="pl-k">=</span>h,s.<span class="pl-c1">push</span>(h<span class="pl-k">+=</span>e.values[a].<span class="pl-c1">y</span>);<span class="pl-k">return</span> s}.<span class="pl-c1">call</span>(<span class="pl-v">this</span>));<span class="pl-k">return</span> t};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">extent</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> c,a,e,d,s,t,l,w;c<span class="pl-k">=</span>s<span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>[<span class="pl-c1">0</span>].values.<span class="pl-c1">length</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>l<span class="pl-k">?</span>s<span class="pl-k">&lt;</span>l<span class="pl-k">:</span>s<span class="pl-k">&gt;</span>l;c<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>l<span class="pl-k">?++</span>s<span class="pl-k">:--</span>s){a<span class="pl-k">=</span>t<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(w<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>w<span class="pl-k">?</span>t<span class="pl-k">&lt;</span>w<span class="pl-k">:</span>t<span class="pl-k">&gt;</span>w;a<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>w<span class="pl-k">?++</span>t<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-k">--</span>t)d<span class="pl-k">+=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>[a].values[c].<span class="pl-c1">y</span>;d<span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>d)}<span class="pl-k">return</span>[<span class="pl-c1">0</span>,e]};<span class="pl-k">return</span> c}(Epoch.Time.Plot)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Time</span>.<span class="pl-en">Area</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-k">return</span> c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments)}m(c,d);<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setStyles</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>c.<span class="pl-c1">className</span><span class="pl-k">?</span><span class="pl-v">this</span>.getStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>g.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c.<span class="pl-c1">className</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> path.area<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-v">this</span>.getStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>g path.area<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.fillStyle<span class="pl-k">=</span>c.fill;<span class="pl-c1">null</span><span class="pl-k">!=</span>c.stroke<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.ctx.strokeStyle<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">c.stroke);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>c[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.lineWidth<span class="pl-k">=</span>c[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a,e,d,s,t,l,w,n,p,u;<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();l<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">y</span>(),<span class="pl-v">this</span>.w()];w<span class="pl-k">=</span>l[<span class="pl-c1">0</span>];l<span class="pl-k">=</span>l[<span class="pl-c1">1</span>];u<span class="pl-k">=</span>[];<span class="pl-k">for</span>(e<span class="pl-k">=</span>n<span class="pl-k">=</span>p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>p<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&gt;=</span>n<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>n;e<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;=</span>p<span class="pl-k">?++</span>n<span class="pl-k">:--</span>n){s<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>[e];<span class="pl-v">this</span>.setStyles(s);<span class="pl-v">this</span>.ctx.beginPath();t<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize,s.values.<span class="pl-c1">length</span>,<span class="pl-v">this</span>.inTransition()];e<span class="pl-k">=</span>t[<span class="pl-c1">0</span>];d<span class="pl-k">=</span>t[<span class="pl-c1">1</span>];<span class="pl-k">for</span>(t<span class="pl-k">=</span>t[<span class="pl-c1">2</span>];<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">&lt;=--</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>d;)a<span class="pl-k">=</span>s.values[d],a<span class="pl-k">=</span>[(e<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>l<span class="pl-k">+</span>c,w(a.<span class="pl-c1">y</span><span class="pl-k">+</span>a.y0)],t<span class="pl-k">&amp;&amp;</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>l),e<span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-v">this</span>.ctx.moveTo.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>.ctx,a)<span class="pl-k">:</span><span class="pl-v">this</span>.ctx.lineTo.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>.ctx,a);e<span class="pl-k">=</span>t<span class="pl-k">?</span>(e<span class="pl-k">+</span><span class="pl-c1">3</span>)<span class="pl-k">*</span>l<span class="pl-k">+</span>c<span class="pl-k">:</span>(e<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>l<span class="pl-k">+</span>c;<span class="pl-v">this</span>.ctx.lineTo(e,<span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>());<span class="pl-v">this</span>.ctx.lineTo(<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">+</span>l<span class="pl-k">+</span>c,<span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>());<span class="pl-v">this</span>.ctx.closePath();u.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.ctx.fill())}<span class="pl-k">return</span> u};<span class="pl-k">return</span> c}(Epoch.Time.Stack)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Time</span>.<span class="pl-en">Bar</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-k">return</span> c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments)}m(c,d);<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_offsetX</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0.5</span><span class="pl-k">*</span><span class="pl-v">this</span>.w()};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setStyles</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-v">this</span>.getStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>rect.bar.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>));<span class="pl-v">this</span>.ctx.fillStyle<span class="pl-k">=</span>c.fill;<span class="pl-v">this</span>.ctx.strokeStyle<span class="pl-k">=</span>c.stroke;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">c[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.lineWidth<span class="pl-k">=</span>c[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a,e,d,s,t,l,w,n,p,u,v,q,k,m,z,x,y;<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();k<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">y</span>(),<span class="pl-v">this</span>.w()];q<span class="pl-k">=</span>k[<span class="pl-c1">0</span>];v<span class="pl-k">=</span>k[<span class="pl-c1">1</span>];z<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;y<span class="pl-k">=</span>[];k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(m<span class="pl-k">=</span>z.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>m;k<span class="pl-k">++</span>)p<span class="pl-k">=</span>z[k],<span class="pl-c1">0</span><span class="pl-k">&lt;</span>p.values.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.setStyles(p.<span class="pl-c1">className</span>),x<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize,p.values.<span class="pl-c1">length</span>,<span class="pl-v">this</span>.inTransition()],l<span class="pl-k">=</span>x[<span class="pl-c1">0</span>],n<span class="pl-k">=</span>x[<span class="pl-c1">1</span>],w<span class="pl-k">=</span>(u<span class="pl-k">=</span>x[<span class="pl-c1">2</span>])<span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>,y.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k,m;<span class="pl-k">for</span>(m<span class="pl-k">=</span>[];<span class="pl-k">--</span>l<span class="pl-k">&gt;=</span>w<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>n;)e<span class="pl-k">=</span>p.values[n],k<span class="pl-k">=</span>[l<span class="pl-k">*</span>v<span class="pl-k">+</span>c,e.<span class="pl-c1">y</span>,e.y0],d<span class="pl-k">=</span>k[<span class="pl-c1">0</span>],s<span class="pl-k">=</span>k[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">t<span class="pl-k">=</span>k[<span class="pl-c1">2</span>],u<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">+=</span>v),a<span class="pl-k">=</span>[d<span class="pl-k">+</span><span class="pl-c1">1</span>,q(s<span class="pl-k">+</span>t),v<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>()<span class="pl-k">-</span>q(s)<span class="pl-k">+</span><span class="pl-c1">0.5</span>],<span class="pl-v">this</span>.ctx.fillRect.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>.ctx,a),m.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.ctx.strokeRect.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>.ctx,a));<span class="pl-k">return</span> m}.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)));<span class="pl-k">return</span> y};<span class="pl-k">return</span> c}(Epoch.Time.Stack)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Time</span>.<span class="pl-en">Gauge</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>{};c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-c1">options</span>,f));<span class="pl-v">this</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">value</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-v">this</span>.el.css(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-v">this</span>.el.css(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.el.css(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.svg<span class="pl-k">=</span>d3.<span class="pl-c1">select</span>(<span class="pl-v">this</span>.el.get(<span class="pl-c1">0</span>)).insert(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>:first-child<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">width</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>gauge-labels<span class="pl-pds">&quot;</span></span>);$(<span class="pl-v">this</span>.svg[<span class="pl-c1">0</span>]).css({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z-index<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>});<span class="pl-v">this</span>.svg.append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.centerX()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.textY()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>).append(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">text</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.format(<span class="pl-v">this</span>.<span class="pl-c1">value</span>));<span class="pl-v">this</span>.animation<span class="pl-k">=</span>{interval<span class="pl-k">:</span><span class="pl-c1">null</span>,active<span class="pl-k">:!</span><span class="pl-c1">1</span>,delta<span class="pl-k">:</span><span class="pl-c1">0</span>,target<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-en">_animate</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e.animation.<span class="pl-c1">target</span><span class="pl-k">-</span>e.<span class="pl-c1">value</span>)<span class="pl-k">&lt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e.animation.delta)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">(e.<span class="pl-c1">value</span><span class="pl-k">=</span>e.animation.<span class="pl-c1">target</span>,<span class="pl-c1">clearInterval</span>(e.animation.interval),e.animation.active<span class="pl-k">=!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>e.<span class="pl-c1">value</span><span class="pl-k">+=</span>e.animation.delta;e.svg.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text.value<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">text</span>(e.<span class="pl-c1">options</span>.format(e.<span class="pl-c1">value</span>));<span class="pl-k">return</span> e.draw()}}<span class="pl-k">var</span> f;m(c,d);f<span class="pl-k">=</span>{domain<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],ticks<span class="pl-k">:</span><span class="pl-c1">10</span>,tickSize<span class="pl-k">:</span><span class="pl-c1">5</span>,tickOffset<span class="pl-k">:</span><span class="pl-c1">5</span>,fps<span class="pl-k">:</span><span class="pl-c1">34</span>,format<span class="pl-k">:</span>Epoch.Formats.percent};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.animation.<span class="pl-c1">target</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.animation.delta<span class="pl-k">=</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">value</span>)<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.fps;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.animation.active)<span class="pl-k">return</span> <span class="pl-v">this</span>.animation.interval<span class="pl-k">=</span><span class="pl-c1">setInterval</span>(<span class="pl-v">this</span>._animate,<span class="pl-c1">1E3</span><span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.fps)};</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">radius</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">1.58</span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">centerX</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">2</span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">centerY</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0.68</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-c1">height</span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">textY</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0.48</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-c1">height</span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getAngle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.domain[<span class="pl-c1">1</span>]<span class="pl-k">*</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">8</span>)<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">8</span>};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setStyles</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.getStyles(a);<span class="pl-v">this</span>.ctx.fillStyle<span class="pl-k">=</span>a.fill;<span class="pl-v">this</span>.ctx.strokeStyle<span class="pl-k">=</span>a.stroke;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>a[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.lineWidth<span class="pl-k">=</span>a[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,c,d,f,t,l,k,n,p,u,m,q;t<span class="pl-k">=</span>[<span class="pl-v">this</span>.centerX(),<span class="pl-v">this</span>.centerY(),<span class="pl-v">this</span>.radius()];d<span class="pl-k">=</span>t[<span class="pl-c1">0</span>];f<span class="pl-k">=</span>t[<span class="pl-c1">1</span>];t<span class="pl-k">=</span>t[<span class="pl-c1">2</span>];k<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickOffset,<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tickSize];n<span class="pl-k">=</span>k[<span class="pl-c1">0</span>];p<span class="pl-k">=</span>k[<span class="pl-c1">1</span>];<span class="pl-v">this</span>.ctx.clearRect(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>);k<span class="pl-k">=</span>d3.scale.linear().domain([<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks]).range([<span class="pl-k">-</span><span class="pl-c1">1.125</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">8</span>]);<span class="pl-v">this</span>.setStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>.epoch .gauge .tick<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();a<span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.ticks;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>q<span class="pl-k">?</span>m<span class="pl-k">&lt;=</span>q<span class="pl-k">:</span>m<span class="pl-k">&gt;=</span>q;a<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>q<span class="pl-k">?++</span>m<span class="pl-k">:--</span>m)a<span class="pl-k">=</span>k(a),a<span class="pl-k">=</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a),<span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a)],c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],l<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],a<span class="pl-k">=</span>c<span class="pl-k">*</span>(t<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">n)<span class="pl-k">+</span>d,u<span class="pl-k">=</span>l<span class="pl-k">*</span>(t<span class="pl-k">-</span>n)<span class="pl-k">+</span>f,c<span class="pl-k">=</span>c<span class="pl-k">*</span>(t<span class="pl-k">-</span>n<span class="pl-k">-</span>p)<span class="pl-k">+</span>d,l<span class="pl-k">=</span>l<span class="pl-k">*</span>(t<span class="pl-k">-</span>n<span class="pl-k">-</span>p)<span class="pl-k">+</span>f,<span class="pl-v">this</span>.ctx.<span class="pl-c1">moveTo</span>(a,u),<span class="pl-v">this</span>.ctx.lineTo(c,l);<span class="pl-v">this</span>.ctx.stroke();<span class="pl-v">this</span>.setStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>.epoch .gauge .arc.outer<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();<span class="pl-v">this</span>.ctx.arc(d,f,t,<span class="pl-k">-</span><span class="pl-c1">1.125</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,<span class="pl-c1">0.125</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.ctx.stroke();<span class="pl-v">this</span>.setStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>.epoch .gauge .arc.inner<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();<span class="pl-v">this</span>.ctx.arc(d,f,t<span class="pl-k">-</span><span class="pl-c1">10</span>,<span class="pl-k">-</span><span class="pl-c1">1.125</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,<span class="pl-c1">0.125</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.ctx.stroke();<span class="pl-k">return</span> <span class="pl-v">this</span>.drawNeedle()};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">drawNeedle</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,c,d;d<span class="pl-k">=</span>[<span class="pl-v">this</span>.centerX(),<span class="pl-v">this</span>.centerY(),<span class="pl-v">this</span>.radius()];a<span class="pl-k">=</span>d[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span>d[<span class="pl-c1">1</span>];d<span class="pl-k">=</span>d[<span class="pl-c1">2</span>];<span class="pl-v">this</span>.setStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>.epoch .gauge .needle<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();<span class="pl-v">this</span>.ctx.save();<span class="pl-v">this</span>.ctx.translate(a,c);<span class="pl-v">this</span>.ctx.rotate(<span class="pl-v">this</span>.getAngle(<span class="pl-v">this</span>.<span class="pl-c1">value</span>));<span class="pl-v">this</span>.ctx.<span class="pl-c1">moveTo</span>(<span class="pl-c1">4</span>,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.ctx.lineTo(<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.ctx.lineTo(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">19</span><span class="pl-k">-</span>d);<span class="pl-v">this</span>.ctx.lineTo(<span class="pl-c1">1</span>,<span class="pl-c1">19</span><span class="pl-k">-</span>d);<span class="pl-v">this</span>.ctx.fill();<span class="pl-v">this</span>.setStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>.epoch .gauge .needle-base<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();<span class="pl-v">this</span>.ctx.arc(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">25</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>);<span class="pl-v">this</span>.ctx.fill();<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.restore()};<span class="pl-k">return</span> c}(Epoch.Chart.Canvas)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Time</span>.<span class="pl-en">Heatmap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">e</span>){<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>e;c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-c1">options</span>,a));Epoch.isString(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span>)<span class="pl-k">?</span>(<span class="pl-v">this</span>._colorFn<span class="pl-k">=</span>f[<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span>],<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>._colorFn<span class="pl-k">&amp;&amp;</span>Epoch.exception(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown coloring function provided &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>Epoch.isFunction(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span>)<span class="pl-k">?</span><span class="pl-v">this</span>._colorFn<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span><span class="pl-k">:</span>Epoch.exception(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown type for provided coloring function.<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>._setupPaintCanvas()}<span class="pl-k">var</span> f,a;m(c,d);a<span class="pl-k">=</span>{buckets<span class="pl-k">:</span><span class="pl-c1">10</span>,bucketRange<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">100</span>],color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>,bucketPadding<span class="pl-k">:</span><span class="pl-c1">2</span>};f<span class="pl-k">=</span>{<span class="pl-en">root</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(a<span class="pl-k">/</span>c,<span class="pl-c1">0.5</span>)},<span class="pl-en">linear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> a<span class="pl-k">/</span>c},<span class="pl-en">quadratic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(a<span class="pl-k">/</span>c,<span class="pl-c1">2</span>)},<span class="pl-en">cubic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(a<span class="pl-k">/</span>c,<span class="pl-c1">3</span>)},<span class="pl-en">quartic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(a<span class="pl-k">/</span>c,<span class="pl-c1">4</span>)},<span class="pl-en">quintic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(a<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">c,<span class="pl-c1">5</span>)}};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setData</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> d,f,t,l,k<span class="pl-k">=</span><span class="pl-v">this</span>;c.__super__.setData.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a);t<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;l<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span>t.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>f;d<span class="pl-k">++</span>)a<span class="pl-k">=</span>t[d],l.<span class="pl-c1">push</span>(a.values<span class="pl-k">=</span>a.values.map(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> k._prepareEntry(a)}));<span class="pl-k">return</span> l};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_prepareEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c,d,f,l,k,n,p,u,m,q;k<span class="pl-k">=</span>{time<span class="pl-k">:</span>a.time,max<span class="pl-k">:</span><span class="pl-c1">0</span>,buckets<span class="pl-k">:</span>{}};f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.bucketRange;l<span class="pl-k">=</span>f[<span class="pl-c1">0</span>];f<span class="pl-k">=</span>f[<span class="pl-c1">1</span>];n<span class="pl-k">=</span>(f<span class="pl-k">-</span>l)<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.buckets;d<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(u<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.buckets;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>u<span class="pl-k">?</span>c<span class="pl-k">&lt;</span>u<span class="pl-k">:</span>c<span class="pl-k">&gt;</span>u;d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>u<span class="pl-k">?++</span>c<span class="pl-k">:--</span>c)k.buckets[l<span class="pl-k">+</span>n<span class="pl-k">*</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)]<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">=</span>a.histogram;<span class="pl-k">for</span>(p <span class="pl-k">in</span> m)<span class="pl-k">for</span>(a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">m[p],d<span class="pl-k">=</span>u<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.buckets;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>q<span class="pl-k">?</span>u<span class="pl-k">&lt;</span>q<span class="pl-k">:</span>u<span class="pl-k">&gt;</span>q;d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>q<span class="pl-k">?++</span>u<span class="pl-k">:--</span>u)<span class="pl-k">if</span>(c<span class="pl-k">=</span>l<span class="pl-k">+</span>n<span class="pl-k">*</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>),p<span class="pl-k">&lt;</span>c<span class="pl-k">||</span>d<span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.buckets<span class="pl-k">-</span><span class="pl-c1">1</span>){k.buckets[c]<span class="pl-k">+=</span>a;<span class="pl-k">break</span>}l<span class="pl-k">=</span>k.buckets;<span class="pl-k">for</span>(f <span class="pl-k">in</span> l)a<span class="pl-k">=</span>l[f],k.max<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(k.max,a);<span class="pl-k">return</span> k};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> d3.scale.linear().domain(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.bucketRange).range([<span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>(),<span class="pl-c1">0</span>])};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">innerHeight</span>()<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.buckets};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_offsetX</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0.5</span><span class="pl-k">*</span><span class="pl-v">this</span>.w()};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_setupPaintCanvas</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,c;<span class="pl-v">this</span>.paintWidth<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line">(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.w();<span class="pl-v">this</span>.paintHeight<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">height</span>;<span class="pl-v">this</span>.paint<span class="pl-k">=</span>$(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;canvas width=&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.paintWidth<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; height=&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.paintHeight<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;&gt;<span class="pl-pds">&quot;</span></span>).get(<span class="pl-c1">0</span>);<span class="pl-v">this</span>.p<span class="pl-k">=</span><span class="pl-v">this</span>.paint.getContext(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>[<span class="pl-c1">0</span>].values.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize;<span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>a;)<span class="pl-v">this</span>._paintEntry(c,a);<span class="pl-v">this</span>.on(<span class="pl-s"><span class="pl-pds">&quot;</span>after:shift<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_paintEntry<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.on(<span class="pl-s"><span class="pl-pds">&quot;</span>transition:end<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_shiftPaintCanvas<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_paintEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,f,l,k,n,p,m,v,q,A,B,z,x,y,C;<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">null</span>);f<span class="pl-k">=</span>[<span class="pl-v">this</span>.w(),<span class="pl-v">this</span>.h()];</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line">z<span class="pl-k">=</span>f[<span class="pl-c1">0</span>];m<span class="pl-k">=</span>f[<span class="pl-c1">1</span>];<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>[<span class="pl-c1">0</span>].values.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize);n<span class="pl-k">=</span>[];f<span class="pl-k">=</span>{};B<span class="pl-k">=</span><span class="pl-c1">0</span>;A<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(v<span class="pl-k">=</span>A.<span class="pl-c1">length</span>;l<span class="pl-k">&lt;</span>v;l<span class="pl-k">++</span>){q<span class="pl-k">=</span>A[l];p<span class="pl-k">=</span>q.values[a];x<span class="pl-k">=</span>p.buckets;<span class="pl-k">for</span>(d <span class="pl-k">in</span> x)k<span class="pl-k">=</span>x[d],<span class="pl-c1">null</span><span class="pl-k">==</span>f[d]<span class="pl-k">&amp;&amp;</span>(f[d]<span class="pl-k">=</span><span class="pl-c1">0</span>),f[d]<span class="pl-k">+=</span>k;B<span class="pl-k">+=</span>p.max;k<span class="pl-k">=</span><span class="pl-v">this</span>.getStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q.<span class="pl-c1">className</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> rect.bucket<span class="pl-pds">&quot;</span></span>);p.<span class="pl-c1">color</span><span class="pl-k">=</span>k.fill;n.<span class="pl-c1">push</span>(p)}q<span class="pl-k">=</span>c<span class="pl-k">*</span>z;<span class="pl-v">this</span>.p.clearRect(q,<span class="pl-c1">0</span>,z,<span class="pl-v">this</span>.paintHeight);v<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.buckets;C<span class="pl-k">=</span>[];<span class="pl-k">for</span>(d <span class="pl-k">in</span> f){k<span class="pl-k">=</span>f[d];l<span class="pl-k">=</span><span class="pl-v">this</span>._avgLab(n,d);x<span class="pl-k">=</span>A<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(y<span class="pl-k">=</span>n.<span class="pl-c1">length</span>;x<span class="pl-k">&lt;</span>y;x<span class="pl-k">++</span>)p<span class="pl-k">=</span>n[x],A<span class="pl-k">+=</span>p.buckets[d]<span class="pl-k">/</span>k<span class="pl-k">*</span>B;</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.p.fillStyle<span class="pl-k">=</span>Epoch.toRGBA(l,<span class="pl-v">this</span>._colorFn(k,A));<span class="pl-v">this</span>.p.fillRect(q,(v<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>m,z<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.bucketPadding,m<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.bucketPadding);C.<span class="pl-c1">push</span>(v<span class="pl-k">--</span>)}<span class="pl-k">return</span> C};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_shiftPaintCanvas</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;a<span class="pl-k">=</span><span class="pl-v">this</span>.p.getImageData(<span class="pl-v">this</span>.w(),<span class="pl-c1">0</span>,<span class="pl-v">this</span>.paintWidth<span class="pl-k">-</span><span class="pl-v">this</span>.w(),<span class="pl-v">this</span>.paintHeight);<span class="pl-k">return</span> <span class="pl-v">this</span>.p.putImageData(a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_avgLab</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,f,l,k,n,p,m,v;m<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];n<span class="pl-k">=</span>m[<span class="pl-c1">0</span>];d<span class="pl-k">=</span>m[<span class="pl-c1">1</span>];f<span class="pl-k">=</span>m[<span class="pl-c1">2</span>];m<span class="pl-k">=</span>m[<span class="pl-c1">3</span>];p<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(v<span class="pl-k">=</span>a.<span class="pl-c1">length</span>;p<span class="pl-k">&lt;</span>v;p<span class="pl-k">++</span>)l<span class="pl-k">=</span>a[p],<span class="pl-c1">null</span><span class="pl-k">!=</span>l.buckets[c]<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">+=</span>l.buckets[c]);<span class="pl-k">for</span>(k <span class="pl-k">in</span> a)l<span class="pl-k">=</span>a[k],</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">p<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>l.buckets[c]<span class="pl-k">?</span>l.buckets[c]|<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span>,p<span class="pl-k">/=</span>m,l<span class="pl-k">=</span>d3.lab(l.<span class="pl-c1">color</span>),n<span class="pl-k">+=</span>p<span class="pl-k">*</span>l.l,d<span class="pl-k">+=</span>p<span class="pl-k">*</span>l.a,f<span class="pl-k">+=</span>p<span class="pl-k">*</span>l.b;<span class="pl-k">return</span> d3.lab(n,d,f).<span class="pl-c1">toString</span>()};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.drawImage(<span class="pl-v">this</span>.paint,a,<span class="pl-c1">0</span>)};<span class="pl-k">return</span> c}(Epoch.Time.Plot)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">var</span> k<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(){<span class="pl-v">this</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> c)k.<span class="pl-c1">call</span>(c,a)<span class="pl-k">&amp;&amp;</span>(d[a]<span class="pl-k">=</span>c[a]);<span class="pl-c1">f</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-c1">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f</span>;d.__super__<span class="pl-k">=</span>c.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> d};<span class="pl-c1">Epoch.Time</span>.<span class="pl-en">Line</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-k">return</span> c.__super__.<span class="pl-c1">constructor</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments)}m(c,d);<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setStyles</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-v">this</span>.getStyles(<span class="pl-s"><span class="pl-pds">&quot;</span>g.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> path.line<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.fillStyle<span class="pl-k">=</span>c.fill;<span class="pl-v">this</span>.ctx.strokeStyle<span class="pl-k">=</span>c.stroke;<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.lineWidth<span class="pl-k">=</span>c[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a,d,h,k,m,l,w,n,p,u,v;<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();d<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">y</span>(),<span class="pl-v">this</span>.w()];w<span class="pl-k">=</span>d[<span class="pl-c1">0</span>];l<span class="pl-k">=</span>d[<span class="pl-c1">1</span>];u<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>;v<span class="pl-k">=</span>[];n<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(p<span class="pl-k">=</span>u.<span class="pl-c1">length</span>;n<span class="pl-k">&lt;</span>p;n<span class="pl-k">++</span>)<span class="pl-k">if</span>(k<span class="pl-k">=</span>u[n],<span class="pl-c1">0</span><span class="pl-k">&lt;</span>k.values.<span class="pl-c1">length</span>){<span class="pl-v">this</span>.setStyles(k.<span class="pl-c1">className</span>);<span class="pl-v">this</span>.ctx.beginPath();m<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize,k.values.<span class="pl-c1">length</span>,<span class="pl-v">this</span>.inTransition()];d<span class="pl-k">=</span>m[<span class="pl-c1">0</span>];h<span class="pl-k">=</span>m[<span class="pl-c1">1</span>];<span class="pl-k">for</span>(m<span class="pl-k">=</span>m[<span class="pl-c1">2</span>];<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">&lt;=--</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>h;)a<span class="pl-k">=</span>k.values[h],a<span class="pl-k">=</span>[(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>l<span class="pl-k">+</span>c,w(a.<span class="pl-c1">y</span>)],m<span class="pl-k">&amp;&amp;</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>l),d<span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.windowSize<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-v">this</span>.ctx.moveTo.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>.ctx,a)<span class="pl-k">:</span><span class="pl-v">this</span>.ctx.lineTo.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>.ctx,a);v.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.ctx.stroke())}<span class="pl-k">return</span> v};</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> c}(Epoch.Time.Plot)}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);(<span class="pl-k">function</span>(){Epoch._typeMap<span class="pl-k">=</span>{area<span class="pl-k">:</span>Epoch.Chart.<span class="pl-c1">Area</span>,bar<span class="pl-k">:</span>Epoch.Chart.Bar,line<span class="pl-k">:</span>Epoch.Chart.Line,pie<span class="pl-k">:</span>Epoch.Chart.Pie,scatter<span class="pl-k">:</span>Epoch.Chart.Scatter,<span class="pl-s"><span class="pl-pds">&quot;</span>time.area<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.<span class="pl-c1">Area</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>time.bar<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.Bar,<span class="pl-s"><span class="pl-pds">&quot;</span>time.line<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.Line,<span class="pl-s"><span class="pl-pds">&quot;</span>time.gauge<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.Gauge,<span class="pl-s"><span class="pl-pds">&quot;</span>time.heatmap<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.Heatmap}}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-c1">jQuery.fn</span>.<span class="pl-en">epoch</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">k</span>){<span class="pl-k">var</span> m;k.el<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-c1">null</span><span class="pl-k">==</span>(m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>epoch-chart<span class="pl-pds">&quot;</span></span>))<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span>Epoch._typeMap[k.<span class="pl-c1">type</span>],<span class="pl-c1">null</span><span class="pl-k">==</span>m<span class="pl-k">&amp;&amp;</span>Epoch.exception(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown chart type &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k.<span class="pl-c1">type</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>epoch-chart<span class="pl-pds">&quot;</span></span>,m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">m</span>(k)),m.draw());<span class="pl-k">return</span> m}}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
</table>

  </div>

</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

        </div>
      </div>
      <div class="modal-backdrop"></div>
    </div>
  </div>


    </div>

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>
        <li><a href="https://github.com/pricing" data-ga-click="Footer, go to pricing, text:pricing">Pricing</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2015 <span title="0.12077s from github-fe131-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



    
    
    

    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
        <span class="octicon octicon-x"></span>
      </button>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-f8473dece7242da6a20d52313634881b3975c52cebaa1e6c38157c0f26185691.js"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-9bf3a99f7b06f8e8d606ad33352aa232d1ad05ffe6f160d9a26af7e38b2b60e5.js"></script>
      
      
    <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner hidden">
      <span class="octicon octicon-alert"></span>
      <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
      <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
    </div>
  </body>
</html>

