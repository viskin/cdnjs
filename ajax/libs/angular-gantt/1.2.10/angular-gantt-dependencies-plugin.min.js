/*
Project: angular-gantt v1.2.10 - Gantt chart component for AngularJS
Authors: Marco Schweighauser, RÃ©mi Alvergnat
License: MIT
Homepage: https://www.angular-gantt.com
Github: https://github.com/angular-gantt/angular-gantt.git
*/

!function(){"use strict";angular.module("gantt.dependencies",["gantt","gantt.dependencies.templates"]).directive("ganttDependencies",["$timeout","$document","ganttDebounce","GanttDependenciesManager",function(a,b,c,d){return{restrict:"E",require:"^gantt",scope:{enabled:"=?",jsPlumbDefaults:"=?",endpoints:"=?",fallbackEndpoints:"=?"},link:function(a,b,e,f){function g(){return angular.element('<span><span class="gantt-endpoint-overlay start-endpoint arrow-right"></span></span>')}function h(){return angular.element('<span><span class="gantt-endpoint-overlay end-endpoint arrow-right"></span></span>')}function i(){return angular.element('<span><span class="gantt-endpoint-overlay start-endpoint fallback-endpoint"></span></span>')}function j(){return angular.element('<span><span class="gantt-endpoint-overlay end-endpoint fallback-endpoint"></span></span>')}var k=f.gantt.api;if(a.options&&"object"==typeof a.options.dependencies)for(var l in a.options.dependencies)a[l]=a.options[l];void 0===a.enabled&&(a.enabled=!0),void 0===a.jsPlumbDefaults&&(a.jsPlumbDefaults={Endpoint:["Dot",{radius:4}],EndpointStyle:{fillStyle:"#456",strokeStyle:"#456",lineWidth:1},Connector:"Flowchart",ConnectionOverlays:[["Arrow",{location:1,length:12,width:12}]]}),void 0===a.endpoints&&(a.endpoints=[{anchor:"Left",isSource:!1,isTarget:!0,maxConnections:-1,cssClass:"gantt-endpoint start-endpoint target-endpoint",overlays:[["Custom",{create:g}]]},{anchor:"Right",isSource:!0,isTarget:!1,maxConnections:-1,cssClass:"gantt-endpoint end-endpoint source-endpoint",overlays:[["Custom",{create:h}]]}]),void 0===a.fallbackEndpoints&&(a.fallbackEndpoints=[{endpoint:"Blank",anchor:"Left",isSource:!1,isTarget:!0,maxConnections:0,cssClass:"gantt-endpoint start-endpoint fallback-endpoint",overlays:[["Custom",{create:i}]]},{endpoint:"Blank",anchor:"Right",isSource:!0,isTarget:!1,maxConnections:0,cssClass:"gantt-endpoint end-endpoint fallback-endpoint",overlays:[["Custom",{create:j}]]}]);var m=new d(f.gantt,a,k);k.directives.on["new"](a,function(a,b,c){"ganttBody"===a&&m.plumb.setContainer(c)}),k.tasks.on.add(a,function(a){m.addDependenciesFromTask(a)}),k.tasks.on.remove(a,function(a){m.removeDependenciesFromTask(a)}),k.tasks.on.displayed(a,c(function(a){m.setTasks(a),m.refresh()})),k.rows.on.displayed(a,function(){m.refresh()}),k.tasks.on.viewChange(a,function(a){a.$element&&m.plumb.revalidate(a.$element[0])}),k.tasks.on.viewRowChange(a,function(a){m.setTask(a)})}}}])}(),function(){"use strict";angular.module("gantt.dependencies").factory("GanttDependenciesEvents",[function(){var a=function(a){var b=this;this.manager=a;var c=function(a){return a.sourceId!==a.targetId};this.manager.plumb.bind("beforeDrop",c),this.manager.plumb.bind("connectionDrag",function(a){b.manager.setDraggingConnection(a)}),this.manager.plumb.bind("connectionDragStop",function(){b.manager.setDraggingConnection(void 0)}),this.manager.plumb.bind("beforeDrop",function(){return b.manager.setDraggingConnection(void 0),!0}),this.manager.plumb.bind("beforeDrop",function(a){var c;a.connection.$dependency&&(c=a.connection.$dependency);var d=a.connection.endpoints[0],e=a.dropEndpoint,f=d.$task.model,g=f.dependencies;void 0===g&&(g=[],f.dependencies=g);var h={to:e.$task.model.id};g.push(h),c&&(c.removeFromTaskModel(),b.manager.removeDependency(c));var i=b.manager.addDependency(d.$task,h);return a.connection.$dependency=i,i.connection=a.connection,c?b.manager.api.dependencies.raise.change(i,c):b.manager.api.dependencies.raise.add(i),!0}),this.manager.plumb.bind("beforeDetach",function(a,c){if(c){var d=a.$dependency;d.removeFromTaskModel(),b.manager.removeDependency(d),b.manager.api.dependencies.raise.remove(d)}return!0})};return a}])}(),function(){"use strict";angular.module("gantt.dependencies").factory("GanttDependenciesManager",["GanttDependency","GanttDependenciesEvents","GanttDependencyTaskMouseHandler",function(a,b,c){var d=function(d,e,f){var g=this;this.gantt=d,this.pluginScope=e,this.api=f,this.api.registerEvent("dependencies","add"),this.api.registerEvent("dependencies","change"),this.api.registerEvent("dependencies","remove"),this.plumb=jsPlumb.getInstance(),this.plumb.importDefaults(this.pluginScope.jsPlumbDefaults),this.dependenciesFrom={},this.dependenciesTo={},this.tasks={},this.events=new b(this),this.pluginScope.$watch("enabled",function(a,b){a!==b&&g.refresh()}),this.pluginScope.$watch("jsPlumbDefaults",function(a,b){a!==b&&(g.plumb.importDefaults(a),g.refresh())},!0),this.addDependenciesFromTask=function(a){if(this.pluginScope.enabled){var b=a.model.dependencies;void 0!==b&&(angular.isArray(b)||(b=[b],a.model.dependencies=b),angular.forEach(b,function(b){var c=g.addDependency(a,b);c.connect()}))}},this.removeDependenciesFromTask=function(a){var b=this.getTaskDependencies(a);b&&angular.forEach(b,function(a){a.disconnect(),this.removeDependency(a)})},this.addDependency=function(b,c){var d=new a(this,b,c),e=d.getFromTaskId(),f=d.getToTaskId();return e in this.dependenciesFrom||(this.dependenciesFrom[e]=[]),f in this.dependenciesTo||(this.dependenciesTo[f]=[]),e&&this.dependenciesFrom[e].push(d),f&&this.dependenciesTo[f].push(d),d},this.removeDependency=function(a){var b=this.dependenciesFrom[a.getFromTaskId()],c=[];b&&angular.forEach(b,function(b){a===b&&c.push(a)});var d=this.dependenciesTo[a.getToTaskId()],e=[];d&&angular.forEach(d,function(b){a===b&&e.push(a)}),angular.forEach(c,function(a){a.disconnect(),b.splice(b.indexOf(a),1)}),angular.forEach(e,function(a){a.disconnect(),d.splice(d.indexOf(a),1)}),this.dependenciesFrom[a.getFromTaskId()]&&0===this.dependenciesFrom[a.getFromTaskId()].length&&delete this.dependenciesFrom[a.getFromTaskId()],this.dependenciesTo[a.getToTaskId()]&&0===this.dependenciesTo[a.getToTaskId()].length&&delete this.dependenciesTo[a.getToTaskId()]},this.getTaskDependencies=function(a){var b=[],c=g.dependenciesFrom[a.model.id];c&&(b=b.concat(c));var d=g.dependenciesTo[a.model.id];return d&&(b=b.concat(d)),b},this.setDraggingConnection=function(a){a?(g.draggingConnection=a,angular.forEach(g.tasks,function(a){a.dependencies.mouseHandler.release()})):(g.draggingConnection=void 0,angular.forEach(g.tasks,function(a){a.dependencies.mouseHandler.install()}))};var h=function(a){a.dependencies||(a.dependencies={}),a.dependencies.endpoints=[],g.pluginScope.endpoints&&angular.forEach(g.pluginScope.endpoints,function(b){var c=g.plumb.addEndpoint(a.$element,b);c.$task=a,a.dependencies.endpoints.push(c)})},i=function(a){angular.forEach(a.dependencies.endpoints,function(a){g.plumb.deleteEndpoint(a),a.$task=void 0}),a.dependencies.endpoints=void 0},j=function(a){a.dependencies||(a.dependencies={}),a.dependencies.mouseHandler=new c(g,a),a.dependencies.mouseHandler.install()},k=function(a){a.dependencies.mouseHandler.release(),a.dependencies.mouseHandler=void 0};this.setTasks=function(a){angular.forEach(g.tasks,function(a){k(a),i(a)});var b={};angular.forEach(a,function(a){b[a.model.id]=a,h(a),j(a)}),g.tasks=b};var l=function(a){var b=g.getTaskDependencies(a);return b&&angular.forEach(b,function(a){a.disconnect()}),b},m=function(a){var b=g.getTaskDependencies(a);return b&&angular.forEach(b,function(a){a.connect()}),b};this.setTask=function(a){g.plumb.setSuspendDrawing(!0);try{var b=g.tasks[a.model.id];void 0!==b&&(l(b),k(b),i(b)),g.tasks[a.model.id]=a,h(a),j(a),m(a)}finally{g.plumb.setSuspendDrawing(!1,!0)}},this.getTask=function(a){return g.tasks[a]};var n=function(a){return a.dependencies.endpoints.filter(function(a){return a.isSource})},o=function(a){return a.dependencies.endpoints.filter(function(a){return a.isTarget})};this.connect=function(a,b,c){var d=n(a),e=o(b);if(d&&e){var f,h;f=c.connectParameters&&c.connectParameters.sourceEndpointIndex?d[c.connectParameters.sourceEndpointIndex]:d[0],h=c.connectParameters&&c.connectParameters.targetEndpointIndex?e[c.connectParameters.targetEndpointIndex]:e[0];var i=g.plumb.connect({source:f,target:h},c.connectParameters);return i}},this.getDependencies=function(){var a=[];return angular.forEach(this.dependenciesFrom,function(b){angular.forEach(b,function(b){b in a||a.push(b)})}),a},this.refresh=function(a){g.plumb.setSuspendDrawing(!0);try{var b;a&&!angular.isArray(a)&&(a=[a]),void 0===a?(a=this.tasks,b=this.getDependencies()):(b=[],angular.forEach(a,function(a){var c=g.getTaskDependencies(a);angular.forEach(c,function(a){a in b||b.push(a)})})),angular.forEach(b,function(a){g.removeDependency(a)}),angular.forEach(a,function(a){g.addDependenciesFromTask(a)})}finally{g.plumb.setSuspendDrawing(!1,!0)}},this.api.registerMethod("dependencies","refresh",this.refresh,this)};return d}])}(),function(){"use strict";angular.module("gantt.dependencies").factory("GanttDependency",["ganttUtils","ganttDom",function(a,b){var c=function(c,d,e){var f=this;this.manager=c,this.task=d,this.model=e,this.connection=void 0,this.fallbackEndpoints=[],this.isConnected=function(){return this.connection?!0:!1},this.disconnect=function(){this.connection&&(this.connection.endpoints&&this.manager.plumb.detach(this.connection),this.connection.$dependency=void 0,this.connection=void 0),this.deleteFallbackEndpoints()},this.deleteFallbackEndpoints=function(){this.fallbackEndpoints&&(angular.forEach(this.fallbackEndpoints,function(a){f.manager.plumb.deleteEndpoint(a)}),this.fallbackEndpoints=[])},this.getFromTaskId=function(){return void 0!==this.model.from?this.model.from:this.task.model.id},this.getToTaskId=function(){return void 0!==this.model.to?this.model.to:this.task.model.id},this.getFromTask=function(){return void 0!==this.model.from?this.manager.getTask(this.model.from):this.task},this.getToTask=function(){return void 0!==this.model.to?this.manager.getTask(this.model.to):this.task},this.removeFromTaskModel=function(){var b=a.angularIndexOf(this.task.model.dependencies,this.model);return b>=0&&this.task.model.dependencies.splice(b,1),b};var g=function(a){if(void 0===a||void 0===a.$element)return!1;var c=a.$element[0];return b.isElementVisible(c)};this.connect=function(){var a=this.getFromTask(),b=this.getToTask();if(g(a)||(a=void 0),g(b)||(b=void 0),a&&b){var c=this.manager.connect(a,b,this.model);if(c)return c.$dependency=this,this.connection=c,!0}if(this.deleteFallbackEndpoints(),void 0!==a){var d=this.manager.pluginScope.fallbackEndpoints[1];this.fallbackEndpoints.push(this.manager.plumb.addEndpoint(a.$element,d))}if(void 0!==b){var e=this.manager.pluginScope.fallbackEndpoints[0];this.fallbackEndpoints.push(this.manager.plumb.addEndpoint(b.$element,e))}return!1}};return c}])}(),function(){"use strict";angular.module("gantt.dependencies").factory("GanttDependencyTaskMouseHandler",["$timeout",function(a){var b=function(b,c){var d=this;this.manager=b,this.task=c,this.installed=!1;var e,f=function(){e=a(d.hideEndpoints,1e3,!1)},g=function(){a.cancel(e),d.displayEndpoints()};this.install=function(){d.installed||(d.hideEndpoints(),d.task.getContentElement().bind("mouseenter",g),d.task.getContentElement().bind("mouseleave",f),d.installed=!0)},this.release=function(){d.installed&&(d.task.getContentElement().unbind("mouseenter",g),d.task.getContentElement().unbind("mouseleave",f),a.cancel(e),d.displayEndpoints(),d.installed=!1)},this.displayEndpoints=function(){angular.forEach(d.task.dependencies.endpoints,function(a){a.isVisible()||(a.setVisible(!0,!0,!0),angular.element(a.canvas).bind("mouseenter",g),angular.element(a.canvas).bind("mouseleave",f))})},this.hideEndpoints=function(){angular.forEach(d.task.dependencies.endpoints,function(a){a.isVisible()&&(angular.element(a.canvas).unbind("mouseenter",g),angular.element(a.canvas).unbind("mouseleave",f),a.setVisible(!1,!0,!0))})}};return b}])}(),angular.module("gantt.dependencies.templates",[]).run(["$templateCache",function(a){}]);
//# sourceMappingURL=angular-gantt-dependencies-plugin.min.js.map