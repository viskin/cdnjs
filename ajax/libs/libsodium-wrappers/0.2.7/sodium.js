var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};
(function (root, factory) {
    if (typeof define === "function" && define.amd) {
        define(["exports"], factory);
    } else if (typeof exports !== "undefined") {
        factory(exports);
    } else {
        factory(root.libsodium = {});
    }
})(this, function (exports) {
    "use strict";
    var Module = exports;
    Object.defineProperty(exports, '__esModule', { value: true });
var d;d||(d=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));var g={},q;for(q in d)d.hasOwnProperty(q)&&(g[q]=d[q]);var aa="object"===typeof window,ba="object"===typeof process&&"function"===typeof require&&!aa,ca="function"===typeof importScripts,da=!aa&&!ba&&!ca;
if(ba){d.print||(d.print=function(a){process.stdout.write(a+"\n")});d.printErr||(d.printErr=function(a){process.stderr.write(a+"\n")});var ea=require("fs"),fa=require("path");d.read=function(a,b){a=fa.normalize(a);var c=ea.readFileSync(a);c||a==fa.resolve(a)||(a=path.join(__dirname,"..","src",a),c=ea.readFileSync(a));c&&!b&&(c=c.toString());return c};d.readBinary=function(a){return d.read(a,!0)};d.load=function(a){ga(read(a))};d.thisProgram||(d.thisProgram=1<process.argv.length?process.argv[1].replace(/\\/g,
"/"):"unknown-program");d.arguments=process.argv.slice(2);"undefined"!==typeof module&&(module.exports=d);process.on("uncaughtException",function(a){if(!(a instanceof y))throw a;})}else if(da)d.print||(d.print=print),"undefined"!=typeof printErr&&(d.printErr=printErr),d.read="undefined"!=typeof read?read:function(){throw"no read() available (jsc?)";},d.readBinary=function(a){if("function"===typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,"binary");A("object"===typeof a);return a},
"undefined"!=typeof scriptArgs?d.arguments=scriptArgs:"undefined"!=typeof arguments&&(d.arguments=arguments),eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined");else if(aa||ca)d.read=function(a){var b=new XMLHttpRequest;b.open("GET",a,!1);b.send(null);return b.responseText},"undefined"!=typeof arguments&&(d.arguments=arguments),"undefined"!==typeof console?(d.print||(d.print=function(a){console.log(a)}),d.printErr||(d.printErr=function(a){console.log(a)})):
d.print||(d.print=function(){}),ca&&(d.load=importScripts),"undefined"===typeof d.setWindowTitle&&(d.setWindowTitle=function(a){document.title=a});else throw"Unknown runtime environment. Where are we?";function ga(a){eval.call(null,a)}!d.load&&d.read&&(d.load=function(a){ga(d.read(a))});d.print||(d.print=function(){});d.printErr||(d.printErr=d.print);d.arguments||(d.arguments=[]);d.thisProgram||(d.thisProgram="./this.program");d.print=d.print;d.V=d.printErr;d.preRun=[];d.postRun=[];
for(q in g)g.hasOwnProperty(q)&&(d[q]=g[q]);
var D={jb:function(a){ha=a},Ya:function(){return ha},oa:function(){return C},ba:function(a){C=a},Ca:function(a){switch(a){case "i1":case "i8":return 1;case "i16":return 2;case "i32":return 4;case "i64":return 8;case "float":return 4;case "double":return 8;default:return"*"===a[a.length-1]?D.da:"i"===a[0]?(a=parseInt(a.substr(1)),A(0===a%8),a/8):0}},Xa:function(a){return Math.max(D.Ca(a),D.da)},mb:16,Jb:function(a,b){"double"===b||"i64"===b?a&7&&(A(4===(a&7)),a+=4):A(0===(a&3));return a},Cb:function(a,
b,c){return c||"i64"!=a&&"double"!=a?a?Math.min(b||(a?D.Xa(a):0),D.da):Math.min(b,8):8},ia:function(a,b,c){return c&&c.length?(c.splice||(c=Array.prototype.slice.call(c)),c.splice(0,0,b),d["dynCall_"+a].apply(null,c)):d["dynCall_"+a].call(null,b)},R:[null,null,null,null,null,null,null,null],Ra:function(a){for(var b=0;b<D.R.length;b++)if(!D.R[b])return D.R[b]=a,2*(1+b);throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";},ib:function(a){D.R[(a-2)/2]=
null},X:function(a){D.X.ma||(D.X.ma={});D.X.ma[a]||(D.X.ma[a]=1,d.V(a))},ja:{},Eb:function(a,b){A(b);D.ja[b]||(D.ja[b]={});var c=D.ja[b];c[a]||(c[a]=function(){return D.ia(b,a,arguments)});return c[a]},Db:function(){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";},aa:function(a){var b=C;C=C+a|0;C=C+15&-16;return b},Na:function(a){var b=E;E=E+a|0;E=E+15&-16;return b},$:function(a){var b=F;F=F+a|0;F=F+15&-16;if(a=F>=
G)H("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+G+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs."),a=!0;return a?(F=b,0):b},ga:function(a,b){return Math.ceil(a/(b?b:16))*(b?b:16)},Ib:function(a,b,c){return c?+(a>>>0)+4294967296*+(b>>>0):+(a>>>0)+4294967296*+(b|0)},Y:8,da:4,qb:0};d.Runtime=D;D.addFunction=D.Ra;
D.removeFunction=D.ib;var I=!1,J,ia,ha;function A(a,b){a||H("Assertion failed: "+b)}function ja(a){var b=d["_"+a];if(!b)try{b=eval("_"+a)}catch(c){}A(b,"Cannot call unknown function "+a+" (perhaps LLVM optimizations or closure removed it?)");return b}var ka,la;
(function(){function a(a){a=a.toString().match(e).slice(1);return{arguments:a[0],body:a[1],returnValue:a[2]}}var b={stackSave:function(){D.oa()},stackRestore:function(){D.ba()},arrayToC:function(a){var b=D.aa(a.length);ma(a,b);return b},stringToC:function(a){var b=0;null!==a&&void 0!==a&&0!==a&&(b=D.aa((a.length<<2)+1),na(a,b));return b}},c={string:b.stringToC,array:b.arrayToC};la=function(a,b,e,f,n){a=ja(a);var v=[],u=0;if(f)for(var p=0;p<f.length;p++){var B=c[e[p]];B?(0===u&&(u=D.oa()),v[p]=B(f[p])):
v[p]=f[p]}e=a.apply(null,v);"string"===b&&(e=K(e));if(0!==u){if(n&&n.async){EmterpreterAsync.wb.push(function(){D.ba(u)});return}D.ba(u)}return e};var e=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/,f={},n;for(n in b)b.hasOwnProperty(n)&&(f[n]=a(b[n]));ka=function(b,c,e){e=e||[];var n=ja(b);b=e.every(function(a){return"number"===a});var x="string"!==c;if(x&&b)return n;var v=e.map(function(a,p){return"$"+p});c="(function("+v.join(",")+") {";var u=e.length;if(!b){c+="var stack = "+
f.stackSave.body+";";for(var p=0;p<u;p++){var B=v[p],k=e[p];"number"!==k&&(k=f[k+"ToC"],c+="var "+k.arguments+" = "+B+";",c+=k.body+";",c+=B+"="+k.returnValue+";")}}e=a(function(){return n}).returnValue;c+="var ret = "+e+"("+v.join(",")+");";x||(e=a(function(){return K}).returnValue,c+="ret = "+e+"(ret);");b||(c+=f.stackRestore.body.replace("()","(stack)")+";");return eval(c+"return ret})")}})();d.cwrap=ka;d.ccall=la;
function oa(a,b,c){c=c||"i8";"*"===c.charAt(c.length-1)&&(c="i32");switch(c){case "i1":L[a>>0]=b;break;case "i8":L[a>>0]=b;break;case "i16":M[a>>1]=b;break;case "i32":N[a>>2]=b;break;case "i64":ia=[b>>>0,(J=b,1<=+pa(J)?0<J?(qa(+ra(J/4294967296),4294967295)|0)>>>0:~~+sa((J-+(~~J>>>0))/4294967296)>>>0:0)];N[a>>2]=ia[0];N[a+4>>2]=ia[1];break;case "float":ta[a>>2]=b;break;case "double":ua[a>>3]=b;break;default:H("invalid type for setValue: "+c)}}d.setValue=oa;
function va(a,b){b=b||"i8";"*"===b.charAt(b.length-1)&&(b="i32");switch(b){case "i1":return L[a>>0];case "i8":return L[a>>0];case "i16":return M[a>>1];case "i32":return N[a>>2];case "i64":return N[a>>2];case "float":return ta[a>>2];case "double":return ua[a>>3];default:H("invalid type for setValue: "+b)}return null}d.getValue=va;d.ALLOC_NORMAL=0;d.ALLOC_STACK=1;d.ALLOC_STATIC=2;d.ALLOC_DYNAMIC=3;d.ALLOC_NONE=4;
function O(a,b,c,e){var f,n;"number"===typeof a?(f=!0,n=a):(f=!1,n=a.length);var l="string"===typeof b?b:null;c=4==c?e:[xa,D.aa,D.Na,D.$][void 0===c?2:c](Math.max(n,l?1:b.length));if(f){e=c;A(0==(c&3));for(a=c+(n&-4);e<a;e+=4)N[e>>2]=0;for(a=c+n;e<a;)L[e++>>0]=0;return c}if("i8"===l)return a.subarray||a.slice?P.set(a,c):P.set(new Uint8Array(a),c),c;e=0;for(var m,w;e<n;){var z=a[e];"function"===typeof z&&(z=D.Fb(z));f=l||b[e];0===f?e++:("i64"==f&&(f="i32"),oa(c+e,z,f),w!==f&&(m=D.Ca(f),w=f),e+=m)}return c}
d.allocate=O;function K(a,b){if(0===b||!a)return"";for(var c=0,e,f=0;;){e=P[a+f>>0];c|=e;if(0==e&&!b)break;f++;if(b&&f==b)break}b||(b=f);e="";if(128>c){for(;0<b;)c=String.fromCharCode.apply(String,P.subarray(a,a+Math.min(b,1024))),e=e?e+c:c,a+=1024,b-=1024;return e}return d.UTF8ToString(a)}d.Pointer_stringify=K;d.AsciiToString=function(a){for(var b="";;){var c=L[a++>>0];if(!c)return b;b+=String.fromCharCode(c)}};d.stringToAscii=function(a,b){return ya(a,b,!1)};
function za(a,b){for(var c,e,f,n,l,m,w="";;){c=a[b++];if(!c)return w;c&128?(e=a[b++]&63,192==(c&224)?w+=String.fromCharCode((c&31)<<6|e):(f=a[b++]&63,224==(c&240)?c=(c&15)<<12|e<<6|f:(n=a[b++]&63,240==(c&248)?c=(c&7)<<18|e<<12|f<<6|n:(l=a[b++]&63,248==(c&252)?c=(c&3)<<24|e<<18|f<<12|n<<6|l:(m=a[b++]&63,c=(c&1)<<30|e<<24|f<<18|n<<12|l<<6|m))),65536>c?w+=String.fromCharCode(c):(c-=65536,w+=String.fromCharCode(55296|c>>10,56320|c&1023)))):w+=String.fromCharCode(c)}}d.UTF8ArrayToString=za;
d.UTF8ToString=function(a){return za(P,a)};
function Aa(a,b,c,e){if(!(0<e))return 0;var f=c;e=c+e-1;for(var n=0;n<a.length;++n){var l=a.charCodeAt(n);55296<=l&&57343>=l&&(l=65536+((l&1023)<<10)|a.charCodeAt(++n)&1023);if(127>=l){if(c>=e)break;b[c++]=l}else{if(2047>=l){if(c+1>=e)break;b[c++]=192|l>>6}else{if(65535>=l){if(c+2>=e)break;b[c++]=224|l>>12}else{if(2097151>=l){if(c+3>=e)break;b[c++]=240|l>>18}else{if(67108863>=l){if(c+4>=e)break;b[c++]=248|l>>24}else{if(c+5>=e)break;b[c++]=252|l>>30;b[c++]=128|l>>24&63}b[c++]=128|l>>18&63}b[c++]=128|
l>>12&63}b[c++]=128|l>>6&63}b[c++]=128|l&63}}b[c]=0;return c-f}d.stringToUTF8Array=Aa;d.stringToUTF8=function(a,b,c){return Aa(a,P,b,c)};function Ba(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++c)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:2097151>=e?b+4:67108863>=e?b+5:b+6}return b}d.lengthBytesUTF8=Ba;d.UTF16ToString=function(a){for(var b=0,c="";;){var e=M[a+2*b>>1];if(0==e)return c;++b;c+=String.fromCharCode(e)}};
d.stringToUTF16=function(a,b,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var e=b;c=c<2*a.length?c/2:a.length;for(var f=0;f<c;++f)M[b>>1]=a.charCodeAt(f),b+=2;M[b>>1]=0;return b-e};d.lengthBytesUTF16=function(a){return 2*a.length};d.UTF32ToString=function(a){for(var b=0,c="";;){var e=N[a+4*b>>2];if(0==e)return c;++b;65536<=e?(e=e-65536,c+=String.fromCharCode(55296|e>>10,56320|e&1023)):c+=String.fromCharCode(e)}};
d.stringToUTF32=function(a,b,c){void 0===c&&(c=2147483647);if(4>c)return 0;var e=b;c=e+c-4;for(var f=0;f<a.length;++f){var n=a.charCodeAt(f);if(55296<=n&&57343>=n)var l=a.charCodeAt(++f),n=65536+((n&1023)<<10)|l&1023;N[b>>2]=n;b+=4;if(b+4>c)break}N[b>>2]=0;return b-e};d.lengthBytesUTF32=function(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);55296<=e&&57343>=e&&++c;b+=4}return b};
function Ca(a){function b(c,p,B){p=p||Infinity;var k="",t=[],e;if("N"===a[m]){m++;"K"===a[m]&&m++;for(e=[];"E"!==a[m];)if("S"===a[m]){m++;var h=a.indexOf("_",m);e.push(z[a.substring(m,h)||0]||"?");m=h+1}else if("C"===a[m])e.push(e[e.length-1]),m+=2;else{var h=parseInt(a.substr(m)),r=h.toString().length;if(!h||!r){m--;break}var f=a.substr(m+r,h);e.push(f);z.push(f);m+=r+h}m++;e=e.join("::");p--;if(0===p)return c?[e]:e}else if(("K"===a[m]||x&&"L"===a[m])&&m++,h=parseInt(a.substr(m)))r=h.toString().length,
e=a.substr(m+r,h),m+=r+h;x=!1;"I"===a[m]?(m++,h=b(!0),r=b(!0,1,!0),k+=r[0]+" "+e+"<"+h.join(", ")+">"):k=e;a:for(;m<a.length&&0<p--;)if(e=a[m++],e in w)t.push(w[e]);else switch(e){case "P":t.push(b(!0,1,!0)[0]+"*");break;case "R":t.push(b(!0,1,!0)[0]+"&");break;case "L":m++;h=a.indexOf("E",m)-m;t.push(a.substr(m,h));m+=h+2;break;case "A":h=parseInt(a.substr(m));m+=h.toString().length;if("_"!==a[m])throw"?";m++;t.push(b(!0,1,!0)[0]+" ["+h+"]");break;case "E":break a;default:k+="?"+e;break a}B||1!==
t.length||"void"!==t[0]||(t=[]);return c?(k&&t.push(k+"?"),t):k+("("+t.join(", ")+")")}var c=!!d.___cxa_demangle;if(c)try{var e=xa(a.length);na(a.substr(1),e);var f=xa(4),n=d.___cxa_demangle(e,0,0,f);if(0===va(f,"i32")&&n)return K(n)}catch(l){}finally{e&&Da(e),f&&Da(f),n&&Da(n)}var m=3,w={v:"void",b:"bool",c:"char",s:"short",i:"int",l:"long",f:"float",d:"double",w:"wchar_t",a:"signed char",h:"unsigned char",t:"unsigned short",j:"unsigned int",m:"unsigned long",x:"long long",y:"unsigned long long",
z:"..."},z=[],x=!0,e=a;try{if("Object._main"==a||"_main"==a)return"main()";"number"===typeof a&&(a=K(a));if("_"!==a[0]||"_"!==a[1]||"Z"!==a[2])return a;switch(a[3]){case "n":return"operator new()";case "d":return"operator delete()"}e=b()}catch(v){e+="?"}0<=e.indexOf("?")&&!c&&D.X("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return e}
function Ea(){return Fa().replace(/__Z[\w\d_]+/g,function(a){var b=Ca(a);return a===b?a:a+" ["+b+"]"})}function Fa(){var a=Error();if(!a.stack){try{throw Error(0);}catch(b){a=b}if(!a.stack)return"(no stack trace available)"}return a.stack.toString()}d.stackTrace=function(){return Ea()};function Ga(){var a=F;0<a%4096&&(a+=4096-a%4096);return a}for(var L,P,M,Ha,N,Ia,ta,ua,Ja=0,E=0,Ka=0,C=0,La=0,Ma=0,F=0,Na=d.TOTAL_STACK||5242880,G=d.TOTAL_MEMORY||33554432,Q=65536;Q<G||Q<2*Na;)Q=16777216>Q?2*Q:Q+16777216;
Q!==G&&(d.V("increasing TOTAL_MEMORY to "+Q+" to be compliant with the asm.js spec (and given that TOTAL_STACK="+Na+")"),G=Q);A("undefined"!==typeof Int32Array&&"undefined"!==typeof Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"JS engine does not provide full typed array support");var R=new ArrayBuffer(G);L=new Int8Array(R);M=new Int16Array(R);N=new Int32Array(R);P=new Uint8Array(R);Ha=new Uint16Array(R);Ia=new Uint32Array(R);ta=new Float32Array(R);ua=new Float64Array(R);
N[0]=255;A(255===P[0]&&0===P[3],"Typed arrays 2 must be run on a little-endian system");d.HEAP=void 0;d.buffer=R;d.HEAP8=L;d.HEAP16=M;d.HEAP32=N;d.HEAPU8=P;d.HEAPU16=Ha;d.HEAPU32=Ia;d.HEAPF32=ta;d.HEAPF64=ua;function S(a){for(;0<a.length;){var b=a.shift();if("function"==typeof b)b();else{var c=b.Bb;"number"===typeof c?void 0===b.ha?D.ia("v",c):D.ia("vi",c,[b.ha]):c(void 0===b.ha?null:b.ha)}}}var Oa=[],Pa=[],Qa=[],Ra=[],Sa=[],Ta=!1;function Ua(a){Oa.unshift(a)}d.addOnPreRun=d.vb=Ua;
d.addOnInit=d.sb=function(a){Pa.unshift(a)};d.addOnPreMain=d.ub=function(a){Qa.unshift(a)};d.addOnExit=d.rb=function(a){Ra.unshift(a)};function Va(a){Sa.unshift(a)}d.addOnPostRun=d.tb=Va;function Wa(a,b,c){c=Array(0<c?c:Ba(a)+1);a=Aa(a,c,0,c.length);b&&(c.length=a);return c}d.intArrayFromString=Wa;d.intArrayToString=function(a){for(var b=[],c=0;c<a.length;c++){var e=a[c];255<e&&(e&=255);b.push(String.fromCharCode(e))}return b.join("")};
function na(a,b,c){a=Wa(a,c);for(c=0;c<a.length;)L[b+c>>0]=a[c],c+=1}d.writeStringToMemory=na;function ma(a,b){for(var c=0;c<a.length;c++)L[b++>>0]=a[c]}d.writeArrayToMemory=ma;function ya(a,b,c){for(var e=0;e<a.length;++e)L[b++>>0]=a.charCodeAt(e);c||(L[b>>0]=0)}d.writeAsciiToMemory=ya;Math.imul&&-5===Math.imul(4294967295,5)||(Math.imul=function(a,b){var c=a&65535,e=b&65535;return c*e+((a>>>16)*e+c*(b>>>16)<<16)|0});Math.Gb=Math.imul;
Math.clz32||(Math.clz32=function(a){a=a>>>0;for(var b=0;32>b;b++)if(a&1<<31-b)return b;return 32});Math.zb=Math.clz32;var pa=Math.abs,sa=Math.ceil,ra=Math.floor,qa=Math.min,T=0,Xa=null,U=null;function Ya(){T++;d.monitorRunDependencies&&d.monitorRunDependencies(T)}d.addRunDependency=Ya;function Za(){T--;d.monitorRunDependencies&&d.monitorRunDependencies(T);if(0==T&&(null!==Xa&&(clearInterval(Xa),Xa=null),U)){var a=U;U=null;a()}}d.removeRunDependency=Za;d.preloadedImages={};d.preloadedAudios={};
var V=null,$a=[function(){return d.ka()},function(){if(void 0===d.ka)try{var a=("object"===typeof window?window:self).crypto,b=function(){var b=new Uint32Array(1);a.getRandomValues(b);return b[0]>>>0};b();d.ka=b}catch(c){try{var e=require("crypto"),b=function(){var a=e.randomBytes(4);return(a[0]<<24|a[1]<<16|a[2]<<8|a[3])>>>0};b();d.ka=b}catch(f){throw"No secure random number generator found";}}}],Ja=8,E=Ja+33648;Pa.push();
O([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107,111,117,116,108,101,110,32,60,61,32,85,73,78,84,56,95,77,65,88,0,0,0,0,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,47,98,108,97,107,101,50,47,114,101,102,47,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,46,99,0,0,0,0,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,0,0,0,0,0,0,107,
101,121,108,101,110,32,60,61,32,85,73,78,84,56,95,77,65,88,0,0,0,0,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,105,110,105,116,0,99,114,121,112,116,111,95,103,101,110,101,114,105,99,104,97,115,104,95,98,108,97,107,101,50,98,95,102,105,110,97,108,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,0,0,0,0,0,0,0,36,55,36,0,0,0,0,0,101,120,112,97,110,100,32,51,50,45,98,121,116,101,
32,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,67,151,238,0,19,42,108,
255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,
23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,
1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,47,99,168,254,170,226,153,255,102,179,216,0,226,141,122,255,122,66,153,254,182,245,134,0,227,228,25,1,214,57,235,255,216,173,56,255,181,231,210,0,119,128,157,255,129,95,136,255,110,126,51,0,2,169,183,255,7,130,98,254,69,176,94,255,116,4,227,1,217,242,145,255,202,173,31,1,105,1,39,255,46,175,69,0,228,47,58,255,215,224,69,254,
207,56,69,255,16,254,139,255,23,207,212,255,202,20,126,255,95,213,96,255,9,176,33,0,200,5,207,255,241,42,128,254,35,33,192,255,248,229,196,1,129,17,120,0,251,103,151,255,7,52,112,255,140,56,66,255,40,226,245,255,217,70,37,254,172,214,9,255,72,67,134,1,146,192,214,255,44,38,112,0,68,184,75,255,206,90,251,0,149,235,141,0,181,170,58,0,116,244,239,0,92,157,2,0,102,173,98,0,233,137,96,1,127,49,203,0,5,155,148,0,23,148,9,255,211,122,12,0,34,134,26,255,219,204,136,0,134,8,41,255,224,83,43,254,85,25,247,
0,109,127,0,254,169,136,48,0,238,119,219,255,231,173,213,0,206,18,254,254,8,186,7,255,126,9,7,1,111,42,72,0,111,52,236,254,96,63,141,0,147,191,127,254,205,78,192,255,14,106,237,1,187,219,76,0,175,243,187,254,105,89,173,0,85,25,89,1,162,243,148,0,2,118,209,254,33,158,9,0,139,163,46,255,93,70,40,0,108,42,142,254,111,252,142,255,155,223,144,0,51,229,167,255,73,252,155,255,94,116,12,255,152,160,218,255,156,238,37,255,179,234,207,255,197,0,179,255,154,164,141,0,225,196,104,0,10,35,25,254,209,212,242,255,
97,253,222,254,184,101,229,0,222,18,127,1,164,136,135,255,30,207,140,254,146,97,243,0,129,192,26,254,201,84,33,255,111,10,78,255,147,81,178,255,4,4,24,0,161,238,215,255,6,141,33,0,53,215,14,255,41,181,208,255,231,139,157,0,179,203,221,255,255,185,113,0,189,226,172,255,113,66,214,255,202,62,45,255,102,64,8,255,78,174,16,254,133,117,68,255,182,120,89,255,133,114,211,0,189,110,21,255,15,10,106,0,41,192,1,0,152,232,121,255,188,60,160,255,153,113,206,255,0,183,226,254,180,13,72,255,176,160,14,254,211,
201,134,255,158,24,143,0,127,105,53,0,96,12,189,0,167,215,251,255,159,76,128,254,106,101,225,255,30,252,4,0,146,12,174,0,89,241,178,254,10,229,166,255,123,221,42,254,30,20,212,0,82,128,3,0,48,209,243,0,119,121,64,255,50,227,156,255,0,110,197,1,103,27,144,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,
41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,234,113,60,255,37,255,57,255,69,178,182,254,128,208,179,0,118,26,125,254,3,7,214,255,241,50,77,255,85,203,197,255,211,135,250,255,25,48,100,255,187,213,180,254,17,88,105,0,83,209,158,1,5,115,98,0,4,174,60,254,171,55,110,255,217,181,17,255,20,188,170,0,146,156,102,254,87,214,174,255,114,122,155,1,233,44,170,0,127,8,239,1,214,236,234,0,175,
5,219,0,49,106,61,255,6,66,208,255,2,106,110,255,81,234,19,255,215,107,192,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,178,9,252,254,100,
110,212,0,14,5,167,0,233,239,163,255,28,151,157,1,101,146,10,255,254,158,70,254,71,249,228,0,88,30,50,0,68,58,160,255,191,24,104,1,129,66,129,255,192,50,85,255,8,179,138,255,38,250,201,0,115,80,160,0,131,230,113,0,125,88,147,0,90,68,199,0,253,76,158,0,28,255,118,0,113,250,254,0,66,75,46,0,230,218,43,0,229,120,186,1,148,68,43,0,136,124,238,1,187,107,197,255,84,53,246,255,51,116,254,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,
52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,68,113,21,255,222,186,59,255,66,7,241,1,69,6,72,0,86,156,108,254,55,167,89,0,109,52,219,254,13,176,23,255,196,44,106,255,239,149,71,255,164,140,125,255,159,173,1,0,51,41,231,0,145,62,33,0,138,111,93,1,185,83,69,0,144,
115,46,0,97,151,16,255,24,228,26,0,49,217,226,0,113,75,234,254,193,153,12,255,182,48,96,255,14,13,26,0,128,195,249,254,69,193,59,0,132,37,81,254,125,106,60,0,214,240,169,1,164,227,66,0,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,
13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,143,62,221,0,129,89,214,255,55,139,5,254,68,20,191,255,14,204,178,1,35,195,217,0,47,51,206,1,38,246,165,0,206,27,6,254,158,87,36,0,217,52,146,255,125,123,215,255,85,60,31,255,171,13,7,0,218,245,88,254,252,35,60,0,55,214,160,255,133,101,56,0,224,32,19,254,147,64,234,0,26,145,162,1,114,118,125,0,248,252,250,0,101,94,196,255,198,141,226,254,51,42,182,0,135,12,9,254,109,172,210,255,197,236,194,1,241,65,154,0,48,156,47,255,
153,67,55,255,218,165,34,254,74,180,179,0,218,66,71,1,88,122,99,0,212,181,219,255,92,42,231,255,239,0,154,0,245,77,183,255,94,81,170,1,18,213,216,0,171,93,71,0,52,94,248,0,18,151,161,254,197,209,66,255,174,244,15,254,162,48,183,0,49,61,240,254,182,93,195,0,199,228,6,1,200,5,17,255,137,45,237,255,108,148,4,0,90,79,237,255,39,63,77,255,53,82,207,1,142,22,118,255,101,232,18,1,92,26,67,0,5,200,88,255,33,168,138,255,149,225,72,0,2,209,27,255,44,245,168,1,220,237,17,255,30,211,105,254,141,238,221,0,128,
80,245,254,111,254,14,0,222,95,190,1,223,9,241,0,146,76,212,255,108,205,104,255,63,117,153,0,144,69,48,0,35,228,111,0,192,33,193,255,112,214,190,254,115,152,151,0,23,102,88,0,51,74,248,0,226,199,143,254,204,162,101,255,208,97,189,1,245,104,18,0,230,246,30,255,23,148,69,0,110,88,52,254,226,181,89,255,208,47,90,254,114,161,80,255,33,116,248,0,179,152,87,255,69,144,177,1,88,238,26,255,58,32,113,1,1,77,69,0,59,121,52,255,152,238,83,0,52,8,193,0,231,39,233,255,199,34,138,0,222,68,173,0,91,57,242,254,220,
210,127,255,192,7,246,254,151,35,187,0,195,236,165,0,111,93,206,0,212,247,133,1,154,133,209,255,155,231,10,0,64,78,38,0,122,249,100,1,30,19,97,255,62,91,249,1,248,133,77,0,197,63,168,254,116,10,82,0,184,236,113,254,212,203,194,255,61,100,252,254,36,5,202,255,119,91,153,255,129,79,29,0,103,103,171,254,237,215,111,255,216,53,69,0,239,240,23,0,194,149,221,255,38,225,222,0,232,255,180,254,118,82,133,255,57,209,177,1,139,232,133,0,158,176,46,254,194,115,46,0,88,247,229,1,28,103,191,0,221,222,175,254,149,
235,44,0,151,228,25,254,218,105,103,0,142,85,210,0,149,129,190,255,213,65,94,254,117,134,224,255,82,198,117,0,157,221,220,0,163,101,36,0,197,114,37,0,104,172,166,254,11,182,0,0,81,72,188,255,97,188,16,255,69,6,10,0,199,147,145,255,8,9,115,1,65,214,175,255,217,173,209,0,80,127,166,0,247,229,4,254,167,183,124,255,90,28,204,254,175,59,240,255,11,41,248,1,108,40,51,255,144,177,195,254,150,250,126,0,138,91,65,1,120,60,222,255,245,193,239,0,29,214,189,255,128,2,25,0,80,154,162,0,77,220,107,1,234,205,74,
255,54,166,103,255,116,72,9,0,228,94,47,255,30,200,25,255,35,214,89,255,61,176,140,255,83,226,163,255,75,130,172,0,128,38,17,0,95,137,152,255,215,124,159,1,79,93,0,0,148,82,157,254,195,130,251,255,40,202,76,255,251,126,224,0,157,99,62,254,207,7,225,255,96,68,195,0,140,186,157,255,131,19,231,255,42,128,254,0,52,219,61,254,102,203,72,0,141,7,11,255,186,164,213,0,31,122,119,0,133,242,145,0,208,252,232,255,91,213,182,255,143,4,250,254,249,215,74,0,165,30,111,1,171,9,223,0,229,123,34,1,92,130,26,255,77,
155,45,1,195,139,28,255,59,224,78,0,136,17,247,0,108,121,32,0,79,250,189,255,96,227,252,254,38,241,62,0,62,174,125,255,155,111,93,255,10,230,206,1,97,197,40,255,0,49,57,254,65,250,13,0,18,251,150,255,220,109,210,255,5,174,166,254,44,129,189,0,235,35,147,255,37,247,141,255,72,141,4,255,103,107,255,0,247,90,4,0,53,44,42,0,2,30,240,0,4,59,63,0,88,78,36,0,113,167,180,0,190,71,193,255,199,158,164,255,58,8,172,0,77,33,12,0,65,63,3,0,153,77,33,255,172,254,102,1,228,221,4,255,87,30,254,1,146,41,86,255,138,
204,239,254,108,141,17,255,187,242,135,0,210,208,127,0,68,45,14,254,73,96,62,0,81,60,24,255,170,6,36,255,3,249,26,0,35,213,109,0,22,129,54,255,21,35,225,255,234,61,56,255,58,217,6,0,143,124,88,0,236,126,66,0,209,38,183,255,34,238,6,255,174,145,102,0,95,22,211,0,196,15,153,254,46,84,232,255,117,34,146,1,231,250,74,255,27,134,100,1,92,187,195,255,170,198,112,0,120,28,42,0,209,70,67,0,29,81,31,0,29,168,100,1,169,173,160,0,107,35,117,0,62,96,59,255,81,12,69,1,135,239,190,255,220,252,18,0,163,220,58,255,
137,137,188,255,83,102,109,0,96,6,76,0,234,222,210,255,185,174,205,1,60,158,213,255,13,241,214,0,172,129,140,0,93,104,242,0,192,156,251,0,43,117,30,0,225,81,158,0,127,232,218,0,226,28,203,0,233,27,151,255,117,43,5,255,242,14,47,255,33,20,6,0,137,251,44,254,27,31,245,255,183,214,125,254,40,121,149,0,186,158,213,255,89,8,227,0,69,88,0,254,203,135,225,0,201,174,203,0,147,71,184,0,18,121,41,254,94,5,78,0,224,214,240,254,36,5,180,0,251,135,231,1,163,138,212,0,210,249,116,254,88,129,187,0,19,8,49,254,62,
14,144,255,159,76,211,0,214,51,82,0,109,117,228,254,103,223,203,255,75,252,15,1,154,71,220,255,23,13,91,1,141,168,96,255,181,182,133,0,250,51,55,0,234,234,212,254,175,63,158,0,39,240,52,1,158,189,36,255,213,40,85,1,32,180,247,255,19,102,26,1,84,24,97,255,69,21,222,0,148,139,122,255,220,213,235,1,232,203,255,0,121,57,147,0,227,7,154,0,53,22,147,1,72,1,225,0,82,134,48,254,83,60,157,255,145,72,169,0,34,103,239,0,198,233,47,0,116,19,4,255,184,106,9,255,183,129,83,0,36,176,230,1,34,103,72,0,219,162,134,
0,245,42,158,0,32,149,96,254,165,44,144,0,202,239,72,254,215,150,5,0,42,66,36,1,132,215,175,0,86,174,86,255,26,197,156,255,49,232,135,254,103,182,82,0,253,128,176,1,153,178,122,0,245,250,10,0,236,24,178,0,137,106,132,0,40,29,41,0,50,30,152,255,124,105,38,0,230,191,75,0,143,43,170,0,44,131,20,255,44,13,23,255,237,255,155,1,159,109,100,255,112,181,24,255,104,220,108,0,55,211,131,0,99,12,213,255,152,151,145,255,238,5,159,0,97,155,8,0,33,108,81,0,1,3,103,0,62,109,34,255,250,155,180,0,32,71,195,255,38,
70,145,1,159,95,245,0,69,229,101,1,136,28,240,0,79,224,25,0,78,110,121,255,248,168,124,0,187,128,247,0,2,147,235,254,79,11,132,0,70,58,12,1,181,8,163,255,79,137,133,255,37,170,11,255,141,243,85,255,176,231,215,255,204,150,164,255,239,215,39,255,46,87,156,254,8,163,88,255,172,34,232,0,66,44,102,255,27,54,41,254,236,99,87,255,41,123,169,1,52,114,43,0,117,134,40,0,155,134,26,0,231,207,91,254,35,132,38,255,19,102,125,254,36,227,133,255,118,3,113,255,29,13,124,0,152,96,74,1,88,146,206,255,167,191,220,
254,162,18,88,255,182,100,23,0,31,117,52,0,81,46,106,1,12,2,7,0,69,80,201,1,209,246,172,0,12,48,141,1,224,211,88,0,116,226,159,0,122,98,130,0,65,236,234,1,225,226,9,255,207,226,123,1,89,214,59,0,112,135,88,1,90,244,203,255,49,11,38,1,129,108,186,0,89,112,15,1,101,46,204,255,127,204,45,254,79,255,221,255,51,73,18,255,127,42,101,255,241,21,202,0,160,227,7,0,105,50,236,0,79,52,197,255,104,202,208,1,180,15,16,0,101,197,78,255,98,77,203,0,41,185,241,1,35,193,124,0,35,155,23,255,207,53,192,0,11,125,163,
1,249,158,185,255,4,131,48,0,21,93,111,255,61,121,231,1,69,200,36,255,185,48,185,255,111,238,21,255,39,50,25,255,99,215,163,255,87,212,30,255,164,147,5,255,128,6,35,1,108,223,110,255,194,76,178,0,74,101,180,0,243,47,48,0,174,25,43,255,82,173,253,1,54,114,192,255,40,55,91,0,215,108,176,255,11,56,7,0,224,233,76,0,209,98,202,254,242,25,125,0,44,193,93,254,203,8,177,0,135,176,19,0,112,71,213,255,206,59,176,1,4,67,26,0,14,143,213,254,42,55,208,255,60,67,120,0,193,21,163,0,99,164,115,0,10,20,118,0,156,
212,222,254,160,7,217,255,114,245,76,1,117,59,123,0,176,194,86,254,213,15,176,0,78,206,207,254,213,129,59,0,233,251,22,1,96,55,152,255,236,255,15,255,197,89,84,255,93,149,133,0,174,160,113,0,234,99,169,255,152,116,88,0,144,164,83,255,95,29,198,255,34,47,15,255,99,120,134,255,5,236,193,0,249,247,126,255,147,187,30,0,50,230,117,255,108,217,219,255,163,81,166,255,72,25,169,254,155,121,79,255,28,155,89,254,7,126,17,0,147,65,33,1,47,234,253,0,26,51,18,0,105,83,199,255,163,196,230,0,113,248,164,0,226,254,
218,0,189,209,203,255,164,247,222,254,255,35,165,0,4,188,243,1,127,179,71,0,37,237,254,255,100,186,240,0,5,57,71,254,103,72,73,255,244,18,81,254,229,210,132,255,238,6,180,255,11,229,174,255,227,221,192,1,17,49,28,0,163,215,196,254,9,118,4,255,51,240,71,0,113,129,109,255,76,240,231,0,188,177,127,0,125,71,44,1,26,175,243,0,94,169,25,254,27,230,29,0,15,139,119,1,168,170,186,255,172,197,76,255,252,75,188,0,137,124,196,0,72,22,96,255,45,151,249,1,220,145,100,0,64,192,159,255,120,239,226,0,129,178,146,
0,0,192,125,0,235,138,234,0,183,157,146,0,83,199,192,255,184,172,72,255,73,225,128,0,77,6,250,255,186,65,67,0,104,246,207,0,188,32,138,255,218,24,242,0,67,138,81,254,237,129,121,255,20,207,150,1,41,199,16,255,6,20,128,0,159,118,5,0,181,16,143,255,220,38,15,0,23,64,147,254,73,26,13,0,87,228,57,1,204,124,128,0,43,24,223,0,219,99,199,0,22,75,20,255,19,27,126,0,157,62,215,0,110,29,230,0,179,167,255,1,54,252,190,0,221,204,182,254,179,158,65,255,81,157,3,0,194,218,159,0,170,223,0,0,224,11,32,255,38,197,
98,0,168,164,37,0,23,88,7,1,164,186,110,0,96,36,134,0,234,242,229,0,250,121,19,0,242,254,112,255,3,47,94,1,9,239,6,255,81,134,153,254,214,253,168,255,67,124,224,0,245,95,74,0,28,30,44,254,1,109,220,255,178,89,89,0,252,36,76,0,24,198,46,255,76,77,111,0,134,234,136,255,39,94,29,0,185,72,234,255,70,68,135,255,231,102,7,254,77,231,140,0,167,47,58,1,148,97,118,255,16,27,225,1,166,206,143,255,110,178,214,255,180,131,162,0,143,141,225,1,13,218,78,255,114,153,33,1,98,104,204,0,175,114,117,1,167,206,75,0,
202,196,83,1,58,64,67,0,138,47,111,1,196,247,128,255,137,224,224,254,158,112,207,0,154,100,255,1,134,37,107,0,198,128,79,255,127,209,155,255,163,254,185,254,60,14,243,0,31,219,112,254,29,217,65,0,200,13,116,254,123,60,196,255,224,59,184,254,242,89,196,0,123,16,75,254,149,16,206,0,69,254,48,1,231,116,223,255,209,160,65,1,200,80,98,0,37,194,184,254,148,63,34,0,139,240,65,255,217,144,132,255,56,38,45,254,199,120,210,0,108,177,166,255,160,222,4,0,220,126,119,254,165,107,160,255,82,220,248,1,241,175,136,
0,144,141,23,255,169,138,84,0,160,137,78,255,226,118,80,255,52,27,132,255,63,96,139,255,152,250,39,0,188,155,15,0,232,51,150,254,40,15,232,255,240,229,9,255,137,175,27,255,75,73,97,1,218,212,11,0,135,5,162,1,107,185,213,0,2,249,107,255,40,242,70,0,219,200,25,0,25,157,13,0,67,82,80,255,196,249,23,255,145,20,149,0,50,72,146,0,94,76,148,1,24,251,65,0,31,192,23,0,184,212,201,255,123,233,162,1,247,173,72,0,162,87,219,254,126,134,89,0,159,11,12,254,166,105,29,0,73,27,228,1,113,120,183,255,66,163,109,1,
212,143,11,255,159,231,168,1,255,128,90,0,57,14,58,254,89,52,10,255,253,8,163,1,0,145,210,255,10,129,85,1,46,181,27,0,103,136,160,254,126,188,209,255,34,35,111,0,215,219,24,255,212,11,214,254,101,5,118,0,232,197,133,255,223,167,109,255,237,80,86,255,70,139,94,0,158,193,191,1,155,15,51,255,15,190,115,0,78,135,207,255,249,10,27,1,181,125,233,0,95,172,13,254,170,213,161,255,39,236,138,255,95,93,87,255,190,128,95,0,125,15,206,0,166,150,159,0,227,15,158,255,206,158,120,255,42,141,128,0,101,178,120,1,156,
109,131,0,218,14,44,254,247,168,206,255,212,112,28,0,112,17,228,255,90,16,37,1,197,222,108,0,254,207,83,255,9,90,243,255,243,244,172,0,26,88,115,255,205,116,122,0,191,230,193,0,180,100,11,1,217,37,96,255,154,78,156,0,235,234,31,255,206,178,178,255,149,192,251,0,182,250,135,0,246,22,105,0,124,193,109,255,2,210,149,255,169,17,170,0,0,96,110,255,117,9,8,1,50,123,40,255,193,189,99,0,34,227,160,0,48,80,70,254,211,51,236,0,45,122,245,254,44,174,8,0,173,37,233,255,158,65,171,0,122,69,215,255,90,80,2,255,
131,106,96,254,227,114,135,0,205,49,119,254,176,62,64,255,82,51,17,255,241,20,243,255,130,13,8,254,128,217,243,255,162,27,1,254,90,118,241,0,246,198,246,255,55,16,118,255,200,159,157,0,163,17,1,0,140,107,121,0,85,161,118,255,38,0,149,0,156,47,238,0,9,166,166,1,75,98,181,255,50,74,25,0,66,15,47,0,139,225,159,0,76,3,142,255,14,238,184,0,11,207,53,255,183,192,186,1,171,32,174,255,191,76,221,1,247,170,219,0,25,172,50,254,217,9,233,0,203,126,68,255,183,92,48,0,127,167,183,1,65,49,254,0,16,63,127,1,254,
21,170,255,59,224,127,254,22,48,63,255,27,78,130,254,40,195,29,0,250,132,112,254,35,203,144,0,104,169,168,0,207,253,30,255,104,40,38,254,94,228,88,0,206,16,128,255,212,55,122,255,223,22,234,0,223,197,127,0,253,181,181,1,145,102,118,0,236,153,36,255,212,217,72,255,20,38,24,254,138,62,62,0,152,140,4,0,230,220,99,255,1,21,212,255,148,201,231,0,244,123,9,254,0,171,210,0,51,58,37,255,1,255,14,255,244,183,145,254,0,242,166,0,22,74,132,0,121,216,41,0,95,195,114,254,133,24,151,255,156,226,231,255,247,5,77,
255,246,148,115,254,225,92,81,255,222,80,246,254,170,123,89,255,74,199,141,0,29,20,8,255,138,136,70,255,93,75,92,0,221,147,49,254,52,126,226,0,229,124,23,0,46,9,181,0,205,64,52,1,131,254,28,0,151,158,212,0,131,64,78,0,206,25,171,0,0,230,139,0,191,253,110,254,103,247,167,0,64,40,40,1,42,165,241,255,59,75,228,254,124,243,189,255,196,92,178,255,130,140,86,255,141,89,56,1,147,198,5,255,203,248,158,254,144,162,141,0,11,172,226,0,130,42,21,255,1,167,143,255,144,36,36,255,48,88,164,254,168,170,220,0,98,
71,214,0,91,208,79,0,159,76,201,1,166,42,214,255,69,255,0,255,6,128,125,255,190,1,140,0,146,83,218,255,215,238,72,1,122,127,53,0,189,116,165,255,84,8,66,255,214,3,208,255,213,110,133,0,195,168,44,1,158,231,69,0,162,64,200,254,91,58,104,0,182,58,187,254,249,228,136,0,203,134,76,254,99,221,233,0,75,254,214,254,80,69,154,0,64,152,248,254,236,136,202,255,157,105,153,254,149,175,20,0,22,35,19,255,124,121,233,0,186,250,198,254,132,229,139,0,137,80,174,255,165,125,68,0,144,202,148,254,235,239,248,0,135,
184,118,0,101,94,17,255,122,72,70,254,69,130,146,0,127,222,248,1,69,127,118,255,30,82,215,254,188,74,19,255,229,167,194,254,117,25,66,255,65,234,56,254,213,22,156,0,151,59,93,254,45,28,27,255,186,126,164,255,32,6,239,0,127,114,99,1,219,52,2,255,99,96,166,254,62,190,126,255,108,222,168,1,75,226,174,0,230,226,199,0,60,117,218,255,252,248,20,1,214,188,204,0,31,194,134,254,123,69,192,255,169,173,36,254,55,98,91,0,223,42,102,254,137,1,102,0,157,90,25,0,239,122,64,255,252,6,233,0,7,54,20,255,82,116,174,
0,135,37,54,255,15,186,125,0,227,112,175,255,100,180,225,255,42,237,244,255,244,173,226,254,248,18,33,0,171,99,150,255,74,235,50,255,117,82,32,254,106,168,237,0,207,109,208,1,228,9,186,0,135,60,169,254,179,92,143,0,244,170,104,255,235,45,124,255,70,99,186,0,117,137,183,0,224,31,215,0,40,9,100,0,26,16,95,1,68,217,87,0,8,151,20,255,26,100,58,255,176,165,203,1,52,118,70,0,7,32,254,254,244,254,245,255,167,144,194,255,125,113,23,255,176,121,181,0,136,84,209,0,138,6,30,255,89,48,28,0,33,155,14,255,25,240,
154,0,141,205,109,1,70,115,62,255,20,40,107,254,138,154,199,255,94,223,226,255,157,171,38,0,163,177,25,254,45,118,3,255,14,222,23,1,209,190,81,255,118,123,232,1,13,213,101,255,123,55,123,254,27,246,165,0,50,99,76,255,140,214,32,255,97,65,67,255,24,12,28,0,174,86,78,1,64,247,96,0,160,135,67,0,66,55,243,255,147,204,96,255,26,6,33,255,98,51,83,1,153,213,208,255,2,184,54,255,25,218,11,0,49,67,246,254,18,149,72,255,13,25,72,0,42,79,214,0,42,4,38,1,27,139,144,255,149,187,23,0,18,164,132,0,245,84,184,254,
120,198,104,255,126,218,96,0,56,117,234,255,13,29,214,254,68,47,10,255,167,154,132,254,152,38,198,0,66,178,89,255,200,46,171,255,13,99,83,255,210,187,253,255,170,45,42,1,138,209,124,0,214,162,141,0,12,230,156,0,102,36,112,254,3,147,67,0,52,215,123,255,233,171,54,255,98,137,62,0,247,218,39,255,231,218,236,0,247,191,127,0,195,146,84,0,165,176,92,255,19,212,94,255,17,74,227,0,88,40,153,1,198,147,1,255,206,67,245,254,240,3,218,255,61,141,213,255,97,183,106,0,195,232,235,254,95,86,154,0,209,48,205,254,
118,209,241,255,240,120,223,1,213,29,159,0,163,127,147,255,13,218,93,0,85,24,68,254,70,20,80,255,189,5,140,1,82,97,254,255,99,99,191,255,132,84,133,255,107,218,116,255,112,122,46,0,105,17,32,0,194,160,63,255,68,222,39,1,216,253,92,0,177,105,205,255,149,201,195,0,42,225,11,255,40,162,115,0,9,7,81,0,165,218,219,0,180,22,0,254,29,146,252,255,146,207,225,1,180,135,96,0,31,163,112,0,177,11,219,255,133,12,193,254,43,78,50,0,65,113,121,1,59,217,6,255,110,94,24,1,112,172,111,0,7,15,96,0,36,85,123,0,71,150,
21,255,208,73,188,0,192,11,167,1,213,245,34,0,9,230,92,0,162,142,39,255,215,90,27,0,98,97,89,0,94,79,211,0,90,157,240,0,95,220,126,1,102,176,226,0,36,30,224,254,35,31,127,0,231,232,115,1,85,83,130,0,210,73,245,255,47,143,114,255,68,65,197,0,59,72,62,255,183,133,173,254,93,121,118,255,59,177,81,255,234,69,173,255,205,128,177,0,220,244,51,0,26,244,209,1,73,222,77,255,163,8,96,254,150,149,211,0,158,254,203,1,54,127,139,0,161,224,59,0,4,109,22,255,222,42,45,255,208,146,102,255,236,142,187,0,50,205,245,
255,10,74,89,254,48,79,142,0,222,76,130,255,30,166,63,0,236,12,13,255,49,184,244,0,187,113,102,0,218,101,253,0,153,57,182,254,32,150,42,0,25,198,146,1,237,241,56,0,140,68,5,0,91,164,172,255,78,145,186,254,67,52,205,0,219,207,129,1,109,115,17,0,54,143,58,1,21,248,120,255,179,255,30,0,193,236,66,255,1,255,7,255,253,192,48,255,19,69,217,1,3,214,0,255,64,101,146,1,223,125,35,255,235,73,179,255,249,167,226,0,225,175,10,1,97,162,58,0,106,112,171,1,84,172,5,255,133,140,178,255,134,245,142,0,97,90,125,255,
186,203,185,255,223,77,23,255,192,92,106,0,15,198,115,255,217,152,248,0,171,178,120,255,228,134,53,0,176,54,193,1,250,251,53,0,213,10,100,1,34,199,106,0,151,31,244,254,172,224,87,255,14,237,23,255,253,85,26,255,127,39,116,255,172,104,100,0,251,14,70,255,212,208,138,255,253,211,250,0,176,49,165,0,15,76,123,255,37,218,160,255,92,135,16,1,10,126,114,255,70,5,224,255,247,249,141,0,68,20,60,1,241,210,189,255,195,217,187,1,151,3,113,0,151,92,174,0,231,62,178,255,219,183,225,0,23,23,33,255,205,181,80,0,
57,184,248,255,67,180,1,255,90,123,93,255,39,0,162,255,96,248,52,255,84,66,140,0,34,127,228,255,194,138,7,1,166,110,188,0,21,17,155,1,154,190,198,255,214,80,59,255,18,7,143,0,72,29,226,1,199,217,249,0,232,161,71,1,149,190,201,0,217,175,95,254,113,147,67,255,138,143,199,255,127,204,1,0,29,182,83,1,206,230,155,255,186,204,60,0,10,125,85,255,232,96,25,255,255,89,247,255,213,254,175,1,232,193,81,0,28,43,156,254,12,69,8,0,147,24,248,0,18,198,49,0,134,60,35,0,118,246,18,255,49,88,254,254,228,21,186,255,
182,65,112,1,219,22,1,255,22,126,52,255,189,53,49,255,112,25,143,0,38,127,55,255,226,101,163,254,208,133,61,255,137,69,174,1,190,118,145,255,60,98,219,255,217,13,245,255,250,136,10,0,84,254,226,0,201,31,125,1,240,51,251,255,31,131,130,255,2,138,50,255,215,215,177,1,223,12,238,255,252,149,56,255,124,91,68,255,72,126,170,254,119,255,100,0,130,135,232,255,14,79,178,0,250,131,197,0,138,198,208,0,121,216,139,254,119,18,36,255,29,193,122,0,16,42,45,255,213,240,235,1,230,190,169,255,198,35,228,254,110,173,
72,0,214,221,241,255,56,148,135,0,192,117,78,254,141,93,207,255,143,65,149,0,21,18,98,255,95,44,244,1,106,191,77,0,254,85,8,254,214,110,176,255,73,173,19,254,160,196,199,255,237,90,144,0,193,172,113,255,200,155,136,254,228,90,221,0,137,49,74,1,164,221,215,255,209,189,5,255,105,236,55,255,42,31,129,1,193,255,236,0,46,217,60,0,138,88,187,255,226,82,236,255,81,69,151,255,142,190,16,1,13,134,8,0,127,122,48,255,81,64,156,0,171,243,139,0,237,35,246,0,122,143,193,254,212,122,146,0,95,41,255,1,87,132,77,
0,4,212,31,0,17,31,78,0,39,45,173,254,24,142,217,255,95,9,6,255,227,83,6,0,98,59,130,254,62,30,33,0,8,115,211,1,162,97,128,255,7,184,23,254,116,28,168,255,248,138,151,255,98,244,240,0,186,118,130,0,114,248,235,255,105,173,200,1,160,124,71,255,94,36,164,1,175,65,146,255,238,241,170,254,202,198,197,0,228,71,138,254,45,246,109,255,194,52,158,0,133,187,176,0,83,252,154,254,89,189,221,255,170,73,252,0,148,58,125,0,36,68,51,254,42,69,177,255,168,76,86,255,38,100,204,255,38,53,35,0,175,19,97,0,225,238,253,
255,81,81,135,0,210,27,255,254,235,73,107,0,8,207,115,0,82,127,136,0,84,99,21,254,207,19,136,0,100,164,101,0,80,208,77,255,132,207,237,255,15,3,15,255,33,166,110,0,156,95,85,255,37,185,111,1,150,106,35,255,166,151,76,0,114,87,135,255,159,194,64,0,12,122,31,255,232,7,101,254,173,119,98,0,154,71,220,254,191,57,53,255,168,232,160,255,224,32,99,255,218,156,165,0,151,153,163,0,217,13,148,1,197,113,89,0,149,28,161,254,207,23,30,0,105,132,227,255,54,230,94,255,133,173,204,255,92,183,157,255,88,144,252,254,
102,33,90,0,159,97,3,0,181,218,155,255,240,114,119,0,106,214,53,255,165,190,115,1,152,91,225,255,88,106,44,255,208,61,113,0,151,52,124,0,191,27,156,255,110,54,236,1,14,30,166,255,39,127,207,1,229,199,28,0,188,228,188,254,100,157,235,0,246,218,183,1,107,22,193,255,206,160,95,0,76,239,147,0,207,161,117,0,51,166,2,255,52,117,10,254,73,56,227,255,152,193,225,0,132,94,136,255,101,191,209,0,32,107,229,255,198,43,180,1,100,210,118,0,114,67,153,255,23,88,26,255,89,154,92,1,220,120,140,255,144,114,207,255,
252,115,250,255,34,206,72,0,138,133,127,255,8,178,124,1,87,75,97,0,15,229,92,254,240,67,131,255,118,123,227,254,146,120,104,255,145,213,255,1,129,187,70,255,219,119,54,0,1,19,173,0,45,150,148,1,248,83,72,0,203,233,169,1,142,107,56,0,247,249,38,1,45,242,80,255,30,233,103,0,96,82,70,0,23,201,111,0,81,39,30,255,161,183,78,255,194,234,33,255,68,227,140,254,216,206,116,0,70,27,235,255,104,144,79,0,164,230,93,254,214,135,156,0,154,187,242,254,188,20,131,255,36,109,174,0,159,112,241,0,5,110,149,1,36,165,
218,0,166,29,19,1,178,46,73,0,93,43,32,254,248,189,237,0,102,155,141,0,201,93,195,255,241,139,253,255,15,111,98,255,108,65,163,254,155,79,190,255,73,174,193,254,246,40,48,255,107,88,11,254,202,97,85,255,253,204,18,255,113,242,66,0,110,160,194,254,208,18,186,0,81,21,60,0,188,104,167,255,124,166,97,254,210,133,142,0,56,242,137,254,41,111,130,0,111,151,58,1,111,213,141,255,183,172,241,255,38,6,196,255,185,7,123,255,46,11,246,0,245,105,119,1,15,2,161,255,8,206,45,255,18,202,74,255,83,124,115,1,212,141,
157,0,83,8,209,254,139,15,232,255,172,54,173,254,50,247,132,0,214,189,213,0,144,184,105,0,223,254,248,0,255,147,240,255,23,188,72,0,7,51,54,0,188,25,180,254,220,180,0,255,83,160,20,0,163,189,243,255,58,209,194,255,87,73,60,0,106,24,49,0,245,249,220,0,22,173,167,0,118,11,195,255,19,126,237,0,110,159,37,255,59,82,47,0,180,187,86,0,188,148,208,1,100,37,133,255,7,112,193,0,129,188,156,255,84,106,129,255,133,225,202,0,14,236,111,255,40,20,101,0,172,172,49,254,51,54,74,255,251,185,184,255,93,155,224,255,
180,249,224,1,230,178,146,0,72,57,54,254,178,62,184,0,119,205,72,0,185,239,253,255,61,15,218,0,196,67,56,255,234,32,171,1,46,219,228,0,208,108,234,255,20,63,232,255,165,53,199,1,133,228,5,255,52,205,107,0,74,238,140,255,150,156,219,254,239,172,178,255,251,189,223,254,32,142,211,255,218,15,138,1,241,196,80,0,28,36,98,254,22,234,199,0,61,237,220,255,246,57,37,0,142,17,142,255,157,62,26,0,43,238,95,254,3,217,6,255,213,25,240,1,39,220,174,255,154,205,48,254,19,13,192,255,244,34,54,254,140,16,155,0,240,
181,5,254,155,193,60,0,166,128,4,255,36,145,56,255,150,240,219,0,120,51,145,0,82,153,42,1,140,236,146,0,107,92,248,1,189,10,3,0,63,136,242,0,211,39,24,0,19,202,161,1,173,27,186,255,210,204,239,254,41,209,162,255,182,254,159,255,172,116,52,0,195,103,222,254,205,69,59,0,53,22,41,1,218,48,194,0,80,210,242,0,210,188,207,0,187,161,161,254,216,17,1,0,136,225,113,0,250,184,63,0,223,30,98,254,77,168,162,0,59,53,175,0,19,201,10,255,139,224,194,0,147,193,154,255,212,189,12,254,1,200,174,255,50,133,113,1,94,
179,90,0,173,182,135,0,94,177,113,0,43,89,215,255,136,252,106,255,123,134,83,254,5,245,66,255,82,49,39,1,220,2,224,0,97,129,177,0,77,59,89,0,61,29,155,1,203,171,220,255,92,78,139,0,145,33,181,255,169,24,141,1,55,150,179,0,139,60,80,255,218,39,97,0,2,147,107,255,60,248,72,0,173,230,47,1,6,83,182,255,16,105,162,254,137,212,81,255,180,184,134,1,39,222,164,255,221,105,251,1,239,112,125,0,63,7,97,0,63,104,227,255,148,58,12,0,90,60,224,255,84,212,252,0,79,215,168,0,248,221,199,1,115,121,1,0,36,172,120,
0,32,162,187,255,57,107,49,255,147,42,21,0,106,198,43,1,57,74,87,0,126,203,81,255,129,135,195,0,140,31,177,0,221,139,194,0,3,222,215,0,131,68,231,0,177,86,178,254,124,151,180,0,184,124,38,1,70,163,17,0,249,251,181,1,42,55,227,0,226,161,44,0,23,236,110,0,51,149,142,1,93,5,236,0,218,183,106,254,67,24,77,0,40,245,209,255,222,121,153,0,165,57,30,0,83,125,60,0,70,38,82,1,229,6,188,0,109,222,157,255,55,118,63,255,205,151,186,0,227,33,149,255,254,176,246,1,227,177,227,0,34,106,163,254,176,43,79,0,106,95,
78,1,185,241,122,255,185,14,61,0,36,1,202,0,13,178,162,255,247,11,132,0,161,230,92,1,65,1,185,255,212,50,165,1,141,146,64,255,158,242,218,0,21,164,125,0,213,139,122,1,67,71,87,0,203,158,178,1,151,92,43,0,152,111,5,255,39,3,239,255,217,255,250,255,176,63,71,255,74,245,77,1,250,174,18,255,34,49,227,255,246,46,251,255,154,35,48,1,125,157,61,255,106,36,78,255,97,236,153,0,136,187,120,255,113,134,171,255,19,213,217,254,216,94,209,255,252,5,61,0,94,3,202,0,3,26,183,255,64,191,43,255,30,23,21,0,129,141,
77,255,102,120,7,1,194,76,140,0,188,175,52,255,17,81,148,0,232,86,55,1,225,48,172,0,134,42,42,255,238,50,47,0,169,18,254,0,20,147,87,255,14,195,239,255,69,247,23,0,238,229,128,255,177,49,112,0,168,98,251,255,121,71,248,0,243,8,145,254,246,227,153,255,219,169,177,254,251,139,165,255,12,163,185,255,164,40,171,255,153,159,27,254,243,109,91,255,222,24,112,1,18,214,231,0,107,157,181,254,195,147,0,255,194,99,104,255,89,140,190,255,177,66,126,254,106,185,66,0,49,218,31,0,252,174,158,0,188,79,230,1,238,41,
224,0,212,234,8,1,136,11,181,0,166,117,83,255,68,195,94,0,46,132,201,0,240,152,88,0,164,57,69,254,160,224,42,255,59,215,67,255,119,195,141,255,36,180,121,254,207,47,8,255,174,210,223,0,101,197,68,255,255,82,141,1,250,137,233,0,97,86,133,1,16,80,69,0,132,131,159,0,116,93,100,0,45,141,139,0,152,172,157,255,90,43,91,0,71,153,46,0,39,16,112,255,217,136,97,255,220,198,25,254,177,53,49,0,222,88,134,255,128,15,60,0,207,192,169,255,192,116,209,255,106,78,211,1,200,213,183,255,7,12,122,254,222,203,60,255,
33,110,199,254,251,106,117,0,228,225,4,1,120,58,7,255,221,193,84,254,112,133,27,0,189,200,201,255,139,135,150,0,234,55,176,255,61,50,65,0,152,108,169,255,220,85,1,255,112,135,227,0,162,26,186,0,207,96,185,254,244,136,107,0,93,153,50,1,198,97,151,0,110,11,86,255,143,117,174,255,115,212,200,0,5,202,183,0,237,164,10,254,185,239,62,0,236,120,18,254,98,123,99,255,168,201,194,254,46,234,214,0,191,133,49,255,99,169,119,0,190,187,35,1,115,21,45,255,249,131,72,0,112,6,123,255,214,49,181,254,166,233,34,0,92,
197,102,254,253,228,205,255,3,59,201,1,42,98,46,0,219,37,35,255,169,195,38,0,94,124,193,1,156,43,223,0,95,72,133,254,120,206,191,0,122,197,239,255,177,187,79,255,254,46,2,1,250,167,190,0,84,129,19,0,203,113,166,255,249,31,189,254,72,157,202,255,208,71,73,255,207,24,72,0,10,16,18,1,210,81,76,255,88,208,192,255,126,243,107,255,238,141,120,255,199,121,234,255,137,12,59,255,36,220,123,255,148,179,60,254,240,12,29,0,66,0,97,1,36,30,38,255,115,1,93,255,96,103,231,255,197,158,59,1,192,164,240,0,202,202,
57,255,24,174,48,0,89,77,155,1,42,76,215,0,244,151,233,0,23,48,81,0,239,127,52,254,227,130,37,255,248,116,93,1,124,132,118,0,173,254,192,1,6,235,83,255,110,175,231,1,251,28,182,0,129,249,93,254,84,184,128,0,76,181,62,0,175,128,186,0,100,53,136,254,109,29,226,0,221,233,58,1,20,99,74,0,0,22,160,0,134,13,21,0,9,52,55,255,17,89,140,0,175,34,59,0,84,165,119,255,224,226,234,255,7,72,166,255],"i8",4,D.Y);
O([123,115,255,1,18,214,246,0,250,7,71,1,217,220,185,0,212,35,76,255,38,125,175,0,189,97,210,0,114,238,44,255,41,188,169,254,45,186,154,0,81,92,22,0,132,160,193,0,121,208,98,255,13,81,44,255,203,156,82,0,71,58,21,255,208,114,191,254,50,38,147,0,154,216,195,0,101,25,18,0,60,250,215,255,233,132,235,255,103,175,142,1,16,14,92,0,141,31,110,254,238,241,45,255,153,217,239,1,97,168,47,255,249,85,16,1,28,175,62,255,57,254,54,0,222,231,126,0,166,45,117,254,18,189,96,255,228,76,50,0,200,244,94,0,198,152,120,
1,68,34,69,255,12,65,160,254,101,19,90,0,167,197,120,255,68,54,185,255,41,218,188,0,113,168,48,0,88,105,189,1,26,82,32,255,185,93,164,1,228,240,237,255,66,182,53,0,171,197,92,255,107,9,233,1,199,120,144,255,78,49,10,255,109,170,105,255,90,4,31,255,28,244,113,255,74,58,11,0,62,220,246,255,121,154,200,254,144,210,178,255,126,57,129,1,43,250,14,255,101,111,28,1,47,86,241,255,61,70,150,255,53,73,5,255,30,26,158,0,209,26,86,0,138,237,74,0,164,95,188,0,142,60,29,254,162,116,248,255,187,175,160,0,151,18,
16,0,209,111,65,254,203,134,39,255,88,108,49,255,131,26,71,255,221,27,215,254,104,105,93,255,31,236,31,254,135,0,211,255,143,127,110,1,212,73,229,0,233,67,167,254,195,1,208,255,132,17,221,255,51,217,90,0,67,235,50,255,223,210,143,0,179,53,130,1,233,106,198,0,217,173,220,255,112,229,24,255,175,154,93,254,71,203,246,255,48,66,133,255,3,136,230,255,23,221,113,254,235,111,213,0,170,120,95,254,251,221,2,0,45,130,158,254,105,94,217,255,242,52,180,254,213,68,45,255,104,38,28,0,244,158,76,0,161,200,96,255,
207,53,13,255,187,67,148,0,170,54,248,0,119,162,178,255,83,20,11,0,42,42,192,1,146,159,163,255,183,232,111,0,77,229,21,255,71,53,143,0,27,76,34,0,246,136,47,255,219,39,182,255,92,224,201,1,19,142,14,255,69,182,241,255,163,118,245,0,9,109,106,1,170,181,247,255,78,47,238,255,84,210,176,255,213,107,139,0,39,38,11,0,72,21,150,0,72,130,69,0,205,77,155,254,142,133,21,0,71,111,172,254,226,42,59,255,179,0,215,1,33,128,241,0,234,252,13,1,184,79,8,0,110,30,73,255,246,141,189,0,170,207,218,1,74,154,69,255,138,
246,49,255,155,32,100,0,125,74,105,255,90,85,61,255,35,229,177,255,62,125,193,255,153,86,188,1,73,120,212,0,209,123,246,254,135,209,38,255,151,58,44,1,92,69,214,255,14,12,88,255,252,153,166,255,253,207,112,255,60,78,83,255,227,124,110,0,180,96,252,255,53,117,33,254,164,220,82,255,41,1,27,255,38,164,166,255,164,99,169,254,61,144,70,255,192,166,18,0,107,250,66,0,197,65,50,0,1,179,18,255,255,104,1,255,43,153,35,255,80,111,168,0,110,175,168,0,41,105,45,255,219,14,205,255,164,233,140,254,43,1,118,0,233,
67,195,0,178,82,159,255,138,87,122,255,212,238,90,255,144,35,124,254,25,140,164,0,251,215,44,254,133,70,107,255,101,227,80,254,92,169,55,0,215,42,49,0,114,180,85,255,33,232,27,1,172,213,25,0,62,176,123,254,32,133,24,255,225,191,62,0,93,70,153,0,181,42,104,1,22,191,224,255,200,200,140,255,249,234,37,0,149,57,141,0,195,56,208,255,254,130,70,255,32,173,240,255,29,220,199,0,110,100,115,255,132,229,249,0,228,233,223,255,37,216,209,254,178,177,209,255,183,45,165,254,224,97,114,0,137,97,168,255,225,222,
172,0,165,13,49,1,210,235,204,255,252,4,28,254,70,160,151,0,232,190,52,254,83,248,93,255,62,215,77,1,175,175,179,255,160,50,66,0,121,48,208,0,63,169,209,255,0,210,200,0,224,187,44,1,73,162,82,0,9,176,143,255,19,76,193,255,29,59,167,1,24,43,154,0,28,190,190,0,141,188,129,0,232,235,203,255,234,0,109,255,54,65,159,0,60,88,232,255,121,253,150,254,252,233,131,255,198,110,41,1,83,77,71,255,200,22,59,254,106,253,242,255,21,12,207,255,237,66,189,0,90,198,202,1,225,172,127,0,53,22,202,0,56,230,132,0,1,86,
183,0,109,190,42,0,243,68,174,1,109,228,154,0,200,177,122,1,35,160,183,255,177,48,85,255,90,218,169,255,248,152,78,0,202,254,110,0,6,52,43,0,142,98,65,255,63,145,22,0,70,106,93,0,232,138,107,1,110,179,61,255,211,129,218,1,242,209,92,0,35,90,217,1,182,143,106,255,116,101,217,255,114,250,221,255,173,204,6,0,60,150,163,0,73,172,44,255,239,110,80,255,237,76,153,254,161,140,249,0,149,232,229,0,133,31,40,255,174,164,119,0,113,51,214,0,129,228,2,254,64,34,243,0,107,227,244,255,174,106,200,255,84,153,70,
1,50,35,16,0,250,74,216,254,236,189,66,255,153,249,13,0,230,178,4,255,221,41,238,0,118,227,121,255,94,87,140,254,254,119,92,0,73,239,246,254,117,87,128,0,19,211,145,255,177,46,252,0,229,91,246,1,69,128,247,255,202,77,54,1,8,11,9,255,153,96,166,0,217,214,173,255,134,192,2,1,0,207,0,0,189,174,107,1,140,134,100,0,158,193,243,1,182,102,171,0,235,154,51,0,142,5,123,255,60,168,89,1,217,14,92,255,19,214,5,1,211,167,254,0,44,6,202,254,120,18,236,255,15,113,184,255,184,223,139,0,40,177,119,254,182,123,90,
255,176,165,176,0,247,77,194,0,27,234,120,0,231,0,214,255,59,39,30,0,125,99,145,255,150,68,68,1,141,222,248,0,153,123,210,255,110,127,152,255,229,33,214,1,135,221,197,0,137,97,2,0,12,143,204,255,81,41,188,0,115,79,130,255,94,3,132,0,152,175,187,255,124,141,10,255,126,192,179,255,11,103,198,0,149,6,45,0,219,85,187,1,230,18,178,255,72,182,152,0,3,198,184,255,128,112,224,1,97,161,230,0,254,99,38,255,58,159,197,0,151,66,219,0,59,69,143,255,185,112,249,0,119,136,47,255,123,130,132,0,168,71,95,255,113,
176,40,1,232,185,173,0,207,93,117,1,68,157,108,255,102,5,147,254,49,97,33,0,89,65,111,254,247,30,163,255,124,217,221,1,102,250,216,0,198,174,75,254,57,55,18,0,227,5,236,1,229,213,173,0,201,109,218,1,49,233,239,0,30,55,158,1,25,178,106,0,155,111,188,1,94,126,140,0,215,31,238,1,77,240,16,0,213,242,25,1,38,71,168,0,205,186,93,254,49,211,140,255,219,0,180,255,134,118,165,0,160,147,134,255,110,186,35,255,198,243,42,0,243,146,119,0,134,235,163,1,4,241,135,255,193,46,193,254,103,180,79,255,225,4,184,254,
242,118,130,0,146,135,176,1,234,111,30,0,69,66,213,254,41,96,123,0,121,94,42,255,178,191,195,255,46,130,42,0,117,84,8,255,233,49,214,254,238,122,109,0,6,71,89,1,236,211,123,0,244,13,48,254,119,148,14,0,114,28,86,255,75,237,25,255,145,229,16,254,129,100,53,255,134,150,120,254,168,157,50,0,23,72,104,255,224,49,14,0,255,123,22,255,151,185,151,255,170,80,184,1,134,182,20,0,41,100,101,1,153,33,16,0,76,154,111,1,86,206,234,255,192,160,164,254,165,123,93,255,1,216,164,254,67,17,175,255,169,11,59,255,158,
41,61,255,73,188,14,255,195,6,137,255,22,147,29,255,20,103,3,255,246,130,227,255,122,40,128,0,226,47,24,254,35,36,32,0,152,186,183,255,69,202,20,0,195,133,195,0,222,51,247,0,169,171,94,1,183,0,160,255,64,205,18,1,156,83,15,255,197,58,249,254,251,89,110,255,50,10,88,254,51,43,216,0,98,242,198,1,245,151,113,0,171,236,194,1,197,31,199,255,229,81,38,1,41,59,20,0,253,104,230,0,152,93,14,255,246,242,146,254,214,169,240,255,240,102,108,254,160,167,236,0,154,218,188,0,150,233,202,255,27,19,250,1,2,71,133,
255,175,12,63,1,145,183,198,0,104,120,115,255,130,251,247,0,17,212,167,255,62,123,132,255,247,100,189,0,155,223,152,0,143,197,33,0,155,59,44,255,150,93,240,1,127,3,87,255,95,71,207,1,167,85,1,255,188,152,116,255,10,23,23,0,137,195,93,1,54,98,97,0,240,0,168,255,148,188,127,0,134,107,151,0,76,253,171,0,90,132,192,0,146,22,54,0,224,66,54,254,230,186,229,255,39,182,196,0,148,251,130,255,65,131,108,254,128,1,160,0,169,49,167,254,199,254,148,255,251,6,131,0,187,254,129,255,85,82,62,0,178,23,58,255,254,
132,5,0,164,213,39,0,134,252,146,254,37,53,81,255,155,134,82,0,205,167,238,255,94,45,180,255,132,40,161,0,254,111,112,1,54,75,217,0,179,230,221,1,235,94,191,255,23,243,48,1,202,145,203,255,39,118,42,255,117,141,253,0,254,0,222,0,43,251,50,0,54,169,234,1,80,68,208,0,148,203,243,254,145,7,135,0,6,254,0,0,252,185,127,0,98,8,129,255,38,35,72,255,211,36,220,1,40,26,89,0,168,64,197,254,3,222,239,255,2,83,215,254,180,159,105,0,58,115,194,0,186,116,106,255,229,247,219,255,129,118,193,0,202,174,183,1,166,
161,72,0,201,107,147,254,237,136,74,0,233,230,106,1,105,111,168,0,64,224,30,1,1,229,3,0,102,151,175,255,194,238,228,255,254,250,212,0,187,237,121,0,67,251,96,1,197,30,11,0,183,95,204,0,205,89,138,0,64,221,37,1,255,223,30,255,178,48,211,255,241,200,90,255,167,209,96,255,57,130,221,0,46,114,200,255,61,184,66,0,55,182,24,254,110,182,33,0,171,190,232,255,114,94,31,0,18,221,8,0,47,231,254,0,255,112,83,0,118,15,215,255,173,25,40,254,192,193,31,255,238,21,146,255,171,193,118,255,101,234,53,254,131,212,112,
0,89,192,107,1,8,208,27,0,181,217,15,255,231,149,232,0,140,236,126,0,144,9,199,255,12,79,181,254,147,182,202,255,19,109,182,255,49,212,225,0,74,163,203,0,175,233,148,0,26,112,51,0,193,193,9,255,15,135,249,0,150,227,130,0,204,0,219,1,24,242,205,0,238,208,117,255,22,244,112,0,26,229,34,0,37,80,188,255,38,45,206,254,240,90,225,255,29,3,47,255,42,224,76,0,186,243,167,0,32,132,15,255,5,51,125,0,139,135,24,0,6,241,219,0,172,229,133,255,246,214,50,0,231,11,207,255,191,126,83,1,180,163,170,255,245,56,24,
1,178,164,211,255,3,16,202,1,98,57,118,255,141,131,89,254,33,51,24,0,243,149,91,255,253,52,14,0,35,169,67,254,49,30,88,255,179,27,36,255,165,140,183,0,58,189,151,0,88,31,0,0,75,169,66,0,66,101,199,255,24,216,199,1,121,196,26,255,14,79,203,254,240,226,81,255,94,28,10,255,83,193,240,255,204,193,131,255,94,15,86,0,218,40,157,0,51,193,209,0,0,242,177,0,102,185,247,0,158,109,116,0,38,135,91,0,223,175,149,0,220,66,1,255,86,60,232,0,25,96,37,255,225,122,162,1,215,187,168,255,158,157,46,0,56,171,162,0,232,
240,101,1,122,22,9,0,51,9,21,255,53,25,238,255,217,30,232,254,125,169,148,0,13,232,102,0,148,9,37,0,165,97,141,1,228,131,41,0,222,15,243,255,254,18,17,0,6,60,237,1,106,3,113,0,59,132,189,0,92,112,30,0,105,208,213,0,48,84,179,255,187,121,231,254,27,216,109,255,162,221,107,254,73,239,195,255,250,31,57,255,149,135,89,255,185,23,115,1,3,163,157,255,18,112,250,0,25,57,187,255,161,96,164,0,47,16,243,0,12,141,251,254,67,234,184,255,41,18,161,0,175,6,96,255,160,172,52,254,24,176,183,255,198,193,85,1,124,
121,137,255,151,50,114,255,220,203,60,255,207,239,5,1,0,38,107,255,55,238,94,254,70,152,94,0,213,220,77,1,120,17,69,255,85,164,190,255,203,234,81,0,38,49,37,254,61,144,124,0,137,78,49,254,168,247,48,0,95,164,252,0,105,169,135,0,253,228,134,0,64,166,75,0,81,73,20,255,207,210,10,0,234,106,150,255,94,34,90,255,254,159,57,254,220,133,99,0,139,147,180,254,24,23,185,0,41,57,30,255,189,97,76,0,65,187,223,255,224,172,37,255,34,62,95,1,231,144,240,0,77,106,126,254,64,152,91,0,29,98,155,0,226,251,53,255,234,
211,5,255,144,203,222,255,164,176,221,254,5,231,24,0,179,122,205,0,36,1,134,255,125,70,151,254,97,228,252,0,172,129,23,254,48,90,209,255,150,224,82,1,84,134,30,0,241,196,46,0,103,113,234,255,46,101,121,254,40,124,250,255,135,45,242,254,9,249,168,255,140,108,131,255,143,163,171,0,50,173,199,255,88,222,142,255,200,95,158,0,142,192,163,255,7,117,135,0,111,124,22,0,236,12,65,254,68,38,65,255,227,174,254,0,244,245,38,0,240,50,208,255,161,63,250,0,60,209,239,0,122,35,19,0,14,33,230,254,2,159,113,0,106,
20,127,255,228,205,96,0,137,210,174,254,180,212,144,255,89,98,154,1,34,88,139,0,167,162,112,1,65,110,197,0,241,37,169,0,66,56,131,255,10,201,83,254,133,253,187,255,177,112,45,254,196,251,0,0,196,250,151,255,238,232,214,255,150,209,205,0,28,240,118,0,71,76,83,1,236,99,91,0,42,250,131,1,96,18,64,255,118,222,35,0,113,214,203,255,122,119,184,255,66,19,36,0,204,64,249,0,146,89,139,0,134,62,135,1,104,233,101,0,188,84,26,0,49,249,129,0,208,214,75,255,207,130,77,255,115,175,235,0,171,2,137,255,175,145,186,
1,55,245,135,255,154,86,181,1,100,58,246,255,109,199,60,255,82,204,134,255,215,49,230,1,140,229,192,255,222,193,251,255,81,136,15,255,179,149,162,255,23,39,29,255,7,95,75,254,191,81,222,0,241,81,90,255,107,49,201,255,244,211,157,0,222,140,149,255,65,219,56,254,189,246,90,255,178,59,157,1,48,219,52,0,98,34,215,0,28,17,187,255,175,169,24,0,92,79,161,255,236,200,194,1,147,143,234,0,229,225,7,1,197,168,14,0,235,51,53,1,253,120,174,0,197,6,168,255,202,117,171,0,163,21,206,0,114,85,90,255,15,41,10,255,
194,19,99,0,65,55,216,254,162,146,116,0,50,206,212,255,64,146,29,255,158,158,131,1,100,165,130,255,172,23,129,255,125,53,9,255,15,193,18,1,26,49,11,255,181,174,201,1,135,201,14,255,100,19,149,0,219,98,79,0,42,99,143,254,96,0,48,255,197,249,83,254,104,149,79,255,235,110,136,254,82,128,44,255,65,41,36,254,88,211,10,0,187,121,187,0,98,134,199,0,171,188,179,254,210,11,238,255,66,123,130,254,52,234,61,0,48,113,23,254,6,86,120,255,119,178,245,0,87,129,201,0,242,141,209,0,202,114,85,0,148,22,161,0,103,195,
48,0,25,49,171,255,138,67,130,0,182,73,122,254,148,24,130,0,211,229,154,0,32,155,158,0,84,105,61,0,177,194,9,255,166,89,86,1,54,83,187,0,249,40,117,255,109,3,215,255,53,146,44,1,63,47,179,0,194,216,3,254,14,84,136,0,136,177,13,255,72,243,186,255,117,17,125,255,211,58,211,255,93,79,223,0,90,88,245,255,139,209,111,255,70,222,47,0,10,246,79,255,198,217,178,0,227,225,11,1,78,126,179,255,62,43,126,0,103,148,35,0,129,8,165,254,245,240,148,0,61,51,142,0,81,208,134,0,15,137,115,255,211,119,236,255,159,245,
248,255,2,134,136,255,230,139,58,1,160,164,254,0,114,85,141,255,49,166,182,255,144,70,84,1,85,182,7,0,46,53,93,0,9,166,161,255,55,162,178,255,45,184,188,0,146,28,44,254,169,90,49,0,120,178,241,1,14,123,127,255,7,241,199,1,189,66,50,255,198,143,101,254,189,243,135,255,141,24,24,254,75,97,87,0,118,251,154,1,237,54,156,0,171,146,207,255,131,196,246,255,136,64,113,1,151,232,57,0,240,218,115,0,49,61,27,255,64,129,73,1,252,169,27,255,40,132,10,1,90,201,193,255,252,121,240,1,186,206,41,0,43,198,97,0,145,
100,183,0,204,216,80,254,172,150,65,0,249,229,196,254,104,123,73,255,77,104,96,254,130,180,8,0,104,123,57,0,220,202,229,255,102,249,211,0,86,14,232,255,182,78,209,0,239,225,164,0,106,13,32,255,120,73,17,255,134,67,233,0,83,254,181,0,183,236,112,1,48,64,131,255,241,216,243,255,65,193,226,0,206,241,100,254,100,134,166,255,237,202,197,0,55,13,81,0,32,124,102,255,40,228,177,0,118,181,31,1,231,160,134,255,119,187,202,0,0,142,60,255,128,38,189,255,166,201,150,0,207,120,26,1,54,184,172,0,12,242,204,254,
133,66,230,0,34,38,31,1,184,112,80,0,32,51,165,254,191,243,55,0,58,73,146,254,155,167,205,255,100,104,152,255,197,254,207,255,173,19,247,0,238,10,202,0,239,151,242,0,94,59,39,255,240,29,102,255,10,92,154,255,229,84,219,255,161,129,80,0,208,90,204,1,240,219,174,255,158,102,145,1,53,178,76,255,52,108,168,1,83,222,107,0,211,36,109,0,118,58,56,0,8,29,22,0,237,160,199,0,170,209,157,0,137,71,47,0,143,86,32,0,198,242,2,0,212,48,136,1,92,172,186,0,230,151,105,1,96,191,229,0,138,80,191,254,240,216,130,255,
98,43,6,254,168,196,49,0,253,18,91,1,144,73,121,0,61,146,39,1,63,104,24,255,184,165,112,254,126,235,98,0,80,213,98,255,123,60,87,255,82,140,245,1,223,120,173,255,15,198,134,1,206,60,239,0,231,234,92,255,33,238,19,255,165,113,142,1,176,119,38,0,160,43,166,254,239,91,105,0,107,61,194,1,25,4,68,0,15,139,51,0,164,132,106,255,34,116,46,254,168,95,197,0,137,212,23,0,72,156,58,0,137,112,69,254,150,105,154,255,236,201,157,0,23,212,154,255,136,82,227,254,226,59,221,255,95,149,192,0,81,118,52,255,33,43,215,
1,14,147,75,255,89,156,121,254,14,18,79,0,147,208,139,1,151,218,62,255,156,88,8,1,210,184,98,255,20,175,123,255,102,83,229,0,220,65,116,1,150,250,4,255,92,142,220,255,34,247,66,255,204,225,179,254,151,81,151,0,71,40,236,255,138,63,62,0,6,79,240,255,183,185,181,0,118,50,27,0,63,227,192,0,123,99,58,1,50,224,155,255,17,225,223,254,220,224,77,255,14,44,123,1,141,128,175,0,248,212,200,0,150,59,183,255,147,97,29,0,150,204,181,0,253,37,71,0,145,85,119,0,154,200,186,0,2,128,249,255,83,24,124,0,14,87,143,
0,168,51,245,1,124,151,231,255,208,240,197,1,124,190,185,0,48,58,246,0,20,233,232,0,125,18,98,255,13,254,31,255,245,177,130,255,108,142,35,0,171,125,242,254,140,12,34,255,165,161,162,0,206,205,101,0,247,25,34,1,100,145,57,0,39,70,57,0,118,204,203,255,242,0,162,0,165,244,30,0,198,116,226,0,128,111,153,255,140,54,182,1,60,122,15,255,155,58,57,1,54,50,198,0,171,211,29,255,107,138,167,255,173,107,199,255,109,161,193,0,89,72,242,255,206,115,89,255,250,254,142,254,177,202,94,255,81,89,50,0,7,105,66,255,
25,254,255,254,203,64,23,255,79,222,108,255,39,249,75,0,241,124,50,0,239,152,133,0,221,241,105,0,147,151,98,0,213,161,121,254,242,49,137,0,233,37,249,254,42,183,27,0,184,119,230,255,217,32,163,255,208,251,228,1,137,62,131,255,79,64,9,254,94,48,113,0,17,138,50,254,193,255,22,0,247,18,197,1,67,55,104,0,16,205,95,255,48,37,66,0,55,156,63,1,64,82,74,255,200,53,71,254,239,67,125,0,26,224,222,0,223,137,93,255,30,224,202,255,9,220,132,0,198,38,235,1,102,141,86,0,60,43,81,1,136,28,26,0,233,36,8,254,207,242,
148,0,164,162,63,0,51,46,224,255,114,48,79,255,9,175,226,0,222,3,193,255,47,160,232,255,255,93,105,254,14,42,230,0,26,138,82,1,208,43,244,0,27,39,38,255,98,208,127,255,64,149,182,255,5,250,209,0,187,60,28,254,49,25,218,255,169,116,205,255,119,18,120,0,156,116,147,255,132,53,109,255,13,10,202,0,110,83,167,0,157,219,137,255,6,3,130,255,50,167,30,255,60,159,47,255,129,128,157,254,94,3,189,0,3,166,68,0,83,223,215,0,150,90,194,1,15,168,65,0,227,83,51,255,205,171,66,255,54,187,60,1,152,102,45,255,119,154,
225,0,240,247,136,0,100,197,178,255,139,71,223,255,204,82,16,1,41,206,42,255,156,192,221,255,216,123,244,255,218,218,185,255,187,186,239,255,252,172,160,255,195,52,22,0,144,174,181,254,187,100,115,255,211,78,176,255,27,7,193,0,147,213,104,255,90,201,10,255,80,123,66,1,22,33,186,0,1,7,99,254,30,206,10,0,229,234,5,0,53,30,210,0,138,8,220,254,71,55,167,0,72,225,86,1,118,190,188,0,254,193,101,1,171,249,172,255,94,158,183,254,93,2,108,255,176,93,76,255,73,99,79,255,74,64,129,254,246,46,65,0,99,241,127,
254,246,151,102,255,44,53,208,254,59,102,234,0,154,175,164,255,88,242,32,0,111,38,1,0,255,182,190,255,115,176,15,254,169,60,129,0,122,237,241,0,90,76,63,0,62,74,120,255,122,195,110,0,119,4,178,0,222,242,210,0,130,33,46,254,156,40,41,0,167,146,112,1,49,163,111,255,121,176,235,0,76,207,14,255,3,25,198,1,41,235,213,0,85,36,214,1,49,92,109,255,200,24,30,254,168,236,195,0,145,39,124,1,236,195,149,0,90,36,184,255,67,85,170,255,38,35,26,254,131,124,68,255,239,155,35,255,54,201,164,0,196,22,117,255,49,15,
205,0,24,224,29,1,126,113,144,0,117,21,182,0,203,159,141,0,223,135,77,0,176,230,176,255,190,229,215,255,99,37,181,255,51,21,138,255,25,189,89,255,49,48,165,254,152,45,247,0,170,108,222,0,80,202,5,0,27,69,103,254,204,22,129,255,180,252,62,254,210,1,91,255,146,110,254,255,219,162,28,0,223,252,213,1,59,8,33,0,206,16,244,0,129,211,48,0,107,160,208,0,112,59,209,0,109,77,216,254,34,21,185,255,246,99,56,255,179,139,19,255,185,29,50,255,84,89,19,0,74,250,98,255,225,42,200,255,192,217,205,255,210,16,167,0,
99,132,95,1,43,230,57,0,254,11,203,255,99,188,63,255,119,193,251,254,80,105,54,0,232,181,189,1,183,69,112,255,208,171,165,255,47,109,180,255,123,83,165,0,146,162,52,255,154,11,4,255,151,227,90,255,146,137,97,254,61,233,41,255,94,42,55,255,108,164,236,0,152,68,254,0,10,140,131,255,10,106,79,254,243,158,137,0,67,178,66,254,177,123,198,255,15,62,34,0,197,88,42,255,149,95,177,255,152,0,198,255,149,254,113,255,225,90,163,255,125,217,247,0,18,17,224,0,128,66,120,254,192,25,9,255,50,221,205,0,49,212,70,
0,233,255,164,0,2,209,9,0,221,52,219,254,172,224,244,255,94,56,206,1,242,179,2,255,31,91,164,1,230,46,138,255,189,230,220,0,57,47,61,255,111,11,157,0,177,91,152,0,28,230,98,0,97,87,126,0,198,89,145,255,167,79,107,0,249,77,160,1,29,233,230,255,150,21,86,254,60,11,193,0,151,37,36,254,185,150,243,255,228,212,83,1,172,151,180,0,201,169,155,0,244,60,234,0,142,235,4,1,67,218,60,0,192,113,75,1,116,243,207,255,65,172,155,0,81,30,156,255,80,72,33,254,18,231,109,255,142,107,21,254,125,26,132,255,176,16,59,
255,150,201,58,0,206,169,201,0,208,121,226,0,40,172,14,255,150,61,94,255,56,57,156,255,141,60,145,255,45,108,149,255,238,145,155,255,209,85,31,254,192,12,210,0,99,98,93,254,152,16,151,0,225,185,220,0,141,235,44,255,160,172,21,254,71,26,31,255,13,64,93,254,28,56,198,0,177,62,248,1,182,8,241,0,166,101,148,255,78,81,133,255,129,222,215,1,188,169,129,255,232,7,97,0,49,112,60,255,217,229,251,0,119,108,138,0,39,19,123,254,131,49,235,0,132,84,145,0,130,230,148,255,25,74,187,0,5,245,54,255,185,219,241,1,
18,194,228,255,241,202,102,0,105,113,202,0,155,235,79,0,21,9,178,255,156,1,239,0,200,148,61,0,115,247,210,255,49,221,135,0,58,189,8,1,35,46,9,0,81,65,5,255,52,158,185,255,125,116,46,255,74,140,13,255,210,92,172,254,147,23,71,0,217,224,253,254,115,108,180,255,145,58,48,254,219,177,24,255,156,255,60,1,154,147,242,0,253,134,87,0,53,75,229,0,48,195,222,255,31,175,50,255,156,210,120,255,208,35,222,255,18,248,179,1,2,10,101,255,157,194,248,255,158,204,101,255,104,254,197,255,79,62,4,0,178,172,101,1,96,
146,251,255,65,10,156,0,2,137,165,255,116,4,231,0,242,215,1,0,19,35,29,255,43,161,79,0,59,149,246,1,251,66,176,0,200,33,3,255,80,110,142,255,195,161,17,1,228,56,66,255,123,47,145,254,132,4,164,0,67,174,172,0,25,253,114,0,87,97,87,1,250,220,84,0,96,91,200,255,37,125,59,0,19,65,118,0,161,52,241,255,237,172,6,255,176,191,255,255,1,65,130,254,223,190,230,0,101,253,231,255,146,35,109,0,250,29,77,1,49,0,19,0,123,90,155,1,22,86,32,255,218,213,65,0,111,93,127,0,60,93,169,255,8,127,182,0,17,186,14,254,253,
137,246,255,213,25,48,254,76,238,0,255,248,92,70,255,99,224,139,0,184,9,255,1,7,164,208,0,205,131,198,1,87,214,199,0,130,214,95,0,221,149,222,0,23,38,171,254,197,110,213,0,43,115,140,254,215,177,118,0,96,52,66,1,117,158,237,0,14,64,182,255,46,63,174,255,158,95,190,255,225,205,177,255,43,5,142,255,172,99,212,255,244,187,147,0,29,51,153,255,228,116,24,254,30,101,207,0,19,246,150,255,134,231,5,0,125,134,226,1,77,65,98,0,236,130,33,255,5,110,62,0,69,108,127,255,7,113,22,0,145,20,83,254,194,161,231,255,
131,181,60,0,217,209,177,255,229,148,212,254,3,131,184,0,117,177,187,1,28,14,31,255,176,102,80,0,50,84,151,255,125,31,54,255,21,157,133,255,19,179,139,1,224,232,26,0,34,117,170,255,167,252,171,255,73,141,206,254,129,250,35,0,72,79,236,1,220,229,20,255,41,202,173,255,99,76,238,255,198,22,224,255,108,198,195,255,36,141,96,1,236,158,59,255,106,100,87,0,110,226,2,0,227,234,222,0,154,93,119,255,74,112,164,255,67,91,2,255,21,145,33,255,102,214,137,255,175,230,103,254,163,246,166,0,93,247,116,254,167,224,
28,255,220,2,57,1,171,206,84,0,123,228,17,255,27,120,119,0,119,11,147,1,180,47,225,255,104,200,185,254,165,2,114,0,77,78,212,0,45,154,177,255,24,196,121,254,82,157,182,0,90,16,190,1,12,147,197,0,95,239,152,255,11,235,71,0,86,146,119,255,172,134,214,0,60,131,196,0,161,225,129,0,31,130,120,254,95,200,51,0,105,231,210,255,58,9,148,255,43,168,221,255,124,237,142,0,198,211,50,254,46,245,103,0,164,248,84,0,152,70,208,255,180,117,177,0,70,79,185,0,243,74,32,0,149,156,207,0,197,196,161,1,245,53,239,0,15,
93,246,254,139,240,49,255,196,88,36,255,162,38,123,0,128,200,157,1,174,76,103,255,173,169,34,254,216,1,171,255,114,51,17,0,136,228,194,0,110,150,56,254,106,246,159,0,19,184,79,255,150,77,240,255,155,80,162,0,0,53,169,255,29,151,86,0,68,94,16,0,92,7,110,254,98,117,149,255,249,77,230,255,253,10,140,0,214,124,92,254,35,118,235,0,89,48,57,1,22,53,166,0,184,144,61,255,179,255,194,0,214,248,61,254,59,110,246,0,121,21,81,254,166,3,228,0,106,64,26,255,69,232,134,255,242,220,53,254,46,220,85,0,113,149,247,
255,97,179,103,255,190,127,11,0,135,209,182,0,95,52,129,1,170,144,206,255,122,200,204,255,168,100,146,0,60,144,149,254,70,60,40,0,122,52,177,255,246,211,101,255,174,237,8,0,7,51,120,0,19,31,173,0,126,239,156,255,143,189,203,0,196,128,88,255,233,133,226,255,30,125,173,255,201,108,50,0,123,100,59,255,254,163,3,1,221,148,181,255,214,136,57,254,222,180,137,255,207,88,54,255,28,33,251,255,67,214,52,1,210,208,100,0,81,170,94,0,145,40,53,0,224,111,231,254,35,28,244,255,226,199,195,254,238,17,230,0,217,217,
164,254,169,157,221,0,218,46,162,1,199,207,163,255,108,115,162,1,14,96,187,255,118,60,76,0,184,159,152,0,209,231,71,254,42,164,186,255,186,153,51,254,221,171,182,255,162,142,173,0,235,47,193,0,7,139,16,1,95,164,64,255,16,221,166,0,219,197,16,0,132,29,44,255,100,69,117,255,60,235,88,254,40,81,173,0,71,190,61,255,187,88,157,0,231,11,23,0,237,117,164,0,225,168,223,255,154,114,116,255,163,152,242,1,24,32,170,0,125,98,113,254,168,19,76,0,17,157,220,254,155,52,5,0,19,111,161,255,71,90,252,255,173,110,240,
0,10,198,121,255,253,255,240,255,66,123,210,0,221,194,215,254,121,163,17,255,225,7,99,0,190,49,182,0,115,9,133,1,232,26,138,255,213,68,132,0,44,119,122,255,179,98,51,0,149,90,106,0,71,50,230,255,10,153,118,255,177,70,25,0,165,87,205,0,55,138,234,0,238,30,97,0,113,155,207,0,98,153,127,0,34,107,219,254,117,114,172,255,76,180,255,254,242,57,179,255,221,34,172,254,56,162,49,255,83,3,255,255,113,221,189,255,188,25,228,254,16,88,89,255,71,28,198,254,22,17,149,255,243,121,254,255,107,202,99,255,9,206,14,
1,220,47,153,0,107,137,39,1,97,49,194,255,149,51,197,254,186,58,11,255,107,43,232,1,200,6,14,255,181,133,65,254,221,228,171,255,123,62,231,1,227,234,179,255,34,189,212,254,244,187,249,0,190,13,80,1,130,89,1,0,223,133,173,0,9,222,198,255,66,127,74,0,167,216,93,255,155,168,198,1,66,145,0,0,68,102,46,1,172,90,154,0,216,128,75,255,160,40,51,0,158,17,27,1,124,240,49,0,236,202,176,255,151,124,192,255,38,193,190,0,95,182,61,0,163,147,124,255,255,165,51,255,28,40,17,254,215,96,78,0,86,145,218,254,31,36,202,
255,86,9,5,0,111,41,200,255,237,108,97,0,57,62,44,0,117,184,15,1,45,241,116,0,152,1,220,255,157,165,188,0,250,15,131,1,60,44,125,255,65,220,251,255,75,50,184,0,53,90,128,255,231,80,194,255,136,129,127,1,21,18,187,255,45,58,161,255,71,147,34,0,174,249,11,254,35,141,29,0,239,68,177,255,115,110,58,0,238,190,177,1,87,245,166,255,190,49,247,255,146,83,184,255,173,14,39,255,146,215,104,0,142,223,120,0,149,200,155,255,212,207,145,1,16,181,217,0,173,32,87,255,255,35,181,0,119,223,161,1,200,223,94,255,70,
6,186,255,192,67,85,255,50,169,152,0,144,26,123,255,56,243,179,254,20,68,136,0,39,140,188,254,253,208,5,255,200,115,135,1,43,172,229,255,156,104,187,0,151,251,167,0,52,135,23,0,151,153,72,0,147,197,107,254,148,158,5,255,238,143,206,0,126,153,137,255,88,152,197,254,7,68,167,0,252,159,165,255,239,78,54,255,24,63,55,255,38,222,94,0,237,183,12,255,206,204,210,0,19,39,246,254,30,74,231,0,135,108,29,1,179,115,0,0,117,118,116,1,132,6,252,255,145,129,161,1,105,67,141,0,82,37,226,255,238,226,228,255,204,214,
129,254,162,123,100,255,185,121,234,0,45,108,231,0,66,8,56,255,132,136,128,0,172,224,66,254,175,157,188,0,230,223,226,254,242,219,69,0,184,14,119,1,82,162,56,0,114,123,20,0,162,103,85,255,49,239,99,254,156,135,215,0,111,255,167,254,39,196,214,0,144,38,79,1,249,168,125,0,155,97,156,255,23,52,219,255,150,22,144,0,44,149,165,255,40,127,183,0,196,77,233,255,118,129,210,255,170,135,230,255,214,119,198,0,233,240,35,0,253,52,7,255,117,102,48,255,21,204,154,255,179,136,177,255,23,2,3,1,149,130,89,255,252,
17,159,1,70,60,26,0,144,107,17,0,180,190,60,255,56,182,59,255,110,71,54,255,198,18,129,255,149,224,87,255,223,21,152,255,138,22,182,255,250,156,205,0,236,45,208,255,79,148,242,1,101,70,209,0,103,78,174,0,101,144,172,255,152,136,237,1,191,194,136,0,113,80,125,1,152,4,141,0,155,150,53,255,196,116,245,0,239,114,73,254,19,82,17,255,124,125,234,255,40,52,191,0,42,210,158,255,155,132,165,0,178,5,42,1,64,92,40,255,36,85,77,255,178,228,118,0,137,66,96,254,115,226,66,0,110,240,69,254,151,111,80,0,167,174,
236,255,227,108,107,255,188,242,65,255,183,81,255,0,57,206,181,255,47,34,181,255,213,240,158,1,71,75,95,0,156,40,24,255,102,210,81,0,171,199,228,255,154,34,41,0,227,175,75,0,21,239,195,0,138,229,95,1,76,192,49,0,117,123,87,1,227,225,130,0,125,62,63,255,2,198,171,0,254,36,13,254,145,186,206,0,148,255,244,255,35,0,166,0,30,150,219,1,92,228,212,0,92,198,60,254,62,133,200,255,201,41,59,0,125,238,109,255,180,163,238,1,140,122,82,0,9,22,88,255,197,157,47,255,153,94,57,0,88,30,182,0,84,161,85,0,178,146,
124,0,166,166,7,255,21,208,223,0,156,182,242,0,155,121,185,0,83,156,174,254,154,16,118,255,186,83,232,1,223,58,121,255,29,23,88,0,35,125,127,255,170,5,149,254,164,12,130,255,155,196,29,0,161,96,136,0,7,35,29,1,162,37,251,0,3,46,242,255,0,217,188,0,57,174,226,1,206,233,2,0,57,187,136,254,123,189,9,255,201,117,127,255,186,36,204,0,231,25,216,0,80,78,105,0,19,134,129,255,148,203,68,0,141,81,125,254,248,165,200,255,214,144,135,0,151,55,166,255,38,235,91,0,21,46,154,0,223,254,150,255,35,153,180,255,125,
176,29,1,43,98,30,255,216,122,230,255,233,160,12,0,57,185,12,254,240,113,7,255,5,9,16,254,26,91,108,0,109,198,203,0,8,147,40,0,129,134,228,255,124,186,40,255,114,98,132,254,166,132,23,0,99,69,44,0,9,242,238,255,184,53,59,0,132,129,102,255,52,32,243,254,147,223,200,255,123,83,179,254,135,144,201,255,141,37,56,1,151,60,227,255,90,73,156,1,203,172,187,0,80,151,47,255,94,137,231,255,36,191,59,255,225,209,181,255,74,215,213,254,6,118,179,255,153,54,193,1,50,0,231,0,104,157,72,1,140,227,154,255,182,226,
16,254,96,225,92,255,115,20,170,254,6,250,78,0,248,75,173,255,53,89,6,255,0,180,118,0,72,173,1,0,64,8,206,1,174,133,223,0,185,62,133,255,214,11,98,0,197,31,208,0,171,167,244,255,22,231,181,1,150,218,185,0,247,169,97,1,165,139,247,255,47,120,149,1,103,248,51,0,60,69,28,254,25,179,196,0,124,7,218,254,58,107,81,0,184,233,156,255,252,74,36,0,118,188,67,0,141,95,53,255,222,94,165,254,46,61,53,0,206,59,115,255,47,236,250,255,74,5,32,1,129,154,238,255,106,32,226,0,121,187,61,255,3,166,241,254,67,170,172,
255,29,216,178,255,23,201,252,0,253,110,243,0,200,125,57,0,109,192,96,255,52,115,238,0,38,121,243,255,201,56,33,0,194,118,130,0,75,96,25,255,170,30,230,254,39,63,253,0,36,45,250,255,251,1,239,0,160,212,92,1,45,209,237,0,243,33,87,254,237,84,201,255,212,18,157,254,212,99,127,255,217,98,16,254,139,172,239,0,168,201,130,255,143,193,169,255,238,151,193,1,215,104,41,0,239,61,165,254,2,3,242,0,22,203,177,254,177,204,22,0,149,129,213,254,31,11,41,255,0,159,121,254,160,25,114,255,162,80,200,0,157,151,11,
0,154,134,78,1,216,54,252,0,48,103,133,0,105,220,197,0,253,168,77,254,53,179,23,0,24,121,240,1,255,46,96,255,107,60,135,254,98,205,249,255,63,249,119,255,120,59,211,255,114,180,55,254,91,85,237,0,149,212,77,1,56,73,49,0,86,198,150,0,93,209,160,0,69,205,182,255,244,90,43,0,20,36,176,0,122,116,221,0,51,167,39,1,231,1,63,255,13,197,134,0,3,209,34,255,135,59,202,0,167,100,78,0,47,223,76,0,185,60,62,0,178,166,123,1,132,12,161,255,61,174,43,0,195,69,144,0,127,47,191,1,34,44,78,0,57,234,52,1,255,22,40,255,
246,94,146,0,83,228,128,0,60,78,224,255,0,96,210,255,153,175,236,0,159,21,73,0,180,115,196,254,131,225,106,0,255,167,134,0,159,8,112,255,120,68,194,255,176,196,198,255,118,48,168,255,93,169,1,0,112,200,102,1,74,24,254,0,19,141,4,254,142,62,63,0,131,179,187,255,77,156,155,255,119,86,164,0,170,208,146,255,208,133,154,255,148,155,58,255,162,120,232,254,252,213,155,0,241,13,42,0,94,50,131,0,179,170,112,0,140,83,151,255,55,119,84,1,140,35,239,255,153,45,67,1,236,175,39,0,54,151,103,255,158,42,65,255,196,
239,135,254,86,53,203,0,149,97,47,254,216,35,17,255,70,3,70,1,103,36,90,255,40,26,173,0,184,48,13,0,163,219,217,255,81,6,1,255,221,170,108,254,233,208,93,0,100,201,249,254,86,36,35,255,209,154,30,1,227,201,251,255,2,189,167,254,100,57,3,0,13,128,41,0,197,100,75,0,150,204,235,255,145,174,59,0,120,248,149,255,85,55,225,0,114,210,53,254,199,204,119,0,14,247,74,1,63,251,129,0,67,104,151,1,135,130,80,0,79,89,55,255,117,230,157,255,25,96,143,0,213,145,5,0,69,241,120,1,149,243,95,255,114,42,20,0,131,72,
2,0,154,53,20,255,73,62,109,0,196,102,152,0,41,12,204,255,122,38,11,1,250,10,145,0,207,125,148,0,246,244,222,255,41,32,85,1,112,213,126,0,162,249,86,1,71,198,127,255,81,9,21,1,98,39,4,255,204,71,45,1,75,111,137,0,234,59,231,0,32,48,95,255,204,31,114,1,29,196,181,255,51,241,167,254,93,109,142,0,104,144,45,0,235,12,181,255,52,112,164,0,76,254,202,255,174,14,162,0,61,235,147,255,43,64,185,254,233,125,217,0,243,88,167,254,74,49,8,0,156,204,66,0,124,214,123,0,38,221,118,1,146,112,236,0,114,98,177,0,151,
89,199,0,87,197,112,0,185,149,161,0,44,96,165,0,248,179,20,255,188,219,216,254,40,62,13,0,243,142,141,0,229,227,206,255,172,202,35,255,117,176,225,255,82,110,38,1,42,245,14,255,20,83,97,0,49,171,10,0,242,119,120,0,25,232,61,0,212,240,147,255,4,115,56,255,145,17,239,254,202,17,251,255,249,18,245,255,99,117,239,0,184,4,179,255,246,237,51,255,37,239,137,255,166,112,166,255,81,188,33,255,185,250,142,255,54,187,173,0,208,112,201,0,246,43,228,1,104,184,88,255,212,52,196,255,51,117,108,255,254,117,155,0,
46,91,15,255,87,14,144,255,87,227,204,0,83,26,83,1,159,76,227,0,159,27,213,1,24,151,108,0,117,144,179,254,137,209,82,0,38,159,10,0,115,133,201,0,223,182,156,1,110,196,93,255,57,60,233,0,5,167,105,255,154,197,164,0,96,34,186,255,147,133,37,1,220,99,190,0,1,167,84,255,20,145,171,0,194,197,251,254,95,78,133,255,252,248,243,255,225,93,131,255,187,134,196,255,216,153,170,0,20,118,158,254,140,1,118,0,86,158,15,1,45,211,41,255,147,1,100,254,113,116,76,255,211,127,108,1,103,15,48,0,193,16,102,1,69,51,95,
255,107,128,157,0,137,171,233,0,90,124,144,1,106,161,182,0,175,76,236,1,200,141,172,255,163,58,104,0,233,180,52,255,240,253,14,255,162,113,254,255,38,239,138,254,52,46,166,0,241,101,33,254,131,186,156,0,111,208,62,255,124,94,160,255,31,172,254,0,112,174,56,255,188,99,27,255,67,138,251,0,125,58,128,1,156,152,174,255,178,12,247,255,252,84,158,0,82,197,14,254,172,200,83,255,37,39,46,1,106,207,167,0,24,189,34,0,131,178,144,0,206,213,4,0,161,226,210,0,72,51,105,255,97,45,187,255,78,184,223,255,176,29,
251,0,79,160,86,255,116,37,178,0,82,77,213,1,82,84,141,255,226,101,212,1,175,88,199,255,245,94,247,1,172,118,109,255,166,185,190,0,131,181,120,0,87,254,93,255,134,240,73,255,32,245,143,255,139,162,103,255,179,98,18,254,217,204,112,0,147,223,120,255,53,10,243,0,166,140,150,0,125,80,200,255,14,109,219,255,91,218,1,255,252,252,47,254,109,156,116,255,115,49,127,1,204,87,211,255,148,202,217,255,26,85,249,255,14,245,134,1,76,89,169,255,242,45,230,0,59,98,172,255,114,73,132,254,78,155,49,255,158,126,84,
0,49,175,43,255,16,182,84,255,157,103,35,0,104,193,109,255,67,221,154,0,201,172,1,254,8,162,88,0,165,1,29,255,125,155,229,255,30,154,220,1,103,239,92,0,220,1,109,255,202,198,1,0,94,2,142,1,36,54,44,0,235,226,158,255,170,251,214,255,185,77,9,0,97,74,242,0,219,163,149,255,240,35,118,255,223,114,88,254,192,199,3,0,106,37,24,255,201,161,118,255,97,89,99,1,224,58,103,255,101,199,147,254,222,60,99,0,234,25,59,1,52,135,27,0,102,3,91,254,168,216,235,0,229,232,136,0,104,60,129,0,46,168,238,0,39,191,67,0,75,
163,47,0,143,97,98,255,56,216,168,1,168,233,252,255,35,111,22,255,92,84,43,0,26,200,87,1,91,253,152,0,202,56,70,0,142,8,77,0,80,10,175,1,252,199,76,0,22,110,82,255,129,1,194,0,11,128,61,1,87,14,145,255,253,222,190,1,15,72,174,0,85,163,86,254,58,99,44,255,45,24,188,254,26,205,15,0,19,229,210,254,248,67,195,0,99,71,184,0,154,199,37,255,151,243,121,255,38,51,75,255,201,85,130,254,44,65,250,0,57,147,243,254,146,43,59,255,89,28,53,0,33,84,24,255,179,51,18,254,189,70,83,0,11,156,179,1,98,134,119,0,158,
111,111,0,119,154,73,255,200,63,140,254,45,13,13,255,154,192,2,254,81,72,42,0,46,160,185,254,44,112,6,0,146,215,149,1,26,176,104,0,68,28,87,1,236,50,153,255,179,128,250,254,206,193,191,255,166,92,137,254,53,40,239,0,210,1,204,254,168,173,35,0,141,243,45,1,36,50,109,255,15,242,194,255,227,159,122,255,176,175,202,254,70,57,72,0,40,223,56,0,208,162,58,255,183,98,93,0,15,111,12,0,30,8,76,255,132,127,246,255,45,242,103,0,69,181,15,255,10,209,30,0,3,179,121,0,241,232,218,1,123,199,88,255,2,210,202,1,188,
130,81,255,94,101,208,1,103,36,45,0,76,193,24,1,95,26,241,255,165,162,187,0,36,114,140,0,202,66,5,255,37,56,147,0,152,11,243,1,127,85,232,255,250,135,212,1,185,177,113,0,90,220,75,255,69,248,146,0,50,111,50,0,92,22,80,0,244,36,115,254,163,100,82,255,25,193,6,1,127,61,36,0,253,67,30,254,65,236,170,255,161,17,215,254,63,175,140,0,55,127,4,0,79,112,233,0,109,160,40,0,143,83,7,255,65,26,238,255,217,169,140,255,78,94,189,255,0,147,190,255,147,71,186,254,106,77,127,255],"i8",4,D.Y+10240);
O([233,157,233,1,135,87,237,255,208,13,236,1,155,109,36,255,180,100,218,0,180,163,18,0,190,110,9,1,17,63,123,255,179,136,180,255,165,123,123,255,144,188,81,254,71,240,108,255,25,112,11,255,227,218,51,255,167,50,234,255,114,79,108,255,31,19,115,255,183,240,99,0,227,87,143,255,72,217,248,255,102,169,95,1,129,149,149,0,238,133,12,1,227,204,35,0,208,115,26,1,102,8,234,0,112,88,143,1,144,249,14,0,240,158,172,254,100,112,119,0,194,141,153,254,40,56,83,255,121,176,46,0,42,53,76,255,158,191,154,0,91,209,
92,0,173,13,16,1,5,72,226,255,204,254,149,0,80,184,207,0,100,9,122,254,118,101,171,255,252,203,0,254,160,207,54,0,56,72,249,1,56,140,13,255,10,64,107,254,91,101,52,255,225,181,248,1,139,255,132,0,230,145,17,0,233,56,23,0,119,1,241,255,213,169,151,255,99,99,9,254,185,15,191,255,173,103,109,1,174,13,251,255,178,88,7,254,27,59,68,255,10,33,2,255,248,97,59,0,26,30,146,1,176,147,10,0,95,121,207,1,188,88,24,0,185,94,254,254,115,55,201,0,24,50,70,0,120,53,6,0,142,66,146,0,228,226,249,255,104,192,222,1,173,
68,219,0,162,184,36,255,143,102,137,255,157,11,23,0,125,45,98,0,235,93,225,254,56,112,160,255,70,116,243,1,153,249,55,255,129,39,17,1,241,80,244,0,87,69,21,1,94,228,73,255,78,66,65,255,194,227,231,0,61,146,87,255,173,155,23,255,112,116,219,254,216,38,11,255,131,186,133,0,94,212,187,0,100,47,91,0,204,254,175,255,222,18,215,254,173,68,108,255,227,228,79,255,38,221,213,0,163,227,150,254,31,190,18,0,160,179,11,1,10,90,94,255,220,174,88,0,163,211,229,255,199,136,52,0,130,95,221,255,140,188,231,254,139,
113,128,255,117,171,236,254,49,220,20,255,59,20,171,255,228,109,188,0,20,225,32,254,195,16,174,0,227,254,136,1,135,39,105,0,150,77,206,255,210,238,226,0,55,212,132,254,239,57,124,0,170,194,93,255,249,16,247,255,24,151,62,255,10,151,10,0,79,139,178,255,120,242,202,0,26,219,213,0,62,125,35,255,144,2,108,255,230,33,83,255,81,45,216,1,224,62,17,0,214,217,125,0,98,153,153,255,179,176,106,254,131,93,138,255,109,62,36,255,178,121,32,255,120,252,70,0,220,248,37,0,204,88,103,1,128,220,251,255,236,227,7,1,
106,49,198,255,60,56,107,0,99,114,238,0,220,204,94,1,73,187,1,0,89,154,34,0,78,217,165,255,14,195,249,255,9,230,253,255,205,135,245,0,26,252,7,255,84,205,27,1,134,2,112,0,37,158,32,0,231,91,237,255,191,170,204,255,152,7,222,0,109,192,49,0,193,166,146,255,232,19,181,255,105,142,52,255,103,16,27,1,253,200,165,0,195,217,4,255,52,189,144,255,123,155,160,254,87,130,54,255,78,120,61,255,14,56,41,0,25,41,125,255,87,168,245,0,214,165,70,0,212,169,6,255,219,211,194,254,72,93,164,255,197,33,103,255,43,142,
141,0,131,225,172,0,244,105,28,0,68,68,225,0,136,84,13,255,130,57,40,254,139,77,56,0,84,150,53,0,54,95,157,0,144,13,177,254,95,115,186,0,117,23,118,255,244,166,241,255,11,186,135,0,178,106,203,255,97,218,93,0,43,253,45,0,164,152,4,0,139,118,239,0,96,1,24,254,235,153,211,255,168,110,20,255,50,239,176,0,114,41,232,0,193,250,53,0,254,160,111,254,136,122,41,255,97,108,67,0,215,152,23,255,140,209,212,0,42,189,163,0,202,42,50,255,106,106,189,255,190,68,217,255,233,58,117,0,229,220,243,1,197,3,4,0,37,120,
54,254,4,156,134,255,36,61,171,254,165,136,100,255,212,232,14,0,90,174,10,0,216,198,65,255,12,3,64,0,116,113,115,255,248,103,8,0,231,125,18,255,160,28,197,0,30,184,35,1,223,73,249,255,123,20,46,254,135,56,37,255,173,13,229,1,119,161,34,255,245,61,73,0,205,125,112,0,137,104,134,0,217,246,30,255,237,142,143,0,65,159,102,255,108,164,190,0,219,117,173,255,34,37,120,254,200,69,80,0,31,124,218,254,74,27,160,255,186,154,199,255,71,199,252,0,104,81,159,1,17,200,39,0,211,61,192,1,26,238,91,0,148,217,12,0,
59,91,213,255,11,81,183,255,129,230,122,255,114,203,145,1,119,180,66,255,72,138,180,0,224,149,106,0,119,82,104,255,208,140,43,0,98,9,182,255,205,101,134,255,18,101,38,0,95,197,166,255,203,241,147,0,62,208,145,255,133,246,251,0,2,169,14,0,13,247,184,0,142,7,254,0,36,200,23,255,88,205,223,0,91,129,52,255,21,186,30,0,143,228,210,1,247,234,248,255,230,69,31,254,176,186,135,255,238,205,52,1,139,79,43,0,17,176,217,254,32,243,67,0,242,111,233,0,44,35,9,255,227,114,81,1,4,71,12,255,38,105,191,0,7,117,50,
255,81,79,16,0,63,68,65,255,157,36,110,255,77,241,3,255,226,45,251,1,142,25,206,0,120,123,209,1,28,254,238,255,5,128,126,255,91,222,215,255,162,15,191,0,86,240,73,0,135,185,81,254,44,241,163,0,212,219,210,255,112,162,155,0,207,101,118,0,168,72,56,255,196,5,52,0,72,172,242,255,126,22,157,255,146,96,59,255,162,121,152,254,140,16,95,0,195,254,200,254,82,150,162,0,119,43,145,254,204,172,78,255,166,224,159,0,104,19,237,255,245,126,208,255,226,59,213,0,117,217,197,0,152,72,237,0,220,31,23,254,14,90,231,
255,188,212,64,1,60,101,246,255,85,24,86,0,1,177,109,0,146,83,32,1,75,182,192,0,119,241,224,0,185,237,27,255,184,101,82,1,235,37,77,255,253,134,19,0,232,246,122,0,60,106,179,0,195,11,12,0,109,66,235,1,125,113,59,0,61,40,164,0,175,104,240,0,2,47,187,255,50,12,141,0,194,139,181,255,135,250,104,0,97,92,222,255,217,149,201,255,203,241,118,255,79,151,67,0,122,142,218,255,149,245,239,0,138,42,200,254,80,37,97,255,124,112,167,255,36,138,87,255,130,29,147,255,241,87,78,255,204,97,19,1,177,209,22,255,247,
227,127,254,99,119,83,255,212,25,198,1,16,179,179,0,145,77,172,254,89,153,14,255,218,189,167,0,107,233,59,255,35,33,243,254,44,112,112,255,161,127,79,1,204,175,10,0,40,21,138,254,104,116,228,0,199,95,137,255,133,190,168,255,146,165,234,1,183,99,39,0,183,220,54,254,255,222,133,0,162,219,121,254,63,239,6,0,225,102,54,255,251,18,246,0,4,34,129,1,135,36,131,0,206,50,59,1,15,97,183,0,171,216,135,255,101,152,43,255,150,251,91,0,38,145,95,0,34,204,38,254,178,140,83,255,25,129,243,255,76,144,37,0,106,36,
26,254,118,144,172,255,68,186,229,255,107,161,213,255,46,163,68,255,149,170,253,0,187,17,15,0,218,160,165,255,171,35,246,1,96,13,19,0,165,203,117,0,214,107,192,255,244,123,177,1,100,3,104,0,178,242,97,255,251,76,130,255,211,77,42,1,250,79,70,255,63,244,80,1,105,101,246,0,61,136,58,1,238,91,213,0,14,59,98,255,167,84,77,0,17,132,46,254,57,175,197,255,185,62,184,0,76,64,207,0,172,175,208,254,175,74,37,0,138,27,211,254,148,125,194,0,10,89,81,0,168,203,101,255,43,213,209,1,235,245,54,0,30,35,226,255,9,
126,70,0,226,125,94,254,156,117,20,255,57,248,112,1,230,48,64,255,164,92,166,1,224,214,230,255,36,120,143,0,55,8,43,255,251,1,245,1,106,98,165,0,74,107,106,254,53,4,54,255,90,178,150,1,3,120,123,255,244,5,89,1,114,250,61,255,254,153,82,1,77,15,17,0,57,238,90,1,95,223,230,0,236,52,47,254,103,148,164,255,121,207,36,1,18,16,185,255,75,20,74,0,187,11,101,0,46,48,129,255,22,239,210,255,77,236,129,255,111,77,204,255,61,72,97,255,199,217,251,255,42,215,204,0,133,145,201,255,57,230,146,1,235,100,198,0,146,
73,35,254,108,198,20,255,182,79,210,255,82,103,136,0,246,108,176,0,34,17,60,255,19,74,114,254,168,170,78,255,157,239,20,255,149,41,168,0,58,121,28,0,79,179,134,255,231,121,135,255,174,209,98,255,243,122,190,0,171,166,205,0,212,116,48,0,29,108,66,255,162,222,182,1,14,119,21,0,213,39,249,255,254,223,228,255,183,165,198,0,133,190,48,0,124,208,109,255,119,175,85,255,9,209,121,1,48,171,189,255,195,71,134,1,136,219,51,255,182,91,141,254,49,159,72,0,35,118,245,255,112,186,227,255,59,137,31,0,137,44,163,
0,114,103,60,254,8,213,150,0,162,10,113,255,194,104,72,0,220,131,116,255,178,79,92,0,203,250,213,254,93,193,189,255,130,255,34,254,212,188,151,0,136,17,20,255,20,101,83,255,212,206,166,0,229,238,73,255,151,74,3,255,168,87,215,0,155,188,133,255,166,129,73,0,240,79,133,255,178,211,81,255,203,72,163,254,193,168,165,0,14,164,199,254,30,255,204,0,65,72,91,1,166,74,102,255,200,42,0,255,194,113,227,255,66,23,208,0,229,216,100,255,24,239,26,0,10,233,62,255,123,10,178,1,26,36,174,255,119,219,199,1,45,163,
190,0,16,168,42,0,166,57,198,255,28,26,26,0,126,165,231,0,251,108,100,255,61,229,121,255,58,118,138,0,76,207,17,0,13,34,112,254,89,16,168,0,37,208,105,255,35,201,215,255,40,106,101,254,6,239,114,0,40,103,226,254,246,127,110,255,63,167,58,0,132,240,142,0,5,158,88,255,129,73,158,255,94,89,146,0,230,54,146,0,8,45,173,0,79,169,1,0,115,186,247,0,84,64,131,0,67,224,253,255,207,189,64,0,154,28,81,1,45,184,54,255,87,212,224,255,0,96,73,255,129,33,235,1,52,66,80,255,251,174,155,255,4,179,37,0,234,164,93,254,
93,175,253,0,198,69,87,255,224,106,46,0,99,29,210,0,62,188,114,255,44,234,8,0,169,175,247,255,23,109,137,255,229,182,39,0,192,165,94,254,245,101,217,0,191,88,96,0,196,94,99,255,106,238,11,254,53,126,243,0,94,1,101,255,46,147,2,0,201,124,124,255,141,12,218,0,13,166,157,1,48,251,237,255,155,250,124,255,106,148,146,255,182,13,202,0,28,61,167,0,217,152,8,254,220,130,45,255,200,230,255,1,55,65,87,255,93,191,97,254,114,251,14,0,32,105,92,1,26,207,141,0,24,207,13,254,21,50,48,255,186,148,116,255,211,43,
225,0,37,34,162,254,164,210,42,255,68,23,96,255,182,214,8,255,245,117,137,255,66,195,50,0,75,12,83,254,80,140,164,0,9,165,36,1,228,110,227,0,241,17,90,1,25,52,212,0,6,223,12,255,139,243,57,0,12,113,75,1,246,183,191,255,213,191,69,255,230,15,142,0,1,195,196,255,138,171,47,255,64,63,106,1,16,169,214,255,207,174,56,1,88,73,133,255,182,133,140,0,177,14,25,255,147,184,53,255,10,227,161,255,120,216,244,255,73,77,233,0,157,238,139,1,59,65,233,0,70,251,216,1,41,184,153,255,32,203,112,0,146,147,253,0,87,101,
109,1,44,82,133,255,244,150,53,255,94,152,232,255,59,93,39,255,88,147,220,255,78,81,13,1,32,47,252,255,160,19,114,255,93,107,39,255,118,16,211,1,185,119,209,255,227,219,127,254,88,105,236,255,162,110,23,255,36,166,110,255,91,236,221,255,66,234,116,0,111,19,244,254,10,233,26,0,32,183,6,254,2,191,242,0,218,156,53,254,41,60,70,255,168,236,111,0,121,185,126,255,238,142,207,255,55,126,52,0,220,129,208,254,80,204,164,255,67,23,144,254,218,40,108,255,127,202,164,0,203,33,3,255,2,158,0,0,37,96,188,255,192,
49,74,0,109,4,0,0,111,167,10,254,91,218,135,255,203,66,173,255,150,194,226,0,201,253,6,255,174,102,121,0,205,191,110,0,53,194,4,0,81,40,45,254,35,102,143,255,12,108,198,255,16,27,232,255,252,71,186,1,176,110,114,0,142,3,117,1,113,77,142,0,19,156,197,1,92,47,252,0,53,232,22,1,54,18,235,0,46,35,189,255,236,212,129,0,2,96,208,254,200,238,199,255,59,175,164,255,146,43,231,0,194,217,52,255,3,223,12,0,138,54,178,254,85,235,207,0,232,207,34,0,49,52,50,255,166,113,89,255,10,45,216,255,62,173,28,0,111,165,
246,0,118,115,91,255,128,84,60,0,167,144,203,0,87,13,243,0,22,30,228,1,177,113,146,255,129,170,230,254,252,153,129,255,145,225,43,0,70,231,5,255,122,105,126,254,86,246,148,255,110,37,154,254,209,3,91,0,68,145,62,0,228,16,165,255,55,221,249,254,178,210,91,0,83,146,226,254,69,146,186,0,93,210,104,254,16,25,173,0,231,186,38,0,189,122,140,255,251,13,112,255,105,110,93,0,251,72,170,0,192,23,223,255,24,3,202,1,225,93,228,0,153,147,199,254,109,170,22,0,248,101,246,255,178,124,12,255,178,254,102,254,55,4,
65,0,125,214,180,0,183,96,147,0,45,117,23,254,132,191,249,0,143,176,203,254,136,183,54,255,146,234,177,0,146,101,86,255,44,123,143,1,33,209,152,0,192,90,41,254,83,15,125,255,213,172,82,0,215,169,144,0,16,13,34,0,32,209,100,255,84,18,249,1,197,17,236,255,217,186,230,0,49,160,176,255,111,118,97,255,237,104,235,0,79,59,92,254,69,249,11,255,35,172,74,1,19,118,68,0,222,124,165,255,180,66,35,255,86,174,246,0,43,74,111,255,126,144,86,255,228,234,91,0,242,213,24,254,69,44,235,255,220,180,35,0,8,248,7,255,
102,47,92,255,240,205,102,255,113,230,171,1,31,185,201,255,194,246,70,255,122,17,187,0,134,70,199,255,149,3,150,255,117,63,103,0,65,104,123,255,212,54,19,1,6,141,88,0,83,134,243,255,136,53,103,0,169,27,180,0,177,49,24,0,111,54,167,0,195,61,215,255,31,1,108,1,60,42,70,0,185,3,162,255,194,149,40,255,246,127,38,254,190,119,38,255,61,119,8,1,96,161,219,255,42,203,221,1,177,242,164,255,245,159,10,0,116,196,0,0,5,93,205,254,128,127,179,0,125,237,246,255,149,162,217,255,87,37,20,254,140,238,192,0,9,9,193,
0,97,1,226,0,29,38,10,0,0,136,63,255,229,72,210,254,38,134,92,255,78,218,208,1,104,36,84,255,12,5,193,255,242,175,61,255,191,169,46,1,179,147,147,255,113,190,139,254,125,172,31,0,3,75,252,254,215,36,15,0,193,27,24,1,255,69,149,255,110,129,118,0,203,93,249,0,138,137,64,254,38,70,6,0,153,116,222,0,161,74,123,0,193,99,79,255,118,59,94,255,61,12,43,1,146,177,157,0,46,147,191,0,16,255,38,0,11,51,31,1,60,58,98,255,111,194,77,1,154,91,244,0,140,40,144,1,173,10,251,0,203,209,50,254,108,130,78,0,228,180,90,
0,174,7,250,0,31,174,60,0,41,171,30,0,116,99,82,255,118,193,139,255,187,173,198,254,218,111,56,0,185,123,216,0,249,158,52,0,52,180,93,255,201,9,91,255,56,45,166,254,132,155,203,255,58,232,110,0,52,211,89,255,253,0,162,1,9,87,183,0,145,136,44,1,94,122,245,0,85,188,171,1,147,92,198,0,0,8,104,0,30,95,174,0,221,230,52,1,247,247,235,255,137,174,53,255,35,21,204,255,71,227,214,1,232,82,194,0,11,48,227,255,170,73,184,255,198,251,252,254,44,112,34,0,131,101,131,255,72,168,187,0,132,135,125,255,138,104,97,
255,238,184,168,255,243,104,84,255,135,216,226,255,139,144,237,0,188,137,150,1,80,56,140,255,86,169,167,255,194,78,25,255,220,17,180,255,17,13,193,0,117,137,212,255,141,224,151,0,49,244,175,0,193,99,175,255,19,99,154,1,255,65,62,255,156,210,55,255,242,244,3,255,250,14,149,0,158,88,217,255,157,207,134,254,251,232,28,0,46,156,251,255,171,56,184,255,239,51,234,0,142,138,131,255,25,254,243,1,10,201,194,0,63,97,75,0,210,239,162,0,192,200,31,1,117,214,243,0,24,71,222,254,54,40,232,255,76,183,111,254,144,
14,87,255,214,79,136,255,216,196,212,0,132,27,140,254,131,5,253,0,124,108,19,255,28,215,75,0,76,222,55,254,233,182,63,0,68,171,191,254,52,111,222,255,10,105,77,255,80,170,235,0,143,24,88,255,45,231,121,0,148,129,224,1,61,246,84,0,253,46,219,255,239,76,33,0,49,148,18,254,230,37,69,0,67,134,22,254,142,155,94,0,31,157,211,254,213,42,30,255,4,228,247,254,252,176,13,255,39,0,31,254,241,244,255,255,170,45,10,254,253,222,249,0,222,114,132,0,255,47,6,255,180,163,179,1,84,94,151,255,89,209,82,254,229,52,169,
255,213,236,0,1,214,56,228,255,135,119,151,255,112,201,193,0,83,160,53,254,6,151,66,0,18,162,17,0,233,97,91,0,131,5,78,1,181,120,53,255,117,95,63,255,237,117,185,0,191,126,136,255,144,119,233,0,183,57,97,1,47,201,187,255,167,165,119,1,45,100,126,0,21,98,6,254,145,150,95,255,120,54,152,0,209,98,104,0,143,111,30,254,184,148,249,0,235,216,46,0,248,202,148,255,57,95,22,0,242,225,163,0,233,247,232,255,71,171,19,255,103,244,49,255,84,103,93,255,68,121,244,1,82,224,13,0,41,79,43,255,249,206,167,255,215,
52,21,254,192,32,22,255,247,111,60,0,101,74,38,255,22,91,84,254,29,28,13,255,198,231,215,254,244,154,200,0,223,137,237,0,211,132,14,0,95,64,206,255,17,62,247,255,233,131,121,1,93,23,77,0,205,204,52,254,81,189,136,0,180,219,138,1,143,18,94,0,204,43,140,254,188,175,219,0,111,98,143,255,151,63,162,255,211,50,71,254,19,146,53,0,146,45,83,254,178,82,238,255,16,133,84,255,226,198,93,255,201,97,20,255,120,118,35,255,114,50,231,255,162,229,156,255,211,26,12,0,114,39,115,255,206,212,134,0,197,217,160,255,
116,129,94,254,199,215,219,255,75,223,249,1,253,116,181,255,232,215,104,255,228,130,246,255,185,117,86,0,14,5,8,0,239,29,61,1,237,87,133,255,125,146,137,254,204,168,223,0,46,168,245,0,154,105,22,0,220,212,161,255,107,69,24,255,137,218,181,255,241,84,198,255,130,122,211,255,141,8,153,255,190,177,118,0,96,89,178,0,255,16,48,254,122,96,105,255,117,54,232,255,34,126,105,255,204,67,166,0,232,52,138,255,211,147,12,0,25,54,7,0,44,15,215,254,51,236,45,0,190,68,129,1,106,147,225,0,28,93,45,254,236,141,15,
255,17,61,161,0,220,115,192,0,236,145,24,254,111,168,169,0,224,58,63,255,127,164,188,0,82,234,75,1,224,158,134,0,209,68,110,1,217,166,217,0,70,225,166,1,187,193,143,255,16,7,88,255,10,205,140,0,117,192,156,1,17,56,38,0,27,124,108,1,171,215,55,255,95,253,212,0,155,135,168,255,246,178,153,254,154,68,74,0,232,61,96,254,105,132,59,0,33,76,199,1,189,176,130,255,9,104,25,254,75,198,102,255,233,1,112,0,108,220,20,255,114,230,70,0,140,194,133,255,57,158,164,254,146,6,80,255,169,196,97,1,85,183,130,0,70,158,
222,1,59,237,234,255,96,25,26,255,232,175,97,255,11,121,248,254,88,35,194,0,219,180,252,254,74,8,227,0,195,227,73,1,184,110,161,255,49,233,164,1,128,53,47,0,82,14,121,255,193,190,58,0,48,174,117,255,132,23,32,0,40,10,134,1,22,51,25,255,240,11,176,255,110,57,146,0,117,143,239,1,157,101,118,255,54,84,76,0,205,184,18,255,47,4,72,255,78,112,85,255,193,50,66,1,93,16,52,255,8,105,134,0,12,109,72,255,58,156,251,0,144,35,204,0,44,160,117,254,50,107,194,0,1,68,165,255,111,110,162,0,158,83,40,254,76,214,234,
0,58,216,205,255,171,96,147,255,40,227,114,1,176,227,241,0,70,249,183,1,136,84,139,255,60,122,247,254,143,9,117,255,177,174,137,254,73,247,143,0,236,185,126,255,62,25,247,255,45,64,56,255,161,244,6,0,34,57,56,1,105,202,83,0,128,147,208,0,6,103,10,255,74,138,65,255,97,80,100,255,214,174,33,255,50,134,74,255,110,151,130,254,111,84,172,0,84,199,75,254,248,59,112,255,8,216,178,1,9,183,95,0,238,27,8,254,170,205,220,0,195,229,135,0,98,76,237,255,226,91,26,1,82,219,39,255,225,190,199,1,217,200,121,255,81,
179,8,255,140,65,206,0,178,207,87,254,250,252,46,255,104,89,110,1,253,189,158,255,144,214,158,255,160,245,54,255,53,183,92,1,21,200,194,255,146,33,113,1,209,1,255,0,235,106,43,255,167,52,232,0,157,229,221,0,51,30,25,0,250,221,27,1,65,147,87,255,79,123,196,0,65,196,223,255,76,44,17,1,85,241,68,0,202,183,249,255,65,212,212,255,9,33,154,1,71,59,80,0,175,194,59,255,141,72,9,0,100,160,244,0,230,208,56,0,59,25,75,254,80,194,194,0,18,3,200,254,160,159,115,0,132,143,247,1,111,93,57,255,58,237,11,1,134,222,
135,255,122,163,108,1,123,43,190,255,251,189,206,254,80,182,72,255,208,246,224,1,17,60,9,0,161,207,38,0,141,109,91,0,216,15,211,255,136,78,110,0,98,163,104,255,21,80,121,255,173,178,183,1,127,143,4,0,104,60,82,254,214,16,13,255,96,238,33,1,158,148,230,255,127,129,62,255,51,255,210,255,62,141,236,254,157,55,224,255,114,39,244,0,192,188,250,255,228,76,53,0,98,84,81,255,173,203,61,254,147,50,55,255,204,235,191,0,52,197,244,0,88,43,211,254,27,191,119,0,188,231,154,0,66,81,161,0,92,193,160,1,250,227,120,
0,123,55,226,0,184,17,72,0,133,168,10,254,22,135,156,255,41,25,103,255,48,202,58,0,186,149,81,255,188,134,239,0,235,181,189,254,217,139,188,255,74,48,82,0,46,218,229,0,189,253,251,0,50,229,12,255,211,141,191,1,128,244,25,255,169,231,122,254,86,47,189,255,132,183,23,255,37,178,150,255,51,137,253,0,200,78,31,0,22,105,50,0,130,60,0,0,132,163,91,254,23,231,187,0,192,79,239,0,157,102,164,255,192,82,20,1,24,181,103,255,240,9,234,0,1,123,164,255,133,233,0,255,202,242,242,0,60,186,245,0,241,16,199,255,224,
116,158,254,191,125,91,255,224,86,207,0,121,37,231,255,227,9,198,255,15,153,239,255,121,232,217,254,75,112,82,0,95,12,57,254,51,214,105,255,148,220,97,1,199,98,36,0,156,209,12,254,10,212,52,0,217,180,55,254,212,170,232,255,216,20,84,255,157,250,135,0,157,99,127,254,1,206,41,0,149,36,70,1,54,196,201,255,87,116,0,254,235,171,150,0,27,163,234,0,202,135,180,0,208,95,0,254,123,156,93,0,183,62,75,0,137,235,182,0,204,225,255,255,214,139,210,255,2,115,8,255,29,12,111,0,52,156,1,0,253,21,251,255,37,165,31,
254,12,130,211,0,106,18,53,254,42,99,154,0,14,217,61,254,216,11,92,255,200,197,112,254,147,38,199,0,36,252,120,254,107,169,77,0,1,123,159,255,207,75,102,0,163,175,196,0,44,1,240,0,120,186,176,254,13,98,76,255,237,124,241,255,232,146,188,255,200,96,224,0,204,31,41,0,208,200,13,0,21,225,96,255,175,156,196,0,247,208,126,0,62,184,244,254,2,171,81,0,85,115,158,0,54,64,45,255,19,138,114,0,135,71,205,0,227,47,147,1,218,231,66,0,253,209,28,0,244,15,173,255,6,15,118,254,16,150,208,255,185,22,50,255,86,112,
207,255,75,113,215,1,63,146,43,255,4,225,19,254,227,23,62,255,14,255,214,254,45,8,205,255,87,197,151,254,210,82,215,255,245,248,247,255,128,248,70,0,225,247,87,0,90,120,70,0,213,245,92,0,13,133,226,0,47,181,5,1,92,163,105,255,6,30,133,254,232,178,61,255,230,149,24,255,18,49,158,0,228,100,61,254,116,243,251,255,77,75,92,1,81,219,147,255,76,163,254,254,141,213,246,0,232,37,152,254,97,44,100,0,201,37,50,1,212,244,57,0,174,171,183,255,249,74,112,0,166,156,30,0,222,221,97,255,243,93,73,254,251,101,100,
255,216,217,93,255,254,138,187,255,142,190,52,255,59,203,177,255,200,94,52,0,115,114,158,255,165,152,104,1,126,99,226,255,118,157,244,1,107,200,16,0,193,90,229,0,121,6,88,0,156,32,93,254,125,241,211,255,14,237,157,255,165,154,21,255,184,224,22,255,250,24,152,255,113,77,31,0,247,171,23,255,237,177,204,255,52,137,145,255,194,182,114,0,224,234,149,0,10,111,103,1,201,129,4,0,238,142,78,0,52,6,40,255,110,213,165,254,60,207,253,0,62,215,69,0,96,97,0,255,49,45,202,0,120,121,22,255,235,139,48,1,198,45,34,
255,182,50,27,1,131,210,91,255,46,54,128,0,175,123,105,255,198,141,78,254,67,244,239,255,245,54,103,254,78,38,242,255,2,92,249,254,251,174,87,255,139,63,144,0,24,108,27,255,34,102,18,1,34,22,152,0,66,229,118,254,50,143,99,0,144,169,149,1,118,30,152,0,178,8,121,1,8,159,18,0,90,101,230,255,129,29,119,0,68,36,11,1,232,183,55,0,23,255,96,255,161,41,193,255,63,139,222,0,15,179,243,0,255,100,15,255,82,53,135,0,137,57,149,1,99,240,170,255,22,230,228,254,49,180,82,255,61,82,43,0,110,245,217,0,199,125,61,
0,46,253,52,0,141,197,219,0,211,159,193,0,55,121,105,254,183,20,129,0,169,119,170,255,203,178,139,255,135,40,182,255,172,13,202,255,65,178,148,0,8,207,43,0,122,53,127,1,74,161,48,0,227,214,128,254,86,11,243,255,100,86,7,1,245,68,134,255,61,43,21,1,152,84,94,255,190,60,250,254,239,118,232,255,214,136,37,1,113,76,107,255,93,104,100,1,144,206,23,255,110,150,154,1,228,103,185,0,218,49,50,254,135,77,139,255,185,1,78,0,0,161,148,255,97,29,233,255,207,148,149,255,160,168,0,0,91,128,171,255,6,28,19,254,11,
111,247,0,39,187,150,255,138,232,149,0,117,62,68,255,63,216,188,255,235,234,32,254,29,57,160,255,25,12,241,1,169,60,191,0,32,131,141,255,237,159,123,255,94,197,94,254,116,254,3,255,92,179,97,254,121,97,92,255,170,112,14,0,21,149,248,0,248,227,3,0,80,96,109,0,75,192,74,1,12,90,226,255,161,106,68,1,208,114,127,255,114,42,255,254,74,26,74,255,247,179,150,254,121,140,60,0,147,70,200,255,214,40,161,255,161,188,201,255,141,65,135,255,242,115,252,0,62,47,202,0,180,149,255,254,130,55,237,0,165,17,186,255,
10,169,194,0,156,109,218,255,112,140,123,255,104,128,223,254,177,142,108,255,121,37,219,255,128,77,18,255,111,108,23,1,91,192,75,0,174,245,22,255,4,236,62,255,43,64,153,1,227,173,254,0,237,122,132,1,127,89,186,255,142,82,128,254,252,84,174,0,90,179,177,1,243,214,87,255,103,60,162,255,208,130,14,255,11,130,139,0,206,129,219,255,94,217,157,255,239,230,230,255,116,115,159,254,164,107,95,0,51,218,2,1,216,125,198,255,140,202,128,254,11,95,68,255,55,9,93,254,174,153,6,255,204,172,96,0,69,160,110,0,213,
38,49,254,27,80,213,0,118,125,114,0,70,70,67,255,15,142,73,255,131,122,185,255,243,20,50,254,130,237,40,0,210,159,140,1,197,151,65,255,84,153,66,0,195,126,90,0,16,238,236,1,118,187,102,255,3,24,133,255,187,69,230,0,56,197,92,1,213,69,94,255,80,138,229,1,206,7,230,0,222,111,230,1,91,233,119,255,9,89,7,1,2,98,1,0,148,74,133,255,51,246,180,255,228,177,112,1,58,189,108,255,194,203,237,254,21,209,195,0,147,10,35,1,86,157,226,0,31,163,139,254,56,7,75,255,62,90,116,0,181,60,169,0,138,162,212,254,81,167,
31,0,205,90,112,255,33,112,227,0,83,151,117,1,177,224,73,255,174,144,217,255,230,204,79,255,22,77,232,255,114,78,234,0,224,57,126,254,9,49,141,0,242,147,165,1,104,182,140,255,167,132,12,1,123,68,127,0,225,87,39,1,251,108,8,0,198,193,143,1,121,135,207,255,172,22,70,0,50,68,116,255,101,175,40,255,248,105,233,0,166,203,7,0,110,197,218,0,215,254,26,254,168,226,253,0,31,143,96,0,11,103,41,0,183,129,203,254,100,247,74,255,213,126,132,0,210,147,44,0,199,234,27,1,148,47,181,0,155,91,158,1,54,105,175,255,
2,78,145,254,102,154,95,0,128,207,127,254,52,124,236,255,130,84,71,0,221,243,211,0,152,170,207,0,222,106,199,0,183,84,94,254,92,200,56,255,138,182,115,1,142,96,146,0,133,136,228,0,97,18,150,0,55,251,66,0,140,102,4,0,202,103,151,0,30,19,248,255,51,184,207,0,202,198,89,0,55,197,225,254,169,95,249,255,66,65,68,255,188,234,126,0,166,223,100,1,112,239,244,0,144,23,194,0,58,39,182,0,244,44,24,254,175,68,179,255,152,118,154,1,176,162,130,0,217,114,204,254,173,126,78,255,33,222,30,255,36,2,91,255,2,143,243,
0,9,235,215,0,3,171,151,1,24,215,245,255,168,47,164,254,241,146,207,0,69,129,180,0,68,243,113,0,144,53,72,254,251,45,14,0,23,110,168,0,68,68,79,255,110,70,95,254,174,91,144,255,33,206,95,255,137,41,7,255,19,187,153,254,35,255,112,255,9,145,185,254,50,157,37,0,11,112,49,1,102,8,190,255,234,243,169,1,60,85,23,0,74,39,189,0,116,49,239,0,173,213,210,0,46,161,108,255,159,150,37,0,196,120,185,255,34,98,6,255,153,195,62,255,97,230,71,255,102,61,76,0,26,212,236,255,164,97,16,0,198,59,146,0,163,23,196,0,56,
24,61,0,181,98,193,0,251,147,229,255,98,189,24,255,46,54,206,255,234,82,246,0,183,103,38,1,109,62,204,0,10,240,224,0,146,22,117,255,142,154,120,0,69,212,35,0,208,99,118,1,121,255,3,255,72,6,194,0,117,17,197,255,125,15,23,0,154,79,153,0,214,94,197,255,185,55,147,255,62,254,78,254,127,82,153,0,110,102,63,255,108,82,161,255,105,187,212,1,80,138,39,0,60,255,93,255,72,12,186,0,210,251,31,1,190,167,144,255,228,44,19,254,128,67,232,0,214,249,107,254,136,145,86,255,132,46,176,0,189,187,227,255,208,22,140,
0,217,211,116,0,50,81,186,254,139,250,31,0,30,64,198,1,135,155,100,0,160,206,23,254,187,162,211,255,16,188,63,0,254,208,49,0,85,84,191,0,241,192,242,255,153,126,145,1,234,162,162,255,230,97,216,1,64,135,126,0,190,148,223,1,52,0,43,255,28,39,189,1,64,136,238,0,175,196,185,0,98,226,213,255,127,159,244,1,226,175,60,0,160,233,142,1,180,243,207,255,69,152,89,1,31,101,21,0,144,25,164,254,139,191,209,0,91,25,121,0,32,147,5,0,39,186,123,255,63,115,230,255,93,167,198,255,143,213,220,255,179,156,19,255,25,
66,122,0,214,160,217,255,2,45,62,255,106,79,146,254,51,137,99,255,87,100,231,255,175,145,232,255,101,184,1,255,174,9,125,0,82,37,161,1,36,114,141,255,48,222,142,255,245,186,154,0,5,174,221,254,63,114,155,255,135,55,160,1,80,31,135,0,126,250,179,1,236,218,45,0,20,28,145,1,16,147,73,0,249,189,132,1,17,189,192,255,223,142,198,255,72,20,15,255,250,53,237,254,15,11,18,0,27,211,113,254,213,107,56,255,174,147,146,255,96,126,48,0,23,193,109,1,37,162,94,0,199,157,249,254,24,128,187,255,205,49,178,254,93,164,
42,255,43,119,235,1,88,183,237,255,218,210,1,255,107,254,42,0,230,10,99,255,162,0,226,0,219,237,91,0,129,178,203,0,208,50,95,254,206,208,95,255,247,191,89,254,110,234,79,255,165,61,243,0,20,122,112,255,246,246,185,254,103,4,123,0,233,99,230,1,219,91,252,255,199,222,22,255,179,245,233,255,211,241,234,0,111,250,192,255,85,84,136,0,101,58,50,255,131,173,156,254,119,45,51,255,118,233,16,254,242,90,214,0,94,159,219,1,3,3,234,255,98,76,92,254,80,54,230,0,5,228,231,254,53,24,223,255,113,56,118,1,20,132,
1,255,171,210,236,0,56,241,158,255,186,115,19,255,8,229,174,0,48,44,0,1,114,114,166,255,6,73,226,255,205,89,244,0,137,227,75,1,248,173,56,0,74,120,246,254,119,3,11,255,81,120,198,255,136,122,98,255,146,241,221,1,109,194,78,255,223,241,70,1,214,200,169,255,97,190,47,255,47,103,174,255,99,92,72,254,118,233,180,255,193,35,233,254,26,229,32,255,222,252,198,0,204,43,71,255,199,84,172,0,134,102,190,0,111,238,97,254,230,40,230,0,227,205,64,254,200,12,225,0,166,25,222,0,113,69,51,255,143,159,24,0,167,184,
74,0,29,224,116,254,158,208,233,0,193,116,126,255,212,11,133,255,22,58,140,1,204,36,51,255,232,30,43,0,235,70,181,255,64,56,146,254,169,18,84,255,226,1,13,255,200,50,176,255,52,213,245,254,168,209,97,0,191,71,55,0,34,78,156,0,232,144,58,1,185,74,189,0,186,142,149,254,64,69,127,255,161,203,147,255,176,151,191,0,136,231,203,254,163,182,137,0,161,126,251,254,233,32,66,0,68,207,66,0,30,28,37,0,93,114,96,1,254,92,247,255,44,171,69,0,202,119,11,255,188,118,50,1,255,83,136,255,71,82,26,0,70,227,2,0,32,235,
121,1,181,41,154,0,71,134,229,254,202,255,36,0,41,152,5,0,154,63,73,255,34,182,124,0,121,221,150,255,26,204,213,1,41,172,87,0,90,157,146,255,109,130,20,0,71,107,200,255,243,102,189,0,1,195,145,254,46,88,117,0,8,206,227,0,191,110,253,255,109,128,20,254,134,85,51,255,137,177,112,1,216,34,22,255,131,16,208,255,121,149,170,0,114,19,23,1,166,80,31,255,113,240,122,0,232,179,250,0,68,110,180,254,210,170,119,0,223,108,164,255,207,79,233,255,27,229,226,254,209,98,81,255,79,68,7,0,131,185,100,0,170,29,162,
255,17,162,107,255,57,21,11,1,100,200,181,255,127,65,166,1,165,134,204,0,104,167,168,0,1,164,79,0,146,135,59,1,70,50,128,255,102,119,13,254,227,6,135,0,162,142,179,255,160,100,222,0,27,224,219,1,158,93,195,255,234,141,137,0,16,24,125,255,238,206,47,255,97,17,98,255,116,110,12,255,96,115,77,0,91,227,232,255,248,254,79,255,92,229,6,254,88,198,139,0,206,75,129,0,250,77,206,255,141,244,123,1,138,69,220,0,32,151,6,1,131,167,22,255,237,68,167,254,199,189,150,0,163,171,138,255,51,188,6,255,95,29,137,254,
148,226,179,0,181,107,208,255,134,31,82,255,151,101,45,255,129,202,225,0,224,72,147,0,48,138,151,255,195,64,206,254,237,218,158,0,106,29,137,254,253,189,233,255,103,15,17,255,194,97,255,0,178,45,169,254,198,225,155,0,39,48,117,255,135,106,115,0,97,38,181,0,150,47,65,255,83,130,229,254,246,38,129,0,92,239,154,254,91,99,127,0,161,111,33,255,238,217,242,255,131,185,195,255,213,191,158,255,41,150,218,0,132,169,131,0,89,84,252,1,171,70,128,255,163,248,203,254,1,50,180,255,124,76,85,1,251,111,80,0,99,66,
239,255,154,237,182,255,221,126,133,254,74,204,99,255,65,147,119,255,99,56,167,255,79,248,149,255,116,155,228,255,237,43,14,254,69,137,11,255,22,250,241,1,91,122,143,255,205,249,243,0,212,26,60,255,48,182,176,1,48,23,191,255,203,121,152,254,45,74,213,255,62,90,18,254,245,163,230,255,185,106,116,255,83,35,159,0,12,33,2,255,80,34,62,0,16,87,174,255,173,101,85,0,202,36,81,254,160,69,204,255,64,225,187,0,58,206,94,0,86,144,47,0,229,86,245,0,63,145,190,1,37,5,39,0,109,251,26,0,137,147,234,0,162,121,145,
255,144,116,206,255,197,232,185,255,183,190,140,255,73,12,254,255,139,20,242,255,170,90,239,255,97,66,187,255,245,181,135,254,222,136,52,0,245,5,51,254,203,47,78,0,152,101,216,0,73,23,125,0,254,96,33,1,235,210,73,255,43,209,88,1,7,129,109,0,122,104,228,254,170,242,203,0,242,204,135,255,202,28,233,255,65,6,127,0,159,144,71,0,100,140,95,0,78,150,13,0,251,107,118,1,182,58,125,255,1,38,108,255,141,189,209,255,8,155,125,1,113,163,91,255,121,79,190,255,134,239,108,255,76,47,248,0,163,228,239,0,17,111,10,
0,88,149,75,255,215,235,239,0,167,159,24,255,47,151,108,255,107,209,188,0,233,231,99,254,28,202,148,255,174,35,138,255,110,24,68,255,2,69,181,0,107,102,82,0,102,237,7,0,92,36,237,255,221,162,83,1,55,202,6,255,135,234,135,255,24,250,222,0,65,94,168,254,245,248,210,255,167,108,201,254,255,161,111,0,205,8,254,0,136,13,116,0,100,176,132,255,43,215,126,255,177,133,130,255,158,79,148,0,67,224,37,1,12,206,21,255,62,34,110,1,237,104,175,255,80,132,111,255,142,174,72,0,84,229,180,254,105,179,140,0,64,248,
15,255,233,138,16,0,245,67,123,254,218,121,212,255,63,95,218,1,213,133,137,255,143,182,82,255,48,28,11,0,244,114,141,1,209,175,76,255,157,181,150,255,186,229,3,255,164,157,111,1,231,189,139,0,119,202,190,255,218,106,64,255,68,235,63,254,96,26,172,255,187,47,11,1,215,18,251,255,81,84,89,0,68,58,128,0,94,113,5,1,92,129,208,255,97,15,83,254,9,28,188,0,239,9,164,0,60,205,152,0,192,163,98,255,184,18,60,0,217,182,139,0,109,59,120,255,4,192,251,0,169,210,240,255,37,172,92,254,148,211,245,255,179,65,52,0,
253,13,115,0,185,174,206,1,114,188,149,255,237,90,173,0,43,199,192,255,88,108,113,0,52,35,76,0,66,25,148,255,221,4,7,255,151,241,114,255,190,209,232,0,98,50,199,0,151,150,213,255,18,74,36,1,53,40,7,0,19,135,65,255,26,172,69,0,174,237,85,0,99,95,41,0,3,56,16,0,39,160,177,255,200,106,218,254,185,68,84,255,91,186,61,254,67,143,141,255,13,244,166,255,99,114,198,0,199,110,163,255,193,18,186,0,124,239,246,1,110,68,22,0,2,235,46,1,212,60,107,0,105,42,105,1,14,230,152,0,7,5,131,0,141,104,154,255,213,3,6,
0,131,228,162,255,179,100,28,1,231,123,85,255,206,14,223,1,253,96,230,0,38,152,149,1,98,137,122,0,214,205,3,255,226,152,179,255,6,133,137,0,158,69,140,255,113,162,154,255,180,243,172,255,27,189,115,255,143,46,220,255,213,134,225,255,126,29,69,0,188,43,137,1,242,70,9,0,90,204,255,255,231,170,147,0,23,56,19,254,56,125,157,255,48,179,218,255,79,182,253,255,38,212,191,1,41,235,124,0,96,151,28,0,135,148,190,0,205,249,39,254,52,96,136,255,212,44,136,255,67,209,131,255,252,130,23,255,219,128,20,255,198,
129,118,0,108,101,11,0,178,5,146,1,62,7,100,255,181,236,94,254,28,26,164,0,76,22,112,255,120,102,79,0,202,192,229,1,200,176,215,0,41,64,244,255,206,184,78,0,167,45,63,1,160,35,0,255,59,12,142,255,204,9,144,255,219,94,229,1,122,27,112,0,189,105,109,255,64,208,74,255,251,127,55,1,2,226,198,0,44,76,209,0,151,152,77,255,210,23,46,1,201,171,69,255,44,211,231,0,190,37,224,255,245,196,62,255,169,181,222,255,34,211,17,0,119,241,197,255,229,35,152,1,21,69,40,255,178,226,161,0,148,179,193,0,219,194,254,1,40,
206,51,255,231,92,250,1,67,153,170,0,21,148,241,0,170,69,82,255,121,18,231,255,92,114,3,0,184,62,230,0,225,201,87,255,146,96,162,255,181,242,220,0,173,187,221,1,226,62,170,255,56,126,217,1,117,13,227,255,179,44,239,0,157,141,155,255,144,221,83,0,235,209,208,0,42,17,165,1,251,81,133,0,124,245,201,254,97,211,24,255,83,214,166,0,154,36,9,255,248,47,127,0,90,219,140,255,161,217,38,254,212,147,63,255,66,84,148,1,207,3,1,0,230,134,89,1,127,78,122,255,224,155,1,255,82,136,74,0,178,156,208,255,186,25,49,
255,222,3,210,1,229,150,190,255,85,162,52,255,41,84,141,255,73,123,84,254,93,17,150,0,119,19,28,1,32,22,215,255,28,23,204,255,142,241,52,255,228,52,125,0,29,76,207,0,215,167,250,254,175,164,230,0,55,207,105,1,109,187,245,255,161,44,220,1,41,101,128,255,167,16,94,0,93,214,107,255,118,72,0,254,80,61,234,255,121,175,125,0,139,169,251,0,97,39,147,254,250,196,49,255,165,179,110,254,223,70,187,255,22,142,125,1,154,179,138,255,118,176,42,1,10,174,153,0,156,92,102,0,168,13,161,255,143,16,32,0,250,197,180,
255,203,163,44,1,87,32,36,0,161,153,20,255,123,252,15,0,25,227,80,0,60,88,142,0,17,22,201,1,154,205,77,255,39,63,47,0,8,122,141,0,128,23,182,254,204,39,19,255,4,112,29,255,23,36,140,255,210,234,116,254,53,50,63,255,121,171,104,255,160,219,94,0,87,82,14,254,231,42,5,0,165,139,127,254,86,78,38,0,130,60,66,254,203,30,45,255,46,196,122,1,249,53,162,255,136,143,103,254,215,210,114,0,231,7,160,254,169,152,42,255,111,45,246,0,142,131,135,255,131,71,204,255,36,226,11,0,0,28,242,255,225,138,213,255,247,46,
216,254,245,3,183,0,108,252,74,1,206,26,48,255,205,54,246,255,211,198,36,255,121,35,50,0,52,216,202,255,38,139,129,254,242,73,148,0,67,231,141,255,42,47,204,0,78,116,25,1,4,225,191,255,6,147,228,0,58,88,177,0,122,165,229,255,252,83,201,255,224,167,96,1,177,184,158,255,242,105,179,1,248,198,240,0,133,66,203,1,254,36,47,0,45,24,115,255,119,62,254,0,196,225,186,254,123,141,172,0,26,85,41,255,226,111,183,0,213,231,151,0,4,59,7,255,238,138,148,0,66,147,33,255,31,246,141,255,209,141,116,255,104,112,31,
0,88,161,172,0,83,215,230,254,47,111,151,0,45,38,52,1,132,45,204,0,138,128,109,254,233,117,134,255,243,190,173,254,241,236,240,0,82,127,236,254,40,223,161,255,110,182,225,255,123,174,239,0,135,242,145,1,51,209,154,0,150,3,115,254,217,164,252,255,55,156,69,1,84,94,255,255,232,73,45,1,20,19,212,255,96,197,59,254,96,251,33,0,38,199,73,1,64,172,247,255,117,116,56,255,228,17,18,0,62,138,103,1,246,229,164,255,244,118,201,254,86,32,159,255,109,34,137,1,85,211,186,0,10,193,193,254,122,194,177,0,122,238,102,
255,162,218,171,0,108,217,161,1,158,170,34,0,176,47,155,1,181,228,11,255,8,156,0,0,16,75,93,0,206,98,255,1,58,154,35,0,12,243,184,254,67,117,66,255,230,229,123,0,201,42,110,0,134,228,178,254,186,108,118,255,58,19,154,255,82,169,62,255,114,143,115,1,239,196,50,255,173,48,193,255,147,2,84,255,150,134,147,254,95,232,73,0,109,227,52,254,191,137,10,0,40,204,30,254,76,52,97,255,164,235,126,0,254,124,188,0,74,182,21,1,121,29,35,255,241,30,7,254,85,218,214,255,7,84,150,254,81,27,117,255,160,159,152,254,66,
24,221,255,227,10,60,1,141,135,102,0,208,189,150,1,117,179,92,0,132,22,136,255,120,199,28,0,21,129,79,254,182,9,65],"i8",4,D.Y+20480);
O([218,163,169,0,246,147,198,255,107,38,144,1,78,175,205,255,214,5,250,254,47,88,29,255,164,47,204,255,43,55,6,255,131,134,207,254,116,100,214,0,96,140,75,1,106,220,144,0,195,32,28,1,172,81,5,255,199,179,52,255,37,84,203,0,170,112,174,0,11,4,91,0,69,244,27,1,117,131,92,0,33,152,175,255,140,153,107,255,251,135,43,254,87,138,4,255,198,234,147,254,121,152,84,255,205,101,155,1,157,9,25,0,72,106,17,254,108,153,0,255,189,229,186,0,193,8,176,255,174,149,209,0,238,130,29,0,233,214,126,1,61,226,102,0,57,163,
4,1,198,111,51,255,45,79,78,1,115,210,10,255,218,9,25,255,158,139,198,255,211,82,187,254,80,133,83,0,157,129,230,1,243,133,134,255,40,136,16,0,77,107,79,255,183,85,92,1,177,204,202,0,163,71,147,255,152,69,190,0,172,51,188,1,250,210,172,255,211,242,113,1,89,89,26,255,64,66,111,254,116,152,42,0,161,39,27,255,54,80,254,0,106,209,115,1,103,124,97,0,221,230,98,255,31,231,6,0,178,192,120,254,15,217,203,255,124,158,79,0,112,145,247,0,92,250,48,1,163,181,193,255,37,47,142,254,144,189,165,255,46,146,240,0,
6,75,128,0,41,157,200,254,87,121,213,0,1,113,236,0,5,45,250,0,144,12,82,0,31,108,231,0,225,239,119,255,167,7,189,255,187,228,132,255,110,189,34,0,94,44,204,1,162,52,197,0,78,188,241,254,57,20,141,0,244,146,47,1,206,100,51,0,125,107,148,254,27,195,77,0,152,253,90,1,7,143,144,255,51,37,31,0,34,119,38,255,7,197,118,0,153,188,211,0,151,20,116,254,245,65,52,255,180,253,110,1,47,177,209,0,161,99,17,255,118,222,202,0,125,179,252,1,123,54,126,255,145,57,191,0,55,186,121,0,10,243,138,0,205,211,229,255,125,
156,241,254,148,156,185,255,227,19,188,255,124,41,32,255,31,34,206,254,17,57,83,0,204,22,37,255,42,96,98,0,119,102,184,1,3,190,28,0,110,82,218,255,200,204,192,255,201,145,118,0,117,204,146,0,132,32,98,1,192,194,121,0,106,161,248,1,237,88,124,0,23,212,26,0,205,171,90,255,248,48,216,1,141,37,230,255,124,203,0,254,158,168,30,255,214,248,21,0,112,187,7,255,75,133,239,255,74,227,243,255,250,147,70,0,214,120,162,0,167,9,179,255,22,158,18,0,218,77,209,1,97,109,81,255,244,33,179,255,57,52,57,255,65,172,210,
255,249,71,209,255,142,169,238,0,158,189,153,255,174,254,103,254,98,33,14,0,141,76,230,255,113,139,52,255,15,58,212,0,168,215,201,255,248,204,215,1,223,68,160,255,57,154,183,254,47,231,121,0,106,166,137,0,81,136,138,0,165,43,51,0,231,139,61,0,57,95,59,254,118,98,25,255,151,63,236,1,94,190,250,255,169,185,114,1,5,250,58,255,75,105,97,1,215,223,134,0,113,99,163,1,128,62,112,0,99,106,147,0,163,195,10,0,33,205,182,0,214,14,174,255,129,38,231,255,53,182,223,0,98,42,159,255,247,13,40,0,188,210,177,1,6,
21,0,255,255,61,148,254,137,45,129,255,89,26,116,254,126,38,114,0,251,50,242,254,121,134,128,255,204,249,167,254,165,235,215,0,202,177,243,0,133,141,62,0,240,130,190,1,110,175,255,0,0,20,146,1,37,210,121,255,7,39,130,0,142,250,84,255,141,200,207,0,9,95,104,255,11,244,174,0,134,232,126,0,167,1,123,254,16,193,149,255,232,233,239,1,213,70,112,255,252,116,160,254,242,222,220,255,205,85,227,0,7,185,58,0,118,247,63,1,116,77,177,255,62,245,200,254,63,18,37,255,107,53,232,254,50,221,211,0,162,219,7,254,2,
94,43,0,182,62,182,254,160,78,200,255,135,140,170,0,235,184,228,0,175,53,138,254,80,58,77,255,152,201,2,1,63,196,34,0,5,30,184,0,171,176,154,0,121,59,206,0,38,99,39,0,172,80,77,254,0,134,151,0,186,33,241,254,94,253,223,255,44,114,252,0,108,126,57,255,201,40,13,255,39,229,27,255,39,239,23,1,151,121,51,255,153,150,248,0,10,234,174,255,118,246,4,254,200,245,38,0,69,161,242,1,16,178,150,0,113,56,130,0,171,31,105,0,26,88,108,255,49,42,106,0,251,169,66,0,69,93,149,0,20,57,254,0,164,25,111,0,90,188,90,255,
204,4,197,0,40,213,50,1,212,96,132,255,88,138,180,254,228,146,124,255,184,246,247,0,65,117,86,255,253,102,210,254,254,121,36,0,137,115,3,255,60,24,216,0,134,18,29,0,59,226,97,0,176,142,71,0,7,209,161,0,189,84,51,254,155,250,72,0,213,84,235,255,45,222,224,0,238,148,143,255,170,42,53,255,78,167,117,0,186,0,40,255,125,177,103,255,69,225,66,0,227,7,88,1,75,172,6,0,169,45,227,1,16,36,70,255,50,2,9,255,139,193,22,0,143,183,231,254,218,69,50,0,236,56,161,1,213,131,42,0,138,145,44,254,136,229,40,255,49,63,
35,255,61,145,245,255,101,192,2,254,232,167,113,0,152,104,38,1,121,185,218,0,121,139,211,254,119,240,35,0,65,189,217,254,187,179,162,255,160,187,230,0,62,248,14,255,60,78,97,0,255,247,163,255,225,59,91,255,107,71,58,255,241,47,33,1,50,117,236,0,219,177,63,254,244,90,179,0,35,194,215,255,189,67,50,255,23,135,129,0,104,189,37,255,185,57,194,0,35,62,231,255,220,248,108,0,12,231,178,0,143,80,91,1,131,93,101,255,144,39,2,1,255,250,178,0,5,17,236,254,139,32,46,0,204,188,38,254,245,115,52,255,191,113,73,
254,191,108,69,255,22,69,245,1,23,203,178,0,170,99,170,0,65,248,111,0,37,108,153,255,64,37,69,0,0,88,62,254,89,148,144,255,191,68,224,1,241,39,53,0,41,203,237,255,145,126,194,255,221,42,253,255,25,99,151,0,97,253,223,1,74,115,49,255,6,175,72,255,59,176,203,0,124,183,249,1,228,228,99,0,129,12,207,254,168,192,195,255,204,176,16,254,152,234,171,0,77,37,85,255,33,120,135,255,142,194,227,1,31,214,58,0,213,187,125,255,232,46,60,255,190,116,42,254,151,178,19,255,51,62,237,254,204,236,193,0,194,232,60,0,
172,34,157,255,189,16,184,254,103,3,95,255,141,233,36,254,41,25,11,255,21,195,166,0,118,245,45,0,67,213,149,255,159,12,18,255,187,164,227,1,160,25,5,0,12,78,195,1,43,197,225,0,48,142,41,254,196,155,60,255,223,199,18,1,145,136,156,0,252,117,169,254,145,226,238,0,239,23,107,0,109,181,188,255,230,112,49,254,73,170,237,255,231,183,227,255,80,220,20,0,194,107,127,1,127,205,101,0,46,52,197,1,210,171,36,255,88,3,90,255,56,151,141,0,96,187,255,255,42,78,200,0,254,70,70,1,244,125,168,0,204,68,138,1,124,215,
70,0,102,66,200,254,17,52,228,0,117,220,143,254,203,248,123,0,56,18,174,255,186,151,164,255,51,232,208,1,160,228,43,255,249,29,25,1,68,190,63,0,0,0,0,0,0,0,0,0,123,32,114,101,116,117,114,110,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,40,41,59,32,125,0,0,0,0,0,123,32,105,102,32,40,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,61,61,32,117,110,100,101,102,105,110,101,100,41,32,123,32,116,114,121,32,123,32,118,97,114,32,99,114,
121,112,116,111,95,32,61,32,40,34,111,98,106,101,99,116,34,32,61,61,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,63,32,119,105,110,100,111,119,32,58,32,115,101,108,102,41,46,99,114,121,112,116,111,44,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,49,41,59,32,99,114,121,112,116,111,95,46,103,101,116,82,97,110,
100,111,109,86,97,108,117,101,115,40,98,117,102,41,59,32,114,101,116,117,114,110,32,98,117,102,91,48,93,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,114,121,32,123,32,118,97,114,32,99,114,121,112,116,111,32,61,
32,114,101,113,117,105,114,101,40,39,99,114,121,112,116,111,39,41,44,32,114,97,110,100,111,109,86,97,108,117,101,73,79,74,83,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,99,114,121,112,116,111,46,114,97,110,100,111,109,66,121,116,101,115,40,52,41,59,32,114,101,116,117,114,110,32,40,98,117,102,91,48,93,32,60,60,32,50,52,32,124,32,98,117,102,91,49,93,32,60,60,32,49,54,32,124,32,98,117,102,91,50,93,32,60,60,32,56,32,124,32,98,117,102,91,51,93,41,32,62,62,
62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,73,79,74,83,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,73,79,74,83,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,104,114,111,119,32,39,78,111,32,115,101,99,117,114,101,32,114,97,110,100,111,109,32,110,117,109,98,101,114,32,103,101,110,101,114,97,116,111,114,32,102,111,117,110,100,39,59,32,125,32,125,32,125,32,125,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,46,48,46,51,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107,101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",4,D.Y+30720);var W=D.ga(O(12,"i8",2),8);A(0==W%8);d._bitshift64Ashr=ab;d._i64Subtract=bb;d._i64Add=cb;d._memset=db;d._bitshift64Lshr=eb;d._bitshift64Shl=fb;d._strlen=gb;d._memcpy=hb;var ib=0;function jb(a){return N[ib>>2]=a}
function X(a){X.S||(F=Ga(),X.S=!0,A(D.$),X.q=D.$,D.$=function(){H("cannot dynamically allocate, sbrk now has control")});var b=F;return 0==a||X.q(a)?b:4294967295}d._memmove=kb;ib=D.Na(4);N[ib>>2]=0;Ka=C=D.ga(E);La=Ka+Na;Ma=F=D.ga(La);A(Ma<G,"TOTAL_MEMORY not big enough for stack");
var lb=O([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,
1,0,3,0,1,0,2,0,1,0],"i8",3);d.Sa={Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,NaN:NaN,Infinity:Infinity};
d.Ta={abort:H,assert:A,invoke_i:function(a){try{return d.dynCall_i(a)}catch(b){if("number"!==typeof b&&"longjmp"!==b)throw b;Y.setThrew(1,0)}},jsCall_i:function(a){return D.R[a]()},invoke_ii:function(a,b){try{return d.dynCall_ii(a,b)}catch(c){if("number"!==typeof c&&"longjmp"!==c)throw c;Y.setThrew(1,0)}},jsCall_ii:function(a,b){return D.R[a](b)},___assert_fail:function(a,b,c,e){I=!0;throw"Assertion failed: "+K(a)+", at: "+[b?K(b):"unknown filename",c,e?K(e):"unknown function"]+" at "+Ea();},_abort:function(){d.abort()},
___setErrNo:jb,_sbrk:X,_time:function(a){var b=Date.now()/1E3|0;a&&(N[a>>2]=b);return b},_emscripten_memcpy_big:function(a,b,c){P.set(P.subarray(b,b+c),a);return a},_sysconf:function(a){switch(a){case 30:return 4096;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 79:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;
case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;
case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"===typeof navigator?navigator.hardwareConcurrency||1:1}jb(22);return-1},
___errno_location:function(){return ib},_emscripten_asm_const_0:function(a){return $a[a]()|0},STACKTOP:C,STACK_MAX:La,tempDoublePtr:W,ABORT:I,cttz_i8:lb};// EMSCRIPTEN_START_ASM
var Y=(function(global,env,buffer) {
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=0;var o=0;var p=0;var q=0;var r=global.NaN,s=global.Infinity;var t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0.0;var C=0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=global.Math.floor;var N=global.Math.abs;var O=global.Math.sqrt;var P=global.Math.pow;var Q=global.Math.cos;var R=global.Math.sin;var S=global.Math.tan;var T=global.Math.acos;var U=global.Math.asin;var V=global.Math.atan;var W=global.Math.atan2;var X=global.Math.exp;var Y=global.Math.log;var Z=global.Math.ceil;var _=global.Math.imul;var $=global.Math.min;var aa=global.Math.clz32;var ba=env.abort;var ca=env.assert;var da=env.invoke_i;var ea=env.jsCall_i;var fa=env.invoke_ii;var ga=env.jsCall_ii;var ha=env.___assert_fail;var ia=env._abort;var ja=env.___setErrNo;var ka=env._sbrk;var la=env._time;var ma=env._emscripten_memcpy_big;var na=env._sysconf;var oa=env.___errno_location;var pa=env._emscripten_asm_const_0;var qa=0.0;
// EMSCRIPTEN_START_FUNCS
function Ac(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;R=i;P=i=i+63&-64;i=i+320|0;Q=P+40|0;k=P+160|0;j=P+80|0;s=P+200|0;l=P+280|0;m=P;r=P+120|0;P=P+240|0;O=b+40|0;T=d[e>>0]|0;M=qd(d[e+1>>0]|0|0,0,8)|0;J=C;p=qd(d[e+2>>0]|0|0,0,16)|0;J=J|C;q=qd(d[e+3>>0]|0|0,0,24)|0;J=J|C;I=a[e+6>>0]|0;L=d[e+4>>0]|0;o=qd(d[e+5>>0]|0|0,0,8)|0;K=C;I=qd(I&255|0,0,16)|0;K=qd(o|L|I|0,K|C|0,6)|0;I=C;L=a[e+9>>0]|0;o=d[e+7>>0]|0;f=qd(d[e+8>>0]|0|0,0,8)|0;w=C;L=qd(L&255|0,0,16)|0;w=qd(f|o|L|0,w|C|0,5)|0;L=C;o=a[e+12>>0]|0;f=d[e+10>>0]|0;y=qd(d[e+11>>0]|0|0,0,8)|0;n=C;o=qd(o&255|0,0,16)|0;n=qd(y|f|o|0,n|C|0,3)|0;o=C;f=a[e+15>>0]|0;y=d[e+13>>0]|0;F=qd(d[e+14>>0]|0|0,0,8)|0;A=C;f=qd(f&255|0,0,16)|0;A=qd(F|y|f|0,A|C|0,2)|0;f=C;y=d[e+16>>0]|0;F=qd(d[e+17>>0]|0|0,0,8)|0;u=C;h=qd(d[e+18>>0]|0|0,0,16)|0;u=u|C;t=qd(d[e+19>>0]|0|0,0,24)|0;t=F|y|h|t;u=u|C;h=a[e+22>>0]|0;y=d[e+20>>0]|0;F=qd(d[e+21>>0]|0|0,0,8)|0;E=C;h=qd(h&255|0,0,16)|0;E=qd(F|y|h|0,E|C|0,7)|0;h=C;y=a[e+25>>0]|0;F=d[e+23>>0]|0;N=qd(d[e+24>>0]|0|0,0,8)|0;x=C;y=qd(y&255|0,0,16)|0;x=qd(N|F|y|0,x|C|0,5)|0;y=C;F=a[e+28>>0]|0;N=d[e+26>>0]|0;g=qd(d[e+27>>0]|0|0,0,8)|0;G=C;F=qd(F&255|0,0,16)|0;G=qd(g|N|F|0,G|C|0,4)|0;F=C;N=e+31|0;g=a[N>>0]|0;D=d[e+29>>0]|0;v=qd(d[e+30>>0]|0|0,0,8)|0;B=C;g=qd(g&255|0,0,16)|0;B=qd(v|D|g|0,B|C|0,2)|0;B=B&33554428;g=nd(B|0,0,16777216,0)|0;g=pd(g|0,C|0,25)|0;D=C;v=md(0,0,g|0,D|0)|0;J=nd(v&19|0,0,M|T|p|q|0,J|0)|0;q=C;D=qd(g|0,D|0,25)|0;g=C;p=nd(K|0,I|0,16777216,0)|0;p=pd(p|0,C|0,25)|0;T=C;L=nd(w|0,L|0,p|0,T|0)|0;w=C;T=qd(p|0,T|0,25)|0;T=md(K|0,I|0,T|0,C|0)|0;I=C;K=nd(n|0,o|0,16777216,0)|0;K=pd(K|0,C|0,25)|0;p=C;f=nd(A|0,f|0,K|0,p|0)|0;A=C;p=qd(K|0,p|0,25)|0;K=C;M=nd(t|0,u|0,16777216,0)|0;M=pd(M|0,C|0,25)|0;v=C;h=nd(E|0,h|0,M|0,v|0)|0;E=C;v=qd(M|0,v|0,25)|0;M=C;e=nd(x|0,y|0,16777216,0)|0;e=pd(e|0,C|0,25)|0;z=C;F=nd(G|0,F|0,e|0,z|0)|0;G=C;z=qd(e|0,z|0,25)|0;e=C;S=nd(J|0,q|0,33554432,0)|0;S=ld(S|0,C|0,26)|0;H=C;I=nd(T|0,I|0,S|0,H|0)|0;H=qd(S|0,H|0,26)|0;H=md(J|0,q|0,H|0,C|0)|0;q=nd(L|0,w|0,33554432,0)|0;q=ld(q|0,C|0,26)|0;J=C;o=nd(q|0,J|0,n|0,o|0)|0;K=md(o|0,C|0,p|0,K|0)|0;J=qd(q|0,J|0,26)|0;J=md(L|0,w|0,J|0,C|0)|0;w=nd(f|0,A|0,33554432,0)|0;w=ld(w|0,C|0,26)|0;L=C;u=nd(w|0,L|0,t|0,u|0)|0;M=md(u|0,C|0,v|0,M|0)|0;L=qd(w|0,L|0,26)|0;L=md(f|0,A|0,L|0,C|0)|0;A=nd(h|0,E|0,33554432,0)|0;A=ld(A|0,C|0,26)|0;f=C;y=nd(A|0,f|0,x|0,y|0)|0;e=md(y|0,C|0,z|0,e|0)|0;f=qd(A|0,f|0,26)|0;f=md(h|0,E|0,f|0,C|0)|0;E=nd(F|0,G|0,33554432,0)|0;E=ld(E|0,C|0,26)|0;h=C;B=nd(B|0,0,E|0,h|0)|0;g=md(B|0,C|0,D|0,g|0)|0;h=qd(E|0,h|0,26)|0;h=md(F|0,G|0,h|0,C|0)|0;c[O>>2]=H;c[b+44>>2]=I;c[b+48>>2]=J;c[b+52>>2]=K;c[b+56>>2]=L;c[b+60>>2]=M;c[b+64>>2]=f;c[b+68>>2]=e;c[b+72>>2]=h;c[b+76>>2]=g;g=b+80|0;c[g>>2]=1;h=b+84|0;e=h+0|0;f=e+36|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));xc(s,O);wc(l,s,1544);p=s+4|0;q=s+8|0;o=s+12|0;n=s+16|0;e=s+20|0;v=s+24|0;x=s+28|0;z=s+32|0;B=s+36|0;g=c[g>>2]|0;t=c[h>>2]|0;w=c[b+88>>2]|0;A=c[b+92>>2]|0;E=c[b+96>>2]|0;G=c[b+100>>2]|0;I=c[b+104>>2]|0;K=c[b+108>>2]|0;M=c[b+112>>2]|0;T=c[b+116>>2]|0;f=(c[p>>2]|0)-t|0;S=(c[q>>2]|0)-w|0;L=(c[o>>2]|0)-A|0;J=(c[n>>2]|0)-E|0;H=(c[e>>2]|0)-G|0;F=(c[v>>2]|0)-I|0;D=(c[x>>2]|0)-K|0;y=(c[z>>2]|0)-M|0;u=(c[B>>2]|0)-T|0;c[s>>2]=(c[s>>2]|0)-g;c[p>>2]=f;c[q>>2]=S;c[o>>2]=L;c[n>>2]=J;c[e>>2]=H;c[v>>2]=F;c[x>>2]=D;c[z>>2]=y;c[B>>2]=u;u=l+4|0;y=l+8|0;D=l+12|0;F=l+16|0;H=l+20|0;J=l+24|0;L=l+28|0;S=l+32|0;f=l+36|0;t=t+(c[u>>2]|0)|0;w=w+(c[y>>2]|0)|0;A=A+(c[D>>2]|0)|0;E=E+(c[F>>2]|0)|0;G=G+(c[H>>2]|0)|0;I=I+(c[J>>2]|0)|0;K=K+(c[L>>2]|0)|0;M=M+(c[S>>2]|0)|0;T=T+(c[f>>2]|0)|0;c[l>>2]=g+(c[l>>2]|0);c[u>>2]=t;c[y>>2]=w;c[D>>2]=A;c[F>>2]=E;c[H>>2]=G;c[J>>2]=I;c[L>>2]=K;c[S>>2]=M;c[f>>2]=T;xc(m,l);wc(m,m,l);xc(b,m);wc(b,b,l);wc(b,b,s);xc(Q,b);xc(k,Q);xc(k,k);wc(k,b,k);wc(Q,Q,k);xc(Q,Q);wc(Q,k,Q);xc(k,Q);xc(k,k);xc(k,k);xc(k,k);xc(k,k);wc(Q,k,Q);xc(k,Q);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);wc(k,k,Q);xc(j,k);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);xc(j,j);wc(k,j,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);xc(k,k);wc(Q,k,Q);xc(k,Q);f=1;do{xc(k,k);f=f+1|0}while((f|0)!=50);wc(k,k,Q);xc(j,k);f=1;do{xc(j,j);f=f+1|0}while((f|0)!=100);wc(k,j,k);xc(k,k);f=1;do{xc(k,k);f=f+1|0}while((f|0)!=50);wc(Q,k,Q);xc(Q,Q);xc(Q,Q);wc(b,Q,b);wc(b,b,m);wc(b,b,s);xc(r,b);wc(r,r,l);E=c[r>>2]|0;F=c[r+4>>2]|0;G=c[r+8>>2]|0;H=c[r+12>>2]|0;I=c[r+16>>2]|0;J=c[r+20>>2]|0;K=c[r+24>>2]|0;L=c[r+28>>2]|0;M=c[r+32>>2]|0;D=c[r+36>>2]|0;A=c[s>>2]|0;y=c[p>>2]|0;w=c[q>>2]|0;u=c[o>>2]|0;t=c[n>>2]|0;s=c[e>>2]|0;r=c[v>>2]|0;q=c[x>>2]|0;p=c[z>>2]|0;m=c[B>>2]|0;c[P>>2]=E-A;l=P+4|0;c[l>>2]=F-y;k=P+8|0;c[k>>2]=G-w;j=P+12|0;c[j>>2]=H-u;h=P+16|0;c[h>>2]=I-t;g=P+20|0;c[g>>2]=J-s;f=P+24|0;c[f>>2]=K-r;e=P+28|0;c[e>>2]=L-q;n=P+32|0;c[n>>2]=M-p;o=P+36|0;c[o>>2]=D-m;yc(Q,P);do if(Pc(Q,552)|0){c[P>>2]=A+E;c[l>>2]=y+F;c[k>>2]=w+G;c[j>>2]=u+H;c[h>>2]=t+I;c[g>>2]=s+J;c[f>>2]=r+K;c[e>>2]=q+L;c[n>>2]=p+M;c[o>>2]=m+D;yc(Q,P);if(!(Pc(Q,552)|0)){wc(b,b,1584);break}else{T=-1;i=R;return T|0}}while(0);yc(Q,b);if(((d[Q>>0]|0)&1|0)==((d[N>>0]|0)>>>7|0)){A=b+4|0;D=b+8|0;F=b+12|0;H=b+16|0;J=b+20|0;L=b+24|0;N=b+28|0;Q=b+32|0;T=b+36|0;z=0-(c[A>>2]|0)|0;B=0-(c[D>>2]|0)|0;E=0-(c[F>>2]|0)|0;G=0-(c[H>>2]|0)|0;I=0-(c[J>>2]|0)|0;K=0-(c[L>>2]|0)|0;M=0-(c[N>>2]|0)|0;P=0-(c[Q>>2]|0)|0;S=0-(c[T>>2]|0)|0;c[b>>2]=0-(c[b>>2]|0);c[A>>2]=z;c[D>>2]=B;c[F>>2]=E;c[H>>2]=G;c[J>>2]=I;c[L>>2]=K;c[N>>2]=M;c[Q>>2]=P;c[T>>2]=S}wc(b+120|0,b,O);T=0;i=R;return T|0}function Bc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;V=b+40|0;j=b+44|0;m=b+48|0;p=b+52|0;s=b+56|0;v=b+60|0;y=b+64|0;B=b+68|0;E=b+72|0;C=b+76|0;S=b+4|0;P=b+8|0;e=b+12|0;l=b+16|0;n=b+20|0;u=b+24|0;w=b+28|0;D=b+32|0;O=b+36|0;ga=(c[S>>2]|0)+(c[j>>2]|0)|0;fa=(c[P>>2]|0)+(c[m>>2]|0)|0;ea=(c[e>>2]|0)+(c[p>>2]|0)|0;da=(c[l>>2]|0)+(c[s>>2]|0)|0;ca=(c[n>>2]|0)+(c[v>>2]|0)|0;ba=(c[u>>2]|0)+(c[y>>2]|0)|0;aa=(c[w>>2]|0)+(c[B>>2]|0)|0;$=(c[D>>2]|0)+(c[E>>2]|0)|0;Y=(c[O>>2]|0)+(c[C>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[V>>2]|0);ha=a+4|0;c[ha>>2]=ga;ga=a+8|0;c[ga>>2]=fa;fa=a+12|0;c[fa>>2]=ea;ea=a+16|0;c[ea>>2]=da;da=a+20|0;c[da>>2]=ca;ca=a+24|0;c[ca>>2]=ba;ba=a+28|0;c[ba>>2]=aa;aa=a+32|0;c[aa>>2]=$;$=a+36|0;c[$>>2]=Y;Y=a+40|0;S=(c[j>>2]|0)-(c[S>>2]|0)|0;P=(c[m>>2]|0)-(c[P>>2]|0)|0;e=(c[p>>2]|0)-(c[e>>2]|0)|0;l=(c[s>>2]|0)-(c[l>>2]|0)|0;n=(c[v>>2]|0)-(c[n>>2]|0)|0;u=(c[y>>2]|0)-(c[u>>2]|0)|0;w=(c[B>>2]|0)-(c[w>>2]|0)|0;D=(c[E>>2]|0)-(c[D>>2]|0)|0;O=(c[C>>2]|0)-(c[O>>2]|0)|0;c[Y>>2]=(c[V>>2]|0)-(c[b>>2]|0);V=a+44|0;c[V>>2]=S;S=a+48|0;c[S>>2]=P;P=a+52|0;c[P>>2]=e;e=a+56|0;c[e>>2]=l;l=a+60|0;c[l>>2]=n;n=a+64|0;c[n>>2]=u;u=a+68|0;c[u>>2]=w;w=a+72|0;c[w>>2]=D;D=a+76|0;c[D>>2]=O;O=a+80|0;wc(O,a,d);wc(Y,Y,d+40|0);C=a+120|0;wc(C,d+80|0,b+120|0);E=c[b+80>>2]<<1;B=c[b+84>>2]<<1;y=c[b+88>>2]<<1;v=c[b+92>>2]<<1;s=c[b+96>>2]<<1;p=c[b+100>>2]<<1;m=c[b+104>>2]<<1;j=c[b+108>>2]<<1;g=c[b+112>>2]<<1;b=c[b+116>>2]<<1;Z=c[O>>2]|0;N=a+84|0;W=c[N>>2]|0;M=a+88|0;T=c[M>>2]|0;L=a+92|0;Q=c[L>>2]|0;K=a+96|0;f=c[K>>2]|0;J=a+100|0;h=c[J>>2]|0;I=a+104|0;o=c[I>>2]|0;H=a+108|0;q=c[H>>2]|0;G=a+112|0;x=c[G>>2]|0;F=a+116|0;z=c[F>>2]|0;_=c[Y>>2]|0;X=c[V>>2]|0;U=c[S>>2]|0;R=c[P>>2]|0;d=c[e>>2]|0;i=c[l>>2]|0;k=c[n>>2]|0;r=c[u>>2]|0;t=c[w>>2]|0;A=c[D>>2]|0;c[a>>2]=Z-_;c[ha>>2]=W-X;c[ga>>2]=T-U;c[fa>>2]=Q-R;c[ea>>2]=f-d;c[da>>2]=h-i;c[ca>>2]=o-k;c[ba>>2]=q-r;c[aa>>2]=x-t;c[$>>2]=z-A;c[Y>>2]=_+Z;c[V>>2]=X+W;c[S>>2]=U+T;c[P>>2]=R+Q;c[e>>2]=d+f;c[l>>2]=i+h;c[n>>2]=k+o;c[u>>2]=r+q;c[w>>2]=t+x;c[D>>2]=A+z;D=c[C>>2]|0;z=a+124|0;A=c[z>>2]|0;w=a+128|0;x=c[w>>2]|0;t=a+132|0;u=c[t>>2]|0;q=a+136|0;r=c[q>>2]|0;n=a+140|0;o=c[n>>2]|0;k=a+144|0;l=c[k>>2]|0;h=a+148|0;i=c[h>>2]|0;e=a+152|0;f=c[e>>2]|0;a=a+156|0;d=c[a>>2]|0;c[O>>2]=D+E;c[N>>2]=A+B;c[M>>2]=x+y;c[L>>2]=u+v;c[K>>2]=r+s;c[J>>2]=o+p;c[I>>2]=l+m;c[H>>2]=i+j;c[G>>2]=f+g;c[F>>2]=d+b;c[C>>2]=E-D;c[z>>2]=B-A;c[w>>2]=y-x;c[t>>2]=v-u;c[q>>2]=s-r;c[n>>2]=p-o;c[k>>2]=m-l;c[h>>2]=j-i;c[e>>2]=g-f;c[a>>2]=b-d;return}function Cc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0;d=i;S=i=i+63&-64;i=i+48|0;xc(a,b);aa=a+80|0;ta=b+40|0;xc(aa,ta);v=a+120|0;ib=c[b+80>>2]|0;Sa=c[b+84>>2]|0;p=c[b+88>>2]|0;x=c[b+92>>2]|0;f=c[b+96>>2]|0;kb=c[b+100>>2]|0;_=c[b+104>>2]|0;wa=c[b+108>>2]|0;l=c[b+112>>2]|0;ua=c[b+116>>2]|0;t=ib<<1;ra=Sa<<1;cb=p<<1;g=x<<1;Ma=f<<1;e=kb<<1;va=_<<1;n=wa<<1;bb=kb*38|0;Qa=_*19|0;Q=wa*38|0;H=l*19|0;nb=ua*38|0;jb=((ib|0)<0)<<31>>31;jb=yd(ib|0,jb|0,ib|0,jb|0)|0;ib=C;qa=((t|0)<0)<<31>>31;Ta=((Sa|0)<0)<<31>>31;$a=yd(t|0,qa|0,Sa|0,Ta|0)|0;_a=C;r=((p|0)<0)<<31>>31;Va=yd(p|0,r|0,t|0,qa|0)|0;Ua=C;R=((x|0)<0)<<31>>31;La=yd(x|0,R|0,t|0,qa|0)|0;Ka=C;ka=((f|0)<0)<<31>>31;za=yd(f|0,ka|0,t|0,qa|0)|0;ya=C;lb=((kb|0)<0)<<31>>31;K=yd(kb|0,lb|0,t|0,qa|0)|0;M=C;j=((_|0)<0)<<31>>31;k=yd(_|0,j|0,t|0,qa|0)|0;F=C;xa=((wa|0)<0)<<31>>31;u=yd(wa|0,xa|0,t|0,qa|0)|0;P=C;ma=((l|0)<0)<<31>>31;W=yd(l|0,ma|0,t|0,qa|0)|0;fa=C;oa=((ua|0)<0)<<31>>31;qa=yd(ua|0,oa|0,t|0,qa|0)|0;t=C;pa=((ra|0)<0)<<31>>31;Ta=yd(ra|0,pa|0,Sa|0,Ta|0)|0;Sa=C;Ja=yd(ra|0,pa|0,p|0,r|0)|0;Ia=C;ja=((g|0)<0)<<31>>31;Da=yd(g|0,ja|0,ra|0,pa|0)|0;Ca=C;B=yd(f|0,ka|0,ra|0,pa|0)|0;E=C;la=((e|0)<0)<<31>>31;h=yd(e|0,la|0,ra|0,pa|0)|0;D=C;s=yd(_|0,j|0,ra|0,pa|0)|0;N=C;$=((n|0)<0)<<31>>31;V=yd(n|0,$|0,ra|0,pa|0)|0;ea=C;sa=yd(l|0,ma|0,ra|0,pa|0)|0;na=C;mb=((nb|0)<0)<<31>>31;pa=yd(nb|0,mb|0,ra|0,pa|0)|0;ra=C;Ba=yd(p|0,r|0,p|0,r|0)|0;Aa=C;db=((cb|0)<0)<<31>>31;G=yd(cb|0,db|0,x|0,R|0)|0;I=C;y=yd(f|0,ka|0,cb|0,db|0)|0;A=C;o=yd(kb|0,lb|0,cb|0,db|0)|0;J=C;w=yd(_|0,j|0,cb|0,db|0)|0;ba=C;Z=yd(wa|0,xa|0,cb|0,db|0)|0;ia=C;m=((H|0)<0)<<31>>31;db=yd(H|0,m|0,cb|0,db|0)|0;cb=C;r=yd(nb|0,mb|0,p|0,r|0)|0;p=C;R=yd(g|0,ja|0,x|0,R|0)|0;x=C;q=yd(g|0,ja|0,f|0,ka|0)|0;L=C;U=yd(e|0,la|0,g|0,ja|0)|0;da=C;X=yd(_|0,j|0,g|0,ja|0)|0;ga=C;O=((Q|0)<0)<<31>>31;fb=yd(Q|0,O|0,g|0,ja|0)|0;eb=C;Xa=yd(H|0,m|0,g|0,ja|0)|0;Wa=C;ja=yd(nb|0,mb|0,g|0,ja|0)|0;g=C;T=yd(f|0,ka|0,f|0,ka|0)|0;ca=C;Na=((Ma|0)<0)<<31>>31;Y=yd(Ma|0,Na|0,kb|0,lb|0)|0;ha=C;Ra=((Qa|0)<0)<<31>>31;hb=yd(Qa|0,Ra|0,Ma|0,Na|0)|0;gb=C;Za=yd(Q|0,O|0,f|0,ka|0)|0;Ya=C;Na=yd(H|0,m|0,Ma|0,Na|0)|0;Ma=C;ka=yd(nb|0,mb|0,f|0,ka|0)|0;f=C;lb=yd(bb|0,((bb|0)<0)<<31>>31|0,kb|0,lb|0)|0;kb=C;bb=yd(Qa|0,Ra|0,e|0,la|0)|0;ab=C;Pa=yd(Q|0,O|0,e|0,la|0)|0;Oa=C;Fa=yd(H|0,m|0,e|0,la|0)|0;Ea=C;la=yd(nb|0,mb|0,e|0,la|0)|0;e=C;Ra=yd(Qa|0,Ra|0,_|0,j|0)|0;Qa=C;Ha=yd(Q|0,O|0,_|0,j|0)|0;Ga=C;va=yd(H|0,m|0,va|0,((va|0)<0)<<31>>31|0)|0;z=C;j=yd(nb|0,mb|0,_|0,j|0)|0;_=C;xa=yd(Q|0,O|0,wa|0,xa|0)|0;wa=C;O=yd(H|0,m|0,n|0,$|0)|0;Q=C;$=yd(nb|0,mb|0,n|0,$|0)|0;n=C;m=yd(H|0,m|0,l|0,ma|0)|0;H=C;ma=yd(nb|0,mb|0,l|0,ma|0)|0;l=C;oa=yd(nb|0,mb|0,ua|0,oa|0)|0;ua=C;ib=nd(lb|0,kb|0,jb|0,ib|0)|0;gb=nd(ib|0,C|0,hb|0,gb|0)|0;eb=nd(gb|0,C|0,fb|0,eb|0)|0;cb=nd(eb|0,C|0,db|0,cb|0)|0;ra=nd(cb|0,C|0,pa|0,ra|0)|0;pa=C;_a=nd(bb|0,ab|0,$a|0,_a|0)|0;Ya=nd(_a|0,C|0,Za|0,Ya|0)|0;Wa=nd(Ya|0,C|0,Xa|0,Wa|0)|0;p=nd(Wa|0,C|0,r|0,p|0)|0;r=C;Sa=nd(Va|0,Ua|0,Ta|0,Sa|0)|0;Qa=nd(Sa|0,C|0,Ra|0,Qa|0)|0;Oa=nd(Qa|0,C|0,Pa|0,Oa|0)|0;Ma=nd(Oa|0,C|0,Na|0,Ma|0)|0;g=nd(Ma|0,C|0,ja|0,g|0)|0;ja=C;Ia=nd(La|0,Ka|0,Ja|0,Ia|0)|0;Ga=nd(Ia|0,C|0,Ha|0,Ga|0)|0;Ea=nd(Ga|0,C|0,Fa|0,Ea|0)|0;f=nd(Ea|0,C|0,ka|0,f|0)|0;ka=C;Aa=nd(Da|0,Ca|0,Ba|0,Aa|0)|0;ya=nd(Aa|0,C|0,za|0,ya|0)|0;wa=nd(ya|0,C|0,xa|0,wa|0)|0;z=nd(wa|0,C|0,va|0,z|0)|0;e=nd(z|0,C|0,la|0,e|0)|0;la=C;I=nd(B|0,E|0,G|0,I|0)|0;M=nd(I|0,C|0,K|0,M|0)|0;Q=nd(M|0,C|0,O|0,Q|0)|0;_=nd(Q|0,C|0,j|0,_|0)|0;j=C;A=nd(R|0,x|0,y|0,A|0)|0;D=nd(A|0,C|0,h|0,D|0)|0;F=nd(D|0,C|0,k|0,F|0)|0;H=nd(F|0,C|0,m|0,H|0)|0;n=nd(H|0,C|0,$|0,n|0)|0;$=C;L=nd(o|0,J|0,q|0,L|0)|0;N=nd(L|0,C|0,s|0,N|0)|0;P=nd(N|0,C|0,u|0,P|0)|0;l=nd(P|0,C|0,ma|0,l|0)|0;ma=C;ca=nd(w|0,ba|0,T|0,ca|0)|0;da=nd(ca|0,C|0,U|0,da|0)|0;ea=nd(da|0,C|0,V|0,ea|0)|0;fa=nd(ea|0,C|0,W|0,fa|0)|0;ua=nd(fa|0,C|0,oa|0,ua|0)|0;oa=C;ha=nd(X|0,ga|0,Y|0,ha|0)|0;ia=nd(ha|0,C|0,Z|0,ia|0)|0;na=nd(ia|0,C|0,sa|0,na|0)|0;t=nd(na|0,C|0,qa|0,t|0)|0;qa=C;pa=qd(ra|0,pa|0,1)|0;ra=C;r=qd(p|0,r|0,1)|0;p=C;ja=qd(g|0,ja|0,1)|0;g=C;ka=qd(f|0,ka|0,1)|0;f=C;la=qd(e|0,la|0,1)|0;e=C;j=qd(_|0,j|0,1)|0;_=C;$=qd(n|0,$|0,1)|0;n=C;ma=qd(l|0,ma|0,1)|0;l=C;oa=qd(ua|0,oa|0,1)|0;ua=C;qa=qd(t|0,qa|0,1)|0;t=C;na=nd(pa|0,ra|0,33554432,0)|0;na=ld(na|0,C|0,26)|0;sa=C;p=nd(na|0,sa|0,r|0,p|0)|0;r=C;sa=qd(na|0,sa|0,26)|0;sa=md(pa|0,ra|0,sa|0,C|0)|0;ra=C;pa=nd(la|0,e|0,33554432,0)|0;pa=ld(pa|0,C|0,26)|0;na=C;_=nd(pa|0,na|0,j|0,_|0)|0;j=C;na=qd(pa|0,na|0,26)|0;na=md(la|0,e|0,na|0,C|0)|0;e=C;la=nd(p|0,r|0,16777216,0)|0;la=ld(la|0,C|0,25)|0;pa=C;g=nd(la|0,pa|0,ja|0,g|0)|0;ja=C;pa=qd(la|0,pa|0,25)|0;pa=md(p|0,r|0,pa|0,C|0)|0;r=C;p=nd(_|0,j|0,16777216,0)|0;p=ld(p|0,C|0,25)|0;la=C;n=nd(p|0,la|0,$|0,n|0)|0;$=C;la=qd(p|0,la|0,25)|0;la=md(_|0,j|0,la|0,C|0)|0;j=C;_=nd(g|0,ja|0,33554432,0)|0;_=ld(_|0,C|0,26)|0;p=C;f=nd(_|0,p|0,ka|0,f|0)|0;ka=C;p=qd(_|0,p|0,26)|0;p=md(g|0,ja|0,p|0,C|0)|0;ja=nd(n|0,$|0,33554432,0)|0;ja=ld(ja|0,C|0,26)|0;g=C;l=nd(ja|0,g|0,ma|0,l|0)|0;ma=C;g=qd(ja|0,g|0,26)|0;g=md(n|0,$|0,g|0,C|0)|0;$=nd(f|0,ka|0,16777216,0)|0;$=ld($|0,C|0,25)|0;n=C;e=nd($|0,n|0,na|0,e|0)|0;na=C;n=qd($|0,n|0,25)|0;n=md(f|0,ka|0,n|0,C|0)|0;ka=nd(l|0,ma|0,16777216,0)|0;ka=ld(ka|0,C|0,25)|0;f=C;ua=nd(ka|0,f|0,oa|0,ua|0)|0;oa=C;f=qd(ka|0,f|0,25)|0;f=md(l|0,ma|0,f|0,C|0)|0;ma=nd(e|0,na|0,33554432,0)|0;ma=ld(ma|0,C|0,26)|0;l=C;j=nd(la|0,j|0,ma|0,l|0)|0;l=qd(ma|0,l|0,26)|0;l=md(e|0,na|0,l|0,C|0)|0;na=nd(ua|0,oa|0,33554432,0)|0;na=ld(na|0,C|0,26)|0;e=C;t=nd(na|0,e|0,qa|0,t|0)|0;qa=C;e=qd(na|0,e|0,26)|0;e=md(ua|0,oa|0,e|0,C|0)|0;oa=nd(t|0,qa|0,16777216,0)|0;oa=ld(oa|0,C|0,25)|0;ua=C;na=yd(oa|0,ua|0,19,0)|0;ra=nd(na|0,C|0,sa|0,ra|0)|0;sa=C;ua=qd(oa|0,ua|0,25)|0;ua=md(t|0,qa|0,ua|0,C|0)|0;qa=nd(ra|0,sa|0,33554432,0)|0;qa=ld(qa|0,C|0,26)|0;t=C;r=nd(pa|0,r|0,qa|0,t|0)|0;t=qd(qa|0,t|0,26)|0;t=md(ra|0,sa|0,t|0,C|0)|0;c[v>>2]=t;t=a+124|0;c[t>>2]=r;r=a+128|0;c[r>>2]=p;p=a+132|0;c[p>>2]=n;n=a+136|0;c[n>>2]=l;l=a+140|0;c[l>>2]=j;j=a+144|0;c[j>>2]=g;g=a+148|0;c[g>>2]=f;f=a+152|0;c[f>>2]=e;e=a+156|0;c[e>>2]=ua;ua=a+40|0;sa=(c[b+44>>2]|0)+(c[b+4>>2]|0)|0;ra=(c[b+48>>2]|0)+(c[b+8>>2]|0)|0;qa=(c[b+52>>2]|0)+(c[b+12>>2]|0)|0;pa=(c[b+56>>2]|0)+(c[b+16>>2]|0)|0;oa=(c[b+60>>2]|0)+(c[b+20>>2]|0)|0;na=(c[b+64>>2]|0)+(c[b+24>>2]|0)|0;ma=(c[b+68>>2]|0)+(c[b+28>>2]|0)|0;la=(c[b+72>>2]|0)+(c[b+32>>2]|0)|0;ka=(c[b+76>>2]|0)+(c[b+36>>2]|0)|0;c[ua>>2]=(c[ta>>2]|0)+(c[b>>2]|0);ta=a+44|0;c[ta>>2]=sa;sa=a+48|0;c[sa>>2]=ra;ra=a+52|0;c[ra>>2]=qa;qa=a+56|0;c[qa>>2]=pa;pa=a+60|0;c[pa>>2]=oa;oa=a+64|0;c[oa>>2]=na;na=a+68|0;c[na>>2]=ma;ma=a+72|0;c[ma>>2]=la;la=a+76|0;c[la>>2]=ka;xc(S,ua);ka=c[aa>>2]|0;$=a+84|0;ja=c[$>>2]|0;_=a+88|0;ia=c[_>>2]|0;Z=a+92|0;ha=c[Z>>2]|0;Y=a+96|0;ga=c[Y>>2]|0;X=a+100|0;fa=c[X>>2]|0;W=a+104|0;ea=c[W>>2]|0;V=a+108|0;da=c[V>>2]|0;U=a+112|0;ca=c[U>>2]|0;T=a+116|0;ba=c[T>>2]|0;w=c[a>>2]|0;P=a+4|0;u=c[P>>2]|0;N=a+8|0;s=c[N>>2]|0;L=a+12|0;q=c[L>>2]|0;J=a+16|0;o=c[J>>2]|0;H=a+20|0;m=c[H>>2]|0;F=a+24|0;k=c[F>>2]|0;D=a+28|0;h=c[D>>2]|0;A=a+32|0;b=c[A>>2]|0;y=a+36|0;x=c[y>>2]|0;R=w+ka|0;Q=u+ja|0;O=s+ia|0;M=q+ha|0;K=o+ga|0;I=m+fa|0;G=k+ea|0;E=h+da|0;B=b+ca|0;z=x+ba|0;c[ua>>2]=R;c[ta>>2]=Q;c[sa>>2]=O;c[ra>>2]=M;c[qa>>2]=K;c[pa>>2]=I;c[oa>>2]=G;c[na>>2]=E;c[ma>>2]=B;c[la>>2]=z;w=ka-w|0;u=ja-u|0;s=ia-s|0;q=ha-q|0;o=ga-o|0;m=fa-m|0;k=ea-k|0;h=da-h|0;b=ca-b|0;x=ba-x|0;c[aa>>2]=w;c[$>>2]=u;c[_>>2]=s;c[Z>>2]=q;c[Y>>2]=o;c[X>>2]=m;c[W>>2]=k;c[V>>2]=h;c[U>>2]=b;c[T>>2]=x;Q=(c[S+4>>2]|0)-Q|0;O=(c[S+8>>2]|0)-O|0;M=(c[S+12>>2]|0)-M|0;K=(c[S+16>>2]|0)-K|0;I=(c[S+20>>2]|0)-I|0;G=(c[S+24>>2]|0)-G|0;E=(c[S+28>>2]|0)-E|0;B=(c[S+32>>2]|0)-B|0;z=(c[S+36>>2]|0)-z|0;c[a>>2]=(c[S>>2]|0)-R;c[P>>2]=Q;c[N>>2]=O;c[L>>2]=M;c[J>>2]=K;c[H>>2]=I;c[F>>2]=G;c[D>>2]=E;c[A>>2]=B;c[y>>2]=z;u=(c[t>>2]|0)-u|0;s=(c[r>>2]|0)-s|0;q=(c[p>>2]|0)-q|0;o=(c[n>>2]|0)-o|0;m=(c[l>>2]|0)-m|0;k=(c[j>>2]|0)-k|0;h=(c[g>>2]|0)-h|0;b=(c[f>>2]|0)-b|0;a=(c[e>>2]|0)-x|0;c[v>>2]=(c[v>>2]|0)-w;c[t>>2]=u;c[r>>2]=s;c[p>>2]=q;c[n>>2]=o;c[l>>2]=m;c[j>>2]=k;c[g>>2]=h;c[f>>2]=b;c[e>>2]=a;i=d;return}function Dc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;m=b+40|0;v=b+44|0;u=b+48|0;t=b+52|0;s=b+56|0;r=b+60|0;q=b+64|0;p=b+68|0;o=b+72|0;n=b+76|0;d=b+4|0;e=b+8|0;f=b+12|0;g=b+16|0;h=b+20|0;i=b+24|0;j=b+28|0;k=b+32|0;l=b+36|0;E=(c[d>>2]|0)+(c[v>>2]|0)|0;D=(c[e>>2]|0)+(c[u>>2]|0)|0;C=(c[f>>2]|0)+(c[t>>2]|0)|0;B=(c[g>>2]|0)+(c[s>>2]|0)|0;A=(c[h>>2]|0)+(c[r>>2]|0)|0;z=(c[i>>2]|0)+(c[q>>2]|0)|0;y=(c[j>>2]|0)+(c[p>>2]|0)|0;x=(c[k>>2]|0)+(c[o>>2]|0)|0;w=(c[l>>2]|0)+(c[n>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[m>>2]|0);c[a+4>>2]=E;c[a+8>>2]=D;c[a+12>>2]=C;c[a+16>>2]=B;c[a+20>>2]=A;c[a+24>>2]=z;c[a+28>>2]=y;c[a+32>>2]=x;c[a+36>>2]=w;d=(c[v>>2]|0)-(c[d>>2]|0)|0;e=(c[u>>2]|0)-(c[e>>2]|0)|0;f=(c[t>>2]|0)-(c[f>>2]|0)|0;g=(c[s>>2]|0)-(c[g>>2]|0)|0;h=(c[r>>2]|0)-(c[h>>2]|0)|0;i=(c[q>>2]|0)-(c[i>>2]|0)|0;j=(c[p>>2]|0)-(c[j>>2]|0)|0;k=(c[o>>2]|0)-(c[k>>2]|0)|0;l=(c[n>>2]|0)-(c[l>>2]|0)|0;c[a+40>>2]=(c[m>>2]|0)-(c[b>>2]|0);c[a+44>>2]=d;c[a+48>>2]=e;c[a+52>>2]=f;c[a+56>>2]=g;c[a+60>>2]=h;c[a+64>>2]=i;c[a+68>>2]=j;c[a+72>>2]=k;c[a+76>>2]=l;l=c[b+84>>2]|0;k=c[b+88>>2]|0;j=c[b+92>>2]|0;i=c[b+96>>2]|0;h=c[b+100>>2]|0;g=c[b+104>>2]|0;f=c[b+108>>2]|0;e=c[b+112>>2]|0;d=c[b+116>>2]|0;c[a+80>>2]=c[b+80>>2];c[a+84>>2]=l;c[a+88>>2]=k;c[a+92>>2]=j;c[a+96>>2]=i;c[a+100>>2]=h;c[a+104>>2]=g;c[a+108>>2]=f;c[a+112>>2]=e;c[a+116>>2]=d;wc(a+120|0,b+120|0,1624);return}function Ec(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;u=i;t=i=i+63&-64;i=i+592|0;p=t+400|0;r=t+520|0;s=t+240|0;q=t+120|0;f=0;do{n=a[e+f>>0]|0;o=f<<1;a[r+o>>0]=n&15;a[r+(o|1)>>0]=(n&255)>>>4;f=f+1|0}while((f|0)!=32);e=0;f=0;do{o=r+f|0;n=(d[o>>0]|0)+e|0;e=(n<<24)+134217728>>28;a[o>>0]=n-(e<<4);f=f+1|0}while((f|0)!=63);f=r+63|0;a[f>>0]=(d[f>>0]|0)+e;f=b+0|0;e=f+40|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));j=b+40|0;c[j>>2]=1;g=b+44|0;f=g+0|0;e=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));k=b+80|0;c[k>>2]=1;h=b+84|0;l=b+120|0;m=s+120|0;n=s+40|0;o=s+80|0;f=h+0|0;e=f+76|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));f=1;do{Fc(t,(f|0)/2|0,a[r+f>>0]|0);Bc(s,b,t);wc(b,s,m);wc(j,n,o);wc(k,o,m);wc(l,s,n);f=f+2|0}while((f|0)<64);B=c[b+4>>2]|0;z=c[b+8>>2]|0;y=c[b+12>>2]|0;x=c[b+16>>2]|0;w=c[b+20>>2]|0;v=c[b+24>>2]|0;e=c[b+28>>2]|0;f=c[b+32>>2]|0;A=c[b+36>>2]|0;c[p>>2]=c[b>>2];c[p+4>>2]=B;c[p+8>>2]=z;c[p+12>>2]=y;c[p+16>>2]=x;c[p+20>>2]=w;c[p+24>>2]=v;c[p+28>>2]=e;c[p+32>>2]=f;c[p+36>>2]=A;A=c[g>>2]|0;f=c[b+48>>2]|0;g=c[b+52>>2]|0;e=c[b+56>>2]|0;v=c[b+60>>2]|0;w=c[b+64>>2]|0;x=c[b+68>>2]|0;y=c[b+72>>2]|0;z=c[b+76>>2]|0;c[p+40>>2]=c[j>>2];c[p+44>>2]=A;c[p+48>>2]=f;c[p+52>>2]=g;c[p+56>>2]=e;c[p+60>>2]=v;c[p+64>>2]=w;c[p+68>>2]=x;c[p+72>>2]=y;c[p+76>>2]=z;z=c[h>>2]|0;y=c[b+88>>2]|0;x=c[b+92>>2]|0;w=c[b+96>>2]|0;v=c[b+100>>2]|0;e=c[b+104>>2]|0;g=c[b+108>>2]|0;h=c[b+112>>2]|0;f=c[b+116>>2]|0;c[p+80>>2]=c[k>>2];c[p+84>>2]=z;c[p+88>>2]=y;c[p+92>>2]=x;c[p+96>>2]=w;c[p+100>>2]=v;c[p+104>>2]=e;c[p+108>>2]=g;c[p+112>>2]=h;c[p+116>>2]=f;Cc(s,p);wc(q,s,m);p=q+40|0;wc(p,n,o);f=q+80|0;wc(f,o,m);Cc(s,q);wc(q,s,m);wc(p,n,o);wc(f,o,m);Cc(s,q);wc(q,s,m);wc(p,n,o);wc(f,o,m);Cc(s,q);wc(b,s,m);wc(j,n,o);wc(k,o,m);wc(l,s,n);f=0;do{Fc(t,(f|0)/2|0,a[r+f>>0]|0);Bc(s,b,t);wc(b,s,m);wc(j,n,o);wc(k,o,m);wc(l,s,n);f=f+2|0}while((f|0)<64);i=u;return}function Fc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;s=d<<24>>24;s=pd(s|0,((s|0)<0)<<31>>31|0,63)|0;h=d<<24>>24;s=0-s|0;d=a+4|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;e=a+40|0;c[e>>2]=1;f=a+44|0;g=a+80|0;h=h-((h&s)<<1)&255;i=(h^1)+-1|0;j=1664+(b*960|0)|0;k=a+8|0;l=a+12|0;m=a+16|0;n=a+20|0;o=a+24|0;p=a+28|0;q=a+32|0;r=a+36|0;t=f+0|0;u=t+76|0;do{c[t>>2]=0;t=t+4|0}while((t|0)<(u|0));H=i>>31;A=c[1668+(b*960|0)>>2]&H;I=c[1672+(b*960|0)>>2]&H;K=c[1676+(b*960|0)>>2]&H;M=c[1680+(b*960|0)>>2]&H;O=c[1684+(b*960|0)>>2]&H;Q=c[1688+(b*960|0)>>2]&H;S=c[1692+(b*960|0)>>2]&H;U=c[1696+(b*960|0)>>2]&H;W=c[1700+(b*960|0)>>2]&H;c[a>>2]=(c[j>>2]^1)&H^1;c[d>>2]=A;c[k>>2]=I;c[l>>2]=K;c[m>>2]=M;c[n>>2]=O;c[o>>2]=Q;c[p>>2]=S;c[q>>2]=U;c[r>>2]=W;W=a+48|0;U=a+52|0;S=a+56|0;Q=a+60|0;O=a+64|0;M=a+68|0;K=a+72|0;I=a+76|0;A=c[1708+(b*960|0)>>2]&H;z=c[1712+(b*960|0)>>2]&H;w=c[1716+(b*960|0)>>2]&H;B=c[1720+(b*960|0)>>2]&H;ia=c[1724+(b*960|0)>>2]&H;D=c[1728+(b*960|0)>>2]&H;ea=c[1732+(b*960|0)>>2]&H;F=c[1736+(b*960|0)>>2]&H;ga=c[1740+(b*960|0)>>2]&H;c[e>>2]=(c[1704+(b*960|0)>>2]^1)&H^1;c[f>>2]=A;c[W>>2]=z;c[U>>2]=w;c[S>>2]=B;c[Q>>2]=ia;c[O>>2]=D;c[M>>2]=ea;c[K>>2]=F;c[I>>2]=ga;ga=c[g>>2]|0;F=a+84|0;ea=c[F>>2]|0;D=a+88|0;ia=c[D>>2]|0;B=a+92|0;w=c[B>>2]|0;z=a+96|0;A=c[z>>2]|0;x=a+100|0;fa=c[x>>2]|0;v=a+104|0;ba=c[v>>2]|0;i=a+108|0;G=c[i>>2]|0;t=a+112|0;_=c[t>>2]|0;u=a+116|0;da=c[u>>2]|0;$=(c[1748+(b*960|0)>>2]^ea)&H;aa=(c[1752+(b*960|0)>>2]^ia)&H;y=(c[1756+(b*960|0)>>2]^w)&H;j=(c[1760+(b*960|0)>>2]^A)&H;ha=(c[1764+(b*960|0)>>2]^fa)&H;Z=(c[1768+(b*960|0)>>2]^ba)&H;ca=(c[1772+(b*960|0)>>2]^G)&H;C=(c[1776+(b*960|0)>>2]^_)&H;E=(c[1780+(b*960|0)>>2]^da)&H;c[g>>2]=(c[1744+(b*960|0)>>2]^ga)&H^ga;c[F>>2]=$^ea;c[D>>2]=aa^ia;c[B>>2]=y^w;c[z>>2]=j^A;c[x>>2]=ha^fa;c[v>>2]=Z^ba;c[i>>2]=ca^G;c[t>>2]=C^_;c[u>>2]=E^da;da=c[a>>2]|0;E=c[d>>2]|0;_=c[k>>2]|0;C=c[l>>2]|0;G=c[m>>2]|0;ca=c[n>>2]|0;ba=c[o>>2]|0;Z=c[p>>2]|0;fa=c[q>>2]|0;ha=c[r>>2]|0;A=(h^2)+-1>>31;j=(c[1788+(b*960|0)>>2]^E)&A;w=(c[1792+(b*960|0)>>2]^_)&A;y=(c[1796+(b*960|0)>>2]^C)&A;ia=(c[1800+(b*960|0)>>2]^G)&A;aa=(c[1804+(b*960|0)>>2]^ca)&A;ea=(c[1808+(b*960|0)>>2]^ba)&A;$=(c[1812+(b*960|0)>>2]^Z)&A;ga=(c[1816+(b*960|0)>>2]^fa)&A;H=(c[1820+(b*960|0)>>2]^ha)&A;c[a>>2]=(c[1784+(b*960|0)>>2]^da)&A^da;c[d>>2]=j^E;c[k>>2]=w^_;c[l>>2]=y^C;c[m>>2]=ia^G;c[n>>2]=aa^ca;c[o>>2]=ea^ba;c[p>>2]=$^Z;c[q>>2]=ga^fa;c[r>>2]=H^ha;ha=c[e>>2]|0;H=c[f>>2]|0;fa=c[W>>2]|0;ga=c[U>>2]|0;Z=c[S>>2]|0;$=c[Q>>2]|0;ba=c[O>>2]|0;ea=c[M>>2]|0;ca=c[K>>2]|0;aa=c[I>>2]|0;G=(c[1828+(b*960|0)>>2]^H)&A;ia=(c[1832+(b*960|0)>>2]^fa)&A;C=(c[1836+(b*960|0)>>2]^ga)&A;y=(c[1840+(b*960|0)>>2]^Z)&A;_=(c[1844+(b*960|0)>>2]^$)&A;w=(c[1848+(b*960|0)>>2]^ba)&A;E=(c[1852+(b*960|0)>>2]^ea)&A;j=(c[1856+(b*960|0)>>2]^ca)&A;da=(c[1860+(b*960|0)>>2]^aa)&A;c[e>>2]=(c[1824+(b*960|0)>>2]^ha)&A^ha;c[f>>2]=G^H;c[W>>2]=ia^fa;c[U>>2]=C^ga;c[S>>2]=y^Z;c[Q>>2]=_^$;c[O>>2]=w^ba;c[M>>2]=E^ea;c[K>>2]=j^ca;c[I>>2]=da^aa;aa=c[g>>2]|0;da=c[F>>2]|0;ca=c[D>>2]|0;j=c[B>>2]|0;ea=c[z>>2]|0;E=c[x>>2]|0;ba=c[v>>2]|0;w=c[i>>2]|0;$=c[t>>2]|0;_=c[u>>2]|0;Z=(c[1868+(b*960|0)>>2]^da)&A;y=(c[1872+(b*960|0)>>2]^ca)&A;ga=(c[1876+(b*960|0)>>2]^j)&A;C=(c[1880+(b*960|0)>>2]^ea)&A;fa=(c[1884+(b*960|0)>>2]^E)&A;ia=(c[1888+(b*960|0)>>2]^ba)&A;H=(c[1892+(b*960|0)>>2]^w)&A;G=(c[1896+(b*960|0)>>2]^$)&A;ha=(c[1900+(b*960|0)>>2]^_)&A;c[g>>2]=(c[1864+(b*960|0)>>2]^aa)&A^aa;c[F>>2]=Z^da;c[D>>2]=y^ca;c[B>>2]=ga^j;c[z>>2]=C^ea;c[x>>2]=fa^E;c[v>>2]=ia^ba;c[i>>2]=H^w;c[t>>2]=G^$;c[u>>2]=ha^_;_=c[a>>2]|0;ha=c[d>>2]|0;$=c[k>>2]|0;G=c[l>>2]|0;w=c[m>>2]|0;H=c[n>>2]|0;ba=c[o>>2]|0;ia=c[p>>2]|0;E=c[q>>2]|0;fa=c[r>>2]|0;ea=(h^3)+-1>>31;C=(c[1908+(b*960|0)>>2]^ha)&ea;j=(c[1912+(b*960|0)>>2]^$)&ea;ga=(c[1916+(b*960|0)>>2]^G)&ea;ca=(c[1920+(b*960|0)>>2]^w)&ea;y=(c[1924+(b*960|0)>>2]^H)&ea;da=(c[1928+(b*960|0)>>2]^ba)&ea;Z=(c[1932+(b*960|0)>>2]^ia)&ea;aa=(c[1936+(b*960|0)>>2]^E)&ea;A=(c[1940+(b*960|0)>>2]^fa)&ea;c[a>>2]=(c[1904+(b*960|0)>>2]^_)&ea^_;c[d>>2]=C^ha;c[k>>2]=j^$;c[l>>2]=ga^G;c[m>>2]=ca^w;c[n>>2]=y^H;c[o>>2]=da^ba;c[p>>2]=Z^ia;c[q>>2]=aa^E;c[r>>2]=A^fa;fa=c[e>>2]|0;A=c[f>>2]|0;E=c[W>>2]|0;aa=c[U>>2]|0;ia=c[S>>2]|0;Z=c[Q>>2]|0;ba=c[O>>2]|0;da=c[M>>2]|0;H=c[K>>2]|0;y=c[I>>2]|0;w=(c[1948+(b*960|0)>>2]^A)&ea;ca=(c[1952+(b*960|0)>>2]^E)&ea;G=(c[1956+(b*960|0)>>2]^aa)&ea;ga=(c[1960+(b*960|0)>>2]^ia)&ea;$=(c[1964+(b*960|0)>>2]^Z)&ea;j=(c[1968+(b*960|0)>>2]^ba)&ea;ha=(c[1972+(b*960|0)>>2]^da)&ea;C=(c[1976+(b*960|0)>>2]^H)&ea;_=(c[1980+(b*960|0)>>2]^y)&ea;c[e>>2]=(c[1944+(b*960|0)>>2]^fa)&ea^fa;c[f>>2]=w^A;c[W>>2]=ca^E;c[U>>2]=G^aa;c[S>>2]=ga^ia;c[Q>>2]=$^Z;c[O>>2]=j^ba;c[M>>2]=ha^da;c[K>>2]=C^H;c[I>>2]=_^y;y=c[g>>2]|0;_=c[F>>2]|0;H=c[D>>2]|0;C=c[B>>2]|0;da=c[z>>2]|0;ha=c[x>>2]|0;ba=c[v>>2]|0;j=c[i>>2]|0;Z=c[t>>2]|0;$=c[u>>2]|0;ia=(c[1988+(b*960|0)>>2]^_)&ea;ga=(c[1992+(b*960|0)>>2]^H)&ea;aa=(c[1996+(b*960|0)>>2]^C)&ea;G=(c[2e3+(b*960|0)>>2]^da)&ea;E=(c[2004+(b*960|0)>>2]^ha)&ea;ca=(c[2008+(b*960|0)>>2]^ba)&ea;A=(c[2012+(b*960|0)>>2]^j)&ea;w=(c[2016+(b*960|0)>>2]^Z)&ea;fa=(c[2020+(b*960|0)>>2]^$)&ea;c[g>>2]=(c[1984+(b*960|0)>>2]^y)&ea^y;c[F>>2]=ia^_;c[D>>2]=ga^H;c[B>>2]=aa^C;c[z>>2]=G^da;c[x>>2]=E^ha;c[v>>2]=ca^ba;c[i>>2]=A^j;c[t>>2]=w^Z;c[u>>2]=fa^$;$=c[a>>2]|0;fa=c[d>>2]|0;Z=c[k>>2]|0;w=c[l>>2]|0;j=c[m>>2]|0;A=c[n>>2]|0;ba=c[o>>2]|0;ca=c[p>>2]|0;ha=c[q>>2]|0;E=c[r>>2]|0;da=(h^4)+-1>>31;G=(c[2028+(b*960|0)>>2]^fa)&da;C=(c[2032+(b*960|0)>>2]^Z)&da;aa=(c[2036+(b*960|0)>>2]^w)&da;H=(c[2040+(b*960|0)>>2]^j)&da;ga=(c[2044+(b*960|0)>>2]^A)&da;_=(c[2048+(b*960|0)>>2]^ba)&da;ia=(c[2052+(b*960|0)>>2]^ca)&da;y=(c[2056+(b*960|0)>>2]^ha)&da;ea=(c[2060+(b*960|0)>>2]^E)&da;c[a>>2]=(c[2024+(b*960|0)>>2]^$)&da^$;c[d>>2]=G^fa;c[k>>2]=C^Z;c[l>>2]=aa^w;c[m>>2]=H^j;c[n>>2]=ga^A;c[o>>2]=_^ba;c[p>>2]=ia^ca;c[q>>2]=y^ha;c[r>>2]=ea^E;E=c[e>>2]|0;ea=c[f>>2]|0;ha=c[W>>2]|0;y=c[U>>2]|0;ca=c[S>>2]|0;ia=c[Q>>2]|0;ba=c[O>>2]|0;_=c[M>>2]|0;A=c[K>>2]|0;ga=c[I>>2]|0;j=(c[2068+(b*960|0)>>2]^ea)&da;H=(c[2072+(b*960|0)>>2]^ha)&da;w=(c[2076+(b*960|0)>>2]^y)&da;aa=(c[2080+(b*960|0)>>2]^ca)&da;Z=(c[2084+(b*960|0)>>2]^ia)&da;C=(c[2088+(b*960|0)>>2]^ba)&da;fa=(c[2092+(b*960|0)>>2]^_)&da;G=(c[2096+(b*960|0)>>2]^A)&da;$=(c[2100+(b*960|0)>>2]^ga)&da;c[e>>2]=(c[2064+(b*960|0)>>2]^E)&da^E;c[f>>2]=j^ea;c[W>>2]=H^ha;c[U>>2]=w^y;c[S>>2]=aa^ca;c[Q>>2]=Z^ia;c[O>>2]=C^ba;c[M>>2]=fa^_;c[K>>2]=G^A;c[I>>2]=$^ga;ga=c[g>>2]|0;$=c[F>>2]|0;A=c[D>>2]|0;G=c[B>>2]|0;_=c[z>>2]|0;fa=c[x>>2]|0;ba=c[v>>2]|0;C=c[i>>2]|0;ia=c[t>>2]|0;Z=c[u>>2]|0;ca=(c[2108+(b*960|0)>>2]^$)&da;aa=(c[2112+(b*960|0)>>2]^A)&da;y=(c[2116+(b*960|0)>>2]^G)&da;w=(c[2120+(b*960|0)>>2]^_)&da;ha=(c[2124+(b*960|0)>>2]^fa)&da;H=(c[2128+(b*960|0)>>2]^ba)&da;ea=(c[2132+(b*960|0)>>2]^C)&da;j=(c[2136+(b*960|0)>>2]^ia)&da;E=(c[2140+(b*960|0)>>2]^Z)&da;c[g>>2]=(c[2104+(b*960|0)>>2]^ga)&da^ga;c[F>>2]=ca^$;c[D>>2]=aa^A;c[B>>2]=y^G;c[z>>2]=w^_;c[x>>2]=ha^fa;c[v>>2]=H^ba;c[i>>2]=ea^C;c[t>>2]=j^ia;c[u>>2]=E^Z;Z=c[a>>2]|0;E=c[d>>2]|0;ia=c[k>>2]|0;j=c[l>>2]|0;C=c[m>>2]|0;ea=c[n>>2]|0;ba=c[o>>2]|0;H=c[p>>2]|0;fa=c[q>>2]|0;ha=c[r>>2]|0;_=(h^5)+-1>>31;w=(c[2148+(b*960|0)>>2]^E)&_;G=(c[2152+(b*960|0)>>2]^ia)&_;y=(c[2156+(b*960|0)>>2]^j)&_;A=(c[2160+(b*960|0)>>2]^C)&_;aa=(c[2164+(b*960|0)>>2]^ea)&_;$=(c[2168+(b*960|0)>>2]^ba)&_;ca=(c[2172+(b*960|0)>>2]^H)&_;ga=(c[2176+(b*960|0)>>2]^fa)&_;da=(c[2180+(b*960|0)>>2]^ha)&_;c[a>>2]=(c[2144+(b*960|0)>>2]^Z)&_^Z;c[d>>2]=w^E;c[k>>2]=G^ia;c[l>>2]=y^j;c[m>>2]=A^C;c[n>>2]=aa^ea;c[o>>2]=$^ba;c[p>>2]=ca^H;c[q>>2]=ga^fa;c[r>>2]=da^ha;ha=c[e>>2]|0;da=c[f>>2]|0;fa=c[W>>2]|0;ga=c[U>>2]|0;H=c[S>>2]|0;ca=c[Q>>2]|0;ba=c[O>>2]|0;$=c[M>>2]|0;ea=c[K>>2]|0;aa=c[I>>2]|0;C=(c[2188+(b*960|0)>>2]^da)&_;A=(c[2192+(b*960|0)>>2]^fa)&_;j=(c[2196+(b*960|0)>>2]^ga)&_;y=(c[2200+(b*960|0)>>2]^H)&_;ia=(c[2204+(b*960|0)>>2]^ca)&_;G=(c[2208+(b*960|0)>>2]^ba)&_;E=(c[2212+(b*960|0)>>2]^$)&_;w=(c[2216+(b*960|0)>>2]^ea)&_;Z=(c[2220+(b*960|0)>>2]^aa)&_;c[e>>2]=(c[2184+(b*960|0)>>2]^ha)&_^ha;c[f>>2]=C^da;c[W>>2]=A^fa;c[U>>2]=j^ga;c[S>>2]=y^H;c[Q>>2]=ia^ca;c[O>>2]=G^ba;c[M>>2]=E^$;c[K>>2]=w^ea;c[I>>2]=Z^aa;aa=c[g>>2]|0;Z=c[F>>2]|0;ea=c[D>>2]|0;w=c[B>>2]|0;$=c[z>>2]|0;E=c[x>>2]|0;ba=c[v>>2]|0;G=c[i>>2]|0;ca=c[t>>2]|0;ia=c[u>>2]|0;H=(c[2228+(b*960|0)>>2]^Z)&_;y=(c[2232+(b*960|0)>>2]^ea)&_;ga=(c[2236+(b*960|0)>>2]^w)&_;j=(c[2240+(b*960|0)>>2]^$)&_;fa=(c[2244+(b*960|0)>>2]^E)&_;A=(c[2248+(b*960|0)>>2]^ba)&_;da=(c[2252+(b*960|0)>>2]^G)&_;C=(c[2256+(b*960|0)>>2]^ca)&_;ha=(c[2260+(b*960|0)>>2]^ia)&_;c[g>>2]=(c[2224+(b*960|0)>>2]^aa)&_^aa;c[F>>2]=H^Z;c[D>>2]=y^ea;c[B>>2]=ga^w;c[z>>2]=j^$;c[x>>2]=fa^E;c[v>>2]=A^ba;c[i>>2]=da^G;c[t>>2]=C^ca;c[u>>2]=ha^ia;ia=c[a>>2]|0;ha=c[d>>2]|0;ca=c[k>>2]|0;C=c[l>>2]|0;G=c[m>>2]|0;da=c[n>>2]|0;ba=c[o>>2]|0;A=c[p>>2]|0;E=c[q>>2]|0;fa=c[r>>2]|0;$=(h^6)+-1>>31;j=(c[2268+(b*960|0)>>2]^ha)&$;w=(c[2272+(b*960|0)>>2]^ca)&$;ga=(c[2276+(b*960|0)>>2]^C)&$;ea=(c[2280+(b*960|0)>>2]^G)&$;y=(c[2284+(b*960|0)>>2]^da)&$;Z=(c[2288+(b*960|0)>>2]^ba)&$;H=(c[2292+(b*960|0)>>2]^A)&$;aa=(c[2296+(b*960|0)>>2]^E)&$;_=(c[2300+(b*960|0)>>2]^fa)&$;c[a>>2]=(c[2264+(b*960|0)>>2]^ia)&$^ia;c[d>>2]=j^ha;c[k>>2]=w^ca;c[l>>2]=ga^C;c[m>>2]=ea^G;c[n>>2]=y^da;c[o>>2]=Z^ba;c[p>>2]=H^A;c[q>>2]=aa^E;c[r>>2]=_^fa;fa=c[e>>2]|0;_=c[f>>2]|0;E=c[W>>2]|0;aa=c[U>>2]|0;A=c[S>>2]|0;H=c[Q>>2]|0;ba=c[O>>2]|0;Z=c[M>>2]|0;da=c[K>>2]|0;y=c[I>>2]|0;G=(c[2308+(b*960|0)>>2]^_)&$;ea=(c[2312+(b*960|0)>>2]^E)&$;C=(c[2316+(b*960|0)>>2]^aa)&$;ga=(c[2320+(b*960|0)>>2]^A)&$;ca=(c[2324+(b*960|0)>>2]^H)&$;w=(c[2328+(b*960|0)>>2]^ba)&$;ha=(c[2332+(b*960|0)>>2]^Z)&$;j=(c[2336+(b*960|0)>>2]^da)&$;ia=(c[2340+(b*960|0)>>2]^y)&$;c[e>>2]=(c[2304+(b*960|0)>>2]^fa)&$^fa;c[f>>2]=G^_;c[W>>2]=ea^E;c[U>>2]=C^aa;c[S>>2]=ga^A;c[Q>>2]=ca^H;c[O>>2]=w^ba;c[M>>2]=ha^Z;c[K>>2]=j^da;c[I>>2]=ia^y;y=c[g>>2]|0;ia=c[F>>2]|0;da=c[D>>2]|0;j=c[B>>2]|0;Z=c[z>>2]|0;ha=c[x>>2]|0;ba=c[v>>2]|0;w=c[i>>2]|0;H=c[t>>2]|0;ca=c[u>>2]|0;A=(c[2348+(b*960|0)>>2]^ia)&$;ga=(c[2352+(b*960|0)>>2]^da)&$;aa=(c[2356+(b*960|0)>>2]^j)&$;C=(c[2360+(b*960|0)>>2]^Z)&$;E=(c[2364+(b*960|0)>>2]^ha)&$;ea=(c[2368+(b*960|0)>>2]^ba)&$;_=(c[2372+(b*960|0)>>2]^w)&$;G=(c[2376+(b*960|0)>>2]^H)&$;fa=(c[2380+(b*960|0)>>2]^ca)&$;c[g>>2]=(c[2344+(b*960|0)>>2]^y)&$^y;c[F>>2]=A^ia;c[D>>2]=ga^da;c[B>>2]=aa^j;c[z>>2]=C^Z;c[x>>2]=E^ha;c[v>>2]=ea^ba;c[i>>2]=_^w;c[t>>2]=G^H;c[u>>2]=fa^ca;ca=c[a>>2]|0;fa=c[d>>2]|0;H=c[k>>2]|0;G=c[l>>2]|0;w=c[m>>2]|0;_=c[n>>2]|0;ba=c[o>>2]|0;ea=c[p>>2]|0;ha=c[q>>2]|0;E=c[r>>2]|0;Z=(h^7)+-1>>31;C=(c[2388+(b*960|0)>>2]^fa)&Z;j=(c[2392+(b*960|0)>>2]^H)&Z;aa=(c[2396+(b*960|0)>>2]^G)&Z;da=(c[2400+(b*960|0)>>2]^w)&Z;ga=(c[2404+(b*960|0)>>2]^_)&Z;ia=(c[2408+(b*960|0)>>2]^ba)&Z;A=(c[2412+(b*960|0)>>2]^ea)&Z;y=(c[2416+(b*960|0)>>2]^ha)&Z;$=(c[2420+(b*960|0)>>2]^E)&Z;c[a>>2]=(c[2384+(b*960|0)>>2]^ca)&Z^ca;c[d>>2]=C^fa;c[k>>2]=j^H;c[l>>2]=aa^G;c[m>>2]=da^w;c[n>>2]=ga^_;c[o>>2]=ia^ba;c[p>>2]=A^ea;c[q>>2]=y^ha;c[r>>2]=$^E;E=c[e>>2]|0;$=c[f>>2]|0;ha=c[W>>2]|0;y=c[U>>2]|0;ea=c[S>>2]|0;A=c[Q>>2]|0;ba=c[O>>2]|0;ia=c[M>>2]|0;_=c[K>>2]|0;ga=c[I>>2]|0;w=(c[2428+(b*960|0)>>2]^$)&Z;da=(c[2432+(b*960|0)>>2]^ha)&Z;G=(c[2436+(b*960|0)>>2]^y)&Z;aa=(c[2440+(b*960|0)>>2]^ea)&Z;H=(c[2444+(b*960|0)>>2]^A)&Z;j=(c[2448+(b*960|0)>>2]^ba)&Z;fa=(c[2452+(b*960|0)>>2]^ia)&Z;C=(c[2456+(b*960|0)>>2]^_)&Z;ca=(c[2460+(b*960|0)>>2]^ga)&Z;c[e>>2]=(c[2424+(b*960|0)>>2]^E)&Z^E;c[f>>2]=w^$;c[W>>2]=da^ha;c[U>>2]=G^y;c[S>>2]=aa^ea;c[Q>>2]=H^A;c[O>>2]=j^ba;c[M>>2]=fa^ia;c[K>>2]=C^_;c[I>>2]=ca^ga;ga=c[g>>2]|0;ca=c[F>>2]|0;_=c[D>>2]|0;C=c[B>>2]|0;ia=c[z>>2]|0;fa=c[x>>2]|0;ba=c[v>>2]|0;j=c[i>>2]|0;A=c[t>>2]|0;H=c[u>>2]|0;ea=(c[2468+(b*960|0)>>2]^ca)&Z;aa=(c[2472+(b*960|0)>>2]^_)&Z;y=(c[2476+(b*960|0)>>2]^C)&Z;G=(c[2480+(b*960|0)>>2]^ia)&Z;ha=(c[2484+(b*960|0)>>2]^fa)&Z;da=(c[2488+(b*960|0)>>2]^ba)&Z;$=(c[2492+(b*960|0)>>2]^j)&Z;w=(c[2496+(b*960|0)>>2]^A)&Z;E=(c[2500+(b*960|0)>>2]^H)&Z;c[g>>2]=(c[2464+(b*960|0)>>2]^ga)&Z^ga;c[F>>2]=ea^ca;c[D>>2]=aa^_;c[B>>2]=y^C;c[z>>2]=G^ia;c[x>>2]=ha^fa;c[v>>2]=da^ba;c[i>>2]=$^j;c[t>>2]=w^A;c[u>>2]=E^H;H=c[a>>2]|0;E=c[d>>2]|0;A=c[k>>2]|0;w=c[l>>2]|0;j=c[m>>2]|0;$=c[n>>2]|0;ba=c[o>>2]|0;da=c[p>>2]|0;fa=c[q>>2]|0;ha=c[r>>2]|0;ia=(h^8)+-1>>31;G=(c[2508+(b*960|0)>>2]^E)&ia;C=(c[2512+(b*960|0)>>2]^A)&ia;y=(c[2516+(b*960|0)>>2]^w)&ia;h=(c[2520+(b*960|0)>>2]^j)&ia;_=(c[2524+(b*960|0)>>2]^$)&ia;aa=(c[2528+(b*960|0)>>2]^ba)&ia;ca=(c[2532+(b*960|0)>>2]^da)&ia;ea=(c[2536+(b*960|0)>>2]^fa)&ia;ga=(c[2540+(b*960|0)>>2]^ha)&ia;c[a>>2]=(c[2504+(b*960|0)>>2]^H)&ia^H;c[d>>2]=G^E;c[k>>2]=C^A;c[l>>2]=y^w;c[m>>2]=h^j;c[n>>2]=_^$;c[o>>2]=aa^ba;c[p>>2]=ca^da;c[q>>2]=ea^fa;c[r>>2]=ga^ha;ha=c[e>>2]|0;ga=c[f>>2]|0;fa=c[W>>2]|0;ea=c[U>>2]|0;da=c[S>>2]|0;ca=c[Q>>2]|0;ba=c[O>>2]|0;aa=c[M>>2]|0;$=c[K>>2]|0;_=c[I>>2]|0;j=(c[2548+(b*960|0)>>2]^ga)&ia;h=(c[2552+(b*960|0)>>2]^fa)&ia;w=(c[2556+(b*960|0)>>2]^ea)&ia;y=(c[2560+(b*960|0)>>2]^da)&ia;A=(c[2564+(b*960|0)>>2]^ca)&ia;C=(c[2568+(b*960|0)>>2]^ba)&ia;E=(c[2572+(b*960|0)>>2]^aa)&ia;G=(c[2576+(b*960|0)>>2]^$)&ia;H=(c[2580+(b*960|0)>>2]^_)&ia;ha=(c[2544+(b*960|0)>>2]^ha)&ia^ha;c[e>>2]=ha;ga=j^ga;c[f>>2]=ga;fa=h^fa;c[W>>2]=fa;ea=w^ea;c[U>>2]=ea;da=y^da;c[S>>2]=da;ca=A^ca;c[Q>>2]=ca;ba=C^ba;c[O>>2]=ba;aa=E^aa;c[M>>2]=aa;$=G^$;c[K>>2]=$;_=H^_;c[I>>2]=_;H=c[g>>2]|0;G=c[F>>2]|0;E=c[D>>2]|0;C=c[B>>2]|0;A=c[z>>2]|0;y=c[x>>2]|0;w=c[v>>2]|0;h=c[i>>2]|0;j=c[t>>2]|0;Z=c[u>>2]|0;J=(c[2588+(b*960|0)>>2]^G)&ia;L=(c[2592+(b*960|0)>>2]^E)&ia;N=(c[2596+(b*960|0)>>2]^C)&ia;P=(c[2600+(b*960|0)>>2]^A)&ia;R=(c[2604+(b*960|0)>>2]^y)&ia;T=(c[2608+(b*960|0)>>2]^w)&ia;V=(c[2612+(b*960|0)>>2]^h)&ia;X=(c[2616+(b*960|0)>>2]^j)&ia;Y=(c[2620+(b*960|0)>>2]^Z)&ia;H=(c[2584+(b*960|0)>>2]^H)&ia^H;c[g>>2]=H;G=J^G;c[F>>2]=G;E=L^E;c[D>>2]=E;C=N^C;c[B>>2]=C;A=P^A;c[z>>2]=A;y=R^y;c[x>>2]=y;w=T^w;c[v>>2]=w;h=V^h;c[i>>2]=h;j=X^j;c[t>>2]=j;b=Y^Z;c[u>>2]=b;Z=c[a>>2]|0;Y=c[d>>2]|0;X=c[k>>2]|0;V=c[l>>2]|0;T=c[m>>2]|0;R=c[n>>2]|0;P=c[o>>2]|0;N=c[p>>2]|0;L=c[q>>2]|0;J=c[r>>2]|0;c[a>>2]=(ha^Z)&s^Z;c[d>>2]=(ga^Y)&s^Y;c[k>>2]=(fa^X)&s^X;c[l>>2]=(ea^V)&s^V;c[m>>2]=(da^T)&s^T;c[n>>2]=(ca^R)&s^R;c[o>>2]=(ba^P)&s^P;c[p>>2]=(aa^N)&s^N;c[q>>2]=($^L)&s^L;c[r>>2]=(_^J)&s^J;d=c[e>>2]|0;a=c[f>>2]|0;r=c[W>>2]|0;q=c[U>>2]|0;p=c[S>>2]|0;o=c[Q>>2]|0;n=c[O>>2]|0;m=c[M>>2]|0;l=c[K>>2]|0;k=c[I>>2]|0;c[e>>2]=(Z^d)&s^d;c[f>>2]=(Y^a)&s^a;c[W>>2]=(X^r)&s^r;c[U>>2]=(V^q)&s^q;c[S>>2]=(T^p)&s^p;c[Q>>2]=(R^o)&s^o;c[O>>2]=(P^n)&s^n;c[M>>2]=(N^m)&s^m;c[K>>2]=(L^l)&s^l;c[I>>2]=(J^k)&s^k;f=c[g>>2]|0;k=c[F>>2]|0;l=c[D>>2]|0;m=c[B>>2]|0;n=c[z>>2]|0;o=c[x>>2]|0;p=c[v>>2]|0;q=c[i>>2]|0;r=c[t>>2]|0;a=c[u>>2]|0;c[g>>2]=(f^0-H)&s^f;c[F>>2]=(k^0-G)&s^k;c[D>>2]=(l^0-E)&s^l;c[B>>2]=(m^0-C)&s^m;c[z>>2]=(n^0-A)&s^n;c[x>>2]=(o^0-y)&s^o;c[v>>2]=(p^0-w)&s^p;c[i>>2]=(q^0-h)&s^q;c[t>>2]=(r^0-j)&s^r;c[u>>2]=(a^0-b)&s^a;return}function Gc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;e=i=i+63&-64;i=i+240|0;d=e+80|0;f=e+40|0;if(Ac(d,b)|0){f=-1;i=g;return f|0}y=e+4|0;c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;c[y+16>>2]=0;c[y+20>>2]=0;c[y+24>>2]=0;c[y+28>>2]=0;q=d+40|0;p=d+44|0;n=d+48|0;m=d+52|0;l=d+56|0;k=d+60|0;j=d+64|0;h=d+68|0;r=d+72|0;b=d+76|0;z=0-(c[p>>2]|0)|0;x=0-(c[n>>2]|0)|0;w=0-(c[m>>2]|0)|0;v=0-(c[l>>2]|0)|0;u=0-(c[k>>2]|0)|0;t=0-(c[j>>2]|0)|0;s=0-(c[h>>2]|0)|0;d=0-(c[r>>2]|0)|0;o=0-(c[b>>2]|0)|0;c[e>>2]=1-(c[q>>2]|0);c[y>>2]=z;c[e+8>>2]=x;c[e+12>>2]=w;c[e+16>>2]=v;c[e+20>>2]=u;c[e+24>>2]=t;c[e+28>>2]=s;c[e+32>>2]=d;c[e+36>>2]=o;vc(e,e);o=f+4|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;c[o+24>>2]=0;c[o+28>>2]=0;p=c[p>>2]|0;n=c[n>>2]|0;m=c[m>>2]|0;l=c[l>>2]|0;k=c[k>>2]|0;j=c[j>>2]|0;h=c[h>>2]|0;d=c[r>>2]|0;b=c[b>>2]|0;c[f>>2]=(c[q>>2]|0)+1;c[o>>2]=p;c[f+8>>2]=n;c[f+12>>2]=m;c[f+16>>2]=l;c[f+20>>2]=k;c[f+24>>2]=j;c[f+28>>2]=h;c[f+32>>2]=d;c[f+36>>2]=b;wc(f,f,e);yc(a,f);f=0;i=g;return f|0}function Hc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;k=i;g=i=i+63&-64;i=i+272|0;h=g;g=g+208|0;j=h;c[j>>2]=-205731576;c[j+4>>2]=1779033703;j=h+8|0;c[j>>2]=-2067093701;c[j+4>>2]=-1150833019;j=h+16|0;c[j>>2]=-23791573;c[j+4>>2]=1013904242;j=h+24|0;c[j>>2]=1595750129;c[j+4>>2]=-1521486534;j=h+32|0;c[j>>2]=-1377402159;c[j+4>>2]=1359893119;j=h+40|0;c[j>>2]=725511199;c[j+4>>2]=-1694144372;j=h+48|0;c[j>>2]=-79577749;c[j+4>>2]=528734635;j=h+56|0;c[j>>2]=327033209;c[j+4>>2]=1541459225;j=h+72|0;c[j>>2]=256;c[j+4>>2]=0;j=h+64|0;c[j>>2]=0;c[j+4>>2]=0;j=h+80|0;e=e+0|0;f=j+32|0;do{a[j>>0]=a[e>>0]|0;j=j+1|0;e=e+1|0}while((j|0)<(f|0));Bb(h,g);a[g>>0]=(d[g>>0]|0)&248;j=g+31|0;a[j>>0]=(d[j>>0]|0)&63|64;j=b+0|0;e=g+0|0;f=j+32|0;do{a[j>>0]=a[e>>0]|0;j=j+1|0;e=e+1|0}while((j|0)<(f|0));i=k;return 0}function Ic(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0;Qa=i;k=i=i+63&-64;i=i+3024|0;Ma=k+488|0;Na=k+904|0;Oa=k+608|0;j=k+864|0;Ja=k+1320|0;Ka=k+2600|0;La=k+2760|0;q=k+1160|0;m=k;o=k+2920|0;Pa=k+2984|0;p=k+208|0;k=k+368|0;if((d[b+63>>0]|0)>31){b=-1;i=Qa;return b|0}if(!(Ac(p,h)|0)){l=0;n=0}else{b=-1;i=Qa;return b|0}do{l=a[h+n>>0]|l;n=n+1|0}while((n|0)!=32);if(!(l<<24>>24)){b=-1;i=Qa;return b|0}Ia=m+64|0;c[Ia+0>>2]=0;c[Ia+4>>2]=0;c[Ia+8>>2]=0;c[Ia+12>>2]=0;Ia=m;c[Ia>>2]=-205731576;c[Ia+4>>2]=1779033703;Ia=m+8|0;c[Ia>>2]=-2067093701;c[Ia+4>>2]=-1150833019;Ia=m+16|0;c[Ia>>2]=-23791573;c[Ia+4>>2]=1013904242;Ia=m+24|0;c[Ia>>2]=1595750129;c[Ia+4>>2]=-1521486534;Ia=m+32|0;c[Ia>>2]=-1377402159;c[Ia+4>>2]=1359893119;Ia=m+40|0;c[Ia>>2]=725511199;c[Ia+4>>2]=-1694144372;Ia=m+48|0;c[Ia>>2]=-79577749;c[Ia+4>>2]=528734635;Ia=m+56|0;c[Ia>>2]=327033209;c[Ia+4>>2]=1541459225;Ab(m,b,32,0);Ab(m,h,32,0);Ab(m,e,f,g);Bb(m,o);Jc(o);f=0;do{a[Na+f>>0]=(d[o+(f>>3)>>0]|0)>>>(f&7)&1;f=f+1|0}while((f|0)!=256);m=0;while(1){o=Na+m|0;a:do if(a[o>>0]|0){n=1;do{g=n+m|0;if((g|0)>=256)break a;h=Na+g|0;f=a[h>>0]|0;b:do if(f<<24>>24){e=a[o>>0]|0;l=f<<24>>24<<n;f=e+l|0;if((f|0)<16){a[o>>0]=f;a[h>>0]=0;break}f=e-l|0;if((f|0)<=-16)break a;a[o>>0]=f;while(1){f=Na+g|0;if(!(a[f>>0]|0))break;a[f>>0]=0;g=g+1|0;if((g|0)>=256)break b}a[f>>0]=1}while(0);n=n+1|0}while((n|0)<7)}while(0);m=m+1|0;if((m|0)==256){f=0;break}}do{a[Oa+f>>0]=(d[b+((f>>3)+32)>>0]|0)>>>(f&7)&1;f=f+1|0}while((f|0)!=256);m=0;do{o=Oa+m|0;c:do if(a[o>>0]|0){n=1;do{g=n+m|0;if((g|0)>=256)break c;h=Oa+g|0;f=a[h>>0]|0;d:do if(f<<24>>24){e=a[o>>0]|0;f=f<<24>>24<<n;l=e+f|0;if((l|0)<16){a[o>>0]=l;a[h>>0]=0;break}f=e-f|0;if((f|0)<=-16)break c;a[o>>0]=f;while(1){f=Oa+g|0;if(!(a[f>>0]|0))break;a[f>>0]=0;g=g+1|0;if((g|0)>=256)break d}a[f>>0]=1}while(0);n=n+1|0}while((n|0)<7)}while(0);m=m+1|0}while((m|0)!=256);Dc(Ja,p);Ia=c[p+4>>2]|0;e=c[p+8>>2]|0;h=c[p+12>>2]|0;Ga=c[p+16>>2]|0;Fa=c[p+20>>2]|0;Ea=c[p+24>>2]|0;Da=c[p+28>>2]|0;Ca=c[p+32>>2]|0;Ba=c[p+36>>2]|0;c[Ma>>2]=c[p>>2];c[Ma+4>>2]=Ia;c[Ma+8>>2]=e;c[Ma+12>>2]=h;c[Ma+16>>2]=Ga;c[Ma+20>>2]=Fa;c[Ma+24>>2]=Ea;c[Ma+28>>2]=Da;c[Ma+32>>2]=Ca;c[Ma+36>>2]=Ba;Ba=c[p+44>>2]|0;Ca=c[p+48>>2]|0;Da=c[p+52>>2]|0;Ea=c[p+56>>2]|0;Fa=c[p+60>>2]|0;Ga=c[p+64>>2]|0;h=c[p+68>>2]|0;e=c[p+72>>2]|0;Ia=c[p+76>>2]|0;c[Ma+40>>2]=c[p+40>>2];c[Ma+44>>2]=Ba;c[Ma+48>>2]=Ca;c[Ma+52>>2]=Da;c[Ma+56>>2]=Ea;c[Ma+60>>2]=Fa;c[Ma+64>>2]=Ga;c[Ma+68>>2]=h;c[Ma+72>>2]=e;c[Ma+76>>2]=Ia;Ia=c[p+84>>2]|0;e=c[p+88>>2]|0;h=c[p+92>>2]|0;Ga=c[p+96>>2]|0;Fa=c[p+100>>2]|0;Ea=c[p+104>>2]|0;Da=c[p+108>>2]|0;Ca=c[p+112>>2]|0;Ba=c[p+116>>2]|0;c[Ma+80>>2]=c[p+80>>2];c[Ma+84>>2]=Ia;c[Ma+88>>2]=e;c[Ma+92>>2]=h;c[Ma+96>>2]=Ga;c[Ma+100>>2]=Fa;c[Ma+104>>2]=Ea;c[Ma+108>>2]=Da;c[Ma+112>>2]=Ca;c[Ma+116>>2]=Ba;Cc(Ka,Ma);Ba=Ka+120|0;wc(q,Ka,Ba);Ca=Ka+40|0;Da=Ka+80|0;wc(q+40|0,Ca,Da);wc(q+80|0,Da,Ba);wc(q+120|0,Ka,Ca);zc(Ka,q,Ja);wc(La,Ka,Ba);Ea=La+40|0;wc(Ea,Ca,Da);Fa=La+80|0;wc(Fa,Da,Ba);Ga=La+120|0;wc(Ga,Ka,Ca);h=Ja+160|0;Dc(h,La);zc(Ka,q,h);wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);h=Ja+320|0;Dc(h,La);zc(Ka,q,h);wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);h=Ja+480|0;Dc(h,La);zc(Ka,q,h);wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);h=Ja+640|0;Dc(h,La);zc(Ka,q,h);wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);h=Ja+800|0;Dc(h,La);zc(Ka,q,h);wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);h=Ja+960|0;Dc(h,La);zc(Ka,q,h);wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);Dc(Ja+1120|0,La);h=k+0|0;e=h+40|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(e|0));Ha=k+40|0;c[Ha>>2]=1;h=k+44|0;e=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(e|0));Ia=k+80|0;c[Ia>>2]=1;h=k+84|0;e=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(e|0));f=255;while(1){q=a[Na+f>>0]|0;if(q<<24>>24){o=35;break}if(a[Oa+f>>0]|0){o=35;break}f=f+-1|0;if((f|0)<=-1){o=47;break}}e:do if((o|0)==35){p=La+44|0;o=La+48|0;h=La+52|0;e=La+56|0;n=La+60|0;m=La+64|0;l=La+68|0;g=La+72|0;r=La+76|0;s=La+4|0;t=La+8|0;u=La+12|0;v=La+16|0;w=La+20|0;x=La+24|0;y=La+28|0;z=La+32|0;A=La+36|0;B=Ka+4|0;C=Ka+8|0;D=Ka+12|0;E=Ka+16|0;F=Ka+20|0;G=Ka+24|0;H=Ka+28|0;I=Ka+32|0;J=Ka+36|0;K=Ka+44|0;L=Ka+48|0;M=Ka+52|0;N=Ka+56|0;O=Ka+60|0;P=Ka+64|0;Q=Ka+68|0;R=Ka+72|0;S=Ka+76|0;T=La+84|0;U=La+88|0;V=La+92|0;W=La+96|0;X=La+100|0;Y=La+104|0;Z=La+108|0;_=La+112|0;$=La+116|0;aa=j+4|0;ba=j+8|0;ca=j+12|0;da=j+16|0;ea=j+20|0;fa=j+24|0;ga=j+28|0;ha=j+32|0;ia=j+36|0;ja=Ka+84|0;ka=Ka+88|0;la=Ka+92|0;ma=Ka+96|0;na=Ka+100|0;oa=Ka+104|0;pa=Ka+108|0;qa=Ka+112|0;ra=Ka+116|0;sa=Ka+124|0;ta=Ka+128|0;ua=Ka+132|0;va=Ka+136|0;wa=Ka+140|0;xa=Ka+144|0;ya=Ka+148|0;za=Ka+152|0;Aa=Ka+156|0;while(1){Cc(Ka,k);if(q<<24>>24<=0){if(q<<24>>24<0){wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);hb=(q<<24>>24|0)/-2|0;rb=c[Ea>>2]|0;Xa=c[p>>2]|0;Ta=c[o>>2]|0;ib=c[h>>2]|0;mb=c[e>>2]|0;qb=c[n>>2]|0;$a=c[m>>2]|0;bb=c[l>>2]|0;db=c[g>>2]|0;fb=c[r>>2]|0;Za=c[La>>2]|0;Va=c[s>>2]|0;Ra=c[t>>2]|0;kb=c[u>>2]|0;ob=c[v>>2]|0;_a=c[w>>2]|0;ab=c[x>>2]|0;cb=c[y>>2]|0;eb=c[z>>2]|0;gb=c[A>>2]|0;c[Ka>>2]=Za+rb;c[B>>2]=Va+Xa;c[C>>2]=Ra+Ta;c[D>>2]=kb+ib;c[E>>2]=ob+mb;c[F>>2]=_a+qb;c[G>>2]=ab+$a;c[H>>2]=cb+bb;c[I>>2]=eb+db;c[J>>2]=gb+fb;c[Ca>>2]=rb-Za;c[K>>2]=Xa-Va;c[L>>2]=Ta-Ra;c[M>>2]=ib-kb;c[N>>2]=mb-ob;c[O>>2]=qb-_a;c[P>>2]=$a-ab;c[Q>>2]=bb-cb;c[R>>2]=db-eb;c[S>>2]=fb-gb;wc(Da,Ka,Ja+(hb*160|0)+40|0);wc(Ca,Ca,Ja+(hb*160|0)|0);wc(Ba,Ja+(hb*160|0)+120|0,Ga);wc(Ka,Fa,Ja+(hb*160|0)+80|0);hb=c[Ka>>2]<<1;gb=c[B>>2]<<1;fb=c[C>>2]<<1;eb=c[D>>2]<<1;db=c[E>>2]<<1;cb=c[F>>2]<<1;bb=c[G>>2]<<1;ab=c[H>>2]<<1;$a=c[I>>2]<<1;_a=c[J>>2]<<1;c[j>>2]=hb;c[aa>>2]=gb;c[ba>>2]=fb;c[ca>>2]=eb;c[da>>2]=db;c[ea>>2]=cb;c[fa>>2]=bb;c[ga>>2]=ab;c[ha>>2]=$a;c[ia>>2]=_a;qb=c[Da>>2]|0;ob=c[ja>>2]|0;mb=c[ka>>2]|0;kb=c[la>>2]|0;ib=c[ma>>2]|0;Ra=c[na>>2]|0;Ta=c[oa>>2]|0;Va=c[pa>>2]|0;Xa=c[qa>>2]|0;Za=c[ra>>2]|0;rb=c[Ca>>2]|0;pb=c[K>>2]|0;nb=c[L>>2]|0;lb=c[M>>2]|0;jb=c[N>>2]|0;q=c[O>>2]|0;Sa=c[P>>2]|0;Ua=c[Q>>2]|0;Wa=c[R>>2]|0;Ya=c[S>>2]|0;c[Ka>>2]=qb-rb;c[B>>2]=ob-pb;c[C>>2]=mb-nb;c[D>>2]=kb-lb;c[E>>2]=ib-jb;c[F>>2]=Ra-q;c[G>>2]=Ta-Sa;c[H>>2]=Va-Ua;c[I>>2]=Xa-Wa;c[J>>2]=Za-Ya;c[Ca>>2]=rb+qb;c[K>>2]=pb+ob;c[L>>2]=nb+mb;c[M>>2]=lb+kb;c[N>>2]=jb+ib;c[O>>2]=q+Ra;c[P>>2]=Sa+Ta;c[Q>>2]=Ua+Va;c[R>>2]=Wa+Xa;c[S>>2]=Ya+Za;Za=c[Ba>>2]|0;Ya=c[sa>>2]|0;Xa=c[ta>>2]|0;Wa=c[ua>>2]|0;Va=c[va>>2]|0;Ua=c[wa>>2]|0;Ta=c[xa>>2]|0;Sa=c[ya>>2]|0;Ra=c[za>>2]|0;q=c[Aa>>2]|0;c[Da>>2]=hb-Za;c[ja>>2]=gb-Ya;c[ka>>2]=fb-Xa;c[la>>2]=eb-Wa;c[ma>>2]=db-Va;c[na>>2]=cb-Ua;c[oa>>2]=bb-Ta;c[pa>>2]=ab-Sa;c[qa>>2]=$a-Ra;c[ra>>2]=_a-q;Ya=Ya+(c[aa>>2]|0)|0;Xa=Xa+(c[ba>>2]|0)|0;Wa=Wa+(c[ca>>2]|0)|0;Va=Va+(c[da>>2]|0)|0;Ua=Ua+(c[ea>>2]|0)|0;Ta=Ta+(c[fa>>2]|0)|0;Sa=Sa+(c[ga>>2]|0)|0;Ra=Ra+(c[ha>>2]|0)|0;q=q+(c[ia>>2]|0)|0;c[Ba>>2]=Za+(c[j>>2]|0);c[sa>>2]=Ya;c[ta>>2]=Xa;c[ua>>2]=Wa;c[va>>2]=Va;c[wa>>2]=Ua;c[xa>>2]=Ta;c[ya>>2]=Sa;c[za>>2]=Ra;c[Aa>>2]=q}}else{wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);zc(Ka,La,Ja+(((q<<24>>24|0)/2|0)*160|0)|0)}q=a[Oa+f>>0]|0;if(q<<24>>24<=0){if(q<<24>>24<0){wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);_a=(q<<24>>24|0)/-2|0;q=c[Ea>>2]|0;kb=c[p>>2]|0;ob=c[o>>2]|0;Za=c[h>>2]|0;Va=c[e>>2]|0;Ra=c[n>>2]|0;gb=c[m>>2]|0;eb=c[l>>2]|0;cb=c[g>>2]|0;ab=c[r>>2]|0;ib=c[La>>2]|0;mb=c[s>>2]|0;qb=c[t>>2]|0;Xa=c[u>>2]|0;Ta=c[v>>2]|0;hb=c[w>>2]|0;fb=c[x>>2]|0;db=c[y>>2]|0;bb=c[z>>2]|0;$a=c[A>>2]|0;c[Ka>>2]=ib+q;c[B>>2]=mb+kb;c[C>>2]=qb+ob;c[D>>2]=Xa+Za;c[E>>2]=Ta+Va;c[F>>2]=hb+Ra;c[G>>2]=fb+gb;c[H>>2]=db+eb;c[I>>2]=bb+cb;c[J>>2]=$a+ab;c[Ca>>2]=q-ib;c[K>>2]=kb-mb;c[L>>2]=ob-qb;c[M>>2]=Za-Xa;c[N>>2]=Va-Ta;c[O>>2]=Ra-hb;c[P>>2]=gb-fb;c[Q>>2]=eb-db;c[R>>2]=cb-bb;c[S>>2]=ab-$a;wc(Da,Ka,624+(_a*120|0)|0);wc(Ca,Ca,584+(_a*120|0)|0);wc(Ba,664+(_a*120|0)|0,Ga);_a=c[Fa>>2]<<1;$a=c[T>>2]<<1;ab=c[U>>2]<<1;bb=c[V>>2]<<1;cb=c[W>>2]<<1;db=c[X>>2]<<1;eb=c[Y>>2]<<1;fb=c[Z>>2]<<1;gb=c[_>>2]<<1;hb=c[$>>2]<<1;c[j>>2]=_a;c[aa>>2]=$a;c[ba>>2]=ab;c[ca>>2]=bb;c[da>>2]=cb;c[ea>>2]=db;c[fa>>2]=eb;c[ga>>2]=fb;c[ha>>2]=gb;c[ia>>2]=hb;Ra=c[Da>>2]|0;Ta=c[ja>>2]|0;Va=c[ka>>2]|0;Xa=c[la>>2]|0;Za=c[ma>>2]|0;qb=c[na>>2]|0;ob=c[oa>>2]|0;mb=c[pa>>2]|0;kb=c[qa>>2]|0;ib=c[ra>>2]|0;q=c[Ca>>2]|0;Sa=c[K>>2]|0;Ua=c[L>>2]|0;Wa=c[M>>2]|0;Ya=c[N>>2]|0;rb=c[O>>2]|0;pb=c[P>>2]|0;nb=c[Q>>2]|0;lb=c[R>>2]|0;jb=c[S>>2]|0;c[Ka>>2]=Ra-q;c[B>>2]=Ta-Sa;c[C>>2]=Va-Ua;c[D>>2]=Xa-Wa;c[E>>2]=Za-Ya;c[F>>2]=qb-rb;c[G>>2]=ob-pb;c[H>>2]=mb-nb;c[I>>2]=kb-lb;c[J>>2]=ib-jb;c[Ca>>2]=q+Ra;c[K>>2]=Sa+Ta;c[L>>2]=Ua+Va;c[M>>2]=Wa+Xa;c[N>>2]=Ya+Za;c[O>>2]=rb+qb;c[P>>2]=pb+ob;c[Q>>2]=nb+mb;c[R>>2]=lb+kb;c[S>>2]=jb+ib;ib=c[Ba>>2]|0;jb=c[sa>>2]|0;kb=c[ta>>2]|0;lb=c[ua>>2]|0;mb=c[va>>2]|0;nb=c[wa>>2]|0;ob=c[xa>>2]|0;pb=c[ya>>2]|0;qb=c[za>>2]|0;rb=c[Aa>>2]|0;c[Da>>2]=_a-ib;c[ja>>2]=$a-jb;c[ka>>2]=ab-kb;c[la>>2]=bb-lb;c[ma>>2]=cb-mb;c[na>>2]=db-nb;c[oa>>2]=eb-ob;c[pa>>2]=fb-pb;c[qa>>2]=gb-qb;c[ra>>2]=hb-rb;jb=jb+(c[aa>>2]|0)|0;kb=kb+(c[ba>>2]|0)|0;lb=lb+(c[ca>>2]|0)|0;mb=mb+(c[da>>2]|0)|0;nb=nb+(c[ea>>2]|0)|0;ob=ob+(c[fa>>2]|0)|0;pb=pb+(c[ga>>2]|0)|0;qb=qb+(c[ha>>2]|0)|0;rb=rb+(c[ia>>2]|0)|0;c[Ba>>2]=ib+(c[j>>2]|0);c[sa>>2]=jb;c[ta>>2]=kb;c[ua>>2]=lb;c[va>>2]=mb;c[wa>>2]=nb;c[xa>>2]=ob;c[ya>>2]=pb;c[za>>2]=qb;c[Aa>>2]=rb}}else{wc(La,Ka,Ba);wc(Ea,Ca,Da);wc(Fa,Da,Ba);wc(Ga,Ka,Ca);Bc(Ka,La,584+(((q<<24>>24|0)/2|0)*120|0)|0)}wc(k,Ka,Ba);wc(Ha,Ca,Da);wc(Ia,Da,Ba);f=f+-1|0;if((f|0)<=-1)break e;q=a[Na+f>>0]|0}}while(0);vc(j,Ia);wc(Na,k,j);wc(Oa,Ha,j);yc(Pa,Oa);yc(Ma,Na);g=Pa+31|0;a[g>>0]=d[g>>0]^d[Ma>>0]<<7;g=Pc(Pa,b)|0;f=(Pa|0)==(b|0);j=0;k=0;do{j=a[Pa+k>>0]^a[b+k>>0]|j;k=k+1|0}while((k|0)!=32);rb=(f?-1:g)|(((j&255)+511|0)>>>8&1)+-1;i=Qa;return rb|0}function Jc(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0;ea=b+1|0;ba=b+2|0;ja=a[ba>>0]|0;j=d[b>>0]|0;ia=qd(d[ea>>0]|0|0,0,8)|0;na=C;ja=ja&255;V=qd(ja|0,0,16)|0;aa=b+3|0;n=qd(d[aa>>0]|0|0,0,8)|0;e=C;$=b+4|0;U=qd(d[$>>0]|0|0,0,16)|0;e=e|C;Y=b+5|0;N=d[Y>>0]|0;X=qd(N|0,0,24)|0;e=pd(n|ja|U|X|0,e|C|0,5)|0;X=b+6|0;U=b+7|0;ja=a[U>>0]|0;n=qd(d[X>>0]|0|0,0,8)|0;M=C;ja=ja&255;T=qd(ja|0,0,16)|0;M=pd(n|N|T|0,M|C|0,2)|0;T=b+8|0;N=qd(d[T>>0]|0|0,0,8)|0;n=C;S=b+9|0;fa=qd(d[S>>0]|0|0,0,16)|0;n=n|C;P=b+10|0;L=d[P>>0]|0;O=qd(L|0,0,24)|0;n=pd(N|ja|fa|O|0,n|C|0,7)|0;O=b+11|0;fa=qd(d[O>>0]|0|0,0,8)|0;ja=C;N=b+12|0;G=qd(d[N>>0]|0|0,0,16)|0;ja=ja|C;K=b+13|0;u=d[K>>0]|0;J=qd(u|0,0,24)|0;ja=pd(fa|L|G|J|0,ja|C|0,4)|0;J=b+14|0;G=b+15|0;L=a[G>>0]|0;fa=qd(d[J>>0]|0|0,0,8)|0;ga=C;L=L&255;F=qd(L|0,0,16)|0;ga=pd(fa|u|F|0,ga|C|0,1)|0;F=b+16|0;u=qd(d[F>>0]|0|0,0,8)|0;fa=C;E=b+17|0;w=qd(d[E>>0]|0|0,0,16)|0;fa=fa|C;A=b+18|0;v=d[A>>0]|0;z=qd(v|0,0,24)|0;fa=pd(u|L|w|z|0,fa|C|0,6)|0;z=b+19|0;w=b+20|0;L=a[w>>0]|0;u=qd(d[z>>0]|0|0,0,8)|0;W=C;L=qd(L&255|0,0,16)|0;W=pd(u|v|L|0,W|C|0,3)|0;L=C;v=b+21|0;u=b+22|0;r=b+23|0;x=a[r>>0]|0;la=d[v>>0]|0;xa=qd(d[u>>0]|0|0,0,8)|0;ra=C;x=x&255;H=qd(x|0,0,16)|0;q=b+24|0;Z=qd(d[q>>0]|0|0,0,8)|0;D=C;p=b+25|0;i=qd(d[p>>0]|0|0,0,16)|0;D=D|C;m=b+26|0;oa=d[m>>0]|0;l=qd(oa|0,0,24)|0;D=pd(Z|x|i|l|0,D|C|0,5)|0;l=b+27|0;i=b+28|0;x=a[i>>0]|0;Z=qd(d[l>>0]|0|0,0,8)|0;B=C;x=x&255;h=qd(x|0,0,16)|0;B=pd(Z|oa|h|0,B|C|0,2)|0;h=b+29|0;oa=qd(d[h>>0]|0|0,0,8)|0;Z=C;g=b+30|0;s=qd(d[g>>0]|0|0,0,16)|0;Z=Z|C;c=b+31|0;t=d[c>>0]|0;_=qd(t|0,0,24)|0;Z=pd(oa|x|s|_|0,Z|C|0,7)|0;_=qd(d[b+32>>0]|0|0,0,8)|0;s=C;x=qd(d[b+33>>0]|0|0,0,16)|0;s=s|C;oa=d[b+34>>0]|0;da=qd(oa|0,0,24)|0;s=pd(_|t|x|da|0,s|C|0,4)|0;da=a[b+36>>0]|0;x=qd(d[b+35>>0]|0|0,0,8)|0;t=C;da=da&255;_=qd(da|0,0,16)|0;t=pd(x|oa|_|0,t|C|0,1)|0;_=qd(d[b+37>>0]|0|0,0,8)|0;oa=C;x=qd(d[b+38>>0]|0|0,0,16)|0;oa=oa|C;R=d[b+39>>0]|0;va=qd(R|0,0,24)|0;oa=pd(_|da|x|va|0,oa|C|0,6)|0;va=a[b+41>>0]|0;x=qd(d[b+40>>0]|0|0,0,8)|0;da=C;va=qd(va&255|0,0,16)|0;da=pd(x|R|va|0,da|C|0,3)|0;va=C;R=a[b+44>>0]|0;x=d[b+42>>0]|0;_=qd(d[b+43>>0]|0|0,0,8)|0;ma=C;R=R&255;ta=qd(R|0,0,16)|0;ha=qd(d[b+45>>0]|0|0,0,8)|0;pa=C;ca=qd(d[b+46>>0]|0|0,0,16)|0;pa=pa|C;I=d[b+47>>0]|0;sa=qd(I|0,0,24)|0;pa=pd(ha|R|ca|sa|0,pa|C|0,5)|0;sa=a[b+49>>0]|0;ca=qd(d[b+48>>0]|0|0,0,8)|0;R=C;sa=sa&255;ha=qd(sa|0,0,16)|0;R=pd(ca|I|ha|0,R|C|0,2)|0;R=R&2097151;ha=qd(d[b+50>>0]|0|0,0,8)|0;I=C;ca=qd(d[b+51>>0]|0|0,0,16)|0;I=I|C;qa=d[b+52>>0]|0;ka=qd(qa|0,0,24)|0;I=pd(ha|sa|ca|ka|0,I|C|0,7)|0;I=I&2097151;ka=qd(d[b+53>>0]|0|0,0,8)|0;ca=C;sa=qd(d[b+54>>0]|0|0,0,16)|0;ca=ca|C;ha=d[b+55>>0]|0;k=qd(ha|0,0,24)|0;ca=pd(ka|qa|sa|k|0,ca|C|0,4)|0;ca=ca&2097151;k=a[b+57>>0]|0;sa=qd(d[b+56>>0]|0|0,0,8)|0;qa=C;k=k&255;ka=qd(k|0,0,16)|0;qa=pd(sa|ha|ka|0,qa|C|0,1)|0;qa=qa&2097151;ka=qd(d[b+58>>0]|0|0,0,8)|0;ha=C;sa=qd(d[b+59>>0]|0|0,0,16)|0;ha=ha|C;ua=d[b+60>>0]|0;y=qd(ua|0,0,24)|0;ha=pd(ka|k|sa|y|0,ha|C|0,6)|0;ha=ha&2097151;y=qd(d[b+61>>0]|0|0,0,8)|0;sa=C;k=qd(d[b+62>>0]|0|0,0,16)|0;sa=sa|C;ka=qd(d[b+63>>0]|0|0,0,24)|0;sa=pd(y|ua|k|ka|0,sa|C|0,3)|0;ka=C;k=yd(sa|0,ka|0,666643,0)|0;k=nd(Z&2097151|0,0,k|0,C|0)|0;Z=C;ua=yd(sa|0,ka|0,470296,0)|0;ua=nd(s&2097151|0,0,ua|0,C|0)|0;s=C;y=yd(sa|0,ka|0,654183,0)|0;y=nd(t&2097151|0,0,y|0,C|0)|0;t=C;wa=yd(sa|0,ka|0,-997805,-1)|0;wa=nd(oa&2097151|0,0,wa|0,C|0)|0;oa=C;o=yd(sa|0,ka|0,136657,0)|0;o=nd(da|0,va|0,o|0,C|0)|0;va=C;ka=yd(sa|0,ka|0,-683901,-1)|0;ka=nd(_|x|ta&2031616|0,ma|0,ka|0,C|0)|0;ma=C;ta=yd(ha|0,0,666643,0)|0;ta=nd(B&2097151|0,0,ta|0,C|0)|0;B=C;x=yd(ha|0,0,470296,0)|0;Z=nd(x|0,C|0,k|0,Z|0)|0;k=C;x=yd(ha|0,0,654183,0)|0;s=nd(x|0,C|0,ua|0,s|0)|0;ua=C;x=yd(ha|0,0,-997805,-1)|0;t=nd(x|0,C|0,y|0,t|0)|0;y=C;x=yd(ha|0,0,136657,0)|0;oa=nd(x|0,C|0,wa|0,oa|0)|0;wa=C;ha=yd(ha|0,0,-683901,-1)|0;ha=nd(o|0,va|0,ha|0,C|0)|0;va=C;o=yd(qa|0,0,666643,0)|0;o=nd(D&2097151|0,0,o|0,C|0)|0;D=C;x=yd(qa|0,0,470296,0)|0;B=nd(x|0,C|0,ta|0,B|0)|0;ta=C;x=yd(qa|0,0,654183,0)|0;k=nd(x|0,C|0,Z|0,k|0)|0;Z=C;x=yd(qa|0,0,-997805,-1)|0;ua=nd(x|0,C|0,s|0,ua|0)|0;s=C;x=yd(qa|0,0,136657,0)|0;y=nd(x|0,C|0,t|0,y|0)|0;t=C;qa=yd(qa|0,0,-683901,-1)|0;qa=nd(oa|0,wa|0,qa|0,C|0)|0;wa=C;oa=yd(ca|0,0,666643,0)|0;x=C;_=yd(ca|0,0,470296,0)|0;D=nd(_|0,C|0,o|0,D|0)|0;o=C;_=yd(ca|0,0,654183,0)|0;ta=nd(_|0,C|0,B|0,ta|0)|0;B=C;_=yd(ca|0,0,-997805,-1)|0;Z=nd(_|0,C|0,k|0,Z|0)|0;k=C;_=yd(ca|0,0,136657,0)|0;s=nd(_|0,C|0,ua|0,s|0)|0;ua=C;ca=yd(ca|0,0,-683901,-1)|0;ca=nd(y|0,t|0,ca|0,C|0)|0;t=C;y=yd(I|0,0,666643,0)|0;_=C;sa=yd(I|0,0,470296,0)|0;da=C;Q=yd(I|0,0,654183,0)|0;o=nd(Q|0,C|0,D|0,o|0)|0;D=C;Q=yd(I|0,0,-997805,-1)|0;Q=nd(ta|0,B|0,Q|0,C|0)|0;B=C;ta=yd(I|0,0,136657,0)|0;k=nd(ta|0,C|0,Z|0,k|0)|0;Z=C;I=yd(I|0,0,-683901,-1)|0;I=nd(s|0,ua|0,I|0,C|0)|0;ua=C;s=yd(R|0,0,666643,0)|0;fa=nd(s|0,C|0,fa&2097151|0,0)|0;s=C;ta=yd(R|0,0,470296,0)|0;f=C;ya=yd(R|0,0,654183,0)|0;ra=nd(ya|0,C|0,xa|la|H&2031616|0,ra|0)|0;da=nd(ra|0,C|0,sa|0,da|0)|0;x=nd(da|0,C|0,oa|0,x|0)|0;oa=C;da=yd(R|0,0,-997805,-1)|0;da=nd(o|0,D|0,da|0,C|0)|0;D=C;o=yd(R|0,0,136657,0)|0;o=nd(Q|0,B|0,o|0,C|0)|0;B=C;R=yd(R|0,0,-683901,-1)|0;R=nd(k|0,Z|0,R|0,C|0)|0;Z=C;k=nd(fa|0,s|0,1048576,0)|0;k=pd(k|0,C|0,21)|0;Q=C;L=nd(ta|0,f|0,W|0,L|0)|0;L=nd(L|0,C|0,k|0,Q|0)|0;_=nd(L|0,C|0,y|0,_|0)|0;y=C;Q=qd(k|0,Q|0,21)|0;Q=md(fa|0,s|0,Q|0,C|0)|0;s=C;fa=nd(x|0,oa|0,1048576,0)|0;fa=pd(fa|0,C|0,21)|0;k=C;D=nd(da|0,D|0,fa|0,k|0)|0;da=C;k=qd(fa|0,k|0,21)|0;k=md(x|0,oa|0,k|0,C|0)|0;oa=C;x=nd(o|0,B|0,1048576,0)|0;x=ld(x|0,C|0,21)|0;fa=C;Z=nd(R|0,Z|0,x|0,fa|0)|0;R=C;fa=qd(x|0,fa|0,21)|0;fa=md(o|0,B|0,fa|0,C|0)|0;B=C;o=nd(I|0,ua|0,1048576,0)|0;o=ld(o|0,C|0,21)|0;x=C;t=nd(o|0,x|0,ca|0,t|0)|0;ca=C;x=qd(o|0,x|0,21)|0;x=md(I|0,ua|0,x|0,C|0)|0;ua=C;I=nd(qa|0,wa|0,1048576,0)|0;I=ld(I|0,C|0,21)|0;o=C;va=nd(I|0,o|0,ha|0,va|0)|0;ha=C;o=qd(I|0,o|0,21)|0;o=md(qa|0,wa|0,o|0,C|0)|0;wa=C;qa=nd(ka|0,ma|0,1048576,0)|0;qa=ld(qa|0,C|0,21)|0;I=C;pa=nd(qa|0,I|0,pa&2097151|0,0)|0;L=C;I=qd(qa|0,I|0,21)|0;I=md(ka|0,ma|0,I|0,C|0)|0;ma=C;ka=nd(_|0,y|0,1048576,0)|0;ka=pd(ka|0,C|0,21)|0;qa=C;oa=nd(ka|0,qa|0,k|0,oa|0)|0;k=C;qa=qd(ka|0,qa|0,21)|0;qa=md(_|0,y|0,qa|0,C|0)|0;y=C;_=nd(D|0,da|0,1048576,0)|0;_=ld(_|0,C|0,21)|0;ka=C;B=nd(_|0,ka|0,fa|0,B|0)|0;fa=C;ka=qd(_|0,ka|0,21)|0;ka=md(D|0,da|0,ka|0,C|0)|0;da=C;D=nd(Z|0,R|0,1048576,0)|0;D=ld(D|0,C|0,21)|0;_=C;ua=nd(x|0,ua|0,D|0,_|0)|0;x=C;_=qd(D|0,_|0,21)|0;_=md(Z|0,R|0,_|0,C|0)|0;R=C;Z=nd(t|0,ca|0,1048576,0)|0;Z=ld(Z|0,C|0,21)|0;D=C;wa=nd(Z|0,D|0,o|0,wa|0)|0;o=C;D=qd(Z|0,D|0,21)|0;D=md(t|0,ca|0,D|0,C|0)|0;ca=C;t=nd(va|0,ha|0,1048576,0)|0;t=ld(t|0,C|0,21)|0;Z=C;ma=nd(t|0,Z|0,I|0,ma|0)|0;I=C;Z=qd(t|0,Z|0,21)|0;Z=md(va|0,ha|0,Z|0,C|0)|0;ha=C;va=yd(pa|0,L|0,666643,0)|0;va=nd(ga&2097151|0,0,va|0,C|0)|0;ga=C;t=yd(pa|0,L|0,470296,0)|0;t=nd(Q|0,s|0,t|0,C|0)|0;s=C;Q=yd(pa|0,L|0,654183,0)|0;Q=nd(qa|0,y|0,Q|0,C|0)|0;y=C;qa=yd(pa|0,L|0,-997805,-1)|0;qa=nd(oa|0,k|0,qa|0,C|0)|0;k=C;oa=yd(pa|0,L|0,136657,0)|0;oa=nd(ka|0,da|0,oa|0,C|0)|0;da=C;L=yd(pa|0,L|0,-683901,-1)|0;L=nd(B|0,fa|0,L|0,C|0)|0;fa=C;B=yd(ma|0,I|0,666643,0)|0;B=nd(ja&2097151|0,0,B|0,C|0)|0;ja=C;pa=yd(ma|0,I|0,470296,0)|0;pa=nd(va|0,ga|0,pa|0,C|0)|0;ga=C;va=yd(ma|0,I|0,654183,0)|0;va=nd(t|0,s|0,va|0,C|0)|0;s=C;t=yd(ma|0,I|0,-997805,-1)|0;t=nd(Q|0,y|0,t|0,C|0)|0;y=C;Q=yd(ma|0,I|0,136657,0)|0;Q=nd(qa|0,k|0,Q|0,C|0)|0;k=C;I=yd(ma|0,I|0,-683901,-1)|0;I=nd(oa|0,da|0,I|0,C|0)|0;da=C;oa=yd(Z|0,ha|0,666643,0)|0;oa=nd(n&2097151|0,0,oa|0,C|0)|0;n=C;ma=yd(Z|0,ha|0,470296,0)|0;ma=nd(B|0,ja|0,ma|0,C|0)|0;ja=C;B=yd(Z|0,ha|0,654183,0)|0;B=nd(pa|0,ga|0,B|0,C|0)|0;ga=C;pa=yd(Z|0,ha|0,-997805,-1)|0;pa=nd(va|0,s|0,pa|0,C|0)|0;s=C;va=yd(Z|0,ha|0,136657,0)|0;va=nd(t|0,y|0,va|0,C|0)|0;y=C;ha=yd(Z|0,ha|0,-683901,-1)|0;ha=nd(Q|0,k|0,ha|0,C|0)|0;k=C;Q=yd(wa|0,o|0,666643,0)|0;Z=C;t=yd(wa|0,o|0,470296,0)|0;t=nd(oa|0,n|0,t|0,C|0)|0;n=C;oa=yd(wa|0,o|0,654183,0)|0;oa=nd(ma|0,ja|0,oa|0,C|0)|0;ja=C;ma=yd(wa|0,o|0,-997805,-1)|0;ma=nd(B|0,ga|0,ma|0,C|0)|0;ga=C;B=yd(wa|0,o|0,136657,0)|0;B=nd(pa|0,s|0,B|0,C|0)|0;s=C;o=yd(wa|0,o|0,-683901,-1)|0;o=nd(va|0,y|0,o|0,C|0)|0;y=C;va=yd(D|0,ca|0,666643,0)|0;wa=C;pa=yd(D|0,ca|0,470296,0)|0;qa=C;ka=yd(D|0,ca|0,654183,0)|0;ka=nd(t|0,n|0,ka|0,C|0)|0;n=C;t=yd(D|0,ca|0,-997805,-1)|0;t=nd(oa|0,ja|0,t|0,C|0)|0;ja=C;oa=yd(D|0,ca|0,136657,0)|0;oa=nd(ma|0,ga|0,oa|0,C|0)|0;ga=C;ca=yd(D|0,ca|0,-683901,-1)|0;ca=nd(B|0,s|0,ca|0,C|0)|0;s=C;B=yd(ua|0,x|0,666643,0)|0;na=nd(B|0,C|0,ia|j|V&2031616|0,na|0)|0;V=C;j=yd(ua|0,x|0,470296,0)|0;ia=C;B=yd(ua|0,x|0,654183,0)|0;M=nd(B|0,C|0,M&2097151|0,0)|0;Z=nd(M|0,C|0,Q|0,Z|0)|0;qa=nd(Z|0,C|0,pa|0,qa|0)|0;pa=C;Z=yd(ua|0,x|0,-997805,-1)|0;Z=nd(ka|0,n|0,Z|0,C|0)|0;n=C;ka=yd(ua|0,x|0,136657,0)|0;ka=nd(t|0,ja|0,ka|0,C|0)|0;ja=C;x=yd(ua|0,x|0,-683901,-1)|0;x=nd(oa|0,ga|0,x|0,C|0)|0;ga=C;oa=nd(na|0,V|0,1048576,0)|0;oa=ld(oa|0,C|0,21)|0;ua=C;e=nd(j|0,ia|0,e&2097151|0,0)|0;wa=nd(e|0,C|0,va|0,wa|0)|0;wa=nd(wa|0,C|0,oa|0,ua|0)|0;va=C;ua=qd(oa|0,ua|0,21)|0;ua=md(na|0,V|0,ua|0,C|0)|0;V=C;na=nd(qa|0,pa|0,1048576,0)|0;na=ld(na|0,C|0,21)|0;oa=C;n=nd(na|0,oa|0,Z|0,n|0)|0;Z=C;oa=qd(na|0,oa|0,21)|0;na=C;e=nd(ka|0,ja|0,1048576,0)|0;e=ld(e|0,C|0,21)|0;ia=C;ga=nd(e|0,ia|0,x|0,ga|0)|0;x=C;ia=qd(e|0,ia|0,21)|0;e=C;j=nd(ca|0,s|0,1048576,0)|0;j=ld(j|0,C|0,21)|0;t=C;y=nd(j|0,t|0,o|0,y|0)|0;o=C;t=qd(j|0,t|0,21)|0;t=md(ca|0,s|0,t|0,C|0)|0;s=C;ca=nd(ha|0,k|0,1048576,0)|0;ca=ld(ca|0,C|0,21)|0;j=C;da=nd(ca|0,j|0,I|0,da|0)|0;I=C;j=qd(ca|0,j|0,21)|0;j=md(ha|0,k|0,j|0,C|0)|0;k=C;ha=nd(L|0,fa|0,1048576,0)|0;ha=ld(ha|0,C|0,21)|0;ca=C;R=nd(_|0,R|0,ha|0,ca|0)|0;_=C;ca=qd(ha|0,ca|0,21)|0;ca=md(L|0,fa|0,ca|0,C|0)|0;fa=C;L=nd(wa|0,va|0,1048576,0)|0;L=ld(L|0,C|0,21)|0;ha=C;Q=qd(L|0,ha|0,21)|0;M=C;B=nd(n|0,Z|0,1048576,0)|0;B=ld(B|0,C|0,21)|0;D=C;ma=qd(B|0,D|0,21)|0;ma=md(n|0,Z|0,ma|0,C|0)|0;Z=C;n=nd(ga|0,x|0,1048576,0)|0;n=ld(n|0,C|0,21)|0;W=C;s=nd(t|0,s|0,n|0,W|0)|0;t=C;W=qd(n|0,W|0,21)|0;W=md(ga|0,x|0,W|0,C|0)|0;x=C;ga=nd(y|0,o|0,1048576,0)|0;ga=ld(ga|0,C|0,21)|0;n=C;k=nd(j|0,k|0,ga|0,n|0)|0;j=C;n=qd(ga|0,n|0,21)|0;n=md(y|0,o|0,n|0,C|0)|0;o=C;y=nd(da|0,I|0,1048576,0)|0;y=ld(y|0,C|0,21)|0;ga=C;fa=nd(ca|0,fa|0,y|0,ga|0)|0;ca=C;ga=qd(y|0,ga|0,21)|0;ga=md(da|0,I|0,ga|0,C|0)|0;I=C;da=nd(R|0,_|0,1048576,0)|0;da=ld(da|0,C|0,21)|0;y=C;f=qd(da|0,y|0,21)|0;f=md(R|0,_|0,f|0,C|0)|0;_=C;R=yd(da|0,y|0,666643,0)|0;R=nd(ua|0,V|0,R|0,C|0)|0;V=C;ua=yd(da|0,y|0,470296,0)|0;ta=C;sa=yd(da|0,y|0,654183,0)|0;ra=C;H=yd(da|0,y|0,-997805,-1)|0;H=nd(ma|0,Z|0,H|0,C|0)|0;Z=C;ma=yd(da|0,y|0,136657,0)|0;la=C;y=yd(da|0,y|0,-683901,-1)|0;y=nd(W|0,x|0,y|0,C|0)|0;x=C;W=ld(R|0,V|0,21)|0;da=C;ta=nd(wa|0,va|0,ua|0,ta|0)|0;ta=nd(ta|0,C|0,W|0,da|0)|0;M=md(ta|0,C|0,Q|0,M|0)|0;Q=C;da=qd(W|0,da|0,21)|0;da=md(R|0,V|0,da|0,C|0)|0;V=C;R=ld(M|0,Q|0,21)|0;W=C;pa=nd(sa|0,ra|0,qa|0,pa|0)|0;na=md(pa|0,C|0,oa|0,na|0)|0;ha=nd(na|0,C|0,L|0,ha|0)|0;ha=nd(ha|0,C|0,R|0,W|0)|0;L=C;W=qd(R|0,W|0,21)|0;W=md(M|0,Q|0,W|0,C|0)|0;Q=C;M=ld(ha|0,L|0,21)|0;R=C;Z=nd(M|0,R|0,H|0,Z|0)|0;H=C;R=qd(M|0,R|0,21)|0;R=md(ha|0,L|0,R|0,C|0)|0;L=C;ha=ld(Z|0,H|0,21)|0;M=C;ja=nd(ma|0,la|0,ka|0,ja|0)|0;e=md(ja|0,C|0,ia|0,e|0)|0;D=nd(e|0,C|0,B|0,D|0)|0;D=nd(D|0,C|0,ha|0,M|0)|0;B=C;M=qd(ha|0,M|0,21)|0;M=md(Z|0,H|0,M|0,C|0)|0;H=C;Z=ld(D|0,B|0,21)|0;ha=C;x=nd(Z|0,ha|0,y|0,x|0)|0;y=C;ha=qd(Z|0,ha|0,21)|0;ha=md(D|0,B|0,ha|0,C|0)|0;B=C;D=ld(x|0,y|0,21)|0;Z=C;t=nd(s|0,t|0,D|0,Z|0)|0;s=C;Z=qd(D|0,Z|0,21)|0;Z=md(x|0,y|0,Z|0,C|0)|0;y=C;x=ld(t|0,s|0,21)|0;D=C;o=nd(x|0,D|0,n|0,o|0)|0;n=C;D=qd(x|0,D|0,21)|0;D=md(t|0,s|0,D|0,C|0)|0;s=C;t=ld(o|0,n|0,21)|0;x=C;j=nd(k|0,j|0,t|0,x|0)|0;k=C;x=qd(t|0,x|0,21)|0;x=md(o|0,n|0,x|0,C|0)|0;n=C;o=ld(j|0,k|0,21)|0;t=C;I=nd(o|0,t|0,ga|0,I|0)|0;ga=C;t=qd(o|0,t|0,21)|0;t=md(j|0,k|0,t|0,C|0)|0;k=C;j=ld(I|0,ga|0,21)|0;o=C;ca=nd(fa|0,ca|0,j|0,o|0)|0;fa=C;o=qd(j|0,o|0,21)|0;o=md(I|0,ga|0,o|0,C|0)|0;ga=C;I=ld(ca|0,fa|0,21)|0;j=C;_=nd(I|0,j|0,f|0,_|0)|0;f=C;j=qd(I|0,j|0,21)|0;j=md(ca|0,fa|0,j|0,C|0)|0;fa=C;ca=ld(_|0,f|0,21)|0;I=C;e=qd(ca|0,I|0,21)|0;e=md(_|0,f|0,e|0,C|0)|0;f=C;_=yd(ca|0,I|0,666643,0)|0;V=nd(_|0,C|0,da|0,V|0)|0;da=C;_=yd(ca|0,I|0,470296,0)|0;_=nd(W|0,Q|0,_|0,C|0)|0;Q=C;W=yd(ca|0,I|0,654183,0)|0;W=nd(R|0,L|0,W|0,C|0)|0;L=C;R=yd(ca|0,I|0,-997805,-1)|0;R=nd(M|0,H|0,R|0,C|0)|0;H=C;M=yd(ca|0,I|0,136657,0)|0;M=nd(ha|0,B|0,M|0,C|0)|0;B=C;I=yd(ca|0,I|0,-683901,-1)|0;I=nd(Z|0,y|0,I|0,C|0)|0;y=C;Z=ld(V|0,da|0,21)|0;ca=C;Q=nd(_|0,Q|0,Z|0,ca|0)|0;_=C;ca=qd(Z|0,ca|0,21)|0;ca=md(V|0,da|0,ca|0,C|0)|0;da=C;V=ld(Q|0,_|0,21)|0;Z=C;L=nd(W|0,L|0,V|0,Z|0)|0;W=C;Z=qd(V|0,Z|0,21)|0;Z=md(Q|0,_|0,Z|0,C|0)|0;_=C;Q=ld(L|0,W|0,21)|0;V=C;H=nd(Q|0,V|0,R|0,H|0)|0;R=C;V=qd(Q|0,V|0,21)|0;V=md(L|0,W|0,V|0,C|0)|0;W=C;L=ld(H|0,R|0,21)|0;Q=C;B=nd(M|0,B|0,L|0,Q|0)|0;M=C;Q=qd(L|0,Q|0,21)|0;Q=md(H|0,R|0,Q|0,C|0)|0;R=C;H=ld(B|0,M|0,21)|0;L=C;y=nd(H|0,L|0,I|0,y|0)|0;I=C;L=qd(H|0,L|0,21)|0;L=md(B|0,M|0,L|0,C|0)|0;M=C;B=ld(y|0,I|0,21)|0;H=C;s=nd(B|0,H|0,D|0,s|0)|0;D=C;H=qd(B|0,H|0,21)|0;H=md(y|0,I|0,H|0,C|0)|0;I=C;y=ld(s|0,D|0,21)|0;B=C;n=nd(y|0,B|0,x|0,n|0)|0;x=C;B=qd(y|0,B|0,21)|0;B=md(s|0,D|0,B|0,C|0)|0;D=C;s=ld(n|0,x|0,21)|0;y=C;k=nd(s|0,y|0,t|0,k|0)|0;t=C;y=qd(s|0,y|0,21)|0;y=md(n|0,x|0,y|0,C|0)|0;x=C;n=ld(k|0,t|0,21)|0;s=C;ga=nd(n|0,s|0,o|0,ga|0)|0;o=C;s=qd(n|0,s|0,21)|0;s=md(k|0,t|0,s|0,C|0)|0;t=C;k=ld(ga|0,o|0,21)|0;n=C;fa=nd(k|0,n|0,j|0,fa|0)|0;j=C;n=qd(k|0,n|0,21)|0;n=md(ga|0,o|0,n|0,C|0)|0;o=C;ga=ld(fa|0,j|0,21)|0;k=C;f=nd(ga|0,k|0,e|0,f|0)|0;e=C;k=qd(ga|0,k|0,21)|0;k=md(fa|0,j|0,k|0,C|0)|0;j=C;a[b>>0]=ca;b=pd(ca|0,da|0,8)|0;a[ea>>0]=b;b=pd(ca|0,da|0,16)|0;da=C;ca=qd(Z|0,_|0,5)|0;a[ba>>0]=ca|b;b=pd(Z|0,_|0,3)|0;a[aa>>0]=b;b=pd(Z|0,_|0,11)|0;a[$>>0]=b;b=pd(Z|0,_|0,19)|0;_=C;Z=qd(V|0,W|0,2)|0;a[Y>>0]=Z|b;b=pd(V|0,W|0,6)|0;a[X>>0]=b;b=pd(V|0,W|0,14)|0;W=C;V=qd(Q|0,R|0,7)|0;a[U>>0]=V|b;b=pd(Q|0,R|0,1)|0;a[T>>0]=b;b=pd(Q|0,R|0,9)|0;a[S>>0]=b;b=pd(Q|0,R|0,17)|0;R=C;Q=qd(L|0,M|0,4)|0;a[P>>0]=Q|b;b=pd(L|0,M|0,4)|0;a[O>>0]=b;b=pd(L|0,M|0,12)|0;a[N>>0]=b;b=pd(L|0,M|0,20)|0;M=C;L=qd(H|0,I|0,1)|0;a[K>>0]=L|b;b=pd(H|0,I|0,7)|0;a[J>>0]=b;b=pd(H|0,I|0,15)|0;I=C;H=qd(B|0,D|0,6)|0;a[G>>0]=H|b;b=pd(B|0,D|0,2)|0;a[F>>0]=b;b=pd(B|0,D|0,10)|0;a[E>>0]=b;b=pd(B|0,D|0,18)|0;D=C;B=qd(y|0,x|0,3)|0;a[A>>0]=B|b;b=pd(y|0,x|0,5)|0;a[z>>0]=b;b=pd(y|0,x|0,13)|0;a[w>>0]=b;a[v>>0]=s;b=pd(s|0,t|0,8)|0;a[u>>0]=b;b=pd(s|0,t|0,16)|0;t=C;s=qd(n|0,o|0,5)|0;a[r>>0]=s|b;b=pd(n|0,o|0,3)|0;a[q>>0]=b;b=pd(n|0,o|0,11)|0;a[p>>0]=b;b=pd(n|0,o|0,19)|0;o=C;n=qd(k|0,j|0,2)|0;a[m>>0]=n|b;b=pd(k|0,j|0,6)|0;a[l>>0]=b;j=pd(k|0,j|0,14)|0;k=C;b=qd(f|0,e|0,7)|0;a[i>>0]=j|b;b=pd(f|0,e|0,1)|0;a[h>>0]=b;b=pd(f|0,e|0,9)|0;a[g>>0]=b;b=pd(f|0,e|0,17)|0;a[c>>0]=b;return}function Kc(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,xc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Fc=0,Gc=0,Hc=0,Ic=0;u=i;k=i=i+63&-64;i=i+896|0;q=k+208|0;p=k+656|0;r=k+416|0;s=k+616|0;n=k;l=k+824|0;o=k+760|0;m=k+696|0;k=k+456|0;t=q;c[t>>2]=-205731576;c[t+4>>2]=1779033703;t=q+8|0;c[t>>2]=-2067093701;c[t+4>>2]=-1150833019;t=q+16|0;c[t>>2]=-23791573;c[t+4>>2]=1013904242;t=q+24|0;c[t>>2]=1595750129;c[t+4>>2]=-1521486534;t=q+32|0;c[t>>2]=-1377402159;c[t+4>>2]=1359893119;t=q+40|0;c[t>>2]=725511199;c[t+4>>2]=-1694144372;t=q+48|0;c[t>>2]=-79577749;c[t+4>>2]=528734635;t=q+56|0;c[t>>2]=327033209;c[t+4>>2]=1541459225;t=q+72|0;c[t>>2]=256;c[t+4>>2]=0;t=q+64|0;c[t>>2]=0;c[t+4>>2]=0;t=q+80|0;v=j+0|0;w=t+32|0;do{a[t>>0]=a[v>>0]|0;t=t+1|0;v=v+1|0}while((t|0)<(w|0));Bb(q,l);a[l>>0]=(d[l>>0]|0)&248;V=l+31|0;a[V>>0]=(d[V>>0]|0)&63|64;db=n+64|0;c[db+0>>2]=0;c[db+4>>2]=0;c[db+8>>2]=0;c[db+12>>2]=0;ma=n;c[ma>>2]=-205731576;c[ma+4>>2]=1779033703;ma=n+8|0;oa=ma;c[oa>>2]=-2067093701;c[oa+4>>2]=-1150833019;oa=n+16|0;fb=oa;c[fb>>2]=-23791573;c[fb+4>>2]=1013904242;fb=n+24|0;gb=fb;c[gb>>2]=1595750129;c[gb+4>>2]=-1521486534;gb=n+32|0;ka=gb;c[ka>>2]=-1377402159;c[ka+4>>2]=1359893119;ka=n+40|0;G=ka;c[G>>2]=725511199;c[G+4>>2]=-1694144372;G=n+48|0;T=G;c[T>>2]=-79577749;c[T+4>>2]=528734635;T=n+56|0;H=T;c[H>>2]=327033209;c[H+4>>2]=1541459225;Ab(n,l+32|0,32,0);Ab(n,f,g,h);Bb(n,o);H=b+32|0;td(H|0,j+32|0,32)|0;Jc(o);Ec(k,o);vc(p,k+80|0);wc(r,k,p);wc(s,k+40|0,p);yc(b,s);yc(q,r);fa=b+31|0;a[fa>>0]=(d[fa>>0]|0)^(d[q>>0]|0)<<7;c[db+0>>2]=0;c[db+4>>2]=0;c[db+8>>2]=0;c[db+12>>2]=0;db=n;c[db>>2]=-205731576;c[db+4>>2]=1779033703;c[ma>>2]=-2067093701;c[ma+4>>2]=-1150833019;c[oa>>2]=-23791573;c[oa+4>>2]=1013904242;c[fb>>2]=1595750129;c[fb+4>>2]=-1521486534;c[gb>>2]=-1377402159;c[gb+4>>2]=1359893119;c[ka>>2]=725511199;c[ka+4>>2]=-1694144372;c[G>>2]=-79577749;c[G+4>>2]=528734635;c[T>>2]=327033209;c[T+4>>2]=1541459225;Ab(n,b,64,0);Ab(n,f,g,h);Bb(n,m);Jc(m);T=a[m+2>>0]|0;G=d[m>>0]|0;ka=qd(d[m+1>>0]|0|0,0,8)|0;gb=C;T=T&255;fb=qd(T|0,0,16)|0;fb=ka|G|fb&2031616;G=qd(d[m+3>>0]|0|0,0,8)|0;ka=C;oa=qd(d[m+4>>0]|0|0,0,16)|0;ka=ka|C;ma=d[m+5>>0]|0;db=qd(ma|0,0,24)|0;ka=pd(G|T|oa|db|0,ka|C|0,5)|0;ka=ka&2097151;db=a[m+7>>0]|0;oa=qd(d[m+6>>0]|0|0,0,8)|0;T=C;db=db&255;G=qd(db|0,0,16)|0;T=pd(oa|ma|G|0,T|C|0,2)|0;T=T&2097151;G=qd(d[m+8>>0]|0|0,0,8)|0;ma=C;oa=qd(d[m+9>>0]|0|0,0,16)|0;ma=ma|C;fa=d[m+10>>0]|0;x=qd(fa|0,0,24)|0;ma=pd(G|db|oa|x|0,ma|C|0,7)|0;ma=ma&2097151;x=qd(d[m+11>>0]|0|0,0,8)|0;oa=C;db=qd(d[m+12>>0]|0|0,0,16)|0;oa=oa|C;G=d[m+13>>0]|0;F=qd(G|0,0,24)|0;oa=pd(x|fa|db|F|0,oa|C|0,4)|0;oa=oa&2097151;F=a[m+15>>0]|0;db=qd(d[m+14>>0]|0|0,0,8)|0;fa=C;F=F&255;x=qd(F|0,0,16)|0;fa=pd(db|G|x|0,fa|C|0,1)|0;fa=fa&2097151;x=qd(d[m+16>>0]|0|0,0,8)|0;G=C;db=qd(d[m+17>>0]|0|0,0,16)|0;G=G|C;Fc=d[m+18>>0]|0;f=qd(Fc|0,0,24)|0;G=pd(x|F|db|f|0,G|C|0,6)|0;G=G&2097151;f=a[m+20>>0]|0;db=qd(d[m+19>>0]|0|0,0,8)|0;F=C;f=qd(f&255|0,0,16)|0;F=pd(db|Fc|f|0,F|C|0,3)|0;f=C;Fc=a[m+23>>0]|0;db=d[m+21>>0]|0;x=qd(d[m+22>>0]|0|0,0,8)|0;k=C;Fc=Fc&255;ua=qd(Fc|0,0,16)|0;ua=x|db|ua&2031616;db=qd(d[m+24>>0]|0|0,0,8)|0;x=C;cb=qd(d[m+25>>0]|0|0,0,16)|0;x=x|C;na=d[m+26>>0]|0;ya=qd(na|0,0,24)|0;x=pd(db|Fc|cb|ya|0,x|C|0,5)|0;x=x&2097151;ya=a[m+28>>0]|0;cb=qd(d[m+27>>0]|0|0,0,8)|0;Fc=C;ya=ya&255;db=qd(ya|0,0,16)|0;Fc=pd(cb|na|db|0,Fc|C|0,2)|0;Fc=Fc&2097151;db=qd(d[m+29>>0]|0|0,0,8)|0;na=C;cb=qd(d[m+30>>0]|0|0,0,16)|0;na=na|C;A=qd(d[m+31>>0]|0|0,0,24)|0;na=pd(db|ya|cb|A|0,na|C|0,7)|0;A=C;cb=a[l+2>>0]|0;ya=d[l>>0]|0;db=qd(d[l+1>>0]|0|0,0,8)|0;Cb=C;cb=cb&255;zb=qd(cb|0,0,16)|0;zb=db|ya|zb&2031616;ya=qd(d[l+3>>0]|0|0,0,8)|0;db=C;Ma=qd(d[l+4>>0]|0|0,0,16)|0;db=db|C;Na=d[l+5>>0]|0;Bc=qd(Na|0,0,24)|0;db=pd(ya|cb|Ma|Bc|0,db|C|0,5)|0;db=db&2097151;Bc=a[l+7>>0]|0;Ma=qd(d[l+6>>0]|0|0,0,8)|0;cb=C;Bc=Bc&255;ya=qd(Bc|0,0,16)|0;cb=pd(Ma|Na|ya|0,cb|C|0,2)|0;cb=cb&2097151;ya=qd(d[l+8>>0]|0|0,0,8)|0;Na=C;Ma=qd(d[l+9>>0]|0|0,0,16)|0;Na=Na|C;za=d[l+10>>0]|0;ta=qd(za|0,0,24)|0;Na=pd(ya|Bc|Ma|ta|0,Na|C|0,7)|0;Na=Na&2097151;ta=qd(d[l+11>>0]|0|0,0,8)|0;Ma=C;Bc=qd(d[l+12>>0]|0|0,0,16)|0;Ma=Ma|C;ya=d[l+13>>0]|0;Ic=qd(ya|0,0,24)|0;Ma=pd(ta|za|Bc|Ic|0,Ma|C|0,4)|0;Ma=Ma&2097151;Ic=a[l+15>>0]|0;Bc=qd(d[l+14>>0]|0|0,0,8)|0;za=C;Ic=Ic&255;ta=qd(Ic|0,0,16)|0;za=pd(Bc|ya|ta|0,za|C|0,1)|0;za=za&2097151;ta=qd(d[l+16>>0]|0|0,0,8)|0;ya=C;Bc=qd(d[l+17>>0]|0|0,0,16)|0;ya=ya|C;M=d[l+18>>0]|0;sa=qd(M|0,0,24)|0;ya=pd(ta|Ic|Bc|sa|0,ya|C|0,6)|0;ya=ya&2097151;sa=a[l+20>>0]|0;Bc=qd(d[l+19>>0]|0|0,0,8)|0;Ic=C;sa=qd(sa&255|0,0,16)|0;Ic=pd(Bc|M|sa|0,Ic|C|0,3)|0;sa=C;M=a[l+23>>0]|0;Bc=d[l+21>>0]|0;ta=qd(d[l+22>>0]|0|0,0,8)|0;z=C;M=M&255;j=qd(M|0,0,16)|0;j=ta|Bc|j&2031616;Bc=qd(d[l+24>>0]|0|0,0,8)|0;ta=C;n=qd(d[l+25>>0]|0|0,0,16)|0;ta=ta|C;E=d[l+26>>0]|0;Cc=qd(E|0,0,24)|0;ta=pd(Bc|M|n|Cc|0,ta|C|0,5)|0;ta=ta&2097151;Cc=a[l+28>>0]|0;n=qd(d[l+27>>0]|0|0,0,8)|0;M=C;Cc=Cc&255;Bc=qd(Cc|0,0,16)|0;M=pd(n|E|Bc|0,M|C|0,2)|0;M=M&2097151;Bc=qd(d[l+29>>0]|0|0,0,8)|0;E=C;n=qd(d[l+30>>0]|0|0,0,16)|0;E=E|C;m=qd(d[V>>0]|0|0,0,24)|0;E=pd(Bc|Cc|n|m|0,E|C|0,7)|0;m=C;n=a[o+2>>0]|0;Cc=d[o>>0]|0;Bc=qd(d[o+1>>0]|0|0,0,8)|0;V=C;n=n&255;Dc=qd(n|0,0,16)|0;da=qd(d[o+3>>0]|0|0,0,8)|0;ja=C;N=qd(d[o+4>>0]|0|0,0,16)|0;ja=ja|C;pa=d[o+5>>0]|0;ca=qd(pa|0,0,24)|0;ja=pd(da|n|N|ca|0,ja|C|0,5)|0;ca=a[o+7>>0]|0;N=qd(d[o+6>>0]|0|0,0,8)|0;n=C;ca=ca&255;da=qd(ca|0,0,16)|0;n=pd(N|pa|da|0,n|C|0,2)|0;da=qd(d[o+8>>0]|0|0,0,8)|0;pa=C;N=qd(d[o+9>>0]|0|0,0,16)|0;pa=pa|C;ia=d[o+10>>0]|0;v=qd(ia|0,0,24)|0;pa=pd(da|ca|N|v|0,pa|C|0,7)|0;v=qd(d[o+11>>0]|0|0,0,8)|0;N=C;ca=qd(d[o+12>>0]|0|0,0,16)|0;N=N|C;da=d[o+13>>0]|0;_=qd(da|0,0,24)|0;N=pd(v|ia|ca|_|0,N|C|0,4)|0;_=a[o+15>>0]|0;ca=qd(d[o+14>>0]|0|0,0,8)|0;ia=C;_=_&255;v=qd(_|0,0,16)|0;ia=pd(ca|da|v|0,ia|C|0,1)|0;v=qd(d[o+16>>0]|0|0,0,8)|0;da=C;ca=qd(d[o+17>>0]|0|0,0,16)|0;da=da|C;aa=d[o+18>>0]|0;Z=qd(aa|0,0,24)|0;da=pd(v|_|ca|Z|0,da|C|0,6)|0;Z=a[o+20>>0]|0;ca=qd(d[o+19>>0]|0|0,0,8)|0;_=C;Z=qd(Z&255|0,0,16)|0;_=pd(ca|aa|Z|0,_|C|0,3)|0;Z=C;aa=a[o+23>>0]|0;ca=d[o+21>>0]|0;v=qd(d[o+22>>0]|0|0,0,8)|0;ga=C;aa=aa&255;W=qd(aa|0,0,16)|0;X=qd(d[o+24>>0]|0|0,0,8)|0;ba=C;h=qd(d[o+25>>0]|0|0,0,16)|0;ba=ba|C;r=d[o+26>>0]|0;s=qd(r|0,0,24)|0;ba=pd(X|aa|h|s|0,ba|C|0,5)|0;s=a[o+28>>0]|0;h=qd(d[o+27>>0]|0|0,0,8)|0;aa=C;s=s&255;X=qd(s|0,0,16)|0;aa=pd(h|r|X|0,aa|C|0,2)|0;X=qd(d[o+29>>0]|0|0,0,8)|0;r=C;h=qd(d[o+30>>0]|0|0,0,16)|0;r=r|C;w=qd(d[o+31>>0]|0|0,0,24)|0;r=pd(X|s|h|w|0,r|C|0,7)|0;w=C;h=yd(zb|0,Cb|0,fb|0,gb|0)|0;h=nd(Bc|Cc|Dc&2031616|0,V|0,h|0,C|0)|0;V=C;Dc=yd(db|0,0,fb|0,gb|0)|0;Cc=C;Bc=yd(zb|0,Cb|0,ka|0,0)|0;s=C;X=yd(cb|0,0,fb|0,gb|0)|0;K=C;R=yd(db|0,0,ka|0,0)|0;tc=C;q=yd(zb|0,Cb|0,T|0,0)|0;q=nd(R|0,tc|0,q|0,C|0)|0;K=nd(q|0,C|0,X|0,K|0)|0;n=nd(K|0,C|0,n&2097151|0,0)|0;K=C;X=yd(Na|0,0,fb|0,gb|0)|0;q=C;tc=yd(cb|0,0,ka|0,0)|0;R=C;Ac=yd(db|0,0,T|0,0)|0;zc=C;xc=yd(zb|0,Cb|0,ma|0,0)|0;uc=C;ic=yd(Ma|0,0,fb|0,gb|0)|0;L=C;kc=yd(Na|0,0,ka|0,0)|0;Q=C;mc=yd(cb|0,0,T|0,0)|0;jc=C;nc=yd(db|0,0,ma|0,0)|0;oc=C;lc=yd(zb|0,Cb|0,oa|0,0)|0;lc=nd(nc|0,oc|0,lc|0,C|0)|0;jc=nd(lc|0,C|0,mc|0,jc|0)|0;Q=nd(jc|0,C|0,kc|0,Q|0)|0;L=nd(Q|0,C|0,ic|0,L|0)|0;N=nd(L|0,C|0,N&2097151|0,0)|0;L=C;ic=yd(za|0,0,fb|0,gb|0)|0;Q=C;kc=yd(Ma|0,0,ka|0,0)|0;jc=C;mc=yd(Na|0,0,T|0,0)|0;lc=C;oc=yd(cb|0,0,ma|0,0)|0;nc=C;sc=yd(db|0,0,oa|0,0)|0;rc=C;qc=yd(zb|0,Cb|0,fa|0,0)|0;pc=C;g=yd(ya|0,0,fb|0,gb|0)|0;ea=C;Xb=yd(za|0,0,ka|0,0)|0;p=C;Zb=yd(Ma|0,0,T|0,0)|0;Wb=C;$b=yd(Na|0,0,ma|0,0)|0;Yb=C;bc=yd(cb|0,0,oa|0,0)|0;_b=C;cc=yd(db|0,0,fa|0,0)|0;dc=C;ac=yd(zb|0,Cb|0,G|0,0)|0;ac=nd(cc|0,dc|0,ac|0,C|0)|0;_b=nd(ac|0,C|0,bc|0,_b|0)|0;Yb=nd(_b|0,C|0,$b|0,Yb|0)|0;Wb=nd(Yb|0,C|0,Zb|0,Wb|0)|0;p=nd(Wb|0,C|0,Xb|0,p|0)|0;ea=nd(p|0,C|0,g|0,ea|0)|0;da=nd(ea|0,C|0,da&2097151|0,0)|0;ea=C;g=yd(Ic|0,sa|0,fb|0,gb|0)|0;p=C;Xb=yd(ya|0,0,ka|0,0)|0;Wb=C;Zb=yd(za|0,0,T|0,0)|0;Yb=C;$b=yd(Ma|0,0,ma|0,0)|0;_b=C;bc=yd(Na|0,0,oa|0,0)|0;ac=C;dc=yd(cb|0,0,fa|0,0)|0;cc=C;hc=yd(db|0,0,G|0,0)|0;gc=C;fc=yd(zb|0,Cb|0,F|0,f|0)|0;ec=C;ra=yd(j|0,z|0,fb|0,gb|0)|0;Fb=C;Gb=yd(Ic|0,sa|0,ka|0,0)|0;Hb=C;Ib=yd(ya|0,0,T|0,0)|0;Jb=C;Kb=yd(za|0,0,ma|0,0)|0;Lb=C;Mb=yd(Ma|0,0,oa|0,0)|0;Nb=C;Ob=yd(Na|0,0,fa|0,0)|0;Pb=C;Qb=yd(cb|0,0,G|0,0)|0;Rb=C;Tb=yd(db|0,0,F|0,f|0)|0;Ub=C;Vb=yd(zb|0,Cb|0,ua|0,k|0)|0;Vb=nd(Tb|0,Ub|0,Vb|0,C|0)|0;Rb=nd(Vb|0,C|0,Qb|0,Rb|0)|0;Pb=nd(Rb|0,C|0,Ob|0,Pb|0)|0;Nb=nd(Pb|0,C|0,Mb|0,Nb|0)|0;Lb=nd(Nb|0,C|0,Kb|0,Lb|0)|0;Jb=nd(Lb|0,C|0,Ib|0,Jb|0)|0;Hb=nd(Jb|0,C|0,Gb|0,Hb|0)|0;Fb=nd(Hb|0,C|0,ra|0,Fb|0)|0;ga=nd(Fb|0,C|0,v|ca|W&2031616|0,ga|0)|0;W=C;ca=yd(ta|0,0,fb|0,gb|0)|0;v=C;Fb=yd(j|0,z|0,ka|0,0)|0;ra=C;Hb=yd(Ic|0,sa|0,T|0,0)|0;Gb=C;Jb=yd(ya|0,0,ma|0,0)|0;Ib=C;Lb=yd(za|0,0,oa|0,0)|0;Kb=C;Nb=yd(Ma|0,0,fa|0,0)|0;Mb=C;Pb=yd(Na|0,0,G|0,0)|0;Ob=C;Rb=yd(cb|0,0,F|0,f|0)|0;Qb=C;Vb=yd(db|0,0,ua|0,k|0)|0;Ub=C;Tb=yd(zb|0,Cb|0,x|0,0)|0;Sb=C;ib=yd(M|0,0,fb|0,gb|0)|0;S=C;kb=yd(ta|0,0,ka|0,0)|0;hb=C;mb=yd(j|0,z|0,T|0,0)|0;jb=C;ob=yd(Ic|0,sa|0,ma|0,0)|0;lb=C;qb=yd(ya|0,0,oa|0,0)|0;nb=C;sb=yd(za|0,0,fa|0,0)|0;pb=C;ub=yd(Ma|0,0,G|0,0)|0;rb=C;wb=yd(Na|0,0,F|0,f|0)|0;tb=C;yb=yd(cb|0,0,ua|0,k|0)|0;vb=C;Db=yd(db|0,0,x|0,0)|0;Eb=C;xb=yd(zb|0,Cb|0,Fc|0,0)|0;xb=nd(Db|0,Eb|0,xb|0,C|0)|0;vb=nd(xb|0,C|0,yb|0,vb|0)|0;tb=nd(vb|0,C|0,wb|0,tb|0)|0;rb=nd(tb|0,C|0,ub|0,rb|0)|0;pb=nd(rb|0,C|0,sb|0,pb|0)|0;nb=nd(pb|0,C|0,qb|0,nb|0)|0;lb=nd(nb|0,C|0,ob|0,lb|0)|0;jb=nd(lb|0,C|0,mb|0,jb|0)|0;hb=nd(jb|0,C|0,kb|0,hb|0)|0;S=nd(hb|0,C|0,ib|0,S|0)|0;aa=nd(S|0,C|0,aa&2097151|0,0)|0;S=C;gb=yd(E|0,m|0,fb|0,gb|0)|0;fb=C;ib=yd(M|0,0,ka|0,0)|0;hb=C;kb=yd(ta|0,0,T|0,0)|0;jb=C;mb=yd(j|0,z|0,ma|0,0)|0;lb=C;ob=yd(Ic|0,sa|0,oa|0,0)|0;nb=C;qb=yd(ya|0,0,fa|0,0)|0;pb=C;sb=yd(za|0,0,G|0,0)|0;rb=C;ub=yd(Ma|0,0,F|0,f|0)|0;tb=C;wb=yd(Na|0,0,ua|0,k|0)|0;vb=C;yb=yd(cb|0,0,x|0,0)|0;xb=C;Eb=yd(db|0,0,Fc|0,0)|0;Db=C;Cb=yd(zb|0,Cb|0,na|0,A|0)|0;zb=C;ka=yd(E|0,m|0,ka|0,0)|0;Y=C;Qa=yd(M|0,0,T|0,0)|0;O=C;Sa=yd(ta|0,0,ma|0,0)|0;Pa=C;Ua=yd(j|0,z|0,oa|0,0)|0;Ra=C;Wa=yd(Ic|0,sa|0,fa|0,0)|0;Ta=C;Ya=yd(ya|0,0,G|0,0)|0;Va=C;_a=yd(za|0,0,F|0,f|0)|0;Xa=C;ab=yd(Ma|0,0,ua|0,k|0)|0;Za=C;eb=yd(Na|0,0,x|0,0)|0;$a=C;y=yd(cb|0,0,Fc|0,0)|0;bb=C;db=yd(db|0,0,na|0,A|0)|0;db=nd(y|0,bb|0,db|0,C|0)|0;$a=nd(db|0,C|0,eb|0,$a|0)|0;Za=nd($a|0,C|0,ab|0,Za|0)|0;Xa=nd(Za|0,C|0,_a|0,Xa|0)|0;Va=nd(Xa|0,C|0,Ya|0,Va|0)|0;Ta=nd(Va|0,C|0,Wa|0,Ta|0)|0;Ra=nd(Ta|0,C|0,Ua|0,Ra|0)|0;Pa=nd(Ra|0,C|0,Sa|0,Pa|0)|0;O=nd(Pa|0,C|0,Qa|0,O|0)|0;Y=nd(O|0,C|0,ka|0,Y|0)|0;ka=C;T=yd(E|0,m|0,T|0,0)|0;O=C;Qa=yd(M|0,0,ma|0,0)|0;Pa=C;Sa=yd(ta|0,0,oa|0,0)|0;Ra=C;Ua=yd(j|0,z|0,fa|0,0)|0;Ta=C;Wa=yd(Ic|0,sa|0,G|0,0)|0;Va=C;Ya=yd(ya|0,0,F|0,f|0)|0;Xa=C;_a=yd(za|0,0,ua|0,k|0)|0;Za=C;ab=yd(Ma|0,0,x|0,0)|0;$a=C;eb=yd(Na|0,0,Fc|0,0)|0;db=C;cb=yd(cb|0,0,na|0,A|0)|0;bb=C;ma=yd(E|0,m|0,ma|0,0)|0;y=C;Ca=yd(M|0,0,oa|0,0)|0;qa=C;Ea=yd(ta|0,0,fa|0,0)|0;Ba=C;Ga=yd(j|0,z|0,G|0,0)|0;Da=C;Ia=yd(Ic|0,sa|0,F|0,f|0)|0;Fa=C;Ka=yd(ya|0,0,ua|0,k|0)|0;Ha=C;Oa=yd(za|0,0,x|0,0)|0;Ja=C;J=yd(Ma|0,0,Fc|0,0)|0;La=C;Na=yd(Na|0,0,na|0,A|0)|0;Na=nd(J|0,La|0,Na|0,C|0)|0;Ja=nd(Na|0,C|0,Oa|0,Ja|0)|0;Ha=nd(Ja|0,C|0,Ka|0,Ha|0)|0;Fa=nd(Ha|0,C|0,Ia|0,Fa|0)|0;Da=nd(Fa|0,C|0,Ga|0,Da|0)|0;Ba=nd(Da|0,C|0,Ea|0,Ba|0)|0;qa=nd(Ba|0,C|0,Ca|0,qa|0)|0;y=nd(qa|0,C|0,ma|0,y|0)|0;ma=C;oa=yd(E|0,m|0,oa|0,0)|0;qa=C;Ca=yd(M|0,0,fa|0,0)|0;Ba=C;Ea=yd(ta|0,0,G|0,0)|0;Da=C;Ga=yd(j|0,z|0,F|0,f|0)|0;Fa=C;Ia=yd(Ic|0,sa|0,ua|0,k|0)|0;Ha=C;Ka=yd(ya|0,0,x|0,0)|0;Ja=C;Oa=yd(za|0,0,Fc|0,0)|0;Na=C;Ma=yd(Ma|0,0,na|0,A|0)|0;La=C;fa=yd(E|0,m|0,fa|0,0)|0;J=C;D=yd(M|0,0,G|0,0)|0;la=C;P=yd(ta|0,0,F|0,f|0)|0;$=C;wa=yd(j|0,z|0,ua|0,k|0)|0;B=C;Aa=yd(Ic|0,sa|0,x|0,0)|0;va=C;I=yd(ya|0,0,Fc|0,0)|0;xa=C;za=yd(za|0,0,na|0,A|0)|0;za=nd(I|0,xa|0,za|0,C|0)|0;va=nd(za|0,C|0,Aa|0,va|0)|0;B=nd(va|0,C|0,wa|0,B|0)|0;$=nd(B|0,C|0,P|0,$|0)|0;la=nd($|0,C|0,D|0,la|0)|0;J=nd(la|0,C|0,fa|0,J|0)|0;fa=C;G=yd(E|0,m|0,G|0,0)|0;la=C;D=yd(M|0,0,F|0,f|0)|0;$=C;P=yd(ta|0,0,ua|0,k|0)|0;B=C;wa=yd(j|0,z|0,x|0,0)|0;va=C;Aa=yd(Ic|0,sa|0,Fc|0,0)|0;za=C;ya=yd(ya|0,0,na|0,A|0)|0;xa=C;f=yd(E|0,m|0,F|0,f|0)|0;F=C;I=yd(M|0,0,ua|0,k|0)|0;U=C;t=yd(ta|0,0,x|0,0)|0;ha=C;Gc=yd(j|0,z|0,Fc|0,0)|0;Hc=C;sa=yd(Ic|0,sa|0,na|0,A|0)|0;sa=nd(Gc|0,Hc|0,sa|0,C|0)|0;ha=nd(sa|0,C|0,t|0,ha|0)|0;U=nd(ha|0,C|0,I|0,U|0)|0;F=nd(U|0,C|0,f|0,F|0)|0;f=C;k=yd(E|0,m|0,ua|0,k|0)|0;ua=C;U=yd(M|0,0,x|0,0)|0;I=C;ha=yd(ta|0,0,Fc|0,0)|0;t=C;z=yd(j|0,z|0,na|0,A|0)|0;j=C;x=yd(E|0,m|0,x|0,0)|0;sa=C;Hc=yd(M|0,0,Fc|0,0)|0;Gc=C;ta=yd(ta|0,0,na|0,A|0)|0;ta=nd(Hc|0,Gc|0,ta|0,C|0)|0;sa=nd(ta|0,C|0,x|0,sa|0)|0;x=C;Fc=yd(E|0,m|0,Fc|0,0)|0;ta=C;M=yd(M|0,0,na|0,A|0)|0;M=nd(Fc|0,ta|0,M|0,C|0)|0;ta=C;A=yd(E|0,m|0,na|0,A|0)|0;na=C;m=nd(h|0,V|0,1048576,0)|0;m=pd(m|0,C|0,21)|0;E=C;s=nd(Dc|0,Cc|0,Bc|0,s|0)|0;s=nd(s|0,C|0,m|0,E|0)|0;ja=nd(s|0,C|0,ja&2097151|0,0)|0;s=C;E=qd(m|0,E|0,21)|0;E=md(h|0,V|0,E|0,C|0)|0;V=C;h=nd(n|0,K|0,1048576,0)|0;h=pd(h|0,C|0,21)|0;m=C;uc=nd(Ac|0,zc|0,xc|0,uc|0)|0;R=nd(uc|0,C|0,tc|0,R|0)|0;q=nd(R|0,C|0,X|0,q|0)|0;pa=nd(q|0,C|0,pa&2097151|0,0)|0;pa=nd(pa|0,C|0,h|0,m|0)|0;q=C;m=qd(h|0,m|0,21)|0;h=C;X=nd(N|0,L|0,1048576,0)|0;X=ld(X|0,C|0,21)|0;R=C;pc=nd(sc|0,rc|0,qc|0,pc|0)|0;nc=nd(pc|0,C|0,oc|0,nc|0)|0;lc=nd(nc|0,C|0,mc|0,lc|0)|0;jc=nd(lc|0,C|0,kc|0,jc|0)|0;Q=nd(jc|0,C|0,ic|0,Q|0)|0;ia=nd(Q|0,C|0,ia&2097151|0,0)|0;ia=nd(ia|0,C|0,X|0,R|0)|0;Q=C;R=qd(X|0,R|0,21)|0;R=md(N|0,L|0,R|0,C|0)|0;L=C;N=nd(da|0,ea|0,1048576,0)|0;N=ld(N|0,C|0,21)|0;X=C;ec=nd(hc|0,gc|0,fc|0,ec|0)|0;cc=nd(ec|0,C|0,dc|0,cc|0)|0;ac=nd(cc|0,C|0,bc|0,ac|0)|0;_b=nd(ac|0,C|0,$b|0,_b|0)|0;Yb=nd(_b|0,C|0,Zb|0,Yb|0)|0;Wb=nd(Yb|0,C|0,Xb|0,Wb|0)|0;p=nd(Wb|0,C|0,g|0,p|0)|0;Z=nd(p|0,C|0,_|0,Z|0)|0;Z=nd(Z|0,C|0,N|0,X|0)|0;_=C;X=qd(N|0,X|0,21)|0;N=C;p=nd(ga|0,W|0,1048576,0)|0;p=ld(p|0,C|0,21)|0;g=C;Sb=nd(Vb|0,Ub|0,Tb|0,Sb|0)|0;Qb=nd(Sb|0,C|0,Rb|0,Qb|0)|0;Ob=nd(Qb|0,C|0,Pb|0,Ob|0)|0;Mb=nd(Ob|0,C|0,Nb|0,Mb|0)|0;Kb=nd(Mb|0,C|0,Lb|0,Kb|0)|0;Ib=nd(Kb|0,C|0,Jb|0,Ib|0)|0;Gb=nd(Ib|0,C|0,Hb|0,Gb|0)|0;ra=nd(Gb|0,C|0,Fb|0,ra|0)|0;v=nd(ra|0,C|0,ca|0,v|0)|0;ba=nd(v|0,C|0,ba&2097151|0,0)|0;ba=nd(ba|0,C|0,p|0,g|0)|0;v=C;g=qd(p|0,g|0,21)|0;p=C;ca=nd(aa|0,S|0,1048576,0)|0;ca=ld(ca|0,C|0,21)|0;ra=C;zb=nd(Eb|0,Db|0,Cb|0,zb|0)|0;xb=nd(zb|0,C|0,yb|0,xb|0)|0;vb=nd(xb|0,C|0,wb|0,vb|0)|0;tb=nd(vb|0,C|0,ub|0,tb|0)|0;rb=nd(tb|0,C|0,sb|0,rb|0)|0;pb=nd(rb|0,C|0,qb|0,pb|0)|0;nb=nd(pb|0,C|0,ob|0,nb|0)|0;lb=nd(nb|0,C|0,mb|0,lb|0)|0;jb=nd(lb|0,C|0,kb|0,jb|0)|0;hb=nd(jb|0,C|0,ib|0,hb|0)|0;fb=nd(hb|0,C|0,gb|0,fb|0)|0;w=nd(fb|0,C|0,r|0,w|0)|0;w=nd(w|0,C|0,ca|0,ra|0)|0;r=C;ra=qd(ca|0,ra|0,21)|0;ra=md(aa|0,S|0,ra|0,C|0)|0;S=C;aa=nd(Y|0,ka|0,1048576,0)|0;aa=ld(aa|0,C|0,21)|0;ca=C;bb=nd(eb|0,db|0,cb|0,bb|0)|0;$a=nd(bb|0,C|0,ab|0,$a|0)|0;Za=nd($a|0,C|0,_a|0,Za|0)|0;Xa=nd(Za|0,C|0,Ya|0,Xa|0)|0;Va=nd(Xa|0,C|0,Wa|0,Va|0)|0;Ta=nd(Va|0,C|0,Ua|0,Ta|0)|0;Ra=nd(Ta|0,C|0,Sa|0,Ra|0)|0;Pa=nd(Ra|0,C|0,Qa|0,Pa|0)|0;O=nd(Pa|0,C|0,T|0,O|0)|0;O=nd(O|0,C|0,aa|0,ca|0)|0;T=C;ca=qd(aa|0,ca|0,21)|0;ca=md(Y|0,ka|0,ca|0,C|0)|0;ka=C;Y=nd(y|0,ma|0,1048576,0)|0;Y=ld(Y|0,C|0,21)|0;aa=C;La=nd(Oa|0,Na|0,Ma|0,La|0)|0;Ja=nd(La|0,C|0,Ka|0,Ja|0)|0;Ha=nd(Ja|0,C|0,Ia|0,Ha|0)|0;Fa=nd(Ha|0,C|0,Ga|0,Fa|0)|0;Da=nd(Fa|0,C|0,Ea|0,Da|0)|0;Ba=nd(Da|0,C|0,Ca|0,Ba|0)|0;qa=nd(Ba|0,C|0,oa|0,qa|0)|0;qa=nd(qa|0,C|0,Y|0,aa|0)|0;oa=C;aa=qd(Y|0,aa|0,21)|0;aa=md(y|0,ma|0,aa|0,C|0)|0;ma=C;y=nd(J|0,fa|0,1048576,0)|0;y=ld(y|0,C|0,21)|0;Y=C;xa=nd(Aa|0,za|0,ya|0,xa|0)|0;va=nd(xa|0,C|0,wa|0,va|0)|0;B=nd(va|0,C|0,P|0,B|0)|0;$=nd(B|0,C|0,D|0,$|0)|0;la=nd($|0,C|0,G|0,la|0)|0;la=nd(la|0,C|0,y|0,Y|0)|0;G=C;Y=qd(y|0,Y|0,21)|0;Y=md(J|0,fa|0,Y|0,C|0)|0;fa=C;J=nd(F|0,f|0,1048576,0)|0;J=ld(J|0,C|0,21)|0;y=C;j=nd(ha|0,t|0,z|0,j|0)|0;I=nd(j|0,C|0,U|0,I|0)|0;ua=nd(I|0,C|0,k|0,ua|0)|0;ua=nd(ua|0,C|0,J|0,y|0)|0;k=C;y=qd(J|0,y|0,21)|0;y=md(F|0,f|0,y|0,C|0)|0;f=C;F=nd(sa|0,x|0,1048576,0)|0;F=ld(F|0,C|0,21)|0;J=C;ta=nd(M|0,ta|0,F|0,J|0)|0;M=C;J=qd(F|0,J|0,21)|0;J=md(sa|0,x|0,J|0,C|0)|0;x=C;sa=nd(A|0,na|0,1048576,0)|0;sa=ld(sa|0,C|0,21)|0;F=C;I=qd(sa|0,F|0,21)|0;I=md(A|0,na|0,I|0,C|0)|0;na=C;A=nd(ja|0,s|0,1048576,0)|0;A=pd(A|0,C|0,21)|0;U=C;j=qd(A|0,U|0,21)|0;j=md(ja|0,s|0,j|0,C|0)|0;s=C;ja=nd(pa|0,q|0,1048576,0)|0;ja=ld(ja|0,C|0,21)|0;z=C;L=nd(ja|0,z|0,R|0,L|0)|0;R=C;z=qd(ja|0,z|0,21)|0;z=md(pa|0,q|0,z|0,C|0)|0;q=C;pa=nd(ia|0,Q|0,1048576,0)|0;pa=ld(pa|0,C|0,21)|0;ja=C;t=qd(pa|0,ja|0,21)|0;t=md(ia|0,Q|0,t|0,C|0)|0;Q=C;ia=nd(Z|0,_|0,1048576,0)|0;ia=ld(ia|0,C|0,21)|0;ha=C;$=qd(ia|0,ha|0,21)|0;D=C;B=nd(ba|0,v|0,1048576,0)|0;B=ld(B|0,C|0,21)|0;P=C;S=nd(B|0,P|0,ra|0,S|0)|0;ra=C;P=qd(B|0,P|0,21)|0;P=md(ba|0,v|0,P|0,C|0)|0;v=C;ba=nd(w|0,r|0,1048576,0)|0;ba=ld(ba|0,C|0,21)|0;B=C;ka=nd(ca|0,ka|0,ba|0,B|0)|0;ca=C;B=qd(ba|0,B|0,21)|0;B=md(w|0,r|0,B|0,C|0)|0;r=C;w=nd(O|0,T|0,1048576,0)|0;w=ld(w|0,C|0,21)|0;ba=C;ma=nd(aa|0,ma|0,w|0,ba|0)|0;aa=C;ba=qd(w|0,ba|0,21)|0;ba=md(O|0,T|0,ba|0,C|0)|0;T=C;O=nd(qa|0,oa|0,1048576,0)|0;O=ld(O|0,C|0,21)|0;w=C;fa=nd(Y|0,fa|0,O|0,w|0)|0;Y=C;w=qd(O|0,w|0,21)|0;w=md(qa|0,oa|0,w|0,C|0)|0;oa=C;qa=nd(la|0,G|0,1048576,0)|0;qa=ld(qa|0,C|0,21)|0;O=C;f=nd(qa|0,O|0,y|0,f|0)|0;y=C;O=qd(qa|0,O|0,21)|0;O=md(la|0,G|0,O|0,C|0)|0;G=C;la=nd(ua|0,k|0,1048576,0)|0;la=ld(la|0,C|0,21)|0;qa=C;x=nd(la|0,qa|0,J|0,x|0)|0;J=C;qa=qd(la|0,qa|0,21)|0;qa=md(ua|0,k|0,qa|0,C|0)|0;k=C;ua=nd(ta|0,M|0,1048576,0)|0;ua=ld(ua|0,C|0,21)|0;la=C;na=nd(ua|0,la|0,I|0,na|0)|0;I=C;la=qd(ua|0,la|0,21)|0;la=md(ta|0,M|0,la|0,C|0)|0;M=C;ta=yd(sa|0,F|0,666643,0)|0;r=nd(ta|0,C|0,B|0,r|0)|0;B=C;ta=yd(sa|0,F|0,470296,0)|0;ca=nd(ta|0,C|0,ka|0,ca|0)|0;ka=C;ta=yd(sa|0,F|0,654183,0)|0;T=nd(ta|0,C|0,ba|0,T|0)|0;ba=C;ta=yd(sa|0,F|0,-997805,-1)|0;aa=nd(ta|0,C|0,ma|0,aa|0)|0;ma=C;ta=yd(sa|0,F|0,136657,0)|0;oa=nd(ta|0,C|0,w|0,oa|0)|0;w=C;F=yd(sa|0,F|0,-683901,-1)|0;F=nd(fa|0,Y|0,F|0,C|0)|0;Y=C;fa=yd(na|0,I|0,666643,0)|0;ra=nd(fa|0,C|0,S|0,ra|0)|0;S=C;fa=yd(na|0,I|0,470296,0)|0;B=nd(fa|0,C|0,r|0,B|0)|0;r=C;fa=yd(na|0,I|0,654183,0)|0;ka=nd(fa|0,C|0,ca|0,ka|0)|0;ca=C;fa=yd(na|0,I|0,-997805,-1)|0;ba=nd(fa|0,C|0,T|0,ba|0)|0;T=C;fa=yd(na|0,I|0,136657,0)|0;ma=nd(fa|0,C|0,aa|0,ma|0)|0;aa=C;I=yd(na|0,I|0,-683901,-1)|0;I=nd(oa|0,w|0,I|0,C|0)|0;w=C;oa=yd(la|0,M|0,666643,0)|0;v=nd(oa|0,C|0,P|0,v|0)|0;P=C;oa=yd(la|0,M|0,470296,0)|0;S=nd(oa|0,C|0,ra|0,S|0)|0;ra=C;oa=yd(la|0,M|0,654183,0)|0;r=nd(oa|0,C|0,B|0,r|0)|0;B=C;oa=yd(la|0,M|0,-997805,-1)|0;ca=nd(oa|0,C|0,ka|0,ca|0)|0;ka=C;oa=yd(la|0,M|0,136657,0)|0;T=nd(oa|0,C|0,ba|0,T|0)|0;ba=C;M=yd(la|0,M|0,-683901,-1)|0;M=nd(ma|0,aa|0,M|0,C|0)|0;aa=C;ma=yd(x|0,J|0,666643,0)|0;la=C;oa=yd(x|0,J|0,470296,0)|0;P=nd(oa|0,C|0,v|0,P|0)|0;v=C;oa=yd(x|0,J|0,654183,0)|0;ra=nd(oa|0,C|0,S|0,ra|0)|0;S=C;oa=yd(x|0,J|0,-997805,-1)|0;B=nd(oa|0,C|0,r|0,B|0)|0;r=C;oa=yd(x|0,J|0,136657,0)|0;ka=nd(oa|0,C|0,ca|0,ka|0)|0;ca=C;J=yd(x|0,J|0,-683901,-1)|0;J=nd(T|0,ba|0,J|0,C|0)|0;ba=C;T=yd(qa|0,k|0,666643,0)|0;x=C;oa=yd(qa|0,k|0,470296,0)|0;na=C;fa=yd(qa|0,k|0,654183,0)|0;v=nd(fa|0,C|0,P|0,v|0)|0;P=C;fa=yd(qa|0,k|0,-997805,-1)|0;fa=nd(ra|0,S|0,fa|0,C|0)|0;S=C;ra=yd(qa|0,k|0,136657,0)|0;r=nd(ra|0,C|0,B|0,r|0)|0;B=C;k=yd(qa|0,k|0,-683901,-1)|0;k=nd(ka|0,ca|0,k|0,C|0)|0;ca=C;ka=yd(f|0,y|0,666643,0)|0;ka=nd(pa|0,ja|0,ka|0,C|0)|0;ea=nd(ka|0,C|0,da|0,ea|0)|0;N=md(ea|0,C|0,X|0,N|0)|0;X=C;ea=yd(f|0,y|0,470296,0)|0;da=C;ka=yd(f|0,y|0,654183,0)|0;ja=C;la=nd(oa|0,na|0,ma|0,la|0)|0;ja=nd(la|0,C|0,ka|0,ja|0)|0;ha=nd(ja|0,C|0,ia|0,ha|0)|0;W=nd(ha|0,C|0,ga|0,W|0)|0;p=md(W|0,C|0,g|0,p|0)|0;g=C;W=yd(f|0,y|0,-997805,-1)|0;W=nd(v|0,P|0,W|0,C|0)|0;P=C;v=yd(f|0,y|0,136657,0)|0;v=nd(fa|0,S|0,v|0,C|0)|0;S=C;y=yd(f|0,y|0,-683901,-1)|0;y=nd(r|0,B|0,y|0,C|0)|0;B=C;r=nd(N|0,X|0,1048576,0)|0;r=ld(r|0,C|0,21)|0;f=C;x=nd(ea|0,da|0,T|0,x|0)|0;_=nd(x|0,C|0,Z|0,_|0)|0;D=md(_|0,C|0,$|0,D|0)|0;D=nd(D|0,C|0,r|0,f|0)|0;$=C;f=qd(r|0,f|0,21)|0;f=md(N|0,X|0,f|0,C|0)|0;X=C;N=nd(p|0,g|0,1048576,0)|0;N=ld(N|0,C|0,21)|0;r=C;P=nd(W|0,P|0,N|0,r|0)|0;W=C;r=qd(N|0,r|0,21)|0;r=md(p|0,g|0,r|0,C|0)|0;g=C;p=nd(v|0,S|0,1048576,0)|0;p=ld(p|0,C|0,21)|0;N=C;B=nd(y|0,B|0,p|0,N|0)|0;y=C;N=qd(p|0,N|0,21)|0;N=md(v|0,S|0,N|0,C|0)|0;S=C;v=nd(k|0,ca|0,1048576,0)|0;v=ld(v|0,C|0,21)|0;p=C;ba=nd(v|0,p|0,J|0,ba|0)|0;J=C;p=qd(v|0,p|0,21)|0;p=md(k|0,ca|0,p|0,C|0)|0;ca=C;k=nd(M|0,aa|0,1048576,0)|0;k=ld(k|0,C|0,21)|0;v=C;w=nd(k|0,v|0,I|0,w|0)|0;I=C;v=qd(k|0,v|0,21)|0;v=md(M|0,aa|0,v|0,C|0)|0;aa=C;M=nd(F|0,Y|0,1048576,0)|0;M=ld(M|0,C|0,21)|0;k=C;G=nd(M|0,k|0,O|0,G|0)|0;O=C;k=qd(M|0,k|0,21)|0;k=md(F|0,Y|0,k|0,C|0)|0;Y=C;F=nd(D|0,$|0,1048576,0)|0;F=ld(F|0,C|0,21)|0;M=C;g=nd(F|0,M|0,r|0,g|0)|0;r=C;M=qd(F|0,M|0,21)|0;M=md(D|0,$|0,M|0,C|0)|0;$=C;D=nd(P|0,W|0,1048576,0)|0;D=ld(D|0,C|0,21)|0;F=C;S=nd(D|0,F|0,N|0,S|0)|0;N=C;F=qd(D|0,F|0,21)|0;F=md(P|0,W|0,F|0,C|0)|0;W=C;P=nd(B|0,y|0,1048576,0)|0;P=ld(P|0,C|0,21)|0;D=C;ca=nd(P|0,D|0,p|0,ca|0)|0;p=C;D=qd(P|0,D|0,21)|0;D=md(B|0,y|0,D|0,C|0)|0;y=C;B=nd(ba|0,J|0,1048576,0)|0;B=ld(B|0,C|0,21)|0;P=C;aa=nd(B|0,P|0,v|0,aa|0)|0;v=C;P=qd(B|0,P|0,21)|0;P=md(ba|0,J|0,P|0,C|0)|0;J=C;ba=nd(w|0,I|0,1048576,0)|0;ba=ld(ba|0,C|0,21)|0;B=C;Y=nd(ba|0,B|0,k|0,Y|0)|0;k=C;B=qd(ba|0,B|0,21)|0;B=md(w|0,I|0,B|0,C|0)|0;I=C;w=yd(G|0,O|0,666643,0)|0;Q=nd(w|0,C|0,t|0,Q|0)|0;t=C;w=yd(G|0,O|0,470296,0)|0;X=nd(w|0,C|0,f|0,X|0)|0;f=C;w=yd(G|0,O|0,654183,0)|0;$=nd(w|0,C|0,M|0,$|0)|0;M=C;w=yd(G|0,O|0,-997805,-1)|0;r=nd(w|0,C|0,g|0,r|0)|0;g=C;w=yd(G|0,O|0,136657,0)|0;W=nd(w|0,C|0,F|0,W|0)|0;F=C;O=yd(G|0,O|0,-683901,-1)|0;O=nd(S|0,N|0,O|0,C|0)|0;N=C;S=yd(Y|0,k|0,666643,0)|0;R=nd(S|0,C|0,L|0,R|0)|0;L=C;S=yd(Y|0,k|0,470296,0)|0;t=nd(S|0,C|0,Q|0,t|0)|0;Q=C;S=yd(Y|0,k|0,654183,0)|0;f=nd(S|0,C|0,X|0,f|0)|0;X=C;S=yd(Y|0,k|0,-997805,-1)|0;M=nd(S|0,C|0,$|0,M|0)|0;$=C;S=yd(Y|0,k|0,136657,0)|0;g=nd(S|0,C|0,r|0,g|0)|0;r=C;k=yd(Y|0,k|0,-683901,-1)|0;k=nd(W|0,F|0,k|0,C|0)|0;F=C;W=yd(B|0,I|0,666643,0)|0;W=nd(z|0,q|0,W|0,C|0)|0;q=C;z=yd(B|0,I|0,470296,0)|0;L=nd(z|0,C|0,R|0,L|0)|0;R=C;z=yd(B|0,I|0,654183,0)|0;Q=nd(z|0,C|0,t|0,Q|0)|0;t=C;z=yd(B|0,I|0,-997805,-1)|0;X=nd(z|0,C|0,f|0,X|0)|0;f=C;z=yd(B|0,I|0,136657,0)|0;$=nd(z|0,C|0,M|0,$|0)|0;M=C;I=yd(B|0,I|0,-683901,-1)|0;I=nd(g|0,r|0,I|0,C|0)|0;r=C;g=yd(aa|0,v|0,666643,0)|0;B=C;z=yd(aa|0,v|0,470296,0)|0;z=nd(W|0,q|0,z|0,C|0)|0;q=C;W=yd(aa|0,v|0,654183,0)|0;W=nd(L|0,R|0,W|0,C|0)|0;R=C;L=yd(aa|0,v|0,-997805,-1)|0;L=nd(Q|0,t|0,L|0,C|0)|0;t=C;Q=yd(aa|0,v|0,136657,0)|0;Q=nd(X|0,f|0,Q|0,C|0)|0;f=C;v=yd(aa|0,v|0,-683901,-1)|0;v=nd($|0,M|0,v|0,C|0)|0;M=C;$=yd(P|0,J|0,666643,0)|0;aa=C;X=yd(P|0,J|0,470296,0)|0;Y=C;S=yd(P|0,J|0,654183,0)|0;S=nd(z|0,q|0,S|0,C|0)|0;q=C;z=yd(P|0,J|0,-997805,-1)|0;z=nd(W|0,R|0,z|0,C|0)|0;R=C;W=yd(P|0,J|0,136657,0)|0;W=nd(L|0,t|0,W|0,C|0)|0;t=C;J=yd(P|0,J|0,-683901,-1)|0;J=nd(Q|0,f|0,J|0,C|0)|0;f=C;Q=yd(ca|0,p|0,666643,0)|0;V=nd(Q|0,C|0,E|0,V|0)|0;E=C;Q=yd(ca|0,p|0,470296,0)|0;P=C;L=yd(ca|0,p|0,654183,0)|0;G=C;U=nd(n|0,K|0,A|0,U|0)|0;h=md(U|0,C|0,m|0,h|0)|0;B=nd(h|0,C|0,g|0,B|0)|0;G=nd(B|0,C|0,L|0,G|0)|0;Y=nd(G|0,C|0,X|0,Y|0)|0;X=C;G=yd(ca|0,p|0,-997805,-1)|0;G=nd(S|0,q|0,G|0,C|0)|0;q=C;S=yd(ca|0,p|0,136657,0)|0;S=nd(z|0,R|0,S|0,C|0)|0;R=C;p=yd(ca|0,p|0,-683901,-1)|0;p=nd(W|0,t|0,p|0,C|0)|0;t=C;W=nd(V|0,E|0,1048576,0)|0;W=ld(W|0,C|0,21)|0;ca=C;P=nd(j|0,s|0,Q|0,P|0)|0;aa=nd(P|0,C|0,$|0,aa|0)|0;aa=nd(aa|0,C|0,W|0,ca|0)|0;$=C;ca=qd(W|0,ca|0,21)|0;ca=md(V|0,E|0,ca|0,C|0)|0;E=C;V=nd(Y|0,X|0,1048576,0)|0;V=ld(V|0,C|0,21)|0;W=C;q=nd(V|0,W|0,G|0,q|0)|0;G=C;W=qd(V|0,W|0,21)|0;V=C;P=nd(S|0,R|0,1048576,0)|0;P=ld(P|0,C|0,21)|0;Q=C;t=nd(P|0,Q|0,p|0,t|0)|0;p=C;Q=qd(P|0,Q|0,21)|0;P=C;s=nd(J|0,f|0,1048576,0)|0;s=ld(s|0,C|0,21)|0;j=C;M=nd(s|0,j|0,v|0,M|0)|0;v=C;j=qd(s|0,j|0,21)|0;j=md(J|0,f|0,j|0,C|0)|0;f=C;J=nd(I|0,r|0,1048576,0)|0;J=ld(J|0,C|0,21)|0;s=C;F=nd(k|0,F|0,J|0,s|0)|0;k=C;s=qd(J|0,s|0,21)|0;s=md(I|0,r|0,s|0,C|0)|0;r=C;I=nd(O|0,N|0,1048576,0)|0;I=ld(I|0,C|0,21)|0;J=C;y=nd(D|0,y|0,I|0,J|0)|0;D=C;J=qd(I|0,J|0,21)|0;I=C;z=nd(aa|0,$|0,1048576,0)|0;z=ld(z|0,C|0,21)|0;L=C;B=qd(z|0,L|0,21)|0;g=C;h=nd(q|0,G|0,1048576,0)|0;h=ld(h|0,C|0,21)|0;m=C;U=qd(h|0,m|0,21)|0;U=md(q|0,G|0,U|0,C|0)|0;G=C;q=nd(t|0,p|0,1048576,0)|0;q=ld(q|0,C|0,21)|0;A=C;f=nd(j|0,f|0,q|0,A|0)|0;j=C;A=qd(q|0,A|0,21)|0;A=md(t|0,p|0,A|0,C|0)|0;p=C;t=nd(M|0,v|0,1048576,0)|0;t=ld(t|0,C|0,21)|0;q=C;r=nd(s|0,r|0,t|0,q|0)|0;s=C;q=qd(t|0,q|0,21)|0;q=md(M|0,v|0,q|0,C|0)|0;v=C;M=nd(F|0,k|0,1048576,0)|0;M=ld(M|0,C|0,21)|0;t=C;K=qd(M|0,t|0,21)|0;K=md(F|0,k|0,K|0,C|0)|0;k=C;F=nd(y|0,D|0,1048576,0)|0;F=ld(F|0,C|0,21)|0;n=C;w=qd(F|0,n|0,21)|0;w=md(y|0,D|0,w|0,C|0)|0;D=C;y=yd(F|0,n|0,666643,0)|0;y=nd(ca|0,E|0,y|0,C|0)|0;E=C;ca=yd(F|0,n|0,470296,0)|0;ba=C;_=yd(F|0,n|0,654183,0)|0;Z=C;x=yd(F|0,n|0,-997805,-1)|0;x=nd(U|0,G|0,x|0,C|0)|0;G=C;U=yd(F|0,n|0,136657,0)|0;T=C;n=yd(F|0,n|0,-683901,-1)|0;n=nd(A|0,p|0,n|0,C|0)|0;p=C;A=ld(y|0,E|0,21)|0;F=C;$=nd(ca|0,ba|0,aa|0,$|0)|0;g=md($|0,C|0,B|0,g|0)|0;g=nd(g|0,C|0,A|0,F|0)|0;B=C;F=qd(A|0,F|0,21)|0;F=md(y|0,E|0,F|0,C|0)|0;E=C;y=ld(g|0,B|0,21)|0;A=C;X=nd(_|0,Z|0,Y|0,X|0)|0;V=md(X|0,C|0,W|0,V|0)|0;L=nd(V|0,C|0,z|0,L|0)|0;L=nd(L|0,C|0,y|0,A|0)|0;z=C;A=qd(y|0,A|0,21)|0;A=md(g|0,B|0,A|0,C|0)|0;B=C;g=ld(L|0,z|0,21)|0;y=C;G=nd(g|0,y|0,x|0,G|0)|0;x=C;y=qd(g|0,y|0,21)|0;y=md(L|0,z|0,y|0,C|0)|0;z=C;L=ld(G|0,x|0,21)|0;g=C;R=nd(U|0,T|0,S|0,R|0)|0;P=md(R|0,C|0,Q|0,P|0)|0;m=nd(P|0,C|0,h|0,m|0)|0;m=nd(m|0,C|0,L|0,g|0)|0;h=C;g=qd(L|0,g|0,21)|0;g=md(G|0,x|0,g|0,C|0)|0;x=C;G=ld(m|0,h|0,21)|0;L=C;p=nd(G|0,L|0,n|0,p|0)|0;n=C;L=qd(G|0,L|0,21)|0;L=md(m|0,h|0,L|0,C|0)|0;h=C;m=ld(p|0,n|0,21)|0;G=C;j=nd(f|0,j|0,m|0,G|0)|0;f=C;G=qd(m|0,G|0,21)|0;G=md(p|0,n|0,G|0,C|0)|0;n=C;p=ld(j|0,f|0,21)|0;m=C;v=nd(p|0,m|0,q|0,v|0)|0;q=C;m=qd(p|0,m|0,21)|0;m=md(j|0,f|0,m|0,C|0)|0;f=C;j=ld(v|0,q|0,21)|0;p=C;s=nd(r|0,s|0,j|0,p|0)|0;r=C;p=qd(j|0,p|0,21)|0;p=md(v|0,q|0,p|0,C|0)|0;q=C;v=ld(s|0,r|0,21)|0;j=C;k=nd(v|0,j|0,K|0,k|0)|0;K=C;j=qd(v|0,j|0,21)|0;j=md(s|0,r|0,j|0,C|0)|0;r=C;s=ld(k|0,K|0,21)|0;v=C;t=nd(O|0,N|0,M|0,t|0)|0;I=md(t|0,C|0,J|0,I|0)|0;I=nd(I|0,C|0,s|0,v|0)|0;J=C;v=qd(s|0,v|0,21)|0;v=md(k|0,K|0,v|0,C|0)|0;K=C;k=ld(I|0,J|0,21)|0;s=C;D=nd(k|0,s|0,w|0,D|0)|0;w=C;s=qd(k|0,s|0,21)|0;s=md(I|0,J|0,s|0,C|0)|0;J=C;I=ld(D|0,w|0,21)|0;k=C;t=qd(I|0,k|0,21)|0;t=md(D|0,w|0,t|0,C|0)|0;w=C;D=yd(I|0,k|0,666643,0)|0;E=nd(D|0,C|0,F|0,E|0)|0;F=C;D=yd(I|0,k|0,470296,0)|0;D=nd(A|0,B|0,D|0,C|0)|0;B=C;A=yd(I|0,k|0,654183,0)|0;A=nd(y|0,z|0,A|0,C|0)|0;z=C;y=yd(I|0,k|0,-997805,-1)|0;y=nd(g|0,x|0,y|0,C|0)|0;x=C;g=yd(I|0,k|0,136657,0)|0;g=nd(L|0,h|0,g|0,C|0)|0;h=C;k=yd(I|0,k|0,-683901,-1)|0;k=nd(G|0,n|0,k|0,C|0)|0;n=C;G=ld(E|0,F|0,21)|0;I=C;B=nd(D|0,B|0,G|0,I|0)|0;D=C;I=qd(G|0,I|0,21)|0;I=md(E|0,F|0,I|0,C|0)|0;F=C;E=ld(B|0,D|0,21)|0;G=C;z=nd(A|0,z|0,E|0,G|0)|0;A=C;G=qd(E|0,G|0,21)|0;G=md(B|0,D|0,G|0,C|0)|0;D=C;B=ld(z|0,A|0,21)|0;E=C;x=nd(B|0,E|0,y|0,x|0)|0;y=C;E=qd(B|0,E|0,21)|0;E=md(z|0,A|0,E|0,C|0)|0;A=C;z=ld(x|0,y|0,21)|0;B=C;h=nd(g|0,h|0,z|0,B|0)|0;g=C;B=qd(z|0,B|0,21)|0;B=md(x|0,y|0,B|0,C|0)|0;y=C;x=ld(h|0,g|0,21)|0;z=C;n=nd(x|0,z|0,k|0,n|0)|0;k=C;z=qd(x|0,z|0,21)|0;z=md(h|0,g|0,z|0,C|0)|0;g=C;h=ld(n|0,k|0,21)|0;x=C;f=nd(h|0,x|0,m|0,f|0)|0;m=C;x=qd(h|0,x|0,21)|0;x=md(n|0,k|0,x|0,C|0)|0;k=C;n=ld(f|0,m|0,21)|0;h=C;q=nd(n|0,h|0,p|0,q|0)|0;p=C;h=qd(n|0,h|0,21)|0;h=md(f|0,m|0,h|0,C|0)|0;m=C;f=ld(q|0,p|0,21)|0;n=C;r=nd(f|0,n|0,j|0,r|0)|0;j=C;n=qd(f|0,n|0,21)|0;n=md(q|0,p|0,n|0,C|0)|0;p=C;q=ld(r|0,j|0,21)|0;f=C;K=nd(q|0,f|0,v|0,K|0)|0;v=C;f=qd(q|0,f|0,21)|0;f=md(r|0,j|0,f|0,C|0)|0;j=C;r=ld(K|0,v|0,21)|0;q=C;J=nd(r|0,q|0,s|0,J|0)|0;s=C;q=qd(r|0,q|0,21)|0;q=md(K|0,v|0,q|0,C|0)|0;v=C;K=ld(J|0,s|0,21)|0;r=C;w=nd(K|0,r|0,t|0,w|0)|0;t=C;r=qd(K|0,r|0,21)|0;r=md(J|0,s|0,r|0,C|0)|0;s=C;a[H>>0]=I;H=pd(I|0,F|0,8)|0;a[b+33>>0]=H;F=pd(I|0,F|0,16)|0;I=C;H=qd(G|0,D|0,5)|0;a[b+34>>0]=H|F;F=pd(G|0,D|0,3)|0;a[b+35>>0]=F;F=pd(G|0,D|0,11)|0;a[b+36>>0]=F;D=pd(G|0,D|0,19)|0;G=C;F=qd(E|0,A|0,2)|0;a[b+37>>0]=F|D;D=pd(E|0,A|0,6)|0;a[b+38>>0]=D;A=pd(E|0,A|0,14)|0;E=C;D=qd(B|0,y|0,7)|0;a[b+39>>0]=D|A;A=pd(B|0,y|0,1)|0;a[b+40>>0]=A;A=pd(B|0,y|0,9)|0;a[b+41>>0]=A;y=pd(B|0,y|0,17)|0;B=C;A=qd(z|0,g|0,4)|0;a[b+42>>0]=A|y;y=pd(z|0,g|0,4)|0;a[b+43>>0]=y;y=pd(z|0,g|0,12)|0;a[b+44>>0]=y;g=pd(z|0,g|0,20)|0;z=C;y=qd(x|0,k|0,1)|0;a[b+45>>0]=y|g;g=pd(x|0,k|0,7)|0;a[b+46>>0]=g;k=pd(x|0,k|0,15)|0;x=C;g=qd(h|0,m|0,6)|0;a[b+47>>0]=g|k;k=pd(h|0,m|0,2)|0;a[b+48>>0]=k;k=pd(h|0,m|0,10)|0;a[b+49>>0]=k;m=pd(h|0,m|0,18)|0;h=C;k=qd(n|0,p|0,3)|0;a[b+50>>0]=k|m;m=pd(n|0,p|0,5)|0;a[b+51>>0]=m;p=pd(n|0,p|0,13)|0;a[b+52>>0]=p;a[b+53>>0]=f;p=pd(f|0,j|0,8)|0;a[b+54>>0]=p;j=pd(f|0,j|0,16)|0;f=C;p=qd(q|0,v|0,5)|0;a[b+55>>0]=p|j;j=pd(q|0,v|0,3)|0;a[b+56>>0]=j;j=pd(q|0,v|0,11)|0;a[b+57>>0]=j;v=pd(q|0,v|0,19)|0;q=C;j=qd(r|0,s|0,2)|0;a[b+58>>0]=j|v;v=pd(r|0,s|0,6)|0;a[b+59>>0]=v;s=pd(r|0,s|0,14)|0;r=C;v=qd(w|0,t|0,7)|0;a[b+60>>0]=s|v;v=pd(w|0,t|0,1)|0;a[b+61>>0]=v;v=pd(w|0,t|0,9)|0;a[b+62>>0]=v;t=pd(w|0,t|0,17)|0;a[b+63>>0]=t;t=l+0|0;w=t+64|0;do{a[t>>0]=0;t=t+1|0}while((t|0)<(w|0));t=o+0|0;w=t+64|0;do{a[t>>0]=0;t=t+1|0}while((t|0)<(w|0));if(!e){i=u;return}Ic=e;c[Ic>>2]=64;c[Ic+4>>2]=0;i=u;return}function Lc(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;k=i;j=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=k;return}Nc(j,h);c[j+48>>2]=1;c[j+52>>2]=0;c[j+56>>2]=(d[g+1>>0]|0)<<8|(d[g>>0]|0)|(d[g+2>>0]|0)<<16|(d[g+3>>0]|0)<<24;c[j+60>>2]=(d[g+5>>0]|0)<<8|(d[g+4>>0]|0)|(d[g+6>>0]|0)<<16|(d[g+7>>0]|0)<<24;Oc(j,b,a,e,f);f=j+0|0;e=f+64|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));i=k;return}function Mc(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;k=i;j=i=i+63&-64;i=i+64|0;if((e|0)==0&(f|0)==0){i=k;return}Nc(j,h);c[j+48>>2]=1;c[j+52>>2]=(d[g+1>>0]|0)<<8|(d[g>>0]|0)|(d[g+2>>0]|0)<<16|(d[g+3>>0]|0)<<24;c[j+56>>2]=(d[g+5>>0]|0)<<8|(d[g+4>>0]|0)|(d[g+6>>0]|0)<<16|(d[g+7>>0]|0)<<24;c[j+60>>2]=(d[g+9>>0]|0)<<8|(d[g+8>>0]|0)|(d[g+10>>0]|0)<<16|(d[g+11>>0]|0)<<24;Oc(j,b,a,e,f);f=j+0|0;e=f+64|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));i=k;return}function Nc(a,b){a=a|0;b=b|0;c[a+16>>2]=(d[b+1>>0]|0)<<8|(d[b>>0]|0)|(d[b+2>>0]|0)<<16|(d[b+3>>0]|0)<<24;c[a+20>>2]=(d[b+5>>0]|0)<<8|(d[b+4>>0]|0)|(d[b+6>>0]|0)<<16|(d[b+7>>0]|0)<<24;c[a+24>>2]=(d[b+9>>0]|0)<<8|(d[b+8>>0]|0)|(d[b+10>>0]|0)<<16|(d[b+11>>0]|0)<<24;c[a+28>>2]=(d[b+13>>0]|0)<<8|(d[b+12>>0]|0)|(d[b+14>>0]|0)<<16|(d[b+15>>0]|0)<<24;c[a+32>>2]=(d[b+17>>0]|0)<<8|(d[b+16>>0]|0)|(d[b+18>>0]|0)<<16|(d[b+19>>0]|0)<<24;c[a+36>>2]=(d[b+21>>0]|0)<<8|(d[b+20>>0]|0)|(d[b+22>>0]|0)<<16|(d[b+23>>0]|0)<<24;c[a+40>>2]=(d[b+25>>0]|0)<<8|(d[b+24>>0]|0)|(d[b+26>>0]|0)<<16|(d[b+27>>0]|0)<<24;c[a+44>>2]=(d[b+29>>0]|0)<<8|(d[b+28>>0]|0)|(d[b+30>>0]|0)<<16|(d[b+31>>0]|0)<<24;c[a>>2]=1634760805;c[a+4>>2]=857760878;c[a+8>>2]=2036477234;c[a+12>>2]=1797285236;return}function Oc(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;V=i;S=i=i+63&-64;i=i+64|0;if((g|0)==0&(h|0)==0){i=V;return}P=c[b>>2]|0;Q=c[b+4>>2]|0;R=c[b+8>>2]|0;F=c[b+12>>2]|0;G=c[b+16>>2]|0;H=c[b+20>>2]|0;I=c[b+24>>2]|0;J=c[b+28>>2]|0;K=c[b+32>>2]|0;L=c[b+36>>2]|0;M=c[b+40>>2]|0;N=c[b+44>>2]|0;T=b+48|0;U=b+52|0;O=c[b+56>>2]|0;E=c[b+60>>2]|0;b=0;k=c[T>>2]|0;j=c[U>>2]|0;while(1){D=h>>>0<0|(h|0)==0&g>>>0<64;if(D){b=0;do{a[S+b>>0]=a[e+b>>0]|0;b=b+1|0}while(0<h>>>0|0==(h|0)&b>>>0<g>>>0);e=S;B=S;A=f}else{B=f;A=b}f=20;b=P;l=Q;m=M;n=N;o=k;p=j;q=O;r=E;s=R;t=F;u=G;v=H;w=I;x=J;y=K;z=L;do{ja=b+u|0;ea=ja^o;ea=ea<<16|ea>>>16;$=ea+y|0;W=$^u;W=W<<12|W>>>20;ja=W+ja|0;ea=ja^ea;ea=ea<<8|ea>>>24;$=ea+$|0;W=$^W;W=W<<7|W>>>25;fa=l+v|0;aa=fa^p;aa=aa<<16|aa>>>16;X=aa+z|0;ga=X^v;ga=ga<<12|ga>>>20;fa=ga+fa|0;aa=fa^aa;aa=aa<<8|aa>>>24;X=aa+X|0;ga=X^ga;ga=ga<<7|ga>>>25;ba=s+w|0;Y=ba^q;Y=Y<<16|Y>>>16;ha=Y+m|0;ca=ha^w;ca=ca<<12|ca>>>20;ba=ca+ba|0;Y=ba^Y;Y=Y<<8|Y>>>24;ha=Y+ha|0;ca=ha^ca;ca=ca<<7|ca>>>25;Z=t+x|0;ia=Z^r;ia=ia<<16|ia>>>16;da=ia+n|0;_=da^x;_=_<<12|_>>>20;Z=_+Z|0;ia=Z^ia;ia=ia<<8|ia>>>24;da=ia+da|0;_=da^_;_=_<<7|_>>>25;ja=ga+ja|0;ia=ja^ia;ia=ia<<16|ia>>>16;ha=ia+ha|0;ga=ha^ga;ga=ga<<12|ga>>>20;b=ga+ja|0;ia=b^ia;r=ia<<8|ia>>>24;m=r+ha|0;ga=m^ga;v=ga<<7|ga>>>25;fa=ca+fa|0;ea=fa^ea;ea=ea<<16|ea>>>16;da=ea+da|0;ca=da^ca;ca=ca<<12|ca>>>20;l=ca+fa|0;ea=l^ea;o=ea<<8|ea>>>24;n=o+da|0;ca=n^ca;w=ca<<7|ca>>>25;ba=_+ba|0;aa=ba^aa;aa=aa<<16|aa>>>16;$=aa+$|0;_=$^_;_=_<<12|_>>>20;s=_+ba|0;aa=s^aa;p=aa<<8|aa>>>24;y=p+$|0;_=y^_;x=_<<7|_>>>25;Z=W+Z|0;Y=Z^Y;Y=Y<<16|Y>>>16;X=Y+X|0;W=X^W;W=W<<12|W>>>20;t=W+Z|0;Y=t^Y;q=Y<<8|Y>>>24;z=q+X|0;W=z^W;u=W<<7|W>>>25;f=f+-2|0}while((f|0)!=0);W=((d[e+1>>0]|0)<<8|(d[e>>0]|0)|(d[e+2>>0]|0)<<16|(d[e+3>>0]|0)<<24)^b+P;X=((d[e+5>>0]|0)<<8|(d[e+4>>0]|0)|(d[e+6>>0]|0)<<16|(d[e+7>>0]|0)<<24)^l+Q;Y=((d[e+9>>0]|0)<<8|(d[e+8>>0]|0)|(d[e+10>>0]|0)<<16|(d[e+11>>0]|0)<<24)^s+R;Z=((d[e+13>>0]|0)<<8|(d[e+12>>0]|0)|(d[e+14>>0]|0)<<16|(d[e+15>>0]|0)<<24)^t+F;_=((d[e+17>>0]|0)<<8|(d[e+16>>0]|0)|(d[e+18>>0]|0)<<16|(d[e+19>>0]|0)<<24)^u+G;$=((d[e+21>>0]|0)<<8|(d[e+20>>0]|0)|(d[e+22>>0]|0)<<16|(d[e+23>>0]|0)<<24)^v+H;aa=((d[e+25>>0]|0)<<8|(d[e+24>>0]|0)|(d[e+26>>0]|0)<<16|(d[e+27>>0]|0)<<24)^w+I;ba=((d[e+29>>0]|0)<<8|(d[e+28>>0]|0)|(d[e+30>>0]|0)<<16|(d[e+31>>0]|0)<<24)^x+J;ca=((d[e+33>>0]|0)<<8|(d[e+32>>0]|0)|(d[e+34>>0]|0)<<16|(d[e+35>>0]|0)<<24)^y+K;da=((d[e+37>>0]|0)<<8|(d[e+36>>0]|0)|(d[e+38>>0]|0)<<16|(d[e+39>>0]|0)<<24)^z+L;ea=((d[e+41>>0]|0)<<8|(d[e+40>>0]|0)|(d[e+42>>0]|0)<<16|(d[e+43>>0]|0)<<24)^m+M;fa=((d[e+45>>0]|0)<<8|(d[e+44>>0]|0)|(d[e+46>>0]|0)<<16|(d[e+47>>0]|0)<<24)^n+N;ga=((d[e+49>>0]|0)<<8|(d[e+48>>0]|0)|(d[e+50>>0]|0)<<16|(d[e+51>>0]|0)<<24)^o+k;ha=((d[e+53>>0]|0)<<8|(d[e+52>>0]|0)|(d[e+54>>0]|0)<<16|(d[e+55>>0]|0)<<24)^p+j;ia=((d[e+57>>0]|0)<<8|(d[e+56>>0]|0)|(d[e+58>>0]|0)<<16|(d[e+59>>0]|0)<<24)^q+O;ja=((d[e+61>>0]|0)<<8|(d[e+60>>0]|0)|(d[e+62>>0]|0)<<16|(d[e+63>>0]|0)<<24)^r+E;k=k+1|0;j=((k|0)==0&1)+j|0;a[B>>0]=W;a[B+1>>0]=W>>>8;a[B+2>>0]=W>>>16;a[B+3>>0]=W>>>24;a[B+4>>0]=X;a[B+5>>0]=X>>>8;a[B+6>>0]=X>>>16;a[B+7>>0]=X>>>24;a[B+8>>0]=Y;a[B+9>>0]=Y>>>8;a[B+10>>0]=Y>>>16;a[B+11>>0]=Y>>>24;a[B+12>>0]=Z;a[B+13>>0]=Z>>>8;a[B+14>>0]=Z>>>16;a[B+15>>0]=Z>>>24;a[B+16>>0]=_;a[B+17>>0]=_>>>8;a[B+18>>0]=_>>>16;a[B+19>>0]=_>>>24;a[B+20>>0]=$;a[B+21>>0]=$>>>8;a[B+22>>0]=$>>>16;a[B+23>>0]=$>>>24;a[B+24>>0]=aa;a[B+25>>0]=aa>>>8;a[B+26>>0]=aa>>>16;a[B+27>>0]=aa>>>24;a[B+28>>0]=ba;a[B+29>>0]=ba>>>8;a[B+30>>0]=ba>>>16;a[B+31>>0]=ba>>>24;a[B+32>>0]=ca;a[B+33>>0]=ca>>>8;a[B+34>>0]=ca>>>16;a[B+35>>0]=ca>>>24;a[B+36>>0]=da;a[B+37>>0]=da>>>8;a[B+38>>0]=da>>>16;a[B+39>>0]=da>>>24;a[B+40>>0]=ea;a[B+41>>0]=ea>>>8;a[B+42>>0]=ea>>>16;a[B+43>>0]=ea>>>24;a[B+44>>0]=fa;a[B+45>>0]=fa>>>8;a[B+46>>0]=fa>>>16;a[B+47>>0]=fa>>>24;a[B+48>>0]=ga;a[B+49>>0]=ga>>>8;a[B+50>>0]=ga>>>16;a[B+51>>0]=ga>>>24;a[B+52>>0]=ha;a[B+53>>0]=ha>>>8;a[B+54>>0]=ha>>>16;a[B+55>>0]=ha>>>24;a[B+56>>0]=ia;a[B+57>>0]=ia>>>8;a[B+58>>0]=ia>>>16;a[B+59>>0]=ia>>>24;a[B+60>>0]=ja;a[B+61>>0]=ja>>>8;a[B+62>>0]=ja>>>16;a[B+63>>0]=ja>>>24;if(h>>>0<0|(h|0)==0&g>>>0<65)break;b=nd(g|0,h|0,-64,-1)|0;e=e+64|0;f=B+64|0;h=C;g=b;b=A}if(D?(g|0)!=0:0){b=0;do{a[A+b>>0]=a[B+b>>0]|0;b=b+1|0}while((b|0)!=(g|0))}c[T>>2]=k;c[U>>2]=j;i=V;return}function Pc(b,c){b=b|0;c=c|0;return ((((a[c+1>>0]^a[b+1>>0]|a[c>>0]^a[b>>0]|a[c+2>>0]^a[b+2>>0]|a[c+3>>0]^a[b+3>>0]|a[c+4>>0]^a[b+4>>0]|a[c+5>>0]^a[b+5>>0]|a[c+6>>0]^a[b+6>>0]|a[c+7>>0]^a[b+7>>0]|a[c+8>>0]^a[b+8>>0]|a[c+9>>0]^a[b+9>>0]|a[c+10>>0]^a[b+10>>0]|a[c+11>>0]^a[b+11>>0]|a[c+12>>0]^a[b+12>>0]|a[c+13>>0]^a[b+13>>0]|a[c+14>>0]^a[b+14>>0]|a[c+15>>0]^a[b+15>>0]|a[c+16>>0]^a[b+16>>0]|a[c+17>>0]^a[b+17>>0]|a[c+18>>0]^a[b+18>>0]|a[c+19>>0]^a[b+19>>0]|a[c+20>>0]^a[b+20>>0]|a[c+21>>0]^a[b+21>>0]|a[c+22>>0]^a[b+22>>0]|a[c+23>>0]^a[b+23>>0]|a[c+24>>0]^a[b+24>>0]|a[c+25>>0]^a[b+25>>0]|a[c+26>>0]^a[b+26>>0]|a[c+27>>0]^a[b+27>>0]|a[c+28>>0]^a[b+28>>0]|a[c+29>>0]^a[b+29>>0]|a[c+30>>0]^a[b+30>>0]|a[c+31>>0]^a[b+31>>0])&255)+511|0)>>>8&1)+-1|0}function Qc(a){a=a|0;c[8096]=a;return 0}function Rc(){return pa(0)|0}function Sc(){pa(1);return}function Tc(a){a=a|0;var b=0,d=0;b=c[8096]|0;if((b|0)!=0?(d=c[b+12>>2]|0,(d|0)!=0):0){a=sa[d&31](a)|0;return a|0}if(a>>>0<2){a=0;return a|0}d=((0-a|0)>>>0)%(a>>>0)|0;do b=pa(0)|0;while(b>>>0<d>>>0);a=(b>>>0)%(a>>>0)|0;return a|0}function Uc(b,c){b=b|0;c=c|0;var d=0;if(!c)return;else d=0;do{a[b+d>>0]=pa(0)|0;d=d+1|0}while((d|0)!=(c|0));return}function Vc(){var a=0;a=c[8096]|0;if(!a){a=0;return a|0}a=c[a+20>>2]|0;if(!a){a=0;return a|0}a=ra[a&31]()|0;return a|0}function Wc(){var a=0,b=0;if(c[8266]|0){b=1;return b|0}pa(1);a=na(30)|0;if((a|0)>0)c[8268]=a;else a=c[8268]|0;if(a>>>0<16)ia();else b=0;do{pa(0)|0;b=b+1|0}while((b|0)!=16);c[8266]=1;b=0;return b|0}function Xc(a,b){a=a|0;b=b|0;od(a|0,0,b|0)|0;return}function Yc(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;if(!d)e=0;else{e=0;f=0;do{e=a[c+f>>0]^a[b+f>>0]|e;f=f+1|0}while((f|0)!=(d|0))}return (((e&255)+511|0)>>>8&1)+-1|0}function Zc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=f<<1;if(!(f>>>0<2147483647&g>>>0<c>>>0))ia();if(!f){f=0;f=b+f|0;a[f>>0]=0;return b|0}else c=0;do{j=d[e+c>>0]|0;i=j&15;j=j>>>4;h=c<<1;a[b+h>>0]=j+87+((j+65526|0)>>>8&217);a[b+(h|1)>>0]=((i<<8)+22272+(i+65526&55552)|0)>>>8;c=c+1|0}while((c|0)!=(f|0));j=b+g|0;a[j>>0]=0;return b|0}function _c(b,e,f,g,h,i,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;a:do if(!g){n=0;l=0;m=0;k=0}else{v=(h|0)!=0;n=0;u=0;l=0;k=0;while(1){t=k<<24>>24==0;b:do if(!(v&t)){q=d[f+l>>0]|0;m=q^48;o=(m+65526|0)>>>8;q=(q&223)+201|0;p=q&255;p=(p+65526^p+65520)>>>8;if(!((p|o)&255)){m=0;break a}}else while(1){r=a[f+l>>0]|0;s=r&255;m=s^48;o=(m+65526|0)>>>8;q=(s&223)+201|0;p=q&255;p=(p+65526^p+65520)>>>8;if((p|o)&255)break b;s=gd(h,s)|0;if((s|0)==0?1:(a[s>>0]|0)!=r<<24>>24){m=0;k=0;break a}l=l+1|0;if(l>>>0>=g>>>0){m=0;k=0;break a}}while(0);m=p&q|o&m;if(n>>>0>=e>>>0)break;if(t)m=m<<4&255;else{a[b+n>>0]=m|u&255;n=n+1|0;m=u}k=(k&255^255)&255;l=l+1|0;if(l>>>0<g>>>0)u=m;else{m=0;break a}}c[(oa()|0)>>2]=34;m=-1}while(0);if(j)c[j>>2]=f+(((k<<24>>24!=0)<<31>>31)+l);if(!i)return m|0;c[i>>2]=n;return m|0}function $c(){return 33080}function ad(){return 7}function bd(){return 5}function cd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0;l=c[b>>2]|0;s=c[b+4>>2]|0;j=c[b+8>>2]|0;Rb=c[b+12>>2]|0;e=c[b+16>>2]|0;za=c[b+20>>2]|0;ya=c[b+24>>2]|0;zb=c[b+28>>2]|0;h=c[b+32>>2]|0;ga=c[b+36>>2]|0;H=c[d>>2]|0;J=c[d+4>>2]|0;F=c[d+8>>2]|0;D=c[d+12>>2]|0;A=c[d+16>>2]|0;y=c[d+20>>2]|0;w=c[d+24>>2]|0;u=c[d+28>>2]|0;k=c[d+32>>2]|0;t=c[d+36>>2]|0;Oc=J*19|0;bc=F*19|0;rb=D*19|0;Ha=A*19|0;jc=y*19|0;Db=w*19|0;Ta=u*19|0;Sc=k*19|0;Qc=t*19|0;p=s<<1;f=Rb<<1;M=za<<1;i=zb<<1;d=ga<<1;o=((l|0)<0)<<31>>31;I=((H|0)<0)<<31>>31;Mc=yd(H|0,I|0,l|0,o|0)|0;Lc=C;K=((J|0)<0)<<31>>31;wc=yd(J|0,K|0,l|0,o|0)|0;vc=C;G=((F|0)<0)<<31>>31;ub=yd(F|0,G|0,l|0,o|0)|0;tb=C;E=((D|0)<0)<<31>>31;Ka=yd(D|0,E|0,l|0,o|0)|0;Ja=C;B=((A|0)<0)<<31>>31;mc=yd(A|0,B|0,l|0,o|0)|0;lc=C;z=((y|0)<0)<<31>>31;Gb=yd(y|0,z|0,l|0,o|0)|0;Fb=C;x=((w|0)<0)<<31>>31;Wa=yd(w|0,x|0,l|0,o|0)|0;Va=C;v=((u|0)<0)<<31>>31;ja=yd(u|0,v|0,l|0,o|0)|0;ia=C;Pc=((k|0)<0)<<31>>31;P=yd(k|0,Pc|0,l|0,o|0)|0;O=C;o=yd(t|0,((t|0)<0)<<31>>31|0,l|0,o|0)|0;l=C;t=((s|0)<0)<<31>>31;dc=yd(H|0,I|0,s|0,t|0)|0;ec=C;n=((p|0)<0)<<31>>31;yb=yd(J|0,K|0,p|0,n|0)|0;xb=C;Ma=yd(F|0,G|0,s|0,t|0)|0;La=C;oc=yd(D|0,E|0,p|0,n|0)|0;nc=C;Ib=yd(A|0,B|0,s|0,t|0)|0;Hb=C;Ya=yd(y|0,z|0,p|0,n|0)|0;Xa=C;la=yd(w|0,x|0,s|0,t|0)|0;ka=C;R=yd(u|0,v|0,p|0,n|0)|0;Q=C;t=yd(k|0,Pc|0,s|0,t|0)|0;s=C;Pc=((Qc|0)<0)<<31>>31;n=yd(Qc|0,Pc|0,p|0,n|0)|0;p=C;k=((j|0)<0)<<31>>31;wb=yd(H|0,I|0,j|0,k|0)|0;vb=C;Qa=yd(J|0,K|0,j|0,k|0)|0;Pa=C;qc=yd(F|0,G|0,j|0,k|0)|0;pc=C;Kb=yd(D|0,E|0,j|0,k|0)|0;Jb=C;_a=yd(A|0,B|0,j|0,k|0)|0;Za=C;na=yd(y|0,z|0,j|0,k|0)|0;ma=C;T=yd(w|0,x|0,j|0,k|0)|0;S=C;v=yd(u|0,v|0,j|0,k|0)|0;u=C;Rc=((Sc|0)<0)<<31>>31;yc=yd(Sc|0,Rc|0,j|0,k|0)|0;xc=C;k=yd(Qc|0,Pc|0,j|0,k|0)|0;j=C;Sb=((Rb|0)<0)<<31>>31;Oa=yd(H|0,I|0,Rb|0,Sb|0)|0;Na=C;fa=((f|0)<0)<<31>>31;uc=yd(J|0,K|0,f|0,fa|0)|0;tc=C;Mb=yd(F|0,G|0,Rb|0,Sb|0)|0;Lb=C;ab=yd(D|0,E|0,f|0,fa|0)|0;$a=C;pa=yd(A|0,B|0,Rb|0,Sb|0)|0;oa=C;V=yd(y|0,z|0,f|0,fa|0)|0;U=C;x=yd(w|0,x|0,Rb|0,Sb|0)|0;w=C;Ua=((Ta|0)<0)<<31>>31;Ac=yd(Ta|0,Ua|0,f|0,fa|0)|0;zc=C;Sb=yd(Sc|0,Rc|0,Rb|0,Sb|0)|0;Rb=C;fa=yd(Qc|0,Pc|0,f|0,fa|0)|0;f=C;N=((e|0)<0)<<31>>31;sc=yd(H|0,I|0,e|0,N|0)|0;rc=C;Qb=yd(J|0,K|0,e|0,N|0)|0;Pb=C;cb=yd(F|0,G|0,e|0,N|0)|0;bb=C;ra=yd(D|0,E|0,e|0,N|0)|0;qa=C;X=yd(A|0,B|0,e|0,N|0)|0;W=C;z=yd(y|0,z|0,e|0,N|0)|0;y=C;Eb=((Db|0)<0)<<31>>31;Cc=yd(Db|0,Eb|0,e|0,N|0)|0;Bc=C;Ub=yd(Ta|0,Ua|0,e|0,N|0)|0;Tb=C;ib=yd(Sc|0,Rc|0,e|0,N|0)|0;hb=C;N=yd(Qc|0,Pc|0,e|0,N|0)|0;e=C;Aa=((za|0)<0)<<31>>31;Ob=yd(H|0,I|0,za|0,Aa|0)|0;Nb=C;b=((M|0)<0)<<31>>31;gb=yd(J|0,K|0,M|0,b|0)|0;fb=C;ta=yd(F|0,G|0,za|0,Aa|0)|0;sa=C;Z=yd(D|0,E|0,M|0,b|0)|0;Y=C;B=yd(A|0,B|0,za|0,Aa|0)|0;A=C;kc=((jc|0)<0)<<31>>31;Ec=yd(jc|0,kc|0,M|0,b|0)|0;Dc=C;Wb=yd(Db|0,Eb|0,za|0,Aa|0)|0;Vb=C;kb=yd(Ta|0,Ua|0,M|0,b|0)|0;jb=C;Aa=yd(Sc|0,Rc|0,za|0,Aa|0)|0;za=C;b=yd(Qc|0,Pc|0,M|0,b|0)|0;M=C;g=((ya|0)<0)<<31>>31;eb=yd(H|0,I|0,ya|0,g|0)|0;db=C;xa=yd(J|0,K|0,ya|0,g|0)|0;wa=C;$=yd(F|0,G|0,ya|0,g|0)|0;_=C;E=yd(D|0,E|0,ya|0,g|0)|0;D=C;Ia=((Ha|0)<0)<<31>>31;Gc=yd(Ha|0,Ia|0,ya|0,g|0)|0;Fc=C;Yb=yd(jc|0,kc|0,ya|0,g|0)|0;Xb=C;mb=yd(Db|0,Eb|0,ya|0,g|0)|0;lb=C;Ca=yd(Ta|0,Ua|0,ya|0,g|0)|0;Ba=C;m=yd(Sc|0,Rc|0,ya|0,g|0)|0;r=C;g=yd(Qc|0,Pc|0,ya|0,g|0)|0;ya=C;Ab=((zb|0)<0)<<31>>31;va=yd(H|0,I|0,zb|0,Ab|0)|0;ua=C;ea=((i|0)<0)<<31>>31;da=yd(J|0,K|0,i|0,ea|0)|0;ca=C;G=yd(F|0,G|0,zb|0,Ab|0)|0;F=C;sb=((rb|0)<0)<<31>>31;Ic=yd(rb|0,sb|0,i|0,ea|0)|0;Hc=C;_b=yd(Ha|0,Ia|0,zb|0,Ab|0)|0;Zb=C;ob=yd(jc|0,kc|0,i|0,ea|0)|0;nb=C;Ea=yd(Db|0,Eb|0,zb|0,Ab|0)|0;Da=C;gc=yd(Ta|0,Ua|0,i|0,ea|0)|0;fc=C;Ab=yd(Sc|0,Rc|0,zb|0,Ab|0)|0;zb=C;ea=yd(Qc|0,Pc|0,i|0,ea|0)|0;i=C;L=((h|0)<0)<<31>>31;ba=yd(H|0,I|0,h|0,L|0)|0;aa=C;K=yd(J|0,K|0,h|0,L|0)|0;J=C;cc=((bc|0)<0)<<31>>31;Kc=yd(bc|0,cc|0,h|0,L|0)|0;Jc=C;ac=yd(rb|0,sb|0,h|0,L|0)|0;$b=C;qb=yd(Ha|0,Ia|0,h|0,L|0)|0;pb=C;Ga=yd(jc|0,kc|0,h|0,L|0)|0;Fa=C;ic=yd(Db|0,Eb|0,h|0,L|0)|0;hc=C;Cb=yd(Ta|0,Ua|0,h|0,L|0)|0;Bb=C;Sa=yd(Sc|0,Rc|0,h|0,L|0)|0;Ra=C;L=yd(Qc|0,Pc|0,h|0,L|0)|0;h=C;ha=((ga|0)<0)<<31>>31;I=yd(H|0,I|0,ga|0,ha|0)|0;H=C;q=((d|0)<0)<<31>>31;Oc=yd(Oc|0,((Oc|0)<0)<<31>>31|0,d|0,q|0)|0;Nc=C;cc=yd(bc|0,cc|0,ga|0,ha|0)|0;bc=C;sb=yd(rb|0,sb|0,d|0,q|0)|0;rb=C;Ia=yd(Ha|0,Ia|0,ga|0,ha|0)|0;Ha=C;kc=yd(jc|0,kc|0,d|0,q|0)|0;jc=C;Eb=yd(Db|0,Eb|0,ga|0,ha|0)|0;Db=C;Ua=yd(Ta|0,Ua|0,d|0,q|0)|0;Ta=C;ha=yd(Sc|0,Rc|0,ga|0,ha|0)|0;ga=C;q=yd(Qc|0,Pc|0,d|0,q|0)|0;d=C;Lc=nd(Oc|0,Nc|0,Mc|0,Lc|0)|0;Jc=nd(Lc|0,C|0,Kc|0,Jc|0)|0;Hc=nd(Jc|0,C|0,Ic|0,Hc|0)|0;Fc=nd(Hc|0,C|0,Gc|0,Fc|0)|0;Dc=nd(Fc|0,C|0,Ec|0,Dc|0)|0;Bc=nd(Dc|0,C|0,Cc|0,Bc|0)|0;zc=nd(Bc|0,C|0,Ac|0,zc|0)|0;xc=nd(zc|0,C|0,yc|0,xc|0)|0;p=nd(xc|0,C|0,n|0,p|0)|0;n=C;ec=nd(wc|0,vc|0,dc|0,ec|0)|0;dc=C;rc=nd(uc|0,tc|0,sc|0,rc|0)|0;pc=nd(rc|0,C|0,qc|0,pc|0)|0;nc=nd(pc|0,C|0,oc|0,nc|0)|0;lc=nd(nc|0,C|0,mc|0,lc|0)|0;jc=nd(lc|0,C|0,kc|0,jc|0)|0;hc=nd(jc|0,C|0,ic|0,hc|0)|0;fc=nd(hc|0,C|0,gc|0,fc|0)|0;r=nd(fc|0,C|0,m|0,r|0)|0;M=nd(r|0,C|0,b|0,M|0)|0;b=C;r=nd(p|0,n|0,33554432,0)|0;r=ld(r|0,C|0,26)|0;m=C;bc=nd(ec|0,dc|0,cc|0,bc|0)|0;$b=nd(bc|0,C|0,ac|0,$b|0)|0;Zb=nd($b|0,C|0,_b|0,Zb|0)|0;Xb=nd(Zb|0,C|0,Yb|0,Xb|0)|0;Vb=nd(Xb|0,C|0,Wb|0,Vb|0)|0;Tb=nd(Vb|0,C|0,Ub|0,Tb|0)|0;Rb=nd(Tb|0,C|0,Sb|0,Rb|0)|0;j=nd(Rb|0,C|0,k|0,j|0)|0;j=nd(j|0,C|0,r|0,m|0)|0;k=C;m=qd(r|0,m|0,26)|0;m=md(p|0,n|0,m|0,C|0)|0;n=C;p=nd(M|0,b|0,33554432,0)|0;p=ld(p|0,C|0,26)|0;r=C;Nb=nd(Qb|0,Pb|0,Ob|0,Nb|0)|0;Lb=nd(Nb|0,C|0,Mb|0,Lb|0)|0;Jb=nd(Lb|0,C|0,Kb|0,Jb|0)|0;Hb=nd(Jb|0,C|0,Ib|0,Hb|0)|0;Fb=nd(Hb|0,C|0,Gb|0,Fb|0)|0;Db=nd(Fb|0,C|0,Eb|0,Db|0)|0;Bb=nd(Db|0,C|0,Cb|0,Bb|0)|0;zb=nd(Bb|0,C|0,Ab|0,zb|0)|0;ya=nd(zb|0,C|0,g|0,ya|0)|0;ya=nd(ya|0,C|0,p|0,r|0)|0;g=C;r=qd(p|0,r|0,26)|0;r=md(M|0,b|0,r|0,C|0)|0;b=C;M=nd(j|0,k|0,16777216,0)|0;M=ld(M|0,C|0,25)|0;p=C;vb=nd(yb|0,xb|0,wb|0,vb|0)|0;tb=nd(vb|0,C|0,ub|0,tb|0)|0;rb=nd(tb|0,C|0,sb|0,rb|0)|0;pb=nd(rb|0,C|0,qb|0,pb|0)|0;nb=nd(pb|0,C|0,ob|0,nb|0)|0;lb=nd(nb|0,C|0,mb|0,lb|0)|0;jb=nd(lb|0,C|0,kb|0,jb|0)|0;hb=nd(jb|0,C|0,ib|0,hb|0)|0;f=nd(hb|0,C|0,fa|0,f|0)|0;f=nd(f|0,C|0,M|0,p|0)|0;fa=C;p=qd(M|0,p|0,25)|0;p=md(j|0,k|0,p|0,C|0)|0;k=C;j=nd(ya|0,g|0,16777216,0)|0;j=ld(j|0,C|0,25)|0;M=C;db=nd(gb|0,fb|0,eb|0,db|0)|0;bb=nd(db|0,C|0,cb|0,bb|0)|0;$a=nd(bb|0,C|0,ab|0,$a|0)|0;Za=nd($a|0,C|0,_a|0,Za|0)|0;Xa=nd(Za|0,C|0,Ya|0,Xa|0)|0;Va=nd(Xa|0,C|0,Wa|0,Va|0)|0;Ta=nd(Va|0,C|0,Ua|0,Ta|0)|0;Ra=nd(Ta|0,C|0,Sa|0,Ra|0)|0;i=nd(Ra|0,C|0,ea|0,i|0)|0;i=nd(i|0,C|0,j|0,M|0)|0;ea=C;M=qd(j|0,M|0,25)|0;M=md(ya|0,g|0,M|0,C|0)|0;g=C;ya=nd(f|0,fa|0,33554432,0)|0;ya=ld(ya|0,C|0,26)|0;j=C;Na=nd(Qa|0,Pa|0,Oa|0,Na|0)|0;La=nd(Na|0,C|0,Ma|0,La|0)|0;Ja=nd(La|0,C|0,Ka|0,Ja|0)|0;Ha=nd(Ja|0,C|0,Ia|0,Ha|0)|0;Fa=nd(Ha|0,C|0,Ga|0,Fa|0)|0;Da=nd(Fa|0,C|0,Ea|0,Da|0)|0;Ba=nd(Da|0,C|0,Ca|0,Ba|0)|0;za=nd(Ba|0,C|0,Aa|0,za|0)|0;e=nd(za|0,C|0,N|0,e|0)|0;e=nd(e|0,C|0,ya|0,j|0)|0;N=C;j=qd(ya|0,j|0,26)|0;j=md(f|0,fa|0,j|0,C|0)|0;fa=nd(i|0,ea|0,33554432,0)|0;fa=ld(fa|0,C|0,26)|0;f=C;ua=nd(xa|0,wa|0,va|0,ua|0)|0;sa=nd(ua|0,C|0,ta|0,sa|0)|0;qa=nd(sa|0,C|0,ra|0,qa|0)|0;oa=nd(qa|0,C|0,pa|0,oa|0)|0;ma=nd(oa|0,C|0,na|0,ma|0)|0;ka=nd(ma|0,C|0,la|0,ka|0)|0;ia=nd(ka|0,C|0,ja|0,ia|0)|0;ga=nd(ia|0,C|0,ha|0,ga|0)|0;h=nd(ga|0,C|0,L|0,h|0)|0;h=nd(h|0,C|0,fa|0,f|0)|0;L=C;f=qd(fa|0,f|0,26)|0;f=md(i|0,ea|0,f|0,C|0)|0;ea=nd(e|0,N|0,16777216,0)|0;ea=ld(ea|0,C|0,25)|0;i=C;b=nd(ea|0,i|0,r|0,b|0)|0;r=C;i=qd(ea|0,i|0,25)|0;i=md(e|0,N|0,i|0,C|0)|0;N=nd(h|0,L|0,16777216,0)|0;N=ld(N|0,C|0,25)|0;e=C;aa=nd(da|0,ca|0,ba|0,aa|0)|0;_=nd(aa|0,C|0,$|0,_|0)|0;Y=nd(_|0,C|0,Z|0,Y|0)|0;W=nd(Y|0,C|0,X|0,W|0)|0;U=nd(W|0,C|0,V|0,U|0)|0;S=nd(U|0,C|0,T|0,S|0)|0;Q=nd(S|0,C|0,R|0,Q|0)|0;O=nd(Q|0,C|0,P|0,O|0)|0;d=nd(O|0,C|0,q|0,d|0)|0;d=nd(d|0,C|0,N|0,e|0)|0;q=C;e=qd(N|0,e|0,25)|0;e=md(h|0,L|0,e|0,C|0)|0;L=nd(b|0,r|0,33554432,0)|0;L=ld(L|0,C|0,26)|0;h=C;g=nd(M|0,g|0,L|0,h|0)|0;h=qd(L|0,h|0,26)|0;h=md(b|0,r|0,h|0,C|0)|0;r=nd(d|0,q|0,33554432,0)|0;r=ld(r|0,C|0,26)|0;b=C;H=nd(K|0,J|0,I|0,H|0)|0;F=nd(H|0,C|0,G|0,F|0)|0;D=nd(F|0,C|0,E|0,D|0)|0;A=nd(D|0,C|0,B|0,A|0)|0;y=nd(A|0,C|0,z|0,y|0)|0;w=nd(y|0,C|0,x|0,w|0)|0;u=nd(w|0,C|0,v|0,u|0)|0;s=nd(u|0,C|0,t|0,s|0)|0;l=nd(s|0,C|0,o|0,l|0)|0;l=nd(l|0,C|0,r|0,b|0)|0;o=C;b=qd(r|0,b|0,26)|0;b=md(d|0,q|0,b|0,C|0)|0;q=nd(l|0,o|0,16777216,0)|0;q=ld(q|0,C|0,25)|0;d=C;r=yd(q|0,d|0,19,0)|0;n=nd(r|0,C|0,m|0,n|0)|0;m=C;d=qd(q|0,d|0,25)|0;d=md(l|0,o|0,d|0,C|0)|0;o=nd(n|0,m|0,33554432,0)|0;o=ld(o|0,C|0,26)|0;l=C;k=nd(p|0,k|0,o|0,l|0)|0;l=qd(o|0,l|0,26)|0;l=md(n|0,m|0,l|0,C|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=b;c[a+36>>2]=d;return}function dd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0;bb=c[b>>2]|0;ua=c[b+4>>2]|0;j=c[b+8>>2]|0;la=c[b+12>>2]|0;e=c[b+16>>2]|0;db=c[b+20>>2]|0;Y=c[b+24>>2]|0;La=c[b+28>>2]|0;h=c[b+32>>2]|0;b=c[b+36>>2]|0;l=bb<<1;p=ua<<1;Xa=j<<1;f=la<<1;na=e<<1;B=db<<1;m=Y<<1;i=La<<1;Ka=db*38|0;ra=Y*19|0;va=La*38|0;da=h*19|0;gb=b*38|0;cb=((bb|0)<0)<<31>>31;cb=yd(bb|0,cb|0,bb|0,cb|0)|0;bb=C;o=((l|0)<0)<<31>>31;ta=((ua|0)<0)<<31>>31;Ia=yd(l|0,o|0,ua|0,ta|0)|0;Ha=C;k=((j|0)<0)<<31>>31;Wa=yd(j|0,k|0,l|0,o|0)|0;Va=C;ma=((la|0)<0)<<31>>31;Ua=yd(la|0,ma|0,l|0,o|0)|0;Ta=C;D=((e|0)<0)<<31>>31;Oa=yd(e|0,D|0,l|0,o|0)|0;Na=C;eb=((db|0)<0)<<31>>31;ya=yd(db|0,eb|0,l|0,o|0)|0;xa=C;g=((Y|0)<0)<<31>>31;ga=yd(Y|0,g|0,l|0,o|0)|0;fa=C;Ma=((La|0)<0)<<31>>31;R=yd(La|0,Ma|0,l|0,o|0)|0;Q=C;A=((h|0)<0)<<31>>31;F=yd(h|0,A|0,l|0,o|0)|0;E=C;q=((b|0)<0)<<31>>31;o=yd(b|0,q|0,l|0,o|0)|0;l=C;n=((p|0)<0)<<31>>31;ta=yd(p|0,n|0,ua|0,ta|0)|0;ua=C;ba=yd(p|0,n|0,j|0,k|0)|0;ca=C;P=((f|0)<0)<<31>>31;Sa=yd(f|0,P|0,p|0,n|0)|0;Ra=C;Ca=yd(e|0,D|0,p|0,n|0)|0;Ba=C;d=((B|0)<0)<<31>>31;ia=yd(B|0,d|0,p|0,n|0)|0;ha=C;T=yd(Y|0,g|0,p|0,n|0)|0;S=C;O=((i|0)<0)<<31>>31;H=yd(i|0,O|0,p|0,n|0)|0;G=C;t=yd(h|0,A|0,p|0,n|0)|0;s=C;fb=((gb|0)<0)<<31>>31;n=yd(gb|0,fb|0,p|0,n|0)|0;p=C;Qa=yd(j|0,k|0,j|0,k|0)|0;Pa=C;Ya=((Xa|0)<0)<<31>>31;Aa=yd(Xa|0,Ya|0,la|0,ma|0)|0;za=C;ka=yd(e|0,D|0,Xa|0,Ya|0)|0;ja=C;X=yd(db|0,eb|0,Xa|0,Ya|0)|0;W=C;N=yd(Y|0,g|0,Xa|0,Ya|0)|0;M=C;v=yd(La|0,Ma|0,Xa|0,Ya|0)|0;u=C;ea=((da|0)<0)<<31>>31;Ya=yd(da|0,ea|0,Xa|0,Ya|0)|0;Xa=C;k=yd(gb|0,fb|0,j|0,k|0)|0;j=C;ma=yd(f|0,P|0,la|0,ma|0)|0;la=C;V=yd(f|0,P|0,e|0,D|0)|0;U=C;J=yd(B|0,d|0,f|0,P|0)|0;I=C;z=yd(Y|0,g|0,f|0,P|0)|0;y=C;wa=((va|0)<0)<<31>>31;_a=yd(va|0,wa|0,f|0,P|0)|0;Za=C;Ea=yd(da|0,ea|0,f|0,P|0)|0;Da=C;P=yd(gb|0,fb|0,f|0,P|0)|0;f=C;L=yd(e|0,D|0,e|0,D|0)|0;K=C;oa=((na|0)<0)<<31>>31;x=yd(na|0,oa|0,db|0,eb|0)|0;w=C;sa=((ra|0)<0)<<31>>31;ab=yd(ra|0,sa|0,na|0,oa|0)|0;$a=C;Ga=yd(va|0,wa|0,e|0,D|0)|0;Fa=C;oa=yd(da|0,ea|0,na|0,oa|0)|0;na=C;D=yd(gb|0,fb|0,e|0,D|0)|0;e=C;eb=yd(Ka|0,((Ka|0)<0)<<31>>31|0,db|0,eb|0)|0;db=C;Ka=yd(ra|0,sa|0,B|0,d|0)|0;Ja=C;qa=yd(va|0,wa|0,B|0,d|0)|0;pa=C;_=yd(da|0,ea|0,B|0,d|0)|0;Z=C;d=yd(gb|0,fb|0,B|0,d|0)|0;B=C;sa=yd(ra|0,sa|0,Y|0,g|0)|0;ra=C;aa=yd(va|0,wa|0,Y|0,g|0)|0;$=C;m=yd(da|0,ea|0,m|0,((m|0)<0)<<31>>31|0)|0;r=C;g=yd(gb|0,fb|0,Y|0,g|0)|0;Y=C;Ma=yd(va|0,wa|0,La|0,Ma|0)|0;La=C;wa=yd(da|0,ea|0,i|0,O|0)|0;va=C;O=yd(gb|0,fb|0,i|0,O|0)|0;i=C;ea=yd(da|0,ea|0,h|0,A|0)|0;da=C;A=yd(gb|0,fb|0,h|0,A|0)|0;h=C;q=yd(gb|0,fb|0,b|0,q|0)|0;b=C;bb=nd(eb|0,db|0,cb|0,bb|0)|0;$a=nd(bb|0,C|0,ab|0,$a|0)|0;Za=nd($a|0,C|0,_a|0,Za|0)|0;Xa=nd(Za|0,C|0,Ya|0,Xa|0)|0;p=nd(Xa|0,C|0,n|0,p|0)|0;n=C;ua=nd(Wa|0,Va|0,ta|0,ua|0)|0;ta=C;ca=nd(Ua|0,Ta|0,ba|0,ca|0)|0;ba=C;Pa=nd(Sa|0,Ra|0,Qa|0,Pa|0)|0;Na=nd(Pa|0,C|0,Oa|0,Na|0)|0;La=nd(Na|0,C|0,Ma|0,La|0)|0;r=nd(La|0,C|0,m|0,r|0)|0;B=nd(r|0,C|0,d|0,B|0)|0;d=C;r=nd(p|0,n|0,33554432,0)|0;r=ld(r|0,C|0,26)|0;m=C;Ha=nd(Ka|0,Ja|0,Ia|0,Ha|0)|0;Fa=nd(Ha|0,C|0,Ga|0,Fa|0)|0;Da=nd(Fa|0,C|0,Ea|0,Da|0)|0;j=nd(Da|0,C|0,k|0,j|0)|0;j=nd(j|0,C|0,r|0,m|0)|0;k=C;m=qd(r|0,m|0,26)|0;m=md(p|0,n|0,m|0,C|0)|0;n=C;p=nd(B|0,d|0,33554432,0)|0;p=ld(p|0,C|0,26)|0;r=C;za=nd(Ca|0,Ba|0,Aa|0,za|0)|0;xa=nd(za|0,C|0,ya|0,xa|0)|0;va=nd(xa|0,C|0,wa|0,va|0)|0;Y=nd(va|0,C|0,g|0,Y|0)|0;Y=nd(Y|0,C|0,p|0,r|0)|0;g=C;r=qd(p|0,r|0,26)|0;r=md(B|0,d|0,r|0,C|0)|0;d=C;B=nd(j|0,k|0,16777216,0)|0;B=ld(B|0,C|0,25)|0;p=C;ra=nd(ua|0,ta|0,sa|0,ra|0)|0;pa=nd(ra|0,C|0,qa|0,pa|0)|0;na=nd(pa|0,C|0,oa|0,na|0)|0;f=nd(na|0,C|0,P|0,f|0)|0;f=nd(f|0,C|0,B|0,p|0)|0;P=C;p=qd(B|0,p|0,25)|0;p=md(j|0,k|0,p|0,C|0)|0;k=C;j=nd(Y|0,g|0,16777216,0)|0;j=ld(j|0,C|0,25)|0;B=C;ja=nd(ma|0,la|0,ka|0,ja|0)|0;ha=nd(ja|0,C|0,ia|0,ha|0)|0;fa=nd(ha|0,C|0,ga|0,fa|0)|0;da=nd(fa|0,C|0,ea|0,da|0)|0;i=nd(da|0,C|0,O|0,i|0)|0;i=nd(i|0,C|0,j|0,B|0)|0;O=C;B=qd(j|0,B|0,25)|0;B=md(Y|0,g|0,B|0,C|0)|0;g=C;Y=nd(f|0,P|0,33554432,0)|0;Y=ld(Y|0,C|0,26)|0;j=C;$=nd(ca|0,ba|0,aa|0,$|0)|0;Z=nd($|0,C|0,_|0,Z|0)|0;e=nd(Z|0,C|0,D|0,e|0)|0;e=nd(e|0,C|0,Y|0,j|0)|0;D=C;j=qd(Y|0,j|0,26)|0;j=md(f|0,P|0,j|0,C|0)|0;P=nd(i|0,O|0,33554432,0)|0;P=ld(P|0,C|0,26)|0;f=C;U=nd(X|0,W|0,V|0,U|0)|0;S=nd(U|0,C|0,T|0,S|0)|0;Q=nd(S|0,C|0,R|0,Q|0)|0;h=nd(Q|0,C|0,A|0,h|0)|0;h=nd(h|0,C|0,P|0,f|0)|0;A=C;f=qd(P|0,f|0,26)|0;f=md(i|0,O|0,f|0,C|0)|0;O=nd(e|0,D|0,16777216,0)|0;O=ld(O|0,C|0,25)|0;i=C;d=nd(O|0,i|0,r|0,d|0)|0;r=C;i=qd(O|0,i|0,25)|0;i=md(e|0,D|0,i|0,C|0)|0;D=nd(h|0,A|0,16777216,0)|0;D=ld(D|0,C|0,25)|0;e=C;K=nd(N|0,M|0,L|0,K|0)|0;I=nd(K|0,C|0,J|0,I|0)|0;G=nd(I|0,C|0,H|0,G|0)|0;E=nd(G|0,C|0,F|0,E|0)|0;b=nd(E|0,C|0,q|0,b|0)|0;b=nd(b|0,C|0,D|0,e|0)|0;q=C;e=qd(D|0,e|0,25)|0;e=md(h|0,A|0,e|0,C|0)|0;A=nd(d|0,r|0,33554432,0)|0;A=ld(A|0,C|0,26)|0;h=C;g=nd(B|0,g|0,A|0,h|0)|0;h=qd(A|0,h|0,26)|0;h=md(d|0,r|0,h|0,C|0)|0;r=nd(b|0,q|0,33554432,0)|0;r=ld(r|0,C|0,26)|0;d=C;w=nd(z|0,y|0,x|0,w|0)|0;u=nd(w|0,C|0,v|0,u|0)|0;s=nd(u|0,C|0,t|0,s|0)|0;l=nd(s|0,C|0,o|0,l|0)|0;l=nd(l|0,C|0,r|0,d|0)|0;o=C;d=qd(r|0,d|0,26)|0;d=md(b|0,q|0,d|0,C|0)|0;q=nd(l|0,o|0,16777216,0)|0;q=ld(q|0,C|0,25)|0;b=C;r=yd(q|0,b|0,19,0)|0;n=nd(r|0,C|0,m|0,n|0)|0;m=C;b=qd(q|0,b|0,25)|0;b=md(l|0,o|0,b|0,C|0)|0;o=nd(n|0,m|0,33554432,0)|0;o=ld(o|0,C|0,26)|0;l=C;k=nd(p|0,k|0,o|0,l|0)|0;l=qd(o|0,l|0,26)|0;l=md(n|0,m|0,l|0,C|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=d;c[a+36>>2]=b;return}function ed(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0;Ya=i;Oa=i=i+63&-64;i=i+480|0;Ta=Oa+120|0;Ua=Oa+160|0;Va=Oa+280|0;Sa=Oa+40|0;Ma=Oa+440|0;Pa=Oa+360|0;Wa=Oa+400|0;Xa=Oa+240|0;Qa=Oa+200|0;Ra=Oa+80|0;Na=Oa;Oa=Oa+320|0;h=Ma+0|0;e=e+0|0;g=h+32|0;do{a[h>>0]=a[e>>0]|0;h=h+1|0;e=e+1|0}while((h|0)<(g|0));a[Ma>>0]=(d[Ma>>0]|0)&248;va=Ma+31|0;a[va>>0]=(d[va>>0]|0)&63|64;va=d[f>>0]|0;m=qd(d[f+1>>0]|0|0,0,8)|0;j=C;za=qd(d[f+2>>0]|0|0,0,16)|0;j=j|C;Aa=qd(d[f+3>>0]|0|0,0,24)|0;j=j|C;e=a[f+6>>0]|0;l=d[f+4>>0]|0;ya=qd(d[f+5>>0]|0|0,0,8)|0;k=C;e=qd(e&255|0,0,16)|0;k=qd(ya|l|e|0,k|C|0,6)|0;e=C;l=a[f+9>>0]|0;ya=d[f+7>>0]|0;n=qd(d[f+8>>0]|0|0,0,8)|0;Ea=C;l=qd(l&255|0,0,16)|0;Ea=qd(n|ya|l|0,Ea|C|0,5)|0;l=C;ya=a[f+12>>0]|0;n=d[f+10>>0]|0;Ga=qd(d[f+11>>0]|0|0,0,8)|0;xa=C;ya=qd(ya&255|0,0,16)|0;xa=qd(Ga|n|ya|0,xa|C|0,3)|0;ya=C;n=a[f+15>>0]|0;Ga=d[f+13>>0]|0;h=qd(d[f+14>>0]|0|0,0,8)|0;Ia=C;n=qd(n&255|0,0,16)|0;Ia=qd(h|Ga|n|0,Ia|C|0,2)|0;n=C;Ga=d[f+16>>0]|0;h=qd(d[f+17>>0]|0|0,0,8)|0;Ca=C;q=qd(d[f+18>>0]|0|0,0,16)|0;Ca=Ca|C;Ba=qd(d[f+19>>0]|0|0,0,24)|0;Ba=h|Ga|q|Ba;Ca=Ca|C;q=a[f+22>>0]|0;Ga=d[f+20>>0]|0;h=qd(d[f+21>>0]|0|0,0,8)|0;g=C;q=qd(q&255|0,0,16)|0;g=qd(h|Ga|q|0,g|C|0,7)|0;q=C;Ga=a[f+25>>0]|0;h=d[f+23>>0]|0;s=qd(d[f+24>>0]|0|0,0,8)|0;Fa=C;Ga=qd(Ga&255|0,0,16)|0;Fa=qd(s|h|Ga|0,Fa|C|0,5)|0;Ga=C;h=a[f+28>>0]|0;s=d[f+26>>0]|0;Ka=qd(d[f+27>>0]|0|0,0,8)|0;La=C;h=qd(h&255|0,0,16)|0;La=qd(Ka|s|h|0,La|C|0,4)|0;h=C;s=a[f+31>>0]|0;Ka=d[f+29>>0]|0;Da=qd(d[f+30>>0]|0|0,0,8)|0;Ja=C;s=qd(s&255|0,0,16)|0;Ja=qd(Da|Ka|s|0,Ja|C|0,2)|0;Ja=Ja&33554428;s=nd(Ja|0,0,16777216,0)|0;s=pd(s|0,C|0,25)|0;Ka=C;Da=md(0,0,s|0,Ka|0)|0;j=nd(Da&19|0,0,m|va|za|Aa|0,j|0)|0;Aa=C;Ka=qd(s|0,Ka|0,25)|0;s=C;za=nd(k|0,e|0,16777216,0)|0;za=pd(za|0,C|0,25)|0;va=C;l=nd(Ea|0,l|0,za|0,va|0)|0;Ea=C;va=qd(za|0,va|0,25)|0;va=md(k|0,e|0,va|0,C|0)|0;e=C;k=nd(xa|0,ya|0,16777216,0)|0;k=pd(k|0,C|0,25)|0;za=C;n=nd(Ia|0,n|0,k|0,za|0)|0;Ia=C;za=qd(k|0,za|0,25)|0;k=C;m=nd(Ba|0,Ca|0,16777216,0)|0;m=pd(m|0,C|0,25)|0;Da=C;q=nd(g|0,q|0,m|0,Da|0)|0;g=C;Da=qd(m|0,Da|0,25)|0;m=C;o=nd(Fa|0,Ga|0,16777216,0)|0;o=pd(o|0,C|0,25)|0;Ha=C;h=nd(La|0,h|0,o|0,Ha|0)|0;La=C;Ha=qd(o|0,Ha|0,25)|0;o=C;wa=nd(j|0,Aa|0,33554432,0)|0;wa=ld(wa|0,C|0,26)|0;f=C;e=nd(va|0,e|0,wa|0,f|0)|0;f=qd(wa|0,f|0,26)|0;f=md(j|0,Aa|0,f|0,C|0)|0;Aa=nd(l|0,Ea|0,33554432,0)|0;Aa=ld(Aa|0,C|0,26)|0;j=C;ya=nd(Aa|0,j|0,xa|0,ya|0)|0;k=md(ya|0,C|0,za|0,k|0)|0;j=qd(Aa|0,j|0,26)|0;j=md(l|0,Ea|0,j|0,C|0)|0;Ea=nd(n|0,Ia|0,33554432,0)|0;Ea=ld(Ea|0,C|0,26)|0;l=C;Ca=nd(Ea|0,l|0,Ba|0,Ca|0)|0;m=md(Ca|0,C|0,Da|0,m|0)|0;l=qd(Ea|0,l|0,26)|0;l=md(n|0,Ia|0,l|0,C|0)|0;Ia=nd(q|0,g|0,33554432,0)|0;Ia=ld(Ia|0,C|0,26)|0;n=C;Ga=nd(Ia|0,n|0,Fa|0,Ga|0)|0;o=md(Ga|0,C|0,Ha|0,o|0)|0;n=qd(Ia|0,n|0,26)|0;n=md(q|0,g|0,n|0,C|0)|0;g=nd(h|0,La|0,33554432,0)|0;g=ld(g|0,C|0,26)|0;q=C;Ja=nd(Ja|0,0,g|0,q|0)|0;s=md(Ja|0,C|0,Ka|0,s|0)|0;q=qd(g|0,q|0,26)|0;q=md(h|0,La|0,q|0,C|0)|0;c[Pa>>2]=f;c[Pa+4>>2]=e;c[Pa+8>>2]=j;c[Pa+12>>2]=k;c[Pa+16>>2]=l;c[Pa+20>>2]=m;c[Pa+24>>2]=n;c[Pa+28>>2]=o;c[Pa+32>>2]=q;c[Pa+36>>2]=s;c[Wa>>2]=1;La=Wa+4|0;h=La+0|0;g=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));h=Xa+0|0;g=h+40|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));c[Qa>>2]=f;ta=Qa+4|0;c[ta>>2]=e;ua=Qa+8|0;c[ua>>2]=j;va=Qa+12|0;c[va>>2]=k;wa=Qa+16|0;c[wa>>2]=l;xa=Qa+20|0;c[xa>>2]=m;ya=Qa+24|0;c[ya>>2]=n;za=Qa+28|0;c[za>>2]=o;Aa=Qa+32|0;c[Aa>>2]=q;Ba=Qa+36|0;c[Ba>>2]=s;c[Ra>>2]=1;Ca=Ra+4|0;h=Ca+0|0;g=h+36|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(g|0));Da=Wa+8|0;Ea=Wa+12|0;Fa=Wa+16|0;Ga=Wa+20|0;Ha=Wa+24|0;Ia=Wa+28|0;Ja=Wa+32|0;Ka=Wa+36|0;M=Xa+4|0;N=Xa+8|0;O=Xa+12|0;P=Xa+16|0;Q=Xa+20|0;R=Xa+24|0;S=Xa+28|0;T=Xa+32|0;U=Xa+36|0;V=Ra+8|0;W=Ra+12|0;X=Ra+16|0;Y=Ra+20|0;Z=Ra+24|0;_=Ra+28|0;$=Ra+32|0;aa=Ra+36|0;ba=Na+4|0;ca=Na+8|0;da=Na+12|0;ea=Na+16|0;fa=Na+20|0;ga=Na+24|0;ha=Na+28|0;ia=Na+32|0;ja=Na+36|0;ka=Oa+4|0;la=Oa+8|0;ma=Oa+12|0;na=Oa+16|0;oa=Oa+20|0;pa=Oa+24|0;qa=Oa+28|0;ra=Oa+32|0;sa=Oa+36|0;h=1;g=0;p=0;r=0;t=0;K=0;J=0;I=0;H=0;w=0;x=0;y=0;z=0;A=0;B=0;D=0;E=0;F=0;G=0;u=254;v=0;while(1){L=(d[Ma+((u|0)/8|0)>>0]|0)>>>(u&7)&1;bb=0-(L^v)|0;ab=(f^h)&bb;$a=(e^g)&bb;_a=(j^p)&bb;Za=(k^r)&bb;hb=(l^t)&bb;ib=(m^K)&bb;jb=(n^J)&bb;kb=(o^I)&bb;lb=(q^H)&bb;eb=(s^w)&bb;c[Wa>>2]=ab^h;c[La>>2]=$a^g;c[Da>>2]=_a^p;c[Ea>>2]=Za^r;c[Fa>>2]=hb^t;c[Ga>>2]=ib^K;c[Ha>>2]=jb^J;c[Ia>>2]=kb^I;c[Ja>>2]=lb^H;c[Ka>>2]=eb^w;ab=ab^f;c[Qa>>2]=ab;$a=$a^e;c[ta>>2]=$a;_a=_a^j;c[ua>>2]=_a;Za=Za^k;c[va>>2]=Za;e=hb^l;c[wa>>2]=e;r=ib^m;c[xa>>2]=r;j=jb^n;c[ya>>2]=j;n=kb^o;c[za>>2]=n;J=lb^q;c[Aa>>2]=J;I=eb^s;c[Ba>>2]=I;g=c[U>>2]|0;o=c[Ra>>2]|0;m=c[Ca>>2]|0;w=c[V>>2]|0;K=c[W>>2]|0;s=c[X>>2]|0;H=c[Y>>2]|0;eb=c[Z>>2]|0;t=c[_>>2]|0;p=c[$>>2]|0;h=c[aa>>2]|0;lb=(o^x)&bb;kb=(m^y)&bb;jb=(w^z)&bb;ib=(K^A)&bb;hb=(s^B)&bb;gb=(H^D)&bb;fb=(eb^E)&bb;db=(t^F)&bb;cb=(p^G)&bb;bb=(h^g)&bb;x=lb^x;c[Xa>>2]=x;y=kb^y;c[M>>2]=y;z=jb^z;c[N>>2]=z;A=ib^A;c[O>>2]=A;k=hb^B;c[P>>2]=k;q=gb^D;c[Q>>2]=q;l=fb^E;c[R>>2]=l;f=db^F;c[S>>2]=f;v=cb^G;c[T>>2]=v;g=bb^g;c[U>>2]=g;o=lb^o;c[Ra>>2]=o;m=kb^m;c[Ca>>2]=m;w=jb^w;c[V>>2]=w;K=ib^K;c[W>>2]=K;s=hb^s;c[X>>2]=s;H=gb^H;c[Y>>2]=H;G=fb^eb;c[Z>>2]=G;t=db^t;c[_>>2]=t;p=cb^p;c[$>>2]=p;h=bb^h;c[aa>>2]=h;c[Na>>2]=ab-o;c[ba>>2]=$a-m;c[ca>>2]=_a-w;c[da>>2]=Za-K;c[ea>>2]=e-s;c[fa>>2]=r-H;c[ga>>2]=j-G;c[ha>>2]=n-t;c[ia>>2]=J-p;c[ja>>2]=I-h;B=c[Wa>>2]|0;D=c[La>>2]|0;E=c[Da>>2]|0;I=c[Ea>>2]|0;J=c[Fa>>2]|0;n=c[Ga>>2]|0;j=c[Ha>>2]|0;F=c[Ia>>2]|0;r=c[Ja>>2]|0;e=c[Ka>>2]|0;c[Oa>>2]=B-x;c[ka>>2]=D-y;c[la>>2]=E-z;c[ma>>2]=I-A;c[na>>2]=J-k;c[oa>>2]=n-q;c[pa>>2]=j-l;c[qa>>2]=F-f;c[ra>>2]=r-v;c[sa>>2]=e-g;c[Wa>>2]=x+B;c[La>>2]=y+D;c[Da>>2]=z+E;c[Ea>>2]=A+I;c[Fa>>2]=k+J;c[Ga>>2]=q+n;c[Ha>>2]=l+j;c[Ia>>2]=f+F;c[Ja>>2]=v+r;c[Ka>>2]=g+e;m=m+(c[ta>>2]|0)|0;w=w+(c[ua>>2]|0)|0;K=K+(c[va>>2]|0)|0;s=s+(c[wa>>2]|0)|0;H=H+(c[xa>>2]|0)|0;G=G+(c[ya>>2]|0)|0;t=t+(c[za>>2]|0)|0;p=p+(c[Aa>>2]|0)|0;h=h+(c[Ba>>2]|0)|0;c[Xa>>2]=o+(c[Qa>>2]|0);c[M>>2]=m;c[N>>2]=w;c[O>>2]=K;c[P>>2]=s;c[Q>>2]=H;c[R>>2]=G;c[S>>2]=t;c[T>>2]=p;c[U>>2]=h;cd(Ra,Na,Wa);cd(Xa,Xa,Oa);dd(Na,Oa);dd(Oa,Wa);h=c[Ra>>2]|0;p=c[Ca>>2]|0;t=c[V>>2]|0;G=c[W>>2]|0;H=c[X>>2]|0;s=c[Y>>2]|0;K=c[Z>>2]|0;w=c[_>>2]|0;m=c[$>>2]|0;o=c[aa>>2]|0;e=c[Xa>>2]|0;g=c[M>>2]|0;r=c[N>>2]|0;v=c[O>>2]|0;F=c[P>>2]|0;f=c[Q>>2]|0;j=c[R>>2]|0;l=c[S>>2]|0;n=c[T>>2]|0;q=c[U>>2]|0;c[Qa>>2]=e+h;c[ta>>2]=g+p;c[ua>>2]=r+t;c[va>>2]=v+G;c[wa>>2]=F+H;c[xa>>2]=f+s;c[ya>>2]=j+K;c[za>>2]=l+w;c[Aa>>2]=n+m;c[Ba>>2]=q+o;c[Xa>>2]=h-e;c[M>>2]=p-g;c[N>>2]=t-r;c[O>>2]=G-v;c[P>>2]=H-F;c[Q>>2]=s-f;c[R>>2]=K-j;c[S>>2]=w-l;c[T>>2]=m-n;c[U>>2]=o-q;cd(Wa,Oa,Na);q=(c[Oa>>2]|0)-(c[Na>>2]|0)|0;o=(c[ka>>2]|0)-(c[ba>>2]|0)|0;n=(c[la>>2]|0)-(c[ca>>2]|0)|0;m=(c[ma>>2]|0)-(c[da>>2]|0)|0;l=(c[na>>2]|0)-(c[ea>>2]|0)|0;w=(c[oa>>2]|0)-(c[fa>>2]|0)|0;j=(c[pa>>2]|0)-(c[ga>>2]|0)|0;K=(c[qa>>2]|0)-(c[ha>>2]|0)|0;f=(c[ra>>2]|0)-(c[ia>>2]|0)|0;s=(c[sa>>2]|0)-(c[ja>>2]|0)|0;c[Oa>>2]=q;c[ka>>2]=o;c[la>>2]=n;c[ma>>2]=m;c[na>>2]=l;c[oa>>2]=w;c[pa>>2]=j;c[qa>>2]=K;c[ra>>2]=f;c[sa>>2]=s;dd(Xa,Xa);q=yd(q|0,((q|0)<0)<<31>>31|0,121666,0)|0;F=C;o=yd(o|0,((o|0)<0)<<31>>31|0,121666,0)|0;H=C;n=yd(n|0,((n|0)<0)<<31>>31|0,121666,0)|0;v=C;m=yd(m|0,((m|0)<0)<<31>>31|0,121666,0)|0;G=C;l=yd(l|0,((l|0)<0)<<31>>31|0,121666,0)|0;r=C;w=yd(w|0,((w|0)<0)<<31>>31|0,121666,0)|0;t=C;j=yd(j|0,((j|0)<0)<<31>>31|0,121666,0)|0;g=C;K=yd(K|0,((K|0)<0)<<31>>31|0,121666,0)|0;p=C;f=yd(f|0,((f|0)<0)<<31>>31|0,121666,0)|0;e=C;s=yd(s|0,((s|0)<0)<<31>>31|0,121666,0)|0;h=C;J=nd(s|0,h|0,16777216,0)|0;J=ld(J|0,C|0,25)|0;k=C;I=yd(J|0,k|0,19,0)|0;F=nd(I|0,C|0,q|0,F|0)|0;q=C;k=qd(J|0,k|0,25)|0;k=md(s|0,h|0,k|0,C|0)|0;h=C;s=nd(o|0,H|0,16777216,0)|0;s=ld(s|0,C|0,25)|0;J=C;v=nd(s|0,J|0,n|0,v|0)|0;n=C;J=qd(s|0,J|0,25)|0;J=md(o|0,H|0,J|0,C|0)|0;H=C;o=nd(m|0,G|0,16777216,0)|0;o=ld(o|0,C|0,25)|0;s=C;r=nd(o|0,s|0,l|0,r|0)|0;l=C;s=qd(o|0,s|0,25)|0;s=md(m|0,G|0,s|0,C|0)|0;G=C;m=nd(w|0,t|0,16777216,0)|0;m=ld(m|0,C|0,25)|0;o=C;g=nd(m|0,o|0,j|0,g|0)|0;j=C;o=qd(m|0,o|0,25)|0;o=md(w|0,t|0,o|0,C|0)|0;t=C;w=nd(K|0,p|0,16777216,0)|0;w=ld(w|0,C|0,25)|0;m=C;e=nd(w|0,m|0,f|0,e|0)|0;f=C;m=qd(w|0,m|0,25)|0;m=md(K|0,p|0,m|0,C|0)|0;p=C;K=nd(F|0,q|0,33554432,0)|0;K=ld(K|0,C|0,26)|0;w=C;H=nd(J|0,H|0,K|0,w|0)|0;w=qd(K|0,w|0,26)|0;w=md(F|0,q|0,w|0,C|0)|0;q=nd(v|0,n|0,33554432,0)|0;q=ld(q|0,C|0,26)|0;F=C;G=nd(s|0,G|0,q|0,F|0)|0;F=qd(q|0,F|0,26)|0;F=md(v|0,n|0,F|0,C|0)|0;n=nd(r|0,l|0,33554432,0)|0;n=ld(n|0,C|0,26)|0;v=C;t=nd(o|0,t|0,n|0,v|0)|0;v=qd(n|0,v|0,26)|0;v=md(r|0,l|0,v|0,C|0)|0;l=nd(g|0,j|0,33554432,0)|0;l=ld(l|0,C|0,26)|0;r=C;p=nd(m|0,p|0,l|0,r|0)|0;r=qd(l|0,r|0,26)|0;r=md(g|0,j|0,r|0,C|0)|0;j=nd(e|0,f|0,33554432,0)|0;j=ld(j|0,C|0,26)|0;g=C;h=nd(k|0,h|0,j|0,g|0)|0;g=qd(j|0,g|0,26)|0;g=md(e|0,f|0,g|0,C|0)|0;c[Ra>>2]=w;c[Ca>>2]=H;c[V>>2]=F;c[W>>2]=G;c[X>>2]=v;c[Y>>2]=t;c[Z>>2]=r;c[_>>2]=p;c[$>>2]=g;c[aa>>2]=h;dd(Qa,Qa);H=H+(c[ba>>2]|0)|0;F=F+(c[ca>>2]|0)|0;G=G+(c[da>>2]|0)|0;v=v+(c[ea>>2]|0)|0;t=t+(c[fa>>2]|0)|0;r=r+(c[ga>>2]|0)|0;p=p+(c[ha>>2]|0)|0;g=g+(c[ia>>2]|0)|0;h=h+(c[ja>>2]|0)|0;c[Na>>2]=w+(c[Na>>2]|0);c[ba>>2]=H;c[ca>>2]=F;c[da>>2]=G;c[ea>>2]=v;c[fa>>2]=t;c[ga>>2]=r;c[ha>>2]=p;c[ia>>2]=g;c[ja>>2]=h;cd(Ra,Pa,Xa);cd(Xa,Oa,Na);u=u+-1|0;h=c[Wa>>2]|0;g=c[La>>2]|0;p=c[Da>>2]|0;r=c[Ea>>2]|0;t=c[Fa>>2]|0;v=c[Ga>>2]|0;G=c[Ha>>2]|0;F=c[Ia>>2]|0;H=c[Ja>>2]|0;w=c[Ka>>2]|0;f=c[Qa>>2]|0;e=c[ta>>2]|0;j=c[ua>>2]|0;k=c[va>>2]|0;l=c[wa>>2]|0;m=c[xa>>2]|0;n=c[ya>>2]|0;o=c[za>>2]|0;q=c[Aa>>2]|0;s=c[Ba>>2]|0;if((u|0)<=-1)break;K=v;J=G;I=F;x=c[Xa>>2]|0;y=c[M>>2]|0;z=c[N>>2]|0;A=c[O>>2]|0;B=c[P>>2]|0;D=c[Q>>2]|0;E=c[R>>2]|0;F=c[S>>2]|0;G=c[T>>2]|0;v=L}lb=0-L|0;Na=(f^h)&lb;kb=(e^g)&lb;ib=(j^p)&lb;gb=(k^r)&lb;eb=(l^t)&lb;cb=(m^v)&lb;ab=(n^G)&lb;_a=(o^F)&lb;Oa=(q^H)&lb;Ma=(s^w)&lb;c[Wa>>2]=Na^h;c[La>>2]=kb^g;c[Da>>2]=ib^p;c[Ea>>2]=gb^r;c[Fa>>2]=eb^t;c[Ga>>2]=cb^v;c[Ha>>2]=ab^G;c[Ia>>2]=_a^F;c[Ja>>2]=Oa^H;c[Ka>>2]=Ma^w;c[Qa>>2]=Na^f;c[ta>>2]=kb^e;c[ua>>2]=ib^j;c[va>>2]=gb^k;c[wa>>2]=eb^l;c[xa>>2]=cb^m;c[ya>>2]=ab^n;c[za>>2]=_a^o;c[Aa>>2]=Oa^q;c[Ba>>2]=Ma^s;ta=c[Xa>>2]|0;ua=c[M>>2]|0;va=c[N>>2]|0;wa=c[O>>2]|0;xa=c[P>>2]|0;ya=c[Q>>2]|0;za=c[R>>2]|0;Aa=c[S>>2]|0;Ba=c[T>>2]|0;Ma=c[U>>2]|0;Oa=c[Ra>>2]|0;Qa=c[Ca>>2]|0;_a=c[V>>2]|0;ab=c[W>>2]|0;cb=c[X>>2]|0;eb=c[Y>>2]|0;gb=c[Z>>2]|0;ib=c[_>>2]|0;kb=c[$>>2]|0;e=c[aa>>2]|0;Na=(Oa^ta)&lb;Pa=(Qa^ua)&lb;Za=(_a^va)&lb;$a=(ab^wa)&lb;bb=(cb^xa)&lb;db=(eb^ya)&lb;fb=(gb^za)&lb;hb=(ib^Aa)&lb;jb=(kb^Ba)&lb;lb=(e^Ma)&lb;c[Xa>>2]=Na^ta;c[M>>2]=Pa^ua;c[N>>2]=Za^va;c[O>>2]=$a^wa;c[P>>2]=bb^xa;c[Q>>2]=db^ya;c[R>>2]=fb^za;c[S>>2]=hb^Aa;c[T>>2]=jb^Ba;c[U>>2]=lb^Ma;c[Ra>>2]=Na^Oa;c[Ca>>2]=Pa^Qa;c[V>>2]=Za^_a;c[W>>2]=$a^ab;c[X>>2]=bb^cb;c[Y>>2]=db^eb;c[Z>>2]=fb^gb;c[_>>2]=hb^ib;c[$>>2]=jb^kb;c[aa>>2]=lb^e;dd(Ta,Xa);dd(Ua,Ta);dd(Ua,Ua);cd(Ua,Xa,Ua);cd(Ta,Ta,Ua);dd(Va,Ta);cd(Ua,Ua,Va);dd(Va,Ua);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);cd(Ua,Va,Ua);dd(Va,Ua);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);cd(Va,Va,Ua);dd(Sa,Va);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);dd(Sa,Sa);cd(Va,Sa,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);dd(Va,Va);cd(Ua,Va,Ua);dd(Va,Ua);e=1;do{dd(Va,Va);e=e+1|0}while((e|0)!=50);cd(Va,Va,Ua);dd(Sa,Va);e=1;do{dd(Sa,Sa);e=e+1|0}while((e|0)!=100);cd(Va,Sa,Va);dd(Va,Va);e=1;do{dd(Va,Va);e=e+1|0}while((e|0)!=50);cd(Ua,Va,Ua);dd(Ua,Ua);dd(Ua,Ua);dd(Ua,Ua);dd(Ua,Ua);dd(Ua,Ua);cd(Xa,Ua,Ta);cd(Wa,Wa,Xa);cb=c[Wa>>2]|0;db=c[La>>2]|0;eb=c[Da>>2]|0;fb=c[Ea>>2]|0;gb=c[Fa>>2]|0;hb=c[Ga>>2]|0;ib=c[Ha>>2]|0;jb=c[Ia>>2]|0;lb=c[Ja>>2]|0;kb=c[Ka>>2]|0;cb=(((((((((((((kb*19|0)+16777216>>25)+cb>>26)+db>>25)+eb>>26)+fb>>25)+gb>>26)+hb>>25)+ib>>26)+jb>>25)+lb>>26)+kb>>25)*19|0)+cb|0;bb=cb>>26;db=bb+db|0;bb=cb-(bb<<26)|0;cb=db>>25;eb=cb+eb|0;cb=db-(cb<<25)|0;db=eb>>26;fb=db+fb|0;db=eb-(db<<26)|0;eb=fb>>25;gb=eb+gb|0;eb=fb-(eb<<25)|0;fb=gb>>26;hb=fb+hb|0;fb=gb-(fb<<26)|0;gb=hb>>25;ib=gb+ib|0;gb=hb-(gb<<25)|0;hb=ib>>26;jb=hb+jb|0;hb=ib-(hb<<26)|0;ib=jb>>25;lb=ib+lb|0;ib=jb-(ib<<25)|0;jb=lb>>26;kb=jb+kb|0;jb=lb-(jb<<26)|0;lb=kb&33554431;a[b>>0]=bb;a[b+1>>0]=bb>>>8;a[b+2>>0]=bb>>>16;a[b+3>>0]=cb<<2|bb>>>24;a[b+4>>0]=cb>>>6;a[b+5>>0]=cb>>>14;a[b+6>>0]=db<<3|cb>>>22;a[b+7>>0]=db>>>5;a[b+8>>0]=db>>>13;a[b+9>>0]=eb<<5|db>>>21;a[b+10>>0]=eb>>>3;a[b+11>>0]=eb>>>11;a[b+12>>0]=fb<<6|eb>>>19;a[b+13>>0]=fb>>>2;a[b+14>>0]=fb>>>10;a[b+15>>0]=fb>>>18;a[b+16>>0]=gb;a[b+17>>0]=gb>>>8;a[b+18>>0]=gb>>>16;a[b+19>>0]=hb<<1|gb>>>24;a[b+20>>0]=hb>>>7;a[b+21>>0]=hb>>>15;a[b+22>>0]=ib<<3|hb>>>23;a[b+23>>0]=ib>>>5;a[b+24>>0]=ib>>>13;a[b+25>>0]=jb<<4|ib>>>21;a[b+26>>0]=jb>>>4;a[b+27>>0]=jb>>>12;a[b+28>>0]=jb>>>20|lb<<6;a[b+29>>0]=kb>>>2;a[b+30>>0]=kb>>>10;a[b+31>>0]=lb>>>18;i=Ya;return}function fd(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0;D=i;B=i=i+63&-64;i=i+112|0;y=B;A=B+48|0;B=B+16|0;if((f|0)==0&(g|0)==0){i=D;return}o=B+0|0;l=l+0|0;n=o+32|0;do{a[o>>0]=a[l>>0]|0;o=o+1|0;l=l+1|0}while((o|0)<(n|0));u=h;r=u;u=u+4|0;u=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;q=y;c[q>>2]=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;c[q+4>>2]=u;q=y+8|0;a[q>>0]=j;u=pd(j|0,k|0,8)|0;r=y+9|0;a[r>>0]=u;u=pd(j|0,k|0,16)|0;s=y+10|0;a[s>>0]=u;u=pd(j|0,k|0,24)|0;t=y+11|0;a[t>>0]=u;u=y+12|0;a[u>>0]=k;x=pd(j|0,k|0,40)|0;v=y+13|0;a[v>>0]=x;x=pd(j|0,k|0,48)|0;w=y+14|0;a[w>>0]=x;x=pd(j|0,k|0,56)|0;l=y+15|0;a[l>>0]=x;if(g>>>0>0|(g|0)==0&f>>>0>63){p=nd(f|0,g|0,-64,-1)|0;x=p+64&-64;j=b;n=e;k=f;o=g;while(1){ib(A,y,B,33136);h=0;do{a[j+h>>0]=a[A+h>>0]^a[n+h>>0];h=h+1|0}while((h|0)!=64);f=c[q>>2]|0;g=(f&255)+1|0;a[q>>0]=g;g=(f>>>8&255)+(g>>>8)|0;a[r>>0]=g;g=(f>>>16&255)+(g>>>8)|0;a[s>>0]=g;g=(f>>>24)+(g>>>8)|0;a[t>>0]=g;f=c[u>>2]|0;g=(f&255)+(g>>>8)|0;a[u>>0]=g;g=(f>>>8&255)+(g>>>8)|0;a[v>>0]=g;g=(f>>>16&255)+(g>>>8)|0;a[w>>0]=g;a[l>>0]=(f>>>24)+(g>>>8);k=nd(k|0,o|0,-64,-1)|0;o=C;if(!(o>>>0>0|(o|0)==0&k>>>0>63))break;else{j=j+64|0;n=n+64|0}}l=p&63;if(!((l|0)==0&0==0)?(m=l,ib(A,y,B,33136),(m|0)!=0):0){b=b+x|0;e=e+x|0;z=10}}else{ib(A,y,B,33136);m=f;z=10}if((z|0)==10){l=0;do{a[b+l>>0]=a[A+l>>0]^a[e+l>>0];l=l+1|0}while((l|0)!=(m|0))}o=A+0|0;n=o+64|0;do{a[o>>0]=0;o=o+1|0}while((o|0)<(n|0));o=B+0|0;n=o+32|0;do{a[o>>0]=0;o=o+1|0}while((o|0)<(n|0));i=D;return}
function Db(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;h=i;g=i=i+63&-64;i=i+640|0;e=0;do{j=e<<3;o=d[b+(j|7)>>0]|0;p=qd(d[b+(j|6)>>0]|0|0,0,8)|0;f=C;n=qd(d[b+(j|5)>>0]|0|0,0,16)|0;f=f|C;m=qd(d[b+(j|4)>>0]|0|0,0,24)|0;f=f|C|(d[b+(j|3)>>0]|0);l=qd(d[b+(j|2)>>0]|0|0,0,40)|0;f=f|C;k=qd(d[b+(j|1)>>0]|0|0,0,48)|0;k=nd(p|o|n|m|l|0,f|0,k|0,C|0)|0;f=C;j=qd(d[b+j>>0]|0|0,0,56)|0;j=nd(k|0,f|0,j|0,C|0)|0;f=g+(e<<3)|0;c[f>>2]=j;c[f+4>>2]=C;e=e+1|0}while((e|0)!=16);b=g;e=c[b>>2]|0;b=c[b+4>>2]|0;f=16;do{s=g+(f+-2<<3)|0;w=c[s>>2]|0;s=c[s+4>>2]|0;r=pd(w|0,s|0,19)|0;j=C;q=qd(w|0,s|0,45)|0;j=j|C;u=pd(w|0,s|0,61)|0;v=C;t=qd(w|0,s|0,3)|0;v=v|C;s=pd(w|0,s|0,6)|0;j=v^C^j;v=g+(f+-7<<3)|0;w=c[v>>2]|0;v=c[v+4>>2]|0;n=g+(f+-15<<3)|0;y=e;e=c[n>>2]|0;x=b;b=c[n+4>>2]|0;n=pd(e|0,b|0,1)|0;o=C;p=qd(e|0,b|0,63)|0;o=o|C;k=pd(e|0,b|0,8)|0;z=C;l=qd(e|0,b|0,56)|0;z=z|C;m=pd(e|0,b|0,7)|0;o=z^C^o;v=nd(y|0,x|0,w|0,v|0)|0;j=nd(v|0,C|0,(u|t)^s^(r|q)|0,j|0)|0;o=nd(j|0,C|0,(k|l)^m^(n|p)|0,o|0)|0;p=g+(f<<3)|0;c[p>>2]=o;c[p+4>>2]=C;f=f+1|0}while((f|0)!=80);K=a;I=c[K>>2]|0;K=c[K+4>>2]|0;e=a+8|0;A=e;B=c[A>>2]|0;A=c[A+4>>2]|0;k=a+16|0;f=k;b=c[f>>2]|0;f=c[f+4>>2]|0;n=a+24|0;l=n;j=c[l>>2]|0;l=c[l+4>>2]|0;q=a+32|0;m=q;p=c[m>>2]|0;m=c[m+4>>2]|0;t=a+40|0;o=t;s=c[o>>2]|0;o=c[o+4>>2]|0;w=a+48|0;r=w;v=c[r>>2]|0;r=c[r+4>>2]|0;z=a+56|0;u=z;y=c[u>>2]|0;u=c[u+4>>2]|0;H=pd(p|0,m|0,14)|0;D=C;x=qd(p|0,m|0,50)|0;D=D|C;M=pd(p|0,m|0,18)|0;E=C;L=qd(p|0,m|0,46)|0;E=D^(E|C);D=pd(p|0,m|0,41)|0;G=C;J=qd(p|0,m|0,23)|0;G=E^(G|C);E=g;F=c[E>>2]|0;E=c[E+4>>2]|0;u=nd(y|0,u|0,-685199838,1116352408)|0;E=nd(u|0,C|0,F|0,E|0)|0;G=nd(E|0,C|0,(H|x)^(M|L)^(D|J)|0,G|0)|0;G=nd(G|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;J=C;D=pd(I|0,K|0,28)|0;L=C;M=qd(I|0,K|0,36)|0;L=L|C;x=pd(I|0,K|0,34)|0;H=C;E=qd(I|0,K|0,30)|0;H=L^(H|C);L=pd(I|0,K|0,39)|0;F=C;u=qd(I|0,K|0,25)|0;F=nd((b|B)&I|b&B|0,(f|A)&K|f&A|0,(D|M)^(x|E)^(L|u)|0,H^(F|C)|0)|0;H=C;l=nd(j|0,l|0,G|0,J|0)|0;j=C;J=nd(F|0,H|0,G|0,J|0)|0;G=C;H=pd(l|0,j|0,14)|0;F=C;u=qd(l|0,j|0,50)|0;F=F|C;L=pd(l|0,j|0,18)|0;E=C;x=qd(l|0,j|0,46)|0;E=F^(E|C);F=pd(l|0,j|0,41)|0;M=C;D=qd(l|0,j|0,23)|0;M=E^(M|C);E=g+8|0;y=c[E>>2]|0;E=c[E+4>>2]|0;r=nd(v|0,r|0,602891725,1899447441)|0;E=nd(r|0,C|0,y|0,E|0)|0;M=nd(E|0,C|0,(H|u)^(L|x)^(F|D)|0,M|0)|0;M=nd(M|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;D=C;F=pd(J|0,G|0,28)|0;x=C;L=qd(J|0,G|0,36)|0;x=x|C;u=pd(J|0,G|0,34)|0;H=C;E=qd(J|0,G|0,30)|0;H=x^(H|C);x=pd(J|0,G|0,39)|0;y=C;r=qd(J|0,G|0,25)|0;y=nd((B|I)&J|B&I|0,(A|K)&G|A&K|0,(F|L)^(u|E)^(x|r)|0,H^(y|C)|0)|0;H=C;f=nd(b|0,f|0,M|0,D|0)|0;b=C;D=nd(y|0,H|0,M|0,D|0)|0;M=C;H=pd(f|0,b|0,14)|0;y=C;r=qd(f|0,b|0,50)|0;y=y|C;x=pd(f|0,b|0,18)|0;E=C;u=qd(f|0,b|0,46)|0;E=y^(E|C);y=pd(f|0,b|0,41)|0;L=C;F=qd(f|0,b|0,23)|0;L=E^(L|C);E=g+16|0;v=c[E>>2]|0;E=c[E+4>>2]|0;o=nd(s|0,o|0,-330482897,-1245643825)|0;E=nd(o|0,C|0,v|0,E|0)|0;L=nd(E|0,C|0,(H|r)^(x|u)^(y|F)|0,L|0)|0;L=nd(L|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;F=C;y=pd(D|0,M|0,28)|0;u=C;x=qd(D|0,M|0,36)|0;u=u|C;r=pd(D|0,M|0,34)|0;H=C;E=qd(D|0,M|0,30)|0;H=u^(H|C);u=pd(D|0,M|0,39)|0;v=C;o=qd(D|0,M|0,25)|0;v=nd((I|J)&D|I&J|0,(K|G)&M|K&G|0,(y|x)^(r|E)^(u|o)|0,H^(v|C)|0)|0;H=C;A=nd(B|0,A|0,L|0,F|0)|0;B=C;F=nd(v|0,H|0,L|0,F|0)|0;L=C;H=pd(A|0,B|0,14)|0;v=C;o=qd(A|0,B|0,50)|0;v=v|C;u=pd(A|0,B|0,18)|0;E=C;r=qd(A|0,B|0,46)|0;E=v^(E|C);v=pd(A|0,B|0,41)|0;x=C;y=qd(A|0,B|0,23)|0;x=E^(x|C);E=g+24|0;s=c[E>>2]|0;E=c[E+4>>2]|0;m=nd(p|0,m|0,-2121671748,-373957723)|0;E=nd(m|0,C|0,s|0,E|0)|0;x=nd(E|0,C|0,(H|o)^(u|r)^(v|y)|0,x|0)|0;x=nd(x|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;y=C;v=pd(F|0,L|0,28)|0;r=C;u=qd(F|0,L|0,36)|0;r=r|C;o=pd(F|0,L|0,34)|0;H=C;E=qd(F|0,L|0,30)|0;H=r^(H|C);r=pd(F|0,L|0,39)|0;s=C;m=qd(F|0,L|0,25)|0;s=nd((J|D)&F|J&D|0,(G|M)&L|G&M|0,(v|u)^(o|E)^(r|m)|0,H^(s|C)|0)|0;H=C;K=nd(I|0,K|0,x|0,y|0)|0;I=C;y=nd(s|0,H|0,x|0,y|0)|0;x=C;H=pd(K|0,I|0,14)|0;s=C;m=qd(K|0,I|0,50)|0;s=s|C;r=pd(K|0,I|0,18)|0;E=C;o=qd(K|0,I|0,46)|0;E=s^(E|C);s=pd(K|0,I|0,41)|0;u=C;v=qd(K|0,I|0,23)|0;u=E^(u|C);E=g+32|0;p=c[E>>2]|0;E=c[E+4>>2]|0;j=nd(l|0,j|0,-213338824,961987163)|0;E=nd(j|0,C|0,p|0,E|0)|0;u=nd(E|0,C|0,(H|m)^(r|o)^(s|v)|0,u|0)|0;u=nd(u|0,C|0,(f^A)&K^f|0,(b^B)&I^b|0)|0;v=C;s=pd(y|0,x|0,28)|0;o=C;r=qd(y|0,x|0,36)|0;o=o|C;m=pd(y|0,x|0,34)|0;H=C;E=qd(y|0,x|0,30)|0;H=o^(H|C);o=pd(y|0,x|0,39)|0;p=C;j=qd(y|0,x|0,25)|0;p=nd((D|F)&y|D&F|0,(M|L)&x|M&L|0,(s|r)^(m|E)^(o|j)|0,H^(p|C)|0)|0;H=C;G=nd(J|0,G|0,u|0,v|0)|0;J=C;v=nd(p|0,H|0,u|0,v|0)|0;u=C;H=pd(G|0,J|0,14)|0;p=C;j=qd(G|0,J|0,50)|0;p=p|C;o=pd(G|0,J|0,18)|0;E=C;m=qd(G|0,J|0,46)|0;E=p^(E|C);p=pd(G|0,J|0,41)|0;r=C;s=qd(G|0,J|0,23)|0;r=E^(r|C);E=g+40|0;l=c[E>>2]|0;E=c[E+4>>2]|0;b=nd(f|0,b|0,-1241133031,1508970993)|0;E=nd(b|0,C|0,l|0,E|0)|0;r=nd(E|0,C|0,(H|j)^(o|m)^(p|s)|0,r|0)|0;r=nd(r|0,C|0,(A^K)&G^A|0,(B^I)&J^B|0)|0;s=C;p=pd(v|0,u|0,28)|0;m=C;o=qd(v|0,u|0,36)|0;m=m|C;j=pd(v|0,u|0,34)|0;H=C;E=qd(v|0,u|0,30)|0;H=m^(H|C);m=pd(v|0,u|0,39)|0;l=C;b=qd(v|0,u|0,25)|0;l=nd((F|y)&v|F&y|0,(L|x)&u|L&x|0,(p|o)^(j|E)^(m|b)|0,H^(l|C)|0)|0;H=C;M=nd(D|0,M|0,r|0,s|0)|0;D=C;s=nd(l|0,H|0,r|0,s|0)|0;r=C;H=pd(M|0,D|0,14)|0;l=C;b=qd(M|0,D|0,50)|0;l=l|C;m=pd(M|0,D|0,18)|0;E=C;j=qd(M|0,D|0,46)|0;E=l^(E|C);l=pd(M|0,D|0,41)|0;o=C;p=qd(M|0,D|0,23)|0;o=E^(o|C);E=g+48|0;f=c[E>>2]|0;E=c[E+4>>2]|0;B=nd(A|0,B|0,-1357295717,-1841331548)|0;E=nd(B|0,C|0,f|0,E|0)|0;o=nd(E|0,C|0,(H|b)^(m|j)^(l|p)|0,o|0)|0;o=nd(o|0,C|0,(K^G)&M^K|0,(I^J)&D^I|0)|0;p=C;l=pd(s|0,r|0,28)|0;j=C;m=qd(s|0,r|0,36)|0;j=j|C;b=pd(s|0,r|0,34)|0;H=C;E=qd(s|0,r|0,30)|0;H=j^(H|C);j=pd(s|0,r|0,39)|0;f=C;B=qd(s|0,r|0,25)|0;f=nd((y|v)&s|y&v|0,(x|u)&r|x&u|0,(l|m)^(b|E)^(j|B)|0,H^(f|C)|0)|0;H=C;L=nd(F|0,L|0,o|0,p|0)|0;F=C;p=nd(f|0,H|0,o|0,p|0)|0;o=C;H=pd(L|0,F|0,14)|0;f=C;B=qd(L|0,F|0,50)|0;f=f|C;j=pd(L|0,F|0,18)|0;E=C;b=qd(L|0,F|0,46)|0;E=f^(E|C);f=pd(L|0,F|0,41)|0;m=C;l=qd(L|0,F|0,23)|0;m=E^(m|C);E=g+56|0;A=c[E>>2]|0;E=c[E+4>>2]|0;I=nd(K|0,I|0,-630357736,-1424204075)|0;E=nd(I|0,C|0,A|0,E|0)|0;m=nd(E|0,C|0,(H|B)^(j|b)^(f|l)|0,m|0)|0;m=nd(m|0,C|0,(G^M)&L^G|0,(J^D)&F^J|0)|0;l=C;f=pd(p|0,o|0,28)|0;b=C;j=qd(p|0,o|0,36)|0;b=b|C;B=pd(p|0,o|0,34)|0;H=C;E=qd(p|0,o|0,30)|0;H=b^(H|C);b=pd(p|0,o|0,39)|0;A=C;I=qd(p|0,o|0,25)|0;A=nd((v|s)&p|v&s|0,(u|r)&o|u&r|0,(f|j)^(B|E)^(b|I)|0,H^(A|C)|0)|0;H=C;x=nd(y|0,x|0,m|0,l|0)|0;y=C;l=nd(A|0,H|0,m|0,l|0)|0;m=C;H=pd(x|0,y|0,14)|0;A=C;I=qd(x|0,y|0,50)|0;A=A|C;b=pd(x|0,y|0,18)|0;E=C;B=qd(x|0,y|0,46)|0;E=A^(E|C);A=pd(x|0,y|0,41)|0;j=C;f=qd(x|0,y|0,23)|0;j=E^(j|C);E=g+64|0;K=c[E>>2]|0;E=c[E+4>>2]|0;J=nd(G|0,J|0,-1560083902,-670586216)|0;E=nd(J|0,C|0,K|0,E|0)|0;j=nd(E|0,C|0,(H|I)^(b|B)^(A|f)|0,j|0)|0;j=nd(j|0,C|0,(M^L)&x^M|0,(D^F)&y^D|0)|0;f=C;A=pd(l|0,m|0,28)|0;B=C;b=qd(l|0,m|0,36)|0;B=B|C;I=pd(l|0,m|0,34)|0;H=C;E=qd(l|0,m|0,30)|0;H=B^(H|C);B=pd(l|0,m|0,39)|0;K=C;J=qd(l|0,m|0,25)|0;K=nd((s|p)&l|s&p|0,(r|o)&m|r&o|0,(A|b)^(I|E)^(B|J)|0,H^(K|C)|0)|0;H=C;u=nd(v|0,u|0,j|0,f|0)|0;v=C;f=nd(K|0,H|0,j|0,f|0)|0;j=C;H=pd(u|0,v|0,14)|0;K=C;J=qd(u|0,v|0,50)|0;K=K|C;B=pd(u|0,v|0,18)|0;E=C;I=qd(u|0,v|0,46)|0;E=K^(E|C);K=pd(u|0,v|0,41)|0;b=C;A=qd(u|0,v|0,23)|0;b=E^(b|C);E=g+72|0;G=c[E>>2]|0;E=c[E+4>>2]|0;D=nd(M|0,D|0,1164996542,310598401)|0;E=nd(D|0,C|0,G|0,E|0)|0;b=nd(E|0,C|0,(H|J)^(B|I)^(K|A)|0,b|0)|0;b=nd(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;K=pd(f|0,j|0,28)|0;I=C;B=qd(f|0,j|0,36)|0;I=I|C;J=pd(f|0,j|0,34)|0;H=C;E=qd(f|0,j|0,30)|0;H=I^(H|C);I=pd(f|0,j|0,39)|0;G=C;D=qd(f|0,j|0,25)|0;G=nd((p|l)&f|p&l|0,(o|m)&j|o&m|0,(K|B)^(J|E)^(I|D)|0,H^(G|C)|0)|0;H=C;r=nd(s|0,r|0,b|0,A|0)|0;s=C;A=nd(G|0,H|0,b|0,A|0)|0;b=C;H=pd(r|0,s|0,14)|0;G=C;D=qd(r|0,s|0,50)|0;G=G|C;I=pd(r|0,s|0,18)|0;E=C;J=qd(r|0,s|0,46)|0;E=G^(E|C);G=pd(r|0,s|0,41)|0;B=C;K=qd(r|0,s|0,23)|0;B=E^(B|C);E=g+80|0;M=c[E>>2]|0;E=c[E+4>>2]|0;F=nd(L|0,F|0,1323610764,607225278)|0;E=nd(F|0,C|0,M|0,E|0)|0;B=nd(E|0,C|0,(H|D)^(I|J)^(G|K)|0,B|0)|0;B=nd(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;K=C;G=pd(A|0,b|0,28)|0;J=C;I=qd(A|0,b|0,36)|0;J=J|C;D=pd(A|0,b|0,34)|0;H=C;E=qd(A|0,b|0,30)|0;H=J^(H|C);J=pd(A|0,b|0,39)|0;M=C;F=qd(A|0,b|0,25)|0;M=nd((l|f)&A|l&f|0,(m|j)&b|m&j|0,(G|I)^(D|E)^(J|F)|0,H^(M|C)|0)|0;H=C;o=nd(p|0,o|0,B|0,K|0)|0;p=C;K=nd(M|0,H|0,B|0,K|0)|0;B=C;H=pd(o|0,p|0,14)|0;M=C;F=qd(o|0,p|0,50)|0;M=M|C;J=pd(o|0,p|0,18)|0;E=C;D=qd(o|0,p|0,46)|0;E=M^(E|C);M=pd(o|0,p|0,41)|0;I=C;G=qd(o|0,p|0,23)|0;I=E^(I|C);E=g+88|0;L=c[E>>2]|0;E=c[E+4>>2]|0;y=nd(x|0,y|0,-704662302,1426881987)|0;E=nd(y|0,C|0,L|0,E|0)|0;I=nd(E|0,C|0,(H|F)^(J|D)^(M|G)|0,I|0)|0;I=nd(I|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;G=C;M=pd(K|0,B|0,28)|0;D=C;J=qd(K|0,B|0,36)|0;D=D|C;F=pd(K|0,B|0,34)|0;H=C;E=qd(K|0,B|0,30)|0;H=D^(H|C);D=pd(K|0,B|0,39)|0;L=C;y=qd(K|0,B|0,25)|0;L=nd((f|A)&K|f&A|0,(j|b)&B|j&b|0,(M|J)^(F|E)^(D|y)|0,H^(L|C)|0)|0;H=C;m=nd(l|0,m|0,I|0,G|0)|0;l=C;G=nd(L|0,H|0,I|0,G|0)|0;I=C;H=pd(m|0,l|0,14)|0;L=C;y=qd(m|0,l|0,50)|0;L=L|C;D=pd(m|0,l|0,18)|0;E=C;F=qd(m|0,l|0,46)|0;E=L^(E|C);L=pd(m|0,l|0,41)|0;J=C;M=qd(m|0,l|0,23)|0;J=E^(J|C);E=g+96|0;x=c[E>>2]|0;E=c[E+4>>2]|0;v=nd(u|0,v|0,-226784913,1925078388)|0;E=nd(v|0,C|0,x|0,E|0)|0;J=nd(E|0,C|0,(H|y)^(D|F)^(L|M)|0,J|0)|0;J=nd(J|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;M=C;L=pd(G|0,I|0,28)|0;F=C;D=qd(G|0,I|0,36)|0;F=F|C;y=pd(G|0,I|0,34)|0;H=C;E=qd(G|0,I|0,30)|0;H=F^(H|C);F=pd(G|0,I|0,39)|0;x=C;v=qd(G|0,I|0,25)|0;x=nd((A|K)&G|A&K|0,(b|B)&I|b&B|0,(L|D)^(y|E)^(F|v)|0,H^(x|C)|0)|0;H=C;j=nd(f|0,j|0,J|0,M|0)|0;f=C;M=nd(x|0,H|0,J|0,M|0)|0;J=C;H=pd(j|0,f|0,14)|0;x=C;v=qd(j|0,f|0,50)|0;x=x|C;F=pd(j|0,f|0,18)|0;E=C;y=qd(j|0,f|0,46)|0;E=x^(E|C);x=pd(j|0,f|0,41)|0;D=C;L=qd(j|0,f|0,23)|0;D=E^(D|C);E=g+104|0;u=c[E>>2]|0;E=c[E+4>>2]|0;s=nd(r|0,s|0,991336113,-2132889090)|0;E=nd(s|0,C|0,u|0,E|0)|0;D=nd(E|0,C|0,(H|v)^(F|y)^(x|L)|0,D|0)|0;D=nd(D|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;L=C;x=pd(M|0,J|0,28)|0;y=C;F=qd(M|0,J|0,36)|0;y=y|C;v=pd(M|0,J|0,34)|0;H=C;E=qd(M|0,J|0,30)|0;H=y^(H|C);y=pd(M|0,J|0,39)|0;u=C;s=qd(M|0,J|0,25)|0;u=nd((K|G)&M|K&G|0,(B|I)&J|B&I|0,(x|F)^(v|E)^(y|s)|0,H^(u|C)|0)|0;H=C;b=nd(A|0,b|0,D|0,L|0)|0;A=C;L=nd(u|0,H|0,D|0,L|0)|0;D=C;H=pd(b|0,A|0,14)|0;u=C;s=qd(b|0,A|0,50)|0;u=u|C;y=pd(b|0,A|0,18)|0;E=C;v=qd(b|0,A|0,46)|0;E=u^(E|C);u=pd(b|0,A|0,41)|0;F=C;x=qd(b|0,A|0,23)|0;F=E^(F|C);E=g+112|0;r=c[E>>2]|0;E=c[E+4>>2]|0;p=nd(o|0,p|0,633803317,-1680079193)|0;E=nd(p|0,C|0,r|0,E|0)|0;F=nd(E|0,C|0,(H|s)^(y|v)^(u|x)|0,F|0)|0;F=nd(F|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;x=C;u=pd(L|0,D|0,28)|0;v=C;y=qd(L|0,D|0,36)|0;v=v|C;s=pd(L|0,D|0,34)|0;H=C;E=qd(L|0,D|0,30)|0;H=v^(H|C);v=pd(L|0,D|0,39)|0;r=C;p=qd(L|0,D|0,25)|0;r=nd((G|M)&L|G&M|0,(I|J)&D|I&J|0,(u|y)^(s|E)^(v|p)|0,H^(r|C)|0)|0;H=C;B=nd(K|0,B|0,F|0,x|0)|0;K=C;x=nd(r|0,H|0,F|0,x|0)|0;F=C;H=pd(B|0,K|0,14)|0;r=C;p=qd(B|0,K|0,50)|0;r=r|C;v=pd(B|0,K|0,18)|0;E=C;s=qd(B|0,K|0,46)|0;E=r^(E|C);r=pd(B|0,K|0,41)|0;y=C;u=qd(B|0,K|0,23)|0;y=E^(y|C);E=g+120|0;o=c[E>>2]|0;E=c[E+4>>2]|0;l=nd(m|0,l|0,-815192428,-1046744716)|0;E=nd(l|0,C|0,o|0,E|0)|0;y=nd(E|0,C|0,(H|p)^(v|s)^(r|u)|0,y|0)|0;y=nd(y|0,C|0,(j^b)&B^j|0,(f^A)&K^f|0)|0;u=C;r=pd(x|0,F|0,28)|0;s=C;v=qd(x|0,F|0,36)|0;s=s|C;p=pd(x|0,F|0,34)|0;H=C;E=qd(x|0,F|0,30)|0;H=s^(H|C);s=pd(x|0,F|0,39)|0;o=C;l=qd(x|0,F|0,25)|0;o=nd((M|L)&x|M&L|0,(J|D)&F|J&D|0,(r|v)^(p|E)^(s|l)|0,H^(o|C)|0)|0;H=C;I=nd(G|0,I|0,y|0,u|0)|0;G=C;u=nd(o|0,H|0,y|0,u|0)|0;y=C;H=pd(I|0,G|0,14)|0;o=C;l=qd(I|0,G|0,50)|0;o=o|C;s=pd(I|0,G|0,18)|0;E=C;p=qd(I|0,G|0,46)|0;E=o^(E|C);o=pd(I|0,G|0,41)|0;v=C;r=qd(I|0,G|0,23)|0;v=E^(v|C);E=g+128|0;m=c[E>>2]|0;E=c[E+4>>2]|0;f=nd(j|0,f|0,-1628353838,-459576895)|0;E=nd(f|0,C|0,m|0,E|0)|0;v=nd(E|0,C|0,(H|l)^(s|p)^(o|r)|0,v|0)|0;v=nd(v|0,C|0,(b^B)&I^b|0,(A^K)&G^A|0)|0;r=C;o=pd(u|0,y|0,28)|0;p=C;s=qd(u|0,y|0,36)|0;p=p|C;l=pd(u|0,y|0,34)|0;H=C;E=qd(u|0,y|0,30)|0;H=p^(H|C);p=pd(u|0,y|0,39)|0;m=C;f=qd(u|0,y|0,25)|0;m=nd((L|x)&u|L&x|0,(D|F)&y|D&F|0,(o|s)^(l|E)^(p|f)|0,H^(m|C)|0)|0;H=C;J=nd(M|0,J|0,v|0,r|0)|0;M=C;r=nd(m|0,H|0,v|0,r|0)|0;v=C;H=pd(J|0,M|0,14)|0;m=C;f=qd(J|0,M|0,50)|0;m=m|C;p=pd(J|0,M|0,18)|0;E=C;l=qd(J|0,M|0,46)|0;E=m^(E|C);m=pd(J|0,M|0,41)|0;s=C;o=qd(J|0,M|0,23)|0;s=E^(s|C);E=g+136|0;j=c[E>>2]|0;E=c[E+4>>2]|0;A=nd(b|0,A|0,944711139,-272742522)|0;E=nd(A|0,C|0,j|0,E|0)|0;s=nd(E|0,C|0,(H|f)^(p|l)^(m|o)|0,s|0)|0;s=nd(s|0,C|0,(B^I)&J^B|0,(K^G)&M^K|0)|0;o=C;m=pd(r|0,v|0,28)|0;l=C;p=qd(r|0,v|0,36)|0;l=l|C;f=pd(r|0,v|0,34)|0;H=C;E=qd(r|0,v|0,30)|0;H=l^(H|C);l=pd(r|0,v|0,39)|0;j=C;A=qd(r|0,v|0,25)|0;j=nd((x|u)&r|x&u|0,(F|y)&v|F&y|0,(m|p)^(f|E)^(l|A)|0,H^(j|C)|0)|0;H=C;D=nd(L|0,D|0,s|0,o|0)|0;L=C;o=nd(j|0,H|0,s|0,o|0)|0;s=C;H=pd(D|0,L|0,14)|0;j=C;A=qd(D|0,L|0,50)|0;j=j|C;l=pd(D|0,L|0,18)|0;E=C;f=qd(D|0,L|0,46)|0;E=j^(E|C);j=pd(D|0,L|0,41)|0;p=C;m=qd(D|0,L|0,23)|0;p=E^(p|C);E=g+144|0;b=c[E>>2]|0;E=c[E+4>>2]|0;K=nd(B|0,K|0,-1953704523,264347078)|0;E=nd(K|0,C|0,b|0,E|0)|0;p=nd(E|0,C|0,(H|A)^(l|f)^(j|m)|0,p|0)|0;p=nd(p|0,C|0,(I^J)&D^I|0,(G^M)&L^G|0)|0;m=C;j=pd(o|0,s|0,28)|0;f=C;l=qd(o|0,s|0,36)|0;f=f|C;A=pd(o|0,s|0,34)|0;H=C;E=qd(o|0,s|0,30)|0;H=f^(H|C);f=pd(o|0,s|0,39)|0;b=C;K=qd(o|0,s|0,25)|0;b=nd((u|r)&o|u&r|0,(y|v)&s|y&v|0,(j|l)^(A|E)^(f|K)|0,H^(b|C)|0)|0;H=C;F=nd(x|0,F|0,p|0,m|0)|0;x=C;m=nd(b|0,H|0,p|0,m|0)|0;p=C;H=pd(F|0,x|0,14)|0;b=C;K=qd(F|0,x|0,50)|0;b=b|C;f=pd(F|0,x|0,18)|0;E=C;A=qd(F|0,x|0,46)|0;E=b^(E|C);b=pd(F|0,x|0,41)|0;l=C;j=qd(F|0,x|0,23)|0;l=E^(l|C);E=g+152|0;B=c[E>>2]|0;E=c[E+4>>2]|0;G=nd(I|0,G|0,2007800933,604807628)|0;E=nd(G|0,C|0,B|0,E|0)|0;l=nd(E|0,C|0,(H|K)^(f|A)^(b|j)|0,l|0)|0;l=nd(l|0,C|0,(J^D)&F^J|0,(M^L)&x^M|0)|0;j=C;b=pd(m|0,p|0,28)|0;A=C;f=qd(m|0,p|0,36)|0;A=A|C;K=pd(m|0,p|0,34)|0;H=C;E=qd(m|0,p|0,30)|0;H=A^(H|C);A=pd(m|0,p|0,39)|0;B=C;G=qd(m|0,p|0,25)|0;B=nd((r|o)&m|r&o|0,(v|s)&p|v&s|0,(b|f)^(K|E)^(A|G)|0,H^(B|C)|0)|0;H=C;y=nd(u|0,y|0,l|0,j|0)|0;u=C;j=nd(B|0,H|0,l|0,j|0)|0;l=C;H=pd(y|0,u|0,14)|0;B=C;G=qd(y|0,u|0,50)|0;B=B|C;A=pd(y|0,u|0,18)|0;E=C;K=qd(y|0,u|0,46)|0;E=B^(E|C);B=pd(y|0,u|0,41)|0;f=C;b=qd(y|0,u|0,23)|0;f=E^(f|C);E=g+160|0;I=c[E>>2]|0;E=c[E+4>>2]|0;M=nd(J|0,M|0,1495990901,770255983)|0;E=nd(M|0,C|0,I|0,E|0)|0;f=nd(E|0,C|0,(H|G)^(A|K)^(B|b)|0,f|0)|0;f=nd(f|0,C|0,(D^F)&y^D|0,(L^x)&u^L|0)|0;b=C;B=pd(j|0,l|0,28)|0;K=C;A=qd(j|0,l|0,36)|0;K=K|C;G=pd(j|0,l|0,34)|0;H=C;E=qd(j|0,l|0,30)|0;H=K^(H|C);K=pd(j|0,l|0,39)|0;I=C;M=qd(j|0,l|0,25)|0;I=nd((o|m)&j|o&m|0,(s|p)&l|s&p|0,(B|A)^(G|E)^(K|M)|0,H^(I|C)|0)|0;H=C;v=nd(r|0,v|0,f|0,b|0)|0;r=C;b=nd(I|0,H|0,f|0,b|0)|0;f=C;H=pd(v|0,r|0,14)|0;I=C;M=qd(v|0,r|0,50)|0;I=I|C;K=pd(v|0,r|0,18)|0;E=C;G=qd(v|0,r|0,46)|0;E=I^(E|C);I=pd(v|0,r|0,41)|0;A=C;B=qd(v|0,r|0,23)|0;A=E^(A|C);E=g+168|0;J=c[E>>2]|0;E=c[E+4>>2]|0;L=nd(D|0,L|0,1856431235,1249150122)|0;E=nd(L|0,C|0,J|0,E|0)|0;A=nd(E|0,C|0,(H|M)^(K|G)^(I|B)|0,A|0)|0;A=nd(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;I=pd(b|0,f|0,28)|0;G=C;K=qd(b|0,f|0,36)|0;G=G|C;M=pd(b|0,f|0,34)|0;H=C;E=qd(b|0,f|0,30)|0;H=G^(H|C);G=pd(b|0,f|0,39)|0;J=C;L=qd(b|0,f|0,25)|0;J=nd((m|j)&b|m&j|0,(p|l)&f|p&l|0,(I|K)^(M|E)^(G|L)|0,H^(J|C)|0)|0;H=C;s=nd(o|0,s|0,A|0,B|0)|0;o=C;B=nd(J|0,H|0,A|0,B|0)|0;A=C;H=pd(s|0,o|0,14)|0;J=C;L=qd(s|0,o|0,50)|0;J=J|C;G=pd(s|0,o|0,18)|0;E=C;M=qd(s|0,o|0,46)|0;E=J^(E|C);J=pd(s|0,o|0,41)|0;K=C;I=qd(s|0,o|0,23)|0;K=E^(K|C);E=g+176|0;D=c[E>>2]|0;E=c[E+4>>2]|0;x=nd(F|0,x|0,-1119749164,1555081692)|0;E=nd(x|0,C|0,D|0,E|0)|0;K=nd(E|0,C|0,(H|L)^(G|M)^(J|I)|0,K|0)|0;K=nd(K|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;I=C;J=pd(B|0,A|0,28)|0;M=C;G=qd(B|0,A|0,36)|0;M=M|C;L=pd(B|0,A|0,34)|0;H=C;E=qd(B|0,A|0,30)|0;H=M^(H|C);M=pd(B|0,A|0,39)|0;D=C;x=qd(B|0,A|0,25)|0;D=nd((j|b)&B|j&b|0,(l|f)&A|l&f|0,(J|G)^(L|E)^(M|x)|0,H^(D|C)|0)|0;H=C;p=nd(m|0,p|0,K|0,I|0)|0;m=C;I=nd(D|0,H|0,K|0,I|0)|0;K=C;H=pd(p|0,m|0,14)|0;D=C;x=qd(p|0,m|0,50)|0;D=D|C;M=pd(p|0,m|0,18)|0;E=C;L=qd(p|0,m|0,46)|0;E=D^(E|C);D=pd(p|0,m|0,41)|0;G=C;J=qd(p|0,m|0,23)|0;G=E^(G|C);E=g+184|0;F=c[E>>2]|0;E=c[E+4>>2]|0;u=nd(y|0,u|0,-2096016459,1996064986)|0;E=nd(u|0,C|0,F|0,E|0)|0;G=nd(E|0,C|0,(H|x)^(M|L)^(D|J)|0,G|0)|0;G=nd(G|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;J=C;D=pd(I|0,K|0,28)|0;L=C;M=qd(I|0,K|0,36)|0;L=L|C;x=pd(I|0,K|0,34)|0;H=C;E=qd(I|0,K|0,30)|0;H=L^(H|C);L=pd(I|0,K|0,39)|0;F=C;u=qd(I|0,K|0,25)|0;F=nd((b|B)&I|b&B|0,(f|A)&K|f&A|0,(D|M)^(x|E)^(L|u)|0,H^(F|C)|0)|0;H=C;l=nd(j|0,l|0,G|0,J|0)|0;j=C;J=nd(F|0,H|0,G|0,J|0)|0;G=C;H=pd(l|0,j|0,14)|0;F=C;u=qd(l|0,j|0,50)|0;F=F|C;L=pd(l|0,j|0,18)|0;E=C;x=qd(l|0,j|0,46)|0;E=F^(E|C);F=pd(l|0,j|0,41)|0;M=C;D=qd(l|0,j|0,23)|0;M=E^(M|C);E=g+192|0;y=c[E>>2]|0;E=c[E+4>>2]|0;r=nd(v|0,r|0,-295247957,-1740746414)|0;E=nd(r|0,C|0,y|0,E|0)|0;M=nd(E|0,C|0,(H|u)^(L|x)^(F|D)|0,M|0)|0;M=nd(M|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;D=C;F=pd(J|0,G|0,28)|0;x=C;L=qd(J|0,G|0,36)|0;x=x|C;u=pd(J|0,G|0,34)|0;H=C;E=qd(J|0,G|0,30)|0;H=x^(H|C);x=pd(J|0,G|0,39)|0;y=C;r=qd(J|0,G|0,25)|0;y=nd((B|I)&J|B&I|0,(A|K)&G|A&K|0,(F|L)^(u|E)^(x|r)|0,H^(y|C)|0)|0;H=C;f=nd(b|0,f|0,M|0,D|0)|0;b=C;D=nd(y|0,H|0,M|0,D|0)|0;M=C;H=pd(f|0,b|0,14)|0;y=C;r=qd(f|0,b|0,50)|0;y=y|C;x=pd(f|0,b|0,18)|0;E=C;u=qd(f|0,b|0,46)|0;E=y^(E|C);y=pd(f|0,b|0,41)|0;L=C;F=qd(f|0,b|0,23)|0;L=E^(L|C);E=g+200|0;v=c[E>>2]|0;E=c[E+4>>2]|0;o=nd(s|0,o|0,766784016,-1473132947)|0;E=nd(o|0,C|0,v|0,E|0)|0;L=nd(E|0,C|0,(H|r)^(x|u)^(y|F)|0,L|0)|0;L=nd(L|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;F=C;y=pd(D|0,M|0,28)|0;u=C;x=qd(D|0,M|0,36)|0;u=u|C;r=pd(D|0,M|0,34)|0;H=C;E=qd(D|0,M|0,30)|0;H=u^(H|C);u=pd(D|0,M|0,39)|0;v=C;o=qd(D|0,M|0,25)|0;v=nd((I|J)&D|I&J|0,(K|G)&M|K&G|0,(y|x)^(r|E)^(u|o)|0,H^(v|C)|0)|0;H=C;A=nd(B|0,A|0,L|0,F|0)|0;B=C;F=nd(v|0,H|0,L|0,F|0)|0;L=C;H=pd(A|0,B|0,14)|0;v=C;o=qd(A|0,B|0,50)|0;v=v|C;u=pd(A|0,B|0,18)|0;E=C;r=qd(A|0,B|0,46)|0;E=v^(E|C);v=pd(A|0,B|0,41)|0;x=C;y=qd(A|0,B|0,23)|0;x=E^(x|C);E=g+208|0;s=c[E>>2]|0;E=c[E+4>>2]|0;m=nd(p|0,m|0,-1728372417,-1341970488)|0;E=nd(m|0,C|0,s|0,E|0)|0;x=nd(E|0,C|0,(H|o)^(u|r)^(v|y)|0,x|0)|0;x=nd(x|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;y=C;v=pd(F|0,L|0,28)|0;r=C;u=qd(F|0,L|0,36)|0;r=r|C;o=pd(F|0,L|0,34)|0;H=C;E=qd(F|0,L|0,30)|0;H=r^(H|C);r=pd(F|0,L|0,39)|0;s=C;m=qd(F|0,L|0,25)|0;s=nd((J|D)&F|J&D|0,(G|M)&L|G&M|0,(v|u)^(o|E)^(r|m)|0,H^(s|C)|0)|0;H=C;K=nd(I|0,K|0,x|0,y|0)|0;I=C;y=nd(s|0,H|0,x|0,y|0)|0;x=C;H=pd(K|0,I|0,14)|0;s=C;m=qd(K|0,I|0,50)|0;s=s|C;r=pd(K|0,I|0,18)|0;E=C;o=qd(K|0,I|0,46)|0;E=s^(E|C);s=pd(K|0,I|0,41)|0;u=C;v=qd(K|0,I|0,23)|0;u=E^(u|C);E=g+216|0;p=c[E>>2]|0;E=c[E+4>>2]|0;j=nd(l|0,j|0,-1091629340,-1084653625)|0;E=nd(j|0,C|0,p|0,E|0)|0;u=nd(E|0,C|0,(H|m)^(r|o)^(s|v)|0,u|0)|0;u=nd(u|0,C|0,(f^A)&K^f|0,(b^B)&I^b|0)|0;v=C;s=pd(y|0,x|0,28)|0;o=C;r=qd(y|0,x|0,36)|0;o=o|C;m=pd(y|0,x|0,34)|0;H=C;E=qd(y|0,x|0,30)|0;H=o^(H|C);o=pd(y|0,x|0,39)|0;p=C;j=qd(y|0,x|0,25)|0;p=nd((D|F)&y|D&F|0,(M|L)&x|M&L|0,(s|r)^(m|E)^(o|j)|0,H^(p|C)|0)|0;H=C;G=nd(J|0,G|0,u|0,v|0)|0;J=C;v=nd(p|0,H|0,u|0,v|0)|0;u=C;H=pd(G|0,J|0,14)|0;p=C;j=qd(G|0,J|0,50)|0;p=p|C;o=pd(G|0,J|0,18)|0;E=C;m=qd(G|0,J|0,46)|0;E=p^(E|C);p=pd(G|0,J|0,41)|0;r=C;s=qd(G|0,J|0,23)|0;r=E^(r|C);E=g+224|0;l=c[E>>2]|0;E=c[E+4>>2]|0;b=nd(f|0,b|0,1034457026,-958395405)|0;E=nd(b|0,C|0,l|0,E|0)|0;r=nd(E|0,C|0,(H|j)^(o|m)^(p|s)|0,r|0)|0;r=nd(r|0,C|0,(A^K)&G^A|0,(B^I)&J^B|0)|0;s=C;p=pd(v|0,u|0,28)|0;m=C;o=qd(v|0,u|0,36)|0;m=m|C;j=pd(v|0,u|0,34)|0;H=C;E=qd(v|0,u|0,30)|0;H=m^(H|C);m=pd(v|0,u|0,39)|0;l=C;b=qd(v|0,u|0,25)|0;l=nd((F|y)&v|F&y|0,(L|x)&u|L&x|0,(p|o)^(j|E)^(m|b)|0,H^(l|C)|0)|0;H=C;M=nd(D|0,M|0,r|0,s|0)|0;D=C;s=nd(l|0,H|0,r|0,s|0)|0;r=C;H=pd(M|0,D|0,14)|0;l=C;b=qd(M|0,D|0,50)|0;l=l|C;m=pd(M|0,D|0,18)|0;E=C;j=qd(M|0,D|0,46)|0;E=l^(E|C);l=pd(M|0,D|0,41)|0;o=C;p=qd(M|0,D|0,23)|0;o=E^(o|C);E=g+232|0;f=c[E>>2]|0;E=c[E+4>>2]|0;B=nd(A|0,B|0,-1828018395,-710438585)|0;E=nd(B|0,C|0,f|0,E|0)|0;o=nd(E|0,C|0,(H|b)^(m|j)^(l|p)|0,o|0)|0;o=nd(o|0,C|0,(K^G)&M^K|0,(I^J)&D^I|0)|0;p=C;l=pd(s|0,r|0,28)|0;j=C;m=qd(s|0,r|0,36)|0;j=j|C;b=pd(s|0,r|0,34)|0;H=C;E=qd(s|0,r|0,30)|0;H=j^(H|C);j=pd(s|0,r|0,39)|0;f=C;B=qd(s|0,r|0,25)|0;f=nd((y|v)&s|y&v|0,(x|u)&r|x&u|0,(l|m)^(b|E)^(j|B)|0,H^(f|C)|0)|0;H=C;L=nd(F|0,L|0,o|0,p|0)|0;F=C;p=nd(f|0,H|0,o|0,p|0)|0;o=C;H=pd(L|0,F|0,14)|0;f=C;B=qd(L|0,F|0,50)|0;f=f|C;j=pd(L|0,F|0,18)|0;E=C;b=qd(L|0,F|0,46)|0;E=f^(E|C);f=pd(L|0,F|0,41)|0;m=C;l=qd(L|0,F|0,23)|0;m=E^(m|C);E=g+240|0;A=c[E>>2]|0;E=c[E+4>>2]|0;I=nd(K|0,I|0,-536640913,113926993)|0;E=nd(I|0,C|0,A|0,E|0)|0;m=nd(E|0,C|0,(H|B)^(j|b)^(f|l)|0,m|0)|0;m=nd(m|0,C|0,(G^M)&L^G|0,(J^D)&F^J|0)|0;l=C;f=pd(p|0,o|0,28)|0;b=C;j=qd(p|0,o|0,36)|0;b=b|C;B=pd(p|0,o|0,34)|0;H=C;E=qd(p|0,o|0,30)|0;H=b^(H|C);b=pd(p|0,o|0,39)|0;A=C;I=qd(p|0,o|0,25)|0;A=nd((v|s)&p|v&s|0,(u|r)&o|u&r|0,(f|j)^(B|E)^(b|I)|0,H^(A|C)|0)|0;H=C;x=nd(y|0,x|0,m|0,l|0)|0;y=C;l=nd(A|0,H|0,m|0,l|0)|0;m=C;H=pd(x|0,y|0,14)|0;A=C;I=qd(x|0,y|0,50)|0;A=A|C;b=pd(x|0,y|0,18)|0;E=C;B=qd(x|0,y|0,46)|0;E=A^(E|C);A=pd(x|0,y|0,41)|0;j=C;f=qd(x|0,y|0,23)|0;j=E^(j|C);E=g+248|0;K=c[E>>2]|0;E=c[E+4>>2]|0;J=nd(G|0,J|0,168717936,338241895)|0;E=nd(J|0,C|0,K|0,E|0)|0;j=nd(E|0,C|0,(H|I)^(b|B)^(A|f)|0,j|0)|0;j=nd(j|0,C|0,(M^L)&x^M|0,(D^F)&y^D|0)|0;f=C;A=pd(l|0,m|0,28)|0;B=C;b=qd(l|0,m|0,36)|0;B=B|C;I=pd(l|0,m|0,34)|0;H=C;E=qd(l|0,m|0,30)|0;H=B^(H|C);B=pd(l|0,m|0,39)|0;K=C;J=qd(l|0,m|0,25)|0;K=nd((s|p)&l|s&p|0,(r|o)&m|r&o|0,(A|b)^(I|E)^(B|J)|0,H^(K|C)|0)|0;H=C;u=nd(v|0,u|0,j|0,f|0)|0;v=C;f=nd(K|0,H|0,j|0,f|0)|0;j=C;H=pd(u|0,v|0,14)|0;K=C;J=qd(u|0,v|0,50)|0;K=K|C;B=pd(u|0,v|0,18)|0;E=C;I=qd(u|0,v|0,46)|0;E=K^(E|C);K=pd(u|0,v|0,41)|0;b=C;A=qd(u|0,v|0,23)|0;b=E^(b|C);E=g+256|0;G=c[E>>2]|0;E=c[E+4>>2]|0;D=nd(M|0,D|0,1188179964,666307205)|0;E=nd(D|0,C|0,G|0,E|0)|0;b=nd(E|0,C|0,(H|J)^(B|I)^(K|A)|0,b|0)|0;b=nd(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;K=pd(f|0,j|0,28)|0;I=C;B=qd(f|0,j|0,36)|0;I=I|C;J=pd(f|0,j|0,34)|0;H=C;E=qd(f|0,j|0,30)|0;H=I^(H|C);I=pd(f|0,j|0,39)|0;G=C;D=qd(f|0,j|0,25)|0;G=nd((p|l)&f|p&l|0,(o|m)&j|o&m|0,(K|B)^(J|E)^(I|D)|0,H^(G|C)|0)|0;H=C;r=nd(s|0,r|0,b|0,A|0)|0;s=C;A=nd(G|0,H|0,b|0,A|0)|0;b=C;H=pd(r|0,s|0,14)|0;G=C;D=qd(r|0,s|0,50)|0;G=G|C;I=pd(r|0,s|0,18)|0;E=C;J=qd(r|0,s|0,46)|0;E=G^(E|C);G=pd(r|0,s|0,41)|0;B=C;K=qd(r|0,s|0,23)|0;B=E^(B|C);E=g+264|0;M=c[E>>2]|0;E=c[E+4>>2]|0;F=nd(L|0,F|0,1546045734,773529912)|0;E=nd(F|0,C|0,M|0,E|0)|0;B=nd(E|0,C|0,(H|D)^(I|J)^(G|K)|0,B|0)|0;B=nd(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;K=C;G=pd(A|0,b|0,28)|0;J=C;I=qd(A|0,b|0,36)|0;J=J|C;D=pd(A|0,b|0,34)|0;H=C;E=qd(A|0,b|0,30)|0;H=J^(H|C);J=pd(A|0,b|0,39)|0;M=C;F=qd(A|0,b|0,25)|0;M=nd((l|f)&A|l&f|0,(m|j)&b|m&j|0,(G|I)^(D|E)^(J|F)|0,H^(M|C)|0)|0;H=C;o=nd(p|0,o|0,B|0,K|0)|0;p=C;K=nd(M|0,H|0,B|0,K|0)|0;B=C;H=pd(o|0,p|0,14)|0;M=C;F=qd(o|0,p|0,50)|0;M=M|C;J=pd(o|0,p|0,18)|0;E=C;D=qd(o|0,p|0,46)|0;E=M^(E|C);M=pd(o|0,p|0,41)|0;I=C;G=qd(o|0,p|0,23)|0;I=E^(I|C);E=g+272|0;L=c[E>>2]|0;E=c[E+4>>2]|0;y=nd(x|0,y|0,1522805485,1294757372)|0;E=nd(y|0,C|0,L|0,E|0)|0;I=nd(E|0,C|0,(H|F)^(J|D)^(M|G)|0,I|0)|0;I=nd(I|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;G=C;M=pd(K|0,B|0,28)|0;D=C;J=qd(K|0,B|0,36)|0;D=D|C;F=pd(K|0,B|0,34)|0;H=C;E=qd(K|0,B|0,30)|0;H=D^(H|C);D=pd(K|0,B|0,39)|0;L=C;y=qd(K|0,B|0,25)|0;L=nd((f|A)&K|f&A|0,(j|b)&B|j&b|0,(M|J)^(F|E)^(D|y)|0,H^(L|C)|0)|0;H=C;m=nd(l|0,m|0,I|0,G|0)|0;l=C;G=nd(L|0,H|0,I|0,G|0)|0;I=C;H=pd(m|0,l|0,14)|0;L=C;y=qd(m|0,l|0,50)|0;L=L|C;D=pd(m|0,l|0,18)|0;E=C;F=qd(m|0,l|0,46)|0;E=L^(E|C);L=pd(m|0,l|0,41)|0;J=C;M=qd(m|0,l|0,23)|0;J=E^(J|C);E=g+280|0;x=c[E>>2]|0;E=c[E+4>>2]|0;v=nd(u|0,v|0,-1651133473,1396182291)|0;E=nd(v|0,C|0,x|0,E|0)|0;J=nd(E|0,C|0,(H|y)^(D|F)^(L|M)|0,J|0)|0;J=nd(J|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;M=C;L=pd(G|0,I|0,28)|0;F=C;D=qd(G|0,I|0,36)|0;F=F|C;y=pd(G|0,I|0,34)|0;H=C;E=qd(G|0,I|0,30)|0;H=F^(H|C);F=pd(G|0,I|0,39)|0;x=C;v=qd(G|0,I|0,25)|0;x=nd((A|K)&G|A&K|0,(b|B)&I|b&B|0,(L|D)^(y|E)^(F|v)|0,H^(x|C)|0)|0;H=C;j=nd(f|0,j|0,J|0,M|0)|0;f=C;M=nd(x|0,H|0,J|0,M|0)|0;J=C;H=pd(j|0,f|0,14)|0;x=C;v=qd(j|0,f|0,50)|0;x=x|C;F=pd(j|0,f|0,18)|0;E=C;y=qd(j|0,f|0,46)|0;E=x^(E|C);x=pd(j|0,f|0,41)|0;D=C;L=qd(j|0,f|0,23)|0;D=E^(D|C);E=g+288|0;u=c[E>>2]|0;E=c[E+4>>2]|0;s=nd(r|0,s|0,-1951439906,1695183700)|0;E=nd(s|0,C|0,u|0,E|0)|0;D=nd(E|0,C|0,(H|v)^(F|y)^(x|L)|0,D|0)|0;D=nd(D|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;L=C;x=pd(M|0,J|0,28)|0;y=C;F=qd(M|0,J|0,36)|0;y=y|C;v=pd(M|0,J|0,34)|0;H=C;E=qd(M|0,J|0,30)|0;H=y^(H|C);y=pd(M|0,J|0,39)|0;u=C;s=qd(M|0,J|0,25)|0;u=nd((K|G)&M|K&G|0,(B|I)&J|B&I|0,(x|F)^(v|E)^(y|s)|0,H^(u|C)|0)|0;H=C;b=nd(A|0,b|0,D|0,L|0)|0;A=C;L=nd(u|0,H|0,D|0,L|0)|0;D=C;H=pd(b|0,A|0,14)|0;u=C;s=qd(b|0,A|0,50)|0;u=u|C;y=pd(b|0,A|0,18)|0;E=C;v=qd(b|0,A|0,46)|0;E=u^(E|C);u=pd(b|0,A|0,41)|0;F=C;x=qd(b|0,A|0,23)|0;F=E^(F|C);E=g+296|0;r=c[E>>2]|0;E=c[E+4>>2]|0;p=nd(o|0,p|0,1014477480,1986661051)|0;E=nd(p|0,C|0,r|0,E|0)|0;F=nd(E|0,C|0,(H|s)^(y|v)^(u|x)|0,F|0)|0;F=nd(F|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;x=C;u=pd(L|0,D|0,28)|0;v=C;y=qd(L|0,D|0,36)|0;v=v|C;s=pd(L|0,D|0,34)|0;H=C;E=qd(L|0,D|0,30)|0;H=v^(H|C);v=pd(L|0,D|0,39)|0;r=C;p=qd(L|0,D|0,25)|0;r=nd((G|M)&L|G&M|0,(I|J)&D|I&J|0,(u|y)^(s|E)^(v|p)|0,H^(r|C)|0)|0;H=C;B=nd(K|0,B|0,F|0,x|0)|0;K=C;x=nd(r|0,H|0,F|0,x|0)|0;F=C;H=pd(B|0,K|0,14)|0;r=C;p=qd(B|0,K|0,50)|0;r=r|C;v=pd(B|0,K|0,18)|0;E=C;s=qd(B|0,K|0,46)|0;E=r^(E|C);r=pd(B|0,K|0,41)|0;y=C;u=qd(B|0,K|0,23)|0;y=E^(y|C);E=g+304|0;o=c[E>>2]|0;E=c[E+4>>2]|0;l=nd(m|0,l|0,1206759142,-2117940946)|0;E=nd(l|0,C|0,o|0,E|0)|0;y=nd(E|0,C|0,(H|p)^(v|s)^(r|u)|0,y|0)|0;y=nd(y|0,C|0,(j^b)&B^j|0,(f^A)&K^f|0)|0;u=C;r=pd(x|0,F|0,28)|0;s=C;v=qd(x|0,F|0,36)|0;s=s|C;p=pd(x|0,F|0,34)|0;H=C;E=qd(x|0,F|0,30)|0;H=s^(H|C);s=pd(x|0,F|0,39)|0;o=C;l=qd(x|0,F|0,25)|0;o=nd((M|L)&x|M&L|0,(J|D)&F|J&D|0,(r|v)^(p|E)^(s|l)|0,H^(o|C)|0)|0;H=C;I=nd(G|0,I|0,y|0,u|0)|0;G=C;u=nd(o|0,H|0,y|0,u|0)|0;y=C;H=pd(I|0,G|0,14)|0;o=C;l=qd(I|0,G|0,50)|0;o=o|C;s=pd(I|0,G|0,18)|0;E=C;p=qd(I|0,G|0,46)|0;E=o^(E|C);o=pd(I|0,G|0,41)|0;v=C;r=qd(I|0,G|0,23)|0;v=E^(v|C);E=g+312|0;m=c[E>>2]|0;E=c[E+4>>2]|0;f=nd(j|0,f|0,344077627,-1838011259)|0;E=nd(f|0,C|0,m|0,E|0)|0;v=nd(E|0,C|0,(H|l)^(s|p)^(o|r)|0,v|0)|0;v=nd(v|0,C|0,(b^B)&I^b|0,(A^K)&G^A|0)|0;r=C;o=pd(u|0,y|0,28)|0;p=C;s=qd(u|0,y|0,36)|0;p=p|C;l=pd(u|0,y|0,34)|0;H=C;E=qd(u|0,y|0,30)|0;H=p^(H|C);p=pd(u|0,y|0,39)|0;m=C;f=qd(u|0,y|0,25)|0;m=nd((L|x)&u|L&x|0,(D|F)&y|D&F|0,(o|s)^(l|E)^(p|f)|0,H^(m|C)|0)|0;H=C;J=nd(M|0,J|0,v|0,r|0)|0;M=C;r=nd(m|0,H|0,v|0,r|0)|0;v=C;H=pd(J|0,M|0,14)|0;m=C;f=qd(J|0,M|0,50)|0;m=m|C;p=pd(J|0,M|0,18)|0;E=C;l=qd(J|0,M|0,46)|0;E=m^(E|C);m=pd(J|0,M|0,41)|0;s=C;o=qd(J|0,M|0,23)|0;s=E^(s|C);E=g+320|0;j=c[E>>2]|0;E=c[E+4>>2]|0;A=nd(b|0,A|0,1290863460,-1564481375)|0;E=nd(A|0,C|0,j|0,E|0)|0;s=nd(E|0,C|0,(H|f)^(p|l)^(m|o)|0,s|0)|0;s=nd(s|0,C|0,(B^I)&J^B|0,(K^G)&M^K|0)|0;o=C;m=pd(r|0,v|0,28)|0;l=C;p=qd(r|0,v|0,36)|0;l=l|C;f=pd(r|0,v|0,34)|0;H=C;E=qd(r|0,v|0,30)|0;H=l^(H|C);l=pd(r|0,v|0,39)|0;j=C;A=qd(r|0,v|0,25)|0;j=nd((x|u)&r|x&u|0,(F|y)&v|F&y|0,(m|p)^(f|E)^(l|A)|0,H^(j|C)|0)|0;H=C;D=nd(L|0,D|0,s|0,o|0)|0;L=C;o=nd(j|0,H|0,s|0,o|0)|0;s=C;H=pd(D|0,L|0,14)|0;j=C;A=qd(D|0,L|0,50)|0;j=j|C;l=pd(D|0,L|0,18)|0;E=C;f=qd(D|0,L|0,46)|0;E=j^(E|C);j=pd(D|0,L|0,41)|0;p=C;m=qd(D|0,L|0,23)|0;p=E^(p|C);E=g+328|0;b=c[E>>2]|0;E=c[E+4>>2]|0;K=nd(B|0,K|0,-1136513023,-1474664885)|0;E=nd(K|0,C|0,b|0,E|0)|0;p=nd(E|0,C|0,(H|A)^(l|f)^(j|m)|0,p|0)|0;p=nd(p|0,C|0,(I^J)&D^I|0,(G^M)&L^G|0)|0;m=C;j=pd(o|0,s|0,28)|0;f=C;l=qd(o|0,s|0,36)|0;f=f|C;A=pd(o|0,s|0,34)|0;H=C;E=qd(o|0,s|0,30)|0;H=f^(H|C);f=pd(o|0,s|0,39)|0;b=C;K=qd(o|0,s|0,25)|0;b=nd((u|r)&o|u&r|0,(y|v)&s|y&v|0,(j|l)^(A|E)^(f|K)|0,H^(b|C)|0)|0;H=C;F=nd(x|0,F|0,p|0,m|0)|0;x=C;m=nd(b|0,H|0,p|0,m|0)|0;p=C;H=pd(F|0,x|0,14)|0;b=C;K=qd(F|0,x|0,50)|0;b=b|C;f=pd(F|0,x|0,18)|0;E=C;A=qd(F|0,x|0,46)|0;E=b^(E|C);b=pd(F|0,x|0,41)|0;l=C;j=qd(F|0,x|0,23)|0;l=E^(l|C);E=g+336|0;B=c[E>>2]|0;E=c[E+4>>2]|0;G=nd(I|0,G|0,-789014639,-1035236496)|0;E=nd(G|0,C|0,B|0,E|0)|0;l=nd(E|0,C|0,(H|K)^(f|A)^(b|j)|0,l|0)|0;l=nd(l|0,C|0,(J^D)&F^J|0,(M^L)&x^M|0)|0;j=C;b=pd(m|0,p|0,28)|0;A=C;f=qd(m|0,p|0,36)|0;A=A|C;K=pd(m|0,p|0,34)|0;H=C;E=qd(m|0,p|0,30)|0;H=A^(H|C);A=pd(m|0,p|0,39)|0;B=C;G=qd(m|0,p|0,25)|0;B=nd((r|o)&m|r&o|0,(v|s)&p|v&s|0,(b|f)^(K|E)^(A|G)|0,H^(B|C)|0)|0;H=C;y=nd(u|0,y|0,l|0,j|0)|0;u=C;j=nd(B|0,H|0,l|0,j|0)|0;l=C;H=pd(y|0,u|0,14)|0;B=C;G=qd(y|0,u|0,50)|0;B=B|C;A=pd(y|0,u|0,18)|0;E=C;K=qd(y|0,u|0,46)|0;E=B^(E|C);B=pd(y|0,u|0,41)|0;f=C;b=qd(y|0,u|0,23)|0;f=E^(f|C);E=g+344|0;I=c[E>>2]|0;E=c[E+4>>2]|0;M=nd(J|0,M|0,106217008,-949202525)|0;E=nd(M|0,C|0,I|0,E|0)|0;f=nd(E|0,C|0,(H|G)^(A|K)^(B|b)|0,f|0)|0;f=nd(f|0,C|0,(D^F)&y^D|0,(L^x)&u^L|0)|0;b=C;B=pd(j|0,l|0,28)|0;K=C;A=qd(j|0,l|0,36)|0;K=K|C;G=pd(j|0,l|0,34)|0;H=C;E=qd(j|0,l|0,30)|0;H=K^(H|C);K=pd(j|0,l|0,39)|0;I=C;M=qd(j|0,l|0,25)|0;I=nd((o|m)&j|o&m|0,(s|p)&l|s&p|0,(B|A)^(G|E)^(K|M)|0,H^(I|C)|0)|0;H=C;v=nd(r|0,v|0,f|0,b|0)|0;r=C;b=nd(I|0,H|0,f|0,b|0)|0;f=C;H=pd(v|0,r|0,14)|0;I=C;M=qd(v|0,r|0,50)|0;I=I|C;K=pd(v|0,r|0,18)|0;E=C;G=qd(v|0,r|0,46)|0;E=I^(E|C);I=pd(v|0,r|0,41)|0;A=C;B=qd(v|0,r|0,23)|0;A=E^(A|C);E=g+352|0;J=c[E>>2]|0;E=c[E+4>>2]|0;L=nd(D|0,L|0,-688958952,-778901479)|0;E=nd(L|0,C|0,J|0,E|0)|0;A=nd(E|0,C|0,(H|M)^(K|G)^(I|B)|0,A|0)|0;A=nd(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;I=pd(b|0,f|0,28)|0;G=C;K=qd(b|0,f|0,36)|0;G=G|C;M=pd(b|0,f|0,34)|0;H=C;E=qd(b|0,f|0,30)|0;H=G^(H|C);G=pd(b|0,f|0,39)|0;J=C;L=qd(b|0,f|0,25)|0;J=nd((m|j)&b|m&j|0,(p|l)&f|p&l|0,(I|K)^(M|E)^(G|L)|0,H^(J|C)|0)|0;H=C;s=nd(o|0,s|0,A|0,B|0)|0;o=C;B=nd(J|0,H|0,A|0,B|0)|0;A=C;H=pd(s|0,o|0,14)|0;J=C;L=qd(s|0,o|0,50)|0;J=J|C;G=pd(s|0,o|0,18)|0;E=C;M=qd(s|0,o|0,46)|0;E=J^(E|C);J=pd(s|0,o|0,41)|0;K=C;I=qd(s|0,o|0,23)|0;K=E^(K|C);E=g+360|0;D=c[E>>2]|0;E=c[E+4>>2]|0;x=nd(F|0,x|0,1432725776,-694614492)|0;E=nd(x|0,C|0,D|0,E|0)|0;K=nd(E|0,C|0,(H|L)^(G|M)^(J|I)|0,K|0)|0;K=nd(K|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;I=C;J=pd(B|0,A|0,28)|0;M=C;G=qd(B|0,A|0,36)|0;M=M|C;L=pd(B|0,A|0,34)|0;H=C;E=qd(B|0,A|0,30)|0;H=M^(H|C);M=pd(B|0,A|0,39)|0;D=C;x=qd(B|0,A|0,25)|0;D=nd((j|b)&B|j&b|0,(l|f)&A|l&f|0,(J|G)^(L|E)^(M|x)|0,H^(D|C)|0)|0;H=C;p=nd(m|0,p|0,K|0,I|0)|0;m=C;I=nd(D|0,H|0,K|0,I|0)|0;K=C;H=pd(p|0,m|0,14)|0;D=C;x=qd(p|0,m|0,50)|0;D=D|C;M=pd(p|0,m|0,18)|0;E=C;L=qd(p|0,m|0,46)|0;E=D^(E|C);D=pd(p|0,m|0,41)|0;G=C;J=qd(p|0,m|0,23)|0;G=E^(G|C);E=g+368|0;F=c[E>>2]|0;E=c[E+4>>2]|0;u=nd(y|0,u|0,1467031594,-200395387)|0;E=nd(u|0,C|0,F|0,E|0)|0;G=nd(E|0,C|0,(H|x)^(M|L)^(D|J)|0,G|0)|0;G=nd(G|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;J=C;D=pd(I|0,K|0,28)|0;L=C;M=qd(I|0,K|0,36)|0;L=L|C;x=pd(I|0,K|0,34)|0;H=C;E=qd(I|0,K|0,30)|0;H=L^(H|C);L=pd(I|0,K|0,39)|0;F=C;u=qd(I|0,K|0,25)|0;F=nd((b|B)&I|b&B|0,(f|A)&K|f&A|0,(D|M)^(x|E)^(L|u)|0,H^(F|C)|0)|0;H=C;l=nd(j|0,l|0,G|0,J|0)|0;j=C;J=nd(F|0,H|0,G|0,J|0)|0;G=C;H=pd(l|0,j|0,14)|0;F=C;u=qd(l|0,j|0,50)|0;F=F|C;L=pd(l|0,j|0,18)|0;E=C;x=qd(l|0,j|0,46)|0;E=F^(E|C);F=pd(l|0,j|0,41)|0;M=C;D=qd(l|0,j|0,23)|0;M=E^(M|C);E=g+376|0;y=c[E>>2]|0;E=c[E+4>>2]|0;r=nd(v|0,r|0,851169720,275423344)|0;E=nd(r|0,C|0,y|0,E|0)|0;M=nd(E|0,C|0,(H|u)^(L|x)^(F|D)|0,M|0)|0;M=nd(M|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;D=C;F=pd(J|0,G|0,28)|0;x=C;L=qd(J|0,G|0,36)|0;x=x|C;u=pd(J|0,G|0,34)|0;H=C;E=qd(J|0,G|0,30)|0;H=x^(H|C);x=pd(J|0,G|0,39)|0;y=C;r=qd(J|0,G|0,25)|0;y=nd((B|I)&J|B&I|0,(A|K)&G|A&K|0,(F|L)^(u|E)^(x|r)|0,H^(y|C)|0)|0;H=C;f=nd(b|0,f|0,M|0,D|0)|0;b=C;D=nd(y|0,H|0,M|0,D|0)|0;M=C;H=pd(f|0,b|0,14)|0;y=C;r=qd(f|0,b|0,50)|0;y=y|C;x=pd(f|0,b|0,18)|0;E=C;u=qd(f|0,b|0,46)|0;E=y^(E|C);y=pd(f|0,b|0,41)|0;L=C;F=qd(f|0,b|0,23)|0;L=E^(L|C);E=g+384|0;v=c[E>>2]|0;E=c[E+4>>2]|0;o=nd(s|0,o|0,-1194143544,430227734)|0;E=nd(o|0,C|0,v|0,E|0)|0;L=nd(E|0,C|0,(H|r)^(x|u)^(y|F)|0,L|0)|0;L=nd(L|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;F=C;y=pd(D|0,M|0,28)|0;u=C;x=qd(D|0,M|0,36)|0;u=u|C;r=pd(D|0,M|0,34)|0;H=C;E=qd(D|0,M|0,30)|0;H=u^(H|C);u=pd(D|0,M|0,39)|0;v=C;o=qd(D|0,M|0,25)|0;v=nd((I|J)&D|I&J|0,(K|G)&M|K&G|0,(y|x)^(r|E)^(u|o)|0,H^(v|C)|0)|0;H=C;A=nd(B|0,A|0,L|0,F|0)|0;B=C;F=nd(v|0,H|0,L|0,F|0)|0;L=C;H=pd(A|0,B|0,14)|0;v=C;o=qd(A|0,B|0,50)|0;v=v|C;u=pd(A|0,B|0,18)|0;E=C;r=qd(A|0,B|0,46)|0;E=v^(E|C);v=pd(A|0,B|0,41)|0;x=C;y=qd(A|0,B|0,23)|0;x=E^(x|C);E=g+392|0;s=c[E>>2]|0;E=c[E+4>>2]|0;m=nd(p|0,m|0,1363258195,506948616)|0;E=nd(m|0,C|0,s|0,E|0)|0;x=nd(E|0,C|0,(H|o)^(u|r)^(v|y)|0,x|0)|0;x=nd(x|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;y=C;v=pd(F|0,L|0,28)|0;r=C;u=qd(F|0,L|0,36)|0;r=r|C;o=pd(F|0,L|0,34)|0;H=C;E=qd(F|0,L|0,30)|0;H=r^(H|C);r=pd(F|0,L|0,39)|0;s=C;m=qd(F|0,L|0,25)|0;s=nd((J|D)&F|J&D|0,(G|M)&L|G&M|0,(v|u)^(o|E)^(r|m)|0,H^(s|C)|0)|0;H=C;K=nd(I|0,K|0,x|0,y|0)|0;I=C;y=nd(s|0,H|0,x|0,y|0)|0;x=C;H=pd(K|0,I|0,14)|0;s=C;m=qd(K|0,I|0,50)|0;s=s|C;r=pd(K|0,I|0,18)|0;E=C;o=qd(K|0,I|0,46)|0;E=s^(E|C);s=pd(K|0,I|0,41)|0;u=C;v=qd(K|0,I|0,23)|0;u=E^(u|C);E=g+400|0;p=c[E>>2]|0;E=c[E+4>>2]|0;j=nd(l|0,j|0,-544281703,659060556)|0;E=nd(j|0,C|0,p|0,E|0)|0;u=nd(E|0,C|0,(H|m)^(r|o)^(s|v)|0,u|0)|0;u=nd(u|0,C|0,(f^A)&K^f|0,(b^B)&I^b|0)|0;v=C;s=pd(y|0,x|0,28)|0;o=C;r=qd(y|0,x|0,36)|0;o=o|C;m=pd(y|0,x|0,34)|0;H=C;E=qd(y|0,x|0,30)|0;H=o^(H|C);o=pd(y|0,x|0,39)|0;p=C;j=qd(y|0,x|0,25)|0;p=nd((D|F)&y|D&F|0,(M|L)&x|M&L|0,(s|r)^(m|E)^(o|j)|0,H^(p|C)|0)|0;H=C;G=nd(J|0,G|0,u|0,v|0)|0;J=C;v=nd(p|0,H|0,u|0,v|0)|0;u=C;H=pd(G|0,J|0,14)|0;p=C;j=qd(G|0,J|0,50)|0;p=p|C;o=pd(G|0,J|0,18)|0;E=C;m=qd(G|0,J|0,46)|0;E=p^(E|C);p=pd(G|0,J|0,41)|0;r=C;s=qd(G|0,J|0,23)|0;r=E^(r|C);E=g+408|0;l=c[E>>2]|0;E=c[E+4>>2]|0;b=nd(f|0,b|0,-509917016,883997877)|0;E=nd(b|0,C|0,l|0,E|0)|0;r=nd(E|0,C|0,(H|j)^(o|m)^(p|s)|0,r|0)|0;r=nd(r|0,C|0,(A^K)&G^A|0,(B^I)&J^B|0)|0;s=C;p=pd(v|0,u|0,28)|0;m=C;o=qd(v|0,u|0,36)|0;m=m|C;j=pd(v|0,u|0,34)|0;H=C;E=qd(v|0,u|0,30)|0;H=m^(H|C);m=pd(v|0,u|0,39)|0;l=C;b=qd(v|0,u|0,25)|0;l=nd((F|y)&v|F&y|0,(L|x)&u|L&x|0,(p|o)^(j|E)^(m|b)|0,H^(l|C)|0)|0;H=C;M=nd(D|0,M|0,r|0,s|0)|0;D=C;s=nd(l|0,H|0,r|0,s|0)|0;r=C;H=pd(M|0,D|0,14)|0;l=C;b=qd(M|0,D|0,50)|0;l=l|C;m=pd(M|0,D|0,18)|0;E=C;j=qd(M|0,D|0,46)|0;E=l^(E|C);l=pd(M|0,D|0,41)|0;o=C;p=qd(M|0,D|0,23)|0;o=E^(o|C);E=g+416|0;f=c[E>>2]|0;E=c[E+4>>2]|0;B=nd(A|0,B|0,-976659869,958139571)|0;E=nd(B|0,C|0,f|0,E|0)|0;o=nd(E|0,C|0,(H|b)^(m|j)^(l|p)|0,o|0)|0;o=nd(o|0,C|0,(K^G)&M^K|0,(I^J)&D^I|0)|0;p=C;l=pd(s|0,r|0,28)|0;j=C;m=qd(s|0,r|0,36)|0;j=j|C;b=pd(s|0,r|0,34)|0;H=C;E=qd(s|0,r|0,30)|0;H=j^(H|C);j=pd(s|0,r|0,39)|0;f=C;B=qd(s|0,r|0,25)|0;f=nd((y|v)&s|y&v|0,(x|u)&r|x&u|0,(l|m)^(b|E)^(j|B)|0,H^(f|C)|0)|0;H=C;L=nd(F|0,L|0,o|0,p|0)|0;F=C;p=nd(f|0,H|0,o|0,p|0)|0;o=C;H=pd(L|0,F|0,14)|0;f=C;B=qd(L|0,F|0,50)|0;f=f|C;j=pd(L|0,F|0,18)|0;E=C;b=qd(L|0,F|0,46)|0;E=f^(E|C);f=pd(L|0,F|0,41)|0;m=C;l=qd(L|0,F|0,23)|0;m=E^(m|C);E=g+424|0;A=c[E>>2]|0;E=c[E+4>>2]|0;I=nd(K|0,I|0,-482243893,1322822218)|0;E=nd(I|0,C|0,A|0,E|0)|0;m=nd(E|0,C|0,(H|B)^(j|b)^(f|l)|0,m|0)|0;m=nd(m|0,C|0,(G^M)&L^G|0,(J^D)&F^J|0)|0;l=C;f=pd(p|0,o|0,28)|0;b=C;j=qd(p|0,o|0,36)|0;b=b|C;B=pd(p|0,o|0,34)|0;H=C;E=qd(p|0,o|0,30)|0;H=b^(H|C);b=pd(p|0,o|0,39)|0;A=C;I=qd(p|0,o|0,25)|0;A=nd((v|s)&p|v&s|0,(u|r)&o|u&r|0,(f|j)^(B|E)^(b|I)|0,H^(A|C)|0)|0;H=C;x=nd(y|0,x|0,m|0,l|0)|0;y=C;l=nd(A|0,H|0,m|0,l|0)|0;m=C;H=pd(x|0,y|0,14)|0;A=C;I=qd(x|0,y|0,50)|0;A=A|C;b=pd(x|0,y|0,18)|0;E=C;B=qd(x|0,y|0,46)|0;E=A^(E|C);A=pd(x|0,y|0,41)|0;j=C;f=qd(x|0,y|0,23)|0;j=E^(j|C);E=g+432|0;K=c[E>>2]|0;E=c[E+4>>2]|0;J=nd(G|0,J|0,2003034995,1537002063)|0;E=nd(J|0,C|0,K|0,E|0)|0;j=nd(E|0,C|0,(H|I)^(b|B)^(A|f)|0,j|0)|0;j=nd(j|0,C|0,(M^L)&x^M|0,(D^F)&y^D|0)|0;f=C;A=pd(l|0,m|0,28)|0;B=C;b=qd(l|0,m|0,36)|0;B=B|C;I=pd(l|0,m|0,34)|0;H=C;E=qd(l|0,m|0,30)|0;H=B^(H|C);B=pd(l|0,m|0,39)|0;K=C;J=qd(l|0,m|0,25)|0;K=nd((s|p)&l|s&p|0,(r|o)&m|r&o|0,(A|b)^(I|E)^(B|J)|0,H^(K|C)|0)|0;H=C;u=nd(v|0,u|0,j|0,f|0)|0;v=C;f=nd(K|0,H|0,j|0,f|0)|0;j=C;H=pd(u|0,v|0,14)|0;K=C;J=qd(u|0,v|0,50)|0;K=K|C;B=pd(u|0,v|0,18)|0;E=C;I=qd(u|0,v|0,46)|0;E=K^(E|C);K=pd(u|0,v|0,41)|0;b=C;A=qd(u|0,v|0,23)|0;b=E^(b|C);E=g+440|0;G=c[E>>2]|0;E=c[E+4>>2]|0;D=nd(M|0,D|0,-692930397,1747873779)|0;E=nd(D|0,C|0,G|0,E|0)|0;b=nd(E|0,C|0,(H|J)^(B|I)^(K|A)|0,b|0)|0;b=nd(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;K=pd(f|0,j|0,28)|0;I=C;B=qd(f|0,j|0,36)|0;I=I|C;J=pd(f|0,j|0,34)|0;H=C;E=qd(f|0,j|0,30)|0;H=I^(H|C);I=pd(f|0,j|0,39)|0;G=C;D=qd(f|0,j|0,25)|0;G=nd((p|l)&f|p&l|0,(o|m)&j|o&m|0,(K|B)^(J|E)^(I|D)|0,H^(G|C)|0)|0;H=C;r=nd(s|0,r|0,b|0,A|0)|0;s=C;A=nd(G|0,H|0,b|0,A|0)|0;b=C;H=pd(r|0,s|0,14)|0;G=C;D=qd(r|0,s|0,50)|0;G=G|C;I=pd(r|0,s|0,18)|0;E=C;J=qd(r|0,s|0,46)|0;E=G^(E|C);G=pd(r|0,s|0,41)|0;B=C;K=qd(r|0,s|0,23)|0;B=E^(B|C);E=g+448|0;M=c[E>>2]|0;E=c[E+4>>2]|0;F=nd(L|0,F|0,1575990012,1955562222)|0;E=nd(F|0,C|0,M|0,E|0)|0;B=nd(E|0,C|0,(H|D)^(I|J)^(G|K)|0,B|0)|0;B=nd(B|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;K=C;G=pd(A|0,b|0,28)|0;J=C;I=qd(A|0,b|0,36)|0;J=J|C;D=pd(A|0,b|0,34)|0;H=C;E=qd(A|0,b|0,30)|0;H=J^(H|C);J=pd(A|0,b|0,39)|0;M=C;F=qd(A|0,b|0,25)|0;M=nd((l|f)&A|l&f|0,(m|j)&b|m&j|0,(G|I)^(D|E)^(J|F)|0,H^(M|C)|0)|0;H=C;o=nd(p|0,o|0,B|0,K|0)|0;p=C;K=nd(M|0,H|0,B|0,K|0)|0;B=C;H=pd(o|0,p|0,14)|0;M=C;F=qd(o|0,p|0,50)|0;M=M|C;J=pd(o|0,p|0,18)|0;E=C;D=qd(o|0,p|0,46)|0;E=M^(E|C);M=pd(o|0,p|0,41)|0;I=C;G=qd(o|0,p|0,23)|0;I=E^(I|C);E=g+456|0;L=c[E>>2]|0;E=c[E+4>>2]|0;y=nd(x|0,y|0,1125592928,2024104815)|0;E=nd(y|0,C|0,L|0,E|0)|0;I=nd(E|0,C|0,(H|F)^(J|D)^(M|G)|0,I|0)|0;I=nd(I|0,C|0,(u^r)&o^u|0,(v^s)&p^v|0)|0;G=C;M=pd(K|0,B|0,28)|0;D=C;J=qd(K|0,B|0,36)|0;D=D|C;F=pd(K|0,B|0,34)|0;H=C;E=qd(K|0,B|0,30)|0;H=D^(H|C);D=pd(K|0,B|0,39)|0;L=C;y=qd(K|0,B|0,25)|0;L=nd((f|A)&K|f&A|0,(j|b)&B|j&b|0,(M|J)^(F|E)^(D|y)|0,H^(L|C)|0)|0;H=C;m=nd(l|0,m|0,I|0,G|0)|0;l=C;G=nd(L|0,H|0,I|0,G|0)|0;I=C;H=pd(m|0,l|0,14)|0;L=C;y=qd(m|0,l|0,50)|0;L=L|C;D=pd(m|0,l|0,18)|0;E=C;F=qd(m|0,l|0,46)|0;E=L^(E|C);L=pd(m|0,l|0,41)|0;J=C;M=qd(m|0,l|0,23)|0;J=E^(J|C);E=g+464|0;x=c[E>>2]|0;E=c[E+4>>2]|0;v=nd(u|0,v|0,-1578062990,-2067236844)|0;E=nd(v|0,C|0,x|0,E|0)|0;J=nd(E|0,C|0,(H|y)^(D|F)^(L|M)|0,J|0)|0;J=nd(J|0,C|0,(r^o)&m^r|0,(s^p)&l^s|0)|0;M=C;L=pd(G|0,I|0,28)|0;F=C;D=qd(G|0,I|0,36)|0;F=F|C;y=pd(G|0,I|0,34)|0;H=C;E=qd(G|0,I|0,30)|0;H=F^(H|C);F=pd(G|0,I|0,39)|0;x=C;v=qd(G|0,I|0,25)|0;x=nd((A|K)&G|A&K|0,(b|B)&I|b&B|0,(L|D)^(y|E)^(F|v)|0,H^(x|C)|0)|0;H=C;j=nd(f|0,j|0,J|0,M|0)|0;f=C;M=nd(x|0,H|0,J|0,M|0)|0;J=C;H=pd(j|0,f|0,14)|0;x=C;v=qd(j|0,f|0,50)|0;x=x|C;F=pd(j|0,f|0,18)|0;E=C;y=qd(j|0,f|0,46)|0;E=x^(E|C);x=pd(j|0,f|0,41)|0;D=C;L=qd(j|0,f|0,23)|0;D=E^(D|C);E=g+472|0;u=c[E>>2]|0;E=c[E+4>>2]|0;s=nd(r|0,s|0,442776044,-1933114872)|0;E=nd(s|0,C|0,u|0,E|0)|0;D=nd(E|0,C|0,(H|v)^(F|y)^(x|L)|0,D|0)|0;D=nd(D|0,C|0,(o^m)&j^o|0,(p^l)&f^p|0)|0;L=C;x=pd(M|0,J|0,28)|0;y=C;F=qd(M|0,J|0,36)|0;y=y|C;v=pd(M|0,J|0,34)|0;H=C;E=qd(M|0,J|0,30)|0;H=y^(H|C);y=pd(M|0,J|0,39)|0;u=C;s=qd(M|0,J|0,25)|0;u=nd((K|G)&M|K&G|0,(B|I)&J|B&I|0,(x|F)^(v|E)^(y|s)|0,H^(u|C)|0)|0;H=C;b=nd(A|0,b|0,D|0,L|0)|0;A=C;L=nd(u|0,H|0,D|0,L|0)|0;D=C;H=pd(b|0,A|0,14)|0;u=C;s=qd(b|0,A|0,50)|0;u=u|C;y=pd(b|0,A|0,18)|0;E=C;v=qd(b|0,A|0,46)|0;E=u^(E|C);u=pd(b|0,A|0,41)|0;F=C;x=qd(b|0,A|0,23)|0;F=E^(F|C);E=g+480|0;r=c[E>>2]|0;E=c[E+4>>2]|0;p=nd(o|0,p|0,593698344,-1866530822)|0;E=nd(p|0,C|0,r|0,E|0)|0;F=nd(E|0,C|0,(H|s)^(y|v)^(u|x)|0,F|0)|0;F=nd(F|0,C|0,(m^j)&b^m|0,(l^f)&A^l|0)|0;x=C;u=pd(L|0,D|0,28)|0;v=C;y=qd(L|0,D|0,36)|0;v=v|C;s=pd(L|0,D|0,34)|0;H=C;E=qd(L|0,D|0,30)|0;H=v^(H|C);v=pd(L|0,D|0,39)|0;r=C;p=qd(L|0,D|0,25)|0;r=nd((G|M)&L|G&M|0,(I|J)&D|I&J|0,(u|y)^(s|E)^(v|p)|0,H^(r|C)|0)|0;H=C;B=nd(K|0,B|0,F|0,x|0)|0;K=C;x=nd(r|0,H|0,F|0,x|0)|0;F=C;H=pd(B|0,K|0,14)|0;r=C;p=qd(B|0,K|0,50)|0;r=r|C;v=pd(B|0,K|0,18)|0;E=C;s=qd(B|0,K|0,46)|0;E=r^(E|C);r=pd(B|0,K|0,41)|0;y=C;u=qd(B|0,K|0,23)|0;y=E^(y|C);E=g+488|0;o=c[E>>2]|0;E=c[E+4>>2]|0;l=nd(m|0,l|0,-561857047,-1538233109)|0;E=nd(l|0,C|0,o|0,E|0)|0;y=nd(E|0,C|0,(H|p)^(v|s)^(r|u)|0,y|0)|0;y=nd(y|0,C|0,(j^b)&B^j|0,(f^A)&K^f|0)|0;u=C;r=pd(x|0,F|0,28)|0;s=C;v=qd(x|0,F|0,36)|0;s=s|C;p=pd(x|0,F|0,34)|0;H=C;E=qd(x|0,F|0,30)|0;H=s^(H|C);s=pd(x|0,F|0,39)|0;o=C;l=qd(x|0,F|0,25)|0;o=nd((M|L)&x|M&L|0,(J|D)&F|J&D|0,(r|v)^(p|E)^(s|l)|0,H^(o|C)|0)|0;H=C;I=nd(G|0,I|0,y|0,u|0)|0;G=C;u=nd(o|0,H|0,y|0,u|0)|0;y=C;H=pd(I|0,G|0,14)|0;o=C;l=qd(I|0,G|0,50)|0;o=o|C;s=pd(I|0,G|0,18)|0;E=C;p=qd(I|0,G|0,46)|0;E=o^(E|C);o=pd(I|0,G|0,41)|0;v=C;r=qd(I|0,G|0,23)|0;v=E^(v|C);E=g+496|0;m=c[E>>2]|0;E=c[E+4>>2]|0;f=nd(j|0,f|0,-1295615723,-1090935817)|0;E=nd(f|0,C|0,m|0,E|0)|0;v=nd(E|0,C|0,(H|l)^(s|p)^(o|r)|0,v|0)|0;v=nd(v|0,C|0,(b^B)&I^b|0,(A^K)&G^A|0)|0;r=C;o=pd(u|0,y|0,28)|0;p=C;s=qd(u|0,y|0,36)|0;p=p|C;l=pd(u|0,y|0,34)|0;H=C;E=qd(u|0,y|0,30)|0;H=p^(H|C);p=pd(u|0,y|0,39)|0;m=C;f=qd(u|0,y|0,25)|0;m=nd((L|x)&u|L&x|0,(D|F)&y|D&F|0,(o|s)^(l|E)^(p|f)|0,H^(m|C)|0)|0;H=C;J=nd(M|0,J|0,v|0,r|0)|0;M=C;r=nd(m|0,H|0,v|0,r|0)|0;v=C;H=pd(J|0,M|0,14)|0;m=C;f=qd(J|0,M|0,50)|0;m=m|C;p=pd(J|0,M|0,18)|0;E=C;l=qd(J|0,M|0,46)|0;E=m^(E|C);m=pd(J|0,M|0,41)|0;s=C;o=qd(J|0,M|0,23)|0;s=E^(s|C);E=g+504|0;j=c[E>>2]|0;E=c[E+4>>2]|0;A=nd(b|0,A|0,-479046869,-965641998)|0;E=nd(A|0,C|0,j|0,E|0)|0;s=nd(E|0,C|0,(H|f)^(p|l)^(m|o)|0,s|0)|0;s=nd(s|0,C|0,(B^I)&J^B|0,(K^G)&M^K|0)|0;o=C;m=pd(r|0,v|0,28)|0;l=C;p=qd(r|0,v|0,36)|0;l=l|C;f=pd(r|0,v|0,34)|0;H=C;E=qd(r|0,v|0,30)|0;H=l^(H|C);l=pd(r|0,v|0,39)|0;j=C;A=qd(r|0,v|0,25)|0;j=nd((x|u)&r|x&u|0,(F|y)&v|F&y|0,(m|p)^(f|E)^(l|A)|0,H^(j|C)|0)|0;H=C;D=nd(L|0,D|0,s|0,o|0)|0;L=C;o=nd(j|0,H|0,s|0,o|0)|0;s=C;H=pd(D|0,L|0,14)|0;j=C;A=qd(D|0,L|0,50)|0;j=j|C;l=pd(D|0,L|0,18)|0;E=C;f=qd(D|0,L|0,46)|0;E=j^(E|C);j=pd(D|0,L|0,41)|0;p=C;m=qd(D|0,L|0,23)|0;p=E^(p|C);E=g+512|0;b=c[E>>2]|0;E=c[E+4>>2]|0;K=nd(B|0,K|0,-366583396,-903397682)|0;E=nd(K|0,C|0,b|0,E|0)|0;p=nd(E|0,C|0,(H|A)^(l|f)^(j|m)|0,p|0)|0;p=nd(p|0,C|0,(I^J)&D^I|0,(G^M)&L^G|0)|0;m=C;j=pd(o|0,s|0,28)|0;f=C;l=qd(o|0,s|0,36)|0;f=f|C;A=pd(o|0,s|0,34)|0;H=C;E=qd(o|0,s|0,30)|0;H=f^(H|C);f=pd(o|0,s|0,39)|0;b=C;K=qd(o|0,s|0,25)|0;b=nd((u|r)&o|u&r|0,(y|v)&s|y&v|0,(j|l)^(A|E)^(f|K)|0,H^(b|C)|0)|0;H=C;F=nd(x|0,F|0,p|0,m|0)|0;x=C;m=nd(b|0,H|0,p|0,m|0)|0;p=C;H=pd(F|0,x|0,14)|0;b=C;K=qd(F|0,x|0,50)|0;b=b|C;f=pd(F|0,x|0,18)|0;E=C;A=qd(F|0,x|0,46)|0;E=b^(E|C);b=pd(F|0,x|0,41)|0;l=C;j=qd(F|0,x|0,23)|0;l=E^(l|C);E=g+520|0;B=c[E>>2]|0;E=c[E+4>>2]|0;G=nd(I|0,G|0,566280711,-779700025)|0;E=nd(G|0,C|0,B|0,E|0)|0;l=nd(E|0,C|0,(H|K)^(f|A)^(b|j)|0,l|0)|0;l=nd(l|0,C|0,(J^D)&F^J|0,(M^L)&x^M|0)|0;j=C;b=pd(m|0,p|0,28)|0;A=C;f=qd(m|0,p|0,36)|0;A=A|C;K=pd(m|0,p|0,34)|0;H=C;E=qd(m|0,p|0,30)|0;H=A^(H|C);A=pd(m|0,p|0,39)|0;B=C;G=qd(m|0,p|0,25)|0;B=nd((r|o)&m|r&o|0,(v|s)&p|v&s|0,(b|f)^(K|E)^(A|G)|0,H^(B|C)|0)|0;H=C;y=nd(u|0,y|0,l|0,j|0)|0;u=C;j=nd(B|0,H|0,l|0,j|0)|0;l=C;H=pd(y|0,u|0,14)|0;B=C;G=qd(y|0,u|0,50)|0;B=B|C;A=pd(y|0,u|0,18)|0;E=C;K=qd(y|0,u|0,46)|0;E=B^(E|C);B=pd(y|0,u|0,41)|0;f=C;b=qd(y|0,u|0,23)|0;f=E^(f|C);E=g+528|0;I=c[E>>2]|0;E=c[E+4>>2]|0;M=nd(J|0,M|0,-840897762,-354779690)|0;E=nd(M|0,C|0,I|0,E|0)|0;f=nd(E|0,C|0,(H|G)^(A|K)^(B|b)|0,f|0)|0;f=nd(f|0,C|0,(D^F)&y^D|0,(L^x)&u^L|0)|0;b=C;B=pd(j|0,l|0,28)|0;K=C;A=qd(j|0,l|0,36)|0;K=K|C;G=pd(j|0,l|0,34)|0;H=C;E=qd(j|0,l|0,30)|0;H=K^(H|C);K=pd(j|0,l|0,39)|0;I=C;M=qd(j|0,l|0,25)|0;I=nd((o|m)&j|o&m|0,(s|p)&l|s&p|0,(B|A)^(G|E)^(K|M)|0,H^(I|C)|0)|0;H=C;v=nd(r|0,v|0,f|0,b|0)|0;r=C;b=nd(I|0,H|0,f|0,b|0)|0;f=C;H=pd(v|0,r|0,14)|0;I=C;M=qd(v|0,r|0,50)|0;I=I|C;K=pd(v|0,r|0,18)|0;E=C;G=qd(v|0,r|0,46)|0;E=I^(E|C);I=pd(v|0,r|0,41)|0;A=C;B=qd(v|0,r|0,23)|0;A=E^(A|C);E=g+536|0;J=c[E>>2]|0;E=c[E+4>>2]|0;L=nd(D|0,L|0,-294727304,-176337025)|0;E=nd(L|0,C|0,J|0,E|0)|0;A=nd(E|0,C|0,(H|M)^(K|G)^(I|B)|0,A|0)|0;A=nd(A|0,C|0,(F^y)&v^F|0,(x^u)&r^x|0)|0;B=C;I=pd(b|0,f|0,28)|0;G=C;K=qd(b|0,f|0,36)|0;G=G|C;M=pd(b|0,f|0,34)|0;H=C;E=qd(b|0,f|0,30)|0;H=G^(H|C);G=pd(b|0,f|0,39)|0;J=C;L=qd(b|0,f|0,25)|0;J=nd((m|j)&b|m&j|0,(p|l)&f|p&l|0,(I|K)^(M|E)^(G|L)|0,H^(J|C)|0)|0;H=C;s=nd(o|0,s|0,A|0,B|0)|0;o=C;B=nd(J|0,H|0,A|0,B|0)|0;A=C;H=pd(s|0,o|0,14)|0;J=C;L=qd(s|0,o|0,50)|0;J=J|C;G=pd(s|0,o|0,18)|0;E=C;M=qd(s|0,o|0,46)|0;E=J^(E|C);J=pd(s|0,o|0,41)|0;K=C;I=qd(s|0,o|0,23)|0;K=E^(K|C);E=g+544|0;D=c[E>>2]|0;E=c[E+4>>2]|0;x=nd(F|0,x|0,1914138554,116418474)|0;E=nd(x|0,C|0,D|0,E|0)|0;K=nd(E|0,C|0,(H|L)^(G|M)^(J|I)|0,K|0)|0;K=nd(K|0,C|0,(y^v)&s^y|0,(u^r)&o^u|0)|0;I=C;J=pd(B|0,A|0,28)|0;M=C;G=qd(B|0,A|0,36)|0;M=M|C;L=pd(B|0,A|0,34)|0;H=C;E=qd(B|0,A|0,30)|0;H=M^(H|C);M=pd(B|0,A|0,39)|0;D=C;x=qd(B|0,A|0,25)|0;D=nd((j|b)&B|j&b|0,(l|f)&A|l&f|0,(J|G)^(L|E)^(M|x)|0,H^(D|C)|0)|0;H=C;p=nd(m|0,p|0,K|0,I|0)|0;m=C;I=nd(D|0,H|0,K|0,I|0)|0;K=C;H=pd(p|0,m|0,14)|0;D=C;x=qd(p|0,m|0,50)|0;D=D|C;M=pd(p|0,m|0,18)|0;E=C;L=qd(p|0,m|0,46)|0;E=D^(E|C);D=pd(p|0,m|0,41)|0;G=C;J=qd(p|0,m|0,23)|0;G=E^(G|C);E=g+552|0;F=c[E>>2]|0;E=c[E+4>>2]|0;u=nd(y|0,u|0,-1563912026,174292421)|0;E=nd(u|0,C|0,F|0,E|0)|0;G=nd(E|0,C|0,(H|x)^(M|L)^(D|J)|0,G|0)|0;G=nd(G|0,C|0,(v^s)&p^v|0,(r^o)&m^r|0)|0;J=C;D=pd(I|0,K|0,28)|0;L=C;M=qd(I|0,K|0,36)|0;L=L|C;x=pd(I|0,K|0,34)|0;H=C;E=qd(I|0,K|0,30)|0;H=L^(H|C);L=pd(I|0,K|0,39)|0;F=C;u=qd(I|0,K|0,25)|0;F=nd((b|B)&I|b&B|0,(f|A)&K|f&A|0,(D|M)^(x|E)^(L|u)|0,H^(F|C)|0)|0;H=C;l=nd(j|0,l|0,G|0,J|0)|0;j=C;J=nd(F|0,H|0,G|0,J|0)|0;G=C;H=pd(l|0,j|0,14)|0;F=C;u=qd(l|0,j|0,50)|0;F=F|C;L=pd(l|0,j|0,18)|0;E=C;x=qd(l|0,j|0,46)|0;E=F^(E|C);F=pd(l|0,j|0,41)|0;M=C;D=qd(l|0,j|0,23)|0;M=E^(M|C);E=g+560|0;y=c[E>>2]|0;E=c[E+4>>2]|0;r=nd(v|0,r|0,-1090974290,289380356)|0;E=nd(r|0,C|0,y|0,E|0)|0;M=nd(E|0,C|0,(H|u)^(L|x)^(F|D)|0,M|0)|0;M=nd(M|0,C|0,(s^p)&l^s|0,(o^m)&j^o|0)|0;D=C;F=pd(J|0,G|0,28)|0;x=C;L=qd(J|0,G|0,36)|0;x=x|C;u=pd(J|0,G|0,34)|0;H=C;E=qd(J|0,G|0,30)|0;H=x^(H|C);x=pd(J|0,G|0,39)|0;y=C;r=qd(J|0,G|0,25)|0;y=nd((B|I)&J|B&I|0,(A|K)&G|A&K|0,(F|L)^(u|E)^(x|r)|0,H^(y|C)|0)|0;H=C;f=nd(b|0,f|0,M|0,D|0)|0;b=C;D=nd(y|0,H|0,M|0,D|0)|0;M=C;H=pd(f|0,b|0,14)|0;y=C;r=qd(f|0,b|0,50)|0;y=y|C;x=pd(f|0,b|0,18)|0;E=C;u=qd(f|0,b|0,46)|0;E=y^(E|C);y=pd(f|0,b|0,41)|0;L=C;F=qd(f|0,b|0,23)|0;L=E^(L|C);E=g+568|0;v=c[E>>2]|0;E=c[E+4>>2]|0;o=nd(s|0,o|0,320620315,460393269)|0;E=nd(o|0,C|0,v|0,E|0)|0;L=nd(E|0,C|0,(H|r)^(x|u)^(y|F)|0,L|0)|0;L=nd(L|0,C|0,(p^l)&f^p|0,(m^j)&b^m|0)|0;F=C;y=pd(D|0,M|0,28)|0;u=C;x=qd(D|0,M|0,36)|0;u=u|C;r=pd(D|0,M|0,34)|0;H=C;E=qd(D|0,M|0,30)|0;H=u^(H|C);u=pd(D|0,M|0,39)|0;v=C;o=qd(D|0,M|0,25)|0;v=nd((I|J)&D|I&J|0,(K|G)&M|K&G|0,(y|x)^(r|E)^(u|o)|0,H^(v|C)|0)|0;H=C;A=nd(B|0,A|0,L|0,F|0)|0;B=C;F=nd(v|0,H|0,L|0,F|0)|0;L=C;H=pd(A|0,B|0,14)|0;v=C;o=qd(A|0,B|0,50)|0;v=v|C;u=pd(A|0,B|0,18)|0;E=C;r=qd(A|0,B|0,46)|0;E=v^(E|C);v=pd(A|0,B|0,41)|0;x=C;y=qd(A|0,B|0,23)|0;x=E^(x|C);E=g+576|0;s=c[E>>2]|0;E=c[E+4>>2]|0;m=nd(p|0,m|0,587496836,685471733)|0;E=nd(m|0,C|0,s|0,E|0)|0;x=nd(E|0,C|0,(H|o)^(u|r)^(v|y)|0,x|0)|0;x=nd(x|0,C|0,(l^f)&A^l|0,(j^b)&B^j|0)|0;y=C;v=pd(F|0,L|0,28)|0;r=C;u=qd(F|0,L|0,36)|0;r=r|C;o=pd(F|0,L|0,34)|0;H=C;E=qd(F|0,L|0,30)|0;H=r^(H|C);r=pd(F|0,L|0,39)|0;s=C;m=qd(F|0,L|0,25)|0;s=nd((J|D)&F|J&D|0,(G|M)&L|G&M|0,(v|u)^(o|E)^(r|m)|0,H^(s|C)|0)|0;H=C;K=nd(I|0,K|0,x|0,y|0)|0;I=C;y=nd(s|0,H|0,x|0,y|0)|0;x=C;H=pd(K|0,I|0,14)|0;s=C;m=qd(K|0,I|0,50)|0;s=s|C;r=pd(K|0,I|0,18)|0;E=C;o=qd(K|0,I|0,46)|0;E=s^(E|C);s=pd(K|0,I|0,41)|0;u=C;v=qd(K|0,I|0,23)|0;u=E^(u|C);E=g+584|0;p=c[E>>2]|0;E=c[E+4>>2]|0;j=nd(l|0,j|0,1086792851,852142971)|0;E=nd(j|0,C|0,p|0,E|0)|0;u=nd(E|0,C|0,(H|m)^(r|o)^(s|v)|0,u|0)|0;u=nd(u|0,C|0,(f^A)&K^f|0,(b^B)&I^b|0)|0;v=C;s=pd(y|0,x|0,28)|0;o=C;r=qd(y|0,x|0,36)|0;o=o|C;m=pd(y|0,x|0,34)|0;H=C;E=qd(y|0,x|0,30)|0;H=o^(H|C);o=pd(y|0,x|0,39)|0;p=C;j=qd(y|0,x|0,25)|0;p=nd((D|F)&y|D&F|0,(M|L)&x|M&L|0,(s|r)^(m|E)^(o|j)|0,H^(p|C)|0)|0;H=C;G=nd(J|0,G|0,u|0,v|0)|0;J=C;v=nd(p|0,H|0,u|0,v|0)|0;u=C;H=pd(G|0,J|0,14)|0;p=C;j=qd(G|0,J|0,50)|0;p=p|C;o=pd(G|0,J|0,18)|0;E=C;m=qd(G|0,J|0,46)|0;E=p^(E|C);p=pd(G|0,J|0,41)|0;r=C;s=qd(G|0,J|0,23)|0;r=E^(r|C);E=g+592|0;l=c[E>>2]|0;E=c[E+4>>2]|0;b=nd(f|0,b|0,365543100,1017036298)|0;E=nd(b|0,C|0,l|0,E|0)|0;r=nd(E|0,C|0,(H|j)^(o|m)^(p|s)|0,r|0)|0;r=nd(r|0,C|0,(A^K)&G^A|0,(B^I)&J^B|0)|0;s=C;p=pd(v|0,u|0,28)|0;m=C;o=qd(v|0,u|0,36)|0;m=m|C;j=pd(v|0,u|0,34)|0;H=C;E=qd(v|0,u|0,30)|0;H=m^(H|C);m=pd(v|0,u|0,39)|0;l=C;b=qd(v|0,u|0,25)|0;l=nd((F|y)&v|F&y|0,(L|x)&u|L&x|0,(p|o)^(j|E)^(m|b)|0,H^(l|C)|0)|0;H=C;M=nd(D|0,M|0,r|0,s|0)|0;D=C;s=nd(l|0,H|0,r|0,s|0)|0;r=C;H=pd(M|0,D|0,14)|0;l=C;b=qd(M|0,D|0,50)|0;l=l|C;m=pd(M|0,D|0,18)|0;E=C;j=qd(M|0,D|0,46)|0;E=l^(E|C);l=pd(M|0,D|0,41)|0;o=C;p=qd(M|0,D|0,23)|0;o=E^(o|C);E=g+600|0;f=c[E>>2]|0;E=c[E+4>>2]|0;B=nd(A|0,B|0,-1676669620,1126000580)|0;E=nd(B|0,C|0,f|0,E|0)|0;o=nd(E|0,C|0,(H|b)^(m|j)^(l|p)|0,o|0)|0;o=nd(o|0,C|0,(K^G)&M^K|0,(I^J)&D^I|0)|0;p=C;l=pd(s|0,r|0,28)|0;j=C;m=qd(s|0,r|0,36)|0;j=j|C;b=pd(s|0,r|0,34)|0;H=C;E=qd(s|0,r|0,30)|0;H=j^(H|C);j=pd(s|0,r|0,39)|0;f=C;B=qd(s|0,r|0,25)|0;f=nd((y|v)&s|y&v|0,(x|u)&r|x&u|0,(l|m)^(b|E)^(j|B)|0,H^(f|C)|0)|0;H=C;L=nd(F|0,L|0,o|0,p|0)|0;F=C;p=nd(f|0,H|0,o|0,p|0)|0;o=C;H=pd(L|0,F|0,14)|0;f=C;B=qd(L|0,F|0,50)|0;f=f|C;j=pd(L|0,F|0,18)|0;E=C;b=qd(L|0,F|0,46)|0;E=f^(E|C);f=pd(L|0,F|0,41)|0;m=C;l=qd(L|0,F|0,23)|0;m=E^(m|C);E=g+608|0;A=c[E>>2]|0;E=c[E+4>>2]|0;I=nd(K|0,I|0,-885112138,1288033470)|0;E=nd(I|0,C|0,A|0,E|0)|0;m=nd(E|0,C|0,(H|B)^(j|b)^(f|l)|0,m|0)|0;m=nd(m|0,C|0,(G^M)&L^G|0,(J^D)&F^J|0)|0;l=C;f=pd(p|0,o|0,28)|0;b=C;j=qd(p|0,o|0,36)|0;b=b|C;B=pd(p|0,o|0,34)|0;H=C;E=qd(p|0,o|0,30)|0;H=b^(H|C);b=pd(p|0,o|0,39)|0;A=C;I=qd(p|0,o|0,25)|0;A=nd((v|s)&p|v&s|0,(u|r)&o|u&r|0,(f|j)^(B|E)^(b|I)|0,H^(A|C)|0)|0;H=C;x=nd(y|0,x|0,m|0,l|0)|0;y=C;l=nd(A|0,H|0,m|0,l|0)|0;m=C;H=pd(x|0,y|0,14)|0;A=C;I=qd(x|0,y|0,50)|0;A=A|C;b=pd(x|0,y|0,18)|0;E=C;B=qd(x|0,y|0,46)|0;E=A^(E|C);A=pd(x|0,y|0,41)|0;j=C;f=qd(x|0,y|0,23)|0;j=E^(j|C);E=g+616|0;K=c[E>>2]|0;E=c[E+4>>2]|0;J=nd(G|0,J|0,-60457430,1501505948)|0;E=nd(J|0,C|0,K|0,E|0)|0;j=nd(E|0,C|0,(H|I)^(b|B)^(A|f)|0,j|0)|0;j=nd(j|0,C|0,(M^L)&x^M|0,(D^F)&y^D|0)|0;f=C;A=pd(l|0,m|0,28)|0;B=C;b=qd(l|0,m|0,36)|0;B=B|C;I=pd(l|0,m|0,34)|0;H=C;E=qd(l|0,m|0,30)|0;H=B^(H|C);B=pd(l|0,m|0,39)|0;K=C;J=qd(l|0,m|0,25)|0;K=nd((s|p)&l|s&p|0,(r|o)&m|r&o|0,(A|b)^(I|E)^(B|J)|0,H^(K|C)|0)|0;H=C;u=nd(v|0,u|0,j|0,f|0)|0;v=C;f=nd(K|0,H|0,j|0,f|0)|0;j=C;H=pd(u|0,v|0,14)|0;K=C;J=qd(u|0,v|0,50)|0;K=K|C;B=pd(u|0,v|0,18)|0;E=C;I=qd(u|0,v|0,46)|0;E=K^(E|C);K=pd(u|0,v|0,41)|0;b=C;A=qd(u|0,v|0,23)|0;b=E^(b|C);E=g+624|0;G=c[E>>2]|0;E=c[E+4>>2]|0;D=nd(M|0,D|0,987167468,1607167915)|0;E=nd(D|0,C|0,G|0,E|0)|0;b=nd(E|0,C|0,(H|J)^(B|I)^(K|A)|0,b|0)|0;b=nd(b|0,C|0,(L^x)&u^L|0,(F^y)&v^F|0)|0;A=C;K=pd(f|0,j|0,28)|0;I=C;B=qd(f|0,j|0,36)|0;I=I|C;J=pd(f|0,j|0,34)|0;H=C;E=qd(f|0,j|0,30)|0;H=I^(H|C);I=pd(f|0,j|0,39)|0;G=C;D=qd(f|0,j|0,25)|0;G=nd((p|l)&f|p&l|0,(o|m)&j|o&m|0,(K|B)^(J|E)^(I|D)|0,H^(G|C)|0)|0;H=C;r=nd(s|0,r|0,b|0,A|0)|0;s=C;A=nd(G|0,H|0,b|0,A|0)|0;b=C;H=pd(r|0,s|0,14)|0;G=C;D=qd(r|0,s|0,50)|0;G=G|C;I=pd(r|0,s|0,18)|0;E=C;J=qd(r|0,s|0,46)|0;E=G^(E|C);G=pd(r|0,s|0,41)|0;B=C;K=qd(r|0,s|0,23)|0;B=E^(B|C);g=g+632|0;E=c[g>>2]|0;g=c[g+4>>2]|0;F=nd(L|0,F|0,1246189591,1816402316)|0;g=nd(F|0,C|0,E|0,g|0)|0;g=nd(g|0,C|0,(H|D)^(I|J)^(G|K)|0,B|0)|0;g=nd(g|0,C|0,(x^u)&r^x|0,(y^v)&s^y|0)|0;B=C;K=pd(A|0,b|0,28)|0;G=C;J=qd(A|0,b|0,36)|0;G=G|C;I=pd(A|0,b|0,34)|0;D=C;H=qd(A|0,b|0,30)|0;D=G^(D|C);G=pd(A|0,b|0,39)|0;E=C;F=qd(A|0,b|0,25)|0;E=nd((l|f)&A|l&f|0,(m|j)&b|m&j|0,(K|J)^(I|H)^(G|F)|0,D^(E|C)|0)|0;D=C;o=nd(p|0,o|0,g|0,B|0)|0;p=C;B=nd(E|0,D|0,g|0,B|0)|0;g=a;B=nd(c[g>>2]|0,c[g+4>>2]|0,B|0,C|0)|0;g=a;c[g>>2]=B;c[g+4>>2]=C;g=e;g=nd(c[g>>2]|0,c[g+4>>2]|0,A|0,b|0)|0;a=e;c[a>>2]=g;c[a+4>>2]=C;a=k;j=nd(c[a>>2]|0,c[a+4>>2]|0,f|0,j|0)|0;c[k>>2]=j;c[k+4>>2]=C;k=n;m=nd(c[k>>2]|0,c[k+4>>2]|0,l|0,m|0)|0;c[n>>2]=m;c[n+4>>2]=C;n=q;p=nd(c[n>>2]|0,c[n+4>>2]|0,o|0,p|0)|0;c[q>>2]=p;c[q+4>>2]=C;q=t;s=nd(c[q>>2]|0,c[q+4>>2]|0,r|0,s|0)|0;c[t>>2]=s;c[t+4>>2]=C;t=w;v=nd(c[t>>2]|0,c[t+4>>2]|0,u|0,v|0)|0;c[w>>2]=v;c[w+4>>2]=C;w=z;y=nd(c[w>>2]|0,c[w+4>>2]|0,x|0,y|0)|0;c[z>>2]=y;c[z+4>>2]=C;i=h;return}function Eb(b,e){b=b|0;e=e|0;var f=0,g=0;f=e+3|0;c[b>>2]=(d[e+1>>0]|0)<<8|(d[e>>0]|0)|(d[e+2>>0]|0)<<16|(d[f>>0]|0)<<24&50331648;g=e+6|0;c[b+4>>2]=((d[e+4>>0]|0)<<8|(d[f>>0]|0)|(d[e+5>>0]|0)<<16|(d[g>>0]|0)<<24)>>>2&67108611;f=e+9|0;c[b+8>>2]=((d[e+7>>0]|0)<<8|(d[g>>0]|0)|(d[e+8>>0]|0)<<16|(d[f>>0]|0)<<24)>>>4&67092735;c[b+12>>2]=((d[e+10>>0]|0)<<8|(d[f>>0]|0)|(d[e+11>>0]|0)<<16|(d[e+12>>0]|0)<<24)>>>6&66076671;c[b+16>>2]=(d[e+14>>0]|0)<<8|(d[e+13>>0]|0)|(d[e+15>>0]|0)<<16&983040;f=b+20|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[b+40>>2]=(d[e+17>>0]|0)<<8|(d[e+16>>0]|0)|(d[e+18>>0]|0)<<16|(d[e+19>>0]|0)<<24;c[b+44>>2]=(d[e+21>>0]|0)<<8|(d[e+20>>0]|0)|(d[e+22>>0]|0)<<16|(d[e+23>>0]|0)<<24;c[b+48>>2]=(d[e+25>>0]|0)<<8|(d[e+24>>0]|0)|(d[e+26>>0]|0)<<16|(d[e+27>>0]|0)<<24;c[b+52>>2]=(d[e+29>>0]|0)<<8|(d[e+28>>0]|0)|(d[e+30>>0]|0)<<16|(d[e+31>>0]|0)<<24;e=b+56|0;c[e>>2]=0;c[e+4>>2]=0;a[b+80>>0]=0;return}function Fb(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=b+56|0;h=m;g=c[h>>2]|0;h=c[h+4>>2]|0;do if(!((g|0)==0&(h|0)==0)){k=md(16,0,g|0,h|0)|0;l=C;j=l>>>0>f>>>0|(l|0)==(f|0)&k>>>0>e>>>0;k=j?e:k;l=j?f:l;if(!((k|0)==0&(l|0)==0)){j=0;i=0;do{n=a[d+j>>0]|0;h=nd(g|0,h|0,j|0,i|0)|0;a[b+(h+56)+8>>0]=n;j=nd(j|0,i|0,1,0)|0;i=C;h=m;g=c[h>>2]|0;h=c[h+4>>2]|0}while(i>>>0<l>>>0|(i|0)==(l|0)&j>>>0<k>>>0)}n=nd(g|0,h|0,k|0,l|0)|0;j=C;i=m;c[i>>2]=n;c[i+4>>2]=j;if(j>>>0<0|(j|0)==0&n>>>0<16)return;else{e=md(e|0,f|0,k|0,l|0)|0;f=C;Hb(b,b+64|0,16,0);n=m;c[n>>2]=0;c[n+4>>2]=0;d=d+k|0;break}}while(0);if(f>>>0>0|(f|0)==0&e>>>0>15){n=e&-16;Hb(b,d,n,f);e=md(e|0,f|0,n|0,f|0)|0;d=d+n|0;f=C}if((e|0)==0&(f|0)==0)return;else{g=0;h=0}do{l=a[d+g>>0]|0;n=m;n=nd(c[n>>2]|0,c[n+4>>2]|0,g|0,h|0)|0;a[b+(n+56)+8>>0]=l;g=nd(g|0,h|0,1,0)|0;h=C}while(h>>>0<f>>>0|(h|0)==(f|0)&g>>>0<e>>>0);b=m;b=nd(c[b>>2]|0,c[b+4>>2]|0,e|0,f|0)|0;n=m;c[n>>2]=b;c[n+4>>2]=C;return}function Gb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=b+56|0;e=c[g>>2]|0;g=c[g+4>>2]|0;if(!((e|0)==0&(g|0)==0)){a[b+(e+56)+8>>0]=1;f=nd(e|0,g|0,1,0)|0;h=C;if(h>>>0<0|(h|0)==0&f>>>0<16){h=md(14,0,e|0,g|0)|0;od(b+(f+64)|0,0,h+1|0)|0}a[b+80>>0]=1;Hb(b,b+64|0,16,0)}f=c[b+24>>2]|0;p=(c[b+28>>2]|0)+(f>>>26)|0;e=p&67108863;n=(p>>>26)+(c[b+32>>2]|0)|0;m=n&67108863;i=(n>>>26)+(c[b+36>>2]|0)|0;h=((i>>>26)*5|0)+(c[b+20>>2]|0)|0;g=h&67108863;f=(h>>>26)+(f&67108863)|0;r=((g+5|0)>>>26)+f|0;q=r>>>26;o=(q+e|0)>>>26;k=(i|-67108864)+((o+m|0)>>>26)|0;l=(k>>>31)+-1|0;j=k>>31;f=r&67108863&l|j&f;e=q+p&67108863&l|j&e;m=o+n&67108863&l|j&m;g=nd(h+5&67108863&l|j&g|f<<26|0,0,c[b+40>>2]|0,0)|0;h=C;f=nd(f>>>6|e<<20|0,0,c[b+44>>2]|0,0)|0;h=nd(f|0,C|0,h|0,0)|0;f=C;e=nd(e>>>12|m<<14|0,0,c[b+48>>2]|0,0)|0;f=nd(e|0,C|0,f|0,0)|0;e=C;i=nd(m>>>18|(l&k|j&i)<<8|0,0,c[b+52>>2]|0,0)|0;e=nd(i|0,C|0,e|0,0)|0;a[d>>0]=g;a[d+1>>0]=g>>>8;a[d+2>>0]=g>>>16;a[d+3>>0]=g>>>24;a[d+4>>0]=h;a[d+5>>0]=h>>>8;a[d+6>>0]=h>>>16;a[d+7>>0]=h>>>24;a[d+8>>0]=f;a[d+9>>0]=f>>>8;a[d+10>>0]=f>>>16;a[d+11>>0]=f>>>24;a[d+12>>0]=e;a[d+13>>0]=e>>>8;a[d+14>>0]=e>>>16;a[d+15>>0]=e>>>24;e=b+0|0;f=e+88|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));return}function Hb(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;s=(a[b+80>>0]|0)!=0?0:16777216;t=c[b+4>>2]|0;u=c[b+8>>2]|0;m=c[b+12>>2]|0;n=c[b+16>>2]|0;v=b+20|0;l=c[v>>2]|0;w=b+24|0;k=c[w>>2]|0;x=b+28|0;j=c[x>>2]|0;y=b+32|0;i=c[y>>2]|0;z=b+36|0;h=c[z>>2]|0;if(!(g>>>0>0|(g|0)==0&f>>>0>15)){q=l;r=k;s=j;t=i;u=h;c[v>>2]=q;c[w>>2]=r;c[x>>2]=s;c[y>>2]=t;c[z>>2]=u;return}o=n*5|0;p=m*5|0;q=u*5|0;r=t*5|0;b=c[b>>2]|0;while(1){J=d[e+3>>0]|0;B=(d[e+1>>0]<<8|d[e>>0]|d[e+2>>0]<<16|J<<24&50331648)+l|0;H=d[e+6>>0]|0;J=((d[e+4>>0]<<8|J|d[e+5>>0]<<16|H<<24)>>>2&67108863)+k|0;G=d[e+9>>0]|0;H=((d[e+7>>0]<<8|H|d[e+8>>0]<<16|G<<24)>>>4&67108863)+j|0;G=((d[e+10>>0]<<8|G|d[e+11>>0]<<16|d[e+12>>0]<<24)>>>6)+i|0;l=(d[e+13>>0]|s|d[e+14>>0]<<8|d[e+15>>0]<<16)+h|0;k=yd(B|0,0,b|0,0)|0;j=C;A=yd(J|0,0,o|0,0)|0;j=nd(A|0,C|0,k|0,j|0)|0;k=C;A=yd(H|0,0,p|0,0)|0;A=nd(j|0,k|0,A|0,C|0)|0;k=C;j=yd(G|0,0,q|0,0)|0;j=nd(A|0,k|0,j|0,C|0)|0;k=C;A=yd(l|0,0,r|0,0)|0;A=nd(j|0,k|0,A|0,C|0)|0;k=C;j=yd(B|0,0,t|0,0)|0;i=C;F=yd(J|0,0,b|0,0)|0;i=nd(F|0,C|0,j|0,i|0)|0;j=C;F=yd(H|0,0,o|0,0)|0;F=nd(i|0,j|0,F|0,C|0)|0;j=C;i=yd(G|0,0,p|0,0)|0;i=nd(F|0,j|0,i|0,C|0)|0;j=C;F=yd(l|0,0,q|0,0)|0;F=nd(i|0,j|0,F|0,C|0)|0;j=C;i=yd(B|0,0,u|0,0)|0;h=C;E=yd(J|0,0,t|0,0)|0;h=nd(E|0,C|0,i|0,h|0)|0;i=C;E=yd(H|0,0,b|0,0)|0;E=nd(h|0,i|0,E|0,C|0)|0;i=C;h=yd(G|0,0,o|0,0)|0;h=nd(E|0,i|0,h|0,C|0)|0;i=C;E=yd(l|0,0,p|0,0)|0;E=nd(h|0,i|0,E|0,C|0)|0;i=C;h=yd(B|0,0,m|0,0)|0;I=C;D=yd(J|0,0,u|0,0)|0;I=nd(D|0,C|0,h|0,I|0)|0;h=C;D=yd(H|0,0,t|0,0)|0;D=nd(I|0,h|0,D|0,C|0)|0;h=C;I=yd(G|0,0,b|0,0)|0;I=nd(D|0,h|0,I|0,C|0)|0;h=C;D=yd(l|0,0,o|0,0)|0;D=nd(I|0,h|0,D|0,C|0)|0;h=C;B=yd(B|0,0,n|0,0)|0;I=C;J=yd(J|0,0,m|0,0)|0;I=nd(J|0,C|0,B|0,I|0)|0;B=C;H=yd(H|0,0,u|0,0)|0;H=nd(I|0,B|0,H|0,C|0)|0;B=C;G=yd(G|0,0,t|0,0)|0;G=nd(H|0,B|0,G|0,C|0)|0;B=C;l=yd(l|0,0,b|0,0)|0;l=nd(G|0,B|0,l|0,C|0)|0;B=C;k=pd(A|0,k|0,26)|0;k=nd(F|0,j|0,k|0,0)|0;j=pd(k|0,C|0,26)|0;j=nd(E|0,i|0,j|0,0)|0;i=pd(j|0,C|0,26)|0;j=j&67108863;i=nd(D|0,h|0,i|0,0)|0;h=pd(i|0,C|0,26)|0;i=i&67108863;h=nd(l|0,B|0,h|0,0)|0;B=pd(h|0,C|0,26)|0;h=h&67108863;B=B*5|0;l=B+A&67108863;k=((B+(A&67108863)|0)>>>26)+(k&67108863)|0;f=nd(f|0,g|0,-16,-1)|0;g=C;if(!(g>>>0>0|(g|0)==0&f>>>0>15))break;else e=e+16|0}c[v>>2]=l;c[w>>2]=k;c[x>>2]=j;c[y>>2]=i;c[z>>2]=h;return}function Ib(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;v=i;r=i=i+63&-64;i=i+48|0;u=r+8|0;s=r+4|0;if((a[g>>0]|0)!=36){h=0;i=v;return h|0}if((a[g+1>>0]|0)!=55){h=0;i=v;return h|0}if((a[g+2>>0]|0)!=36){h=0;i=v;return h|0}q=a[g+3>>0]|0;m=q&255;a:do if(0){l=65;k=456;do{if((a[k>>0]|0)==q<<24>>24)break a;k=k+1|0;l=l+-1|0;n=(l|0)!=0}while(n&(k&3|0)!=0);if(!n){h=0;i=v;return h|0}}else{l=65;k=456}while(0);b:do if((a[k>>0]|0)!=q<<24>>24){o=_(m,16843009)|0;c:do if(l>>>0>3)while(1){p=c[k>>2]^o;if((p&-2139062144^-2139062144)&p+-16843009)break c;k=k+4|0;l=l+-4|0;if(l>>>0<=3){t=12;break}}else t=12;while(0);if((t|0)==12)if(!l){h=0;i=v;return h|0}while(1){if((a[k>>0]|0)==q<<24>>24)break b;l=l+-1|0;if(!l){b=0;break}else k=k+1|0}i=v;return b|0}while(0);if((k|0)==0|(l|0)==0){h=0;i=v;return h|0}p=qd(1,0,k-456|0)|0;j=C;k=Kb(s,g+4|0)|0;if(!k){h=0;i=v;return h|0}q=Kb(r,k)|0;if(!q){h=0;i=v;return h|0}o=q-g|0;m=(rd(q|0)|0)+1|0;while(1){n=m+-1|0;if(!m){t=24;break}l=q+n|0;if((a[l>>0]|0)==36){t=22;break}else m=n}if((t|0)==22)if(!l)t=24;else m=m+-1|0;if((t|0)==24)m=rd(q|0)|0;n=m+o|0;o=n+45|0;if(o>>>0>102|o>>>0<m>>>0){h=0;i=v;return h|0}if(Wb(b,e,f,q,m,p,j,c[s>>2]|0,c[r>>2]|0,u,32)|0){h=0;i=v;return h|0}sd(h|0,g|0,n|0)|0;a[h+n>>0]=36;q=h+(n+1)|0;o=101-n|0;p=0;d:while(1){b=p+1|0;b=p-(b>>>0<32?32:b)|0;b=b>>>0>4294967293?b:-3;k=0;j=p;p=p-b|0;l=0;while(1){g=j;j=j+1|0;l=d[u+g>>0]<<k|l;if((j|0)==(p|0))break;else k=k+8|0}n=_(b,-8)|0;if(!n)k=q;else{j=o;b=q;m=0;while(1){if(!j){t=35;break d}k=b+1|0;a[b>>0]=a[456+(l&63)>>0]|0;m=m+6|0;if(m>>>0>=n>>>0)break;else{l=l>>>6;j=j+-1|0;b=k}}}if(!k){t=35;break}o=q+o-k|0;if(p>>>0>=32)break;else q=k}if((t|0)==35){b=u+0|0;j=b+32|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(j|0));h=0;i=v;return h|0}b=u+0|0;j=b+32|0;do{a[b>>0]=0;b=b+1|0}while((b|0)<(j|0));if(k>>>0>=(h+102|0)>>>0){h=0;i=v;return h|0}a[k>>0]=0;i=v;return h|0}function Jb(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;m=i;n=i=i+63&-64;i=i+16|0;c[n+4>>2]=0;c[n>>2]=0;c[n+8>>2]=0;g=Wb(n,a,b,d,e,f,g,h,j,k,l)|0;f=c[n>>2]|0;if(!f){i=m;return g|0}id(f);i=m;return g|0}function Kb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;k=a[d>>0]|0;i=k&255;a:do if(0){f=65;e=456;do{if((a[e>>0]|0)==k<<24>>24)break a;e=e+1|0;f=f+-1|0;g=(f|0)!=0}while(g&(e&3|0)!=0);if(!g){d=0;n=0;c[b>>2]=n;return d|0}}else{f=65;e=456}while(0);b:do if((a[e>>0]|0)!=k<<24>>24){j=_(i,16843009)|0;c:do if(f>>>0>3)while(1){m=c[e>>2]^j;if((m&-2139062144^-2139062144)&m+-16843009)break c;e=e+4|0;f=f+-4|0;if(f>>>0<=3){n=9;break}}else n=9;while(0);if((n|0)==9)if(!f){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[e>>0]|0)==k<<24>>24)break b;f=f+-1|0;if(!f){e=0;f=0;break}else e=e+1|0}c[b>>2]=f;return e|0}while(0);if((e|0)==0|(f|0)==0){d=0;n=0;c[b>>2]=n;return d|0}k=a[d+1>>0]|0;j=k&255;d:do if(0){f=65;g=456;do{if((a[g>>0]|0)==k<<24>>24)break d;g=g+1|0;f=f+-1|0;h=(f|0)!=0}while(h&(g&3|0)!=0);if(!h){d=0;n=0;c[b>>2]=n;return d|0}}else{f=65;g=456}while(0);e:do if((a[g>>0]|0)!=k<<24>>24){j=_(j,16843009)|0;f:do if(f>>>0>3)while(1){m=c[g>>2]^j;if((m&-2139062144^-2139062144)&m+-16843009)break f;g=g+4|0;f=f+-4|0;if(f>>>0<=3){n=22;break}}else n=22;while(0);if((n|0)==22)if(!f){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[g>>0]|0)==k<<24>>24)break e;f=f+-1|0;if(!f){e=0;f=0;break}else g=g+1|0}c[b>>2]=f;return e|0}while(0);if((g|0)==0|(f|0)==0){d=0;n=0;c[b>>2]=n;return d|0}l=a[d+2>>0]|0;j=l&255;g:do if(0){f=65;h=456;do{if((a[h>>0]|0)==l<<24>>24)break g;h=h+1|0;f=f+-1|0;i=(f|0)!=0}while(i&(h&3|0)!=0);if(!i){d=0;n=0;c[b>>2]=n;return d|0}}else{f=65;h=456}while(0);h:do if((a[h>>0]|0)!=l<<24>>24){k=_(j,16843009)|0;i:do if(f>>>0>3)while(1){m=c[h>>2]^k;if((m&-2139062144^-2139062144)&m+-16843009)break i;h=h+4|0;f=f+-4|0;if(f>>>0<=3){n=36;break}}else n=36;while(0);if((n|0)==36)if(!f){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[h>>0]|0)==l<<24>>24)break h;f=f+-1|0;if(!f){e=0;f=0;break}else h=h+1|0}c[b>>2]=f;return e|0}while(0);if((h|0)==0|(f|0)==0){d=0;n=0;c[b>>2]=n;return d|0}l=a[d+3>>0]|0;k=l&255;j:do if(0){i=65;f=456;do{if((a[f>>0]|0)==l<<24>>24)break j;f=f+1|0;i=i+-1|0;j=(i|0)!=0}while(j&(f&3|0)!=0);if(!j){d=0;n=0;c[b>>2]=n;return d|0}}else{i=65;f=456}while(0);k:do if((a[f>>0]|0)==l<<24>>24)m=f;else{k=_(k,16843009)|0;l:do if(i>>>0>3)while(1){m=c[f>>2]^k;if((m&-2139062144^-2139062144)&m+-16843009)break l;f=f+4|0;i=i+-4|0;if(i>>>0<=3){n=49;break}}else n=49;while(0);if((n|0)==49)if(!i){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[f>>0]|0)==l<<24>>24){m=f;break k}i=i+-1|0;if(!i){e=0;f=0;break}else f=f+1|0}c[b>>2]=f;return e|0}while(0);if((m|0)==0|(i|0)==0){d=0;n=0;c[b>>2]=n;return d|0}l=a[d+4>>0]|0;k=l&255;m:do if(0){i=65;f=456;do{if((a[f>>0]|0)==l<<24>>24)break m;f=f+1|0;i=i+-1|0;j=(i|0)!=0}while(j&(f&3|0)!=0);if(!j){d=0;n=0;c[b>>2]=n;return d|0}}else{i=65;f=456}while(0);n:do if((a[f>>0]|0)!=l<<24>>24){k=_(k,16843009)|0;o:do if(i>>>0>3)while(1){j=c[f>>2]^k;if((j&-2139062144^-2139062144)&j+-16843009)break o;f=f+4|0;i=i+-4|0;if(i>>>0<=3){n=62;break}}else n=62;while(0);if((n|0)==62)if(!i){d=0;n=0;c[b>>2]=n;return d|0}while(1){if((a[f>>0]|0)==l<<24>>24)break n;i=i+-1|0;if(!i){e=0;f=0;break}else f=f+1|0}c[b>>2]=f;return e|0}while(0);if((f|0)==0|(i|0)==0){d=0;n=0;c[b>>2]=n;return d|0}d=d+5|0;n=f-456<<24|(m-456<<18|(h-456<<12|(g-456<<6|e-456)));c[b>>2]=n;return d|0}function Lb(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=i;v=i=i+63&-64;i=i+560|0;t=v+488|0;y=v+456|0;u=v+208|0;w=v;x=v+448|0;v=v+416|0;m=u+36|0;if(d>>>0>64){c[m>>2]=0;p=u+32|0;c[p>>2]=0;c[u>>2]=1779033703;r=u+4|0;c[r>>2]=-1150833019;s=u+8|0;c[s>>2]=1013904242;l=u+12|0;c[l>>2]=-1521486534;k=u+16|0;c[k>>2]=1359893119;j=u+20|0;c[j>>2]=-1694144372;n=u+24|0;c[n>>2]=528734635;o=u+28|0;c[o>>2]=1541459225;xb(u,b,d,0);yb(u,y);b=y;d=32;q=u}else{l=u+12|0;k=u+16|0;j=u+20|0;n=u+24|0;o=u+28|0;p=u+32|0;q=u;r=u+4|0;s=u+8|0}c[m>>2]=0;c[p>>2]=0;c[q>>2]=1779033703;c[r>>2]=-1150833019;c[s>>2]=1013904242;c[l>>2]=-1521486534;c[k>>2]=1359893119;c[j>>2]=-1694144372;c[n>>2]=528734635;c[o>>2]=1541459225;m=t+0|0;l=m+64|0;do{a[m>>0]=54;m=m+1|0}while((m|0)<(l|0));k=(d|0)==0;a:do if(!k){l=54;m=0;while(1){a[t+m>>0]=l^a[b+m>>0];m=m+1|0;if((m|0)==(d|0))break a;l=a[t+m>>0]|0}}while(0);xb(u,t,64,0);j=u+104|0;c[u+140>>2]=0;c[u+136>>2]=0;c[j>>2]=1779033703;c[u+108>>2]=-1150833019;c[u+112>>2]=1013904242;c[u+116>>2]=-1521486534;c[u+120>>2]=1359893119;c[u+124>>2]=-1694144372;c[u+128>>2]=528734635;c[u+132>>2]=1541459225;m=t+0|0;l=m+64|0;do{a[m>>0]=92;m=m+1|0}while((m|0)<(l|0));b:do if(!k){l=92;m=0;while(1){a[t+m>>0]=l^a[b+m>>0];m=m+1|0;if((m|0)==(d|0))break b;l=a[t+m>>0]|0}}while(0);xb(j,t,64,0);xb(u,e,f,0);if(!h){i=z;return}j=x+3|0;k=x+2|0;l=x+1|0;m=w+104|0;d=0;b=0;do{b=b+1|0;a[j>>0]=b;a[k>>0]=b>>>8;a[l>>0]=b>>>16;a[x>>0]=b>>>24;sd(w|0,u|0,208)|0;xb(w,x,4,0);yb(w,y);xb(m,y,32,0);yb(m,v);f=h-d|0;sd(g+d|0,v|0,(f>>>0>32?32:f)|0)|0;d=b<<5}while(d>>>0<h>>>0);i=z;return}function Mb(){return 32}function Nb(){return 102}function Ob(){return 528}function Pb(){return 524288}function Qb(){return 16777216}function Rb(){return 33554432}function Sb(){return 1073741824}function Tb(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=i;n=i=i+63&-64;i=i+16|0;od(a|0,0,b|0)|0;m=g|d;if(m>>>0>0|(m|0)==0&(f|b)>>>0>4294967295){c[(oa()|0)>>2]=27;n=-1;i=o;return n|0}d=k>>>0<0|(k|0)==0&j>>>0<32768;m=d?32768:j;k=d?0:k;a:do if(k>>>0<0|(k|0)==0&m>>>0<l>>>5>>>0){k=pd(m|0,k|0,6)|0;g=C;d=1;while(1){m=qd(1,0,d|0)|0;l=C;j=d+1|0;if(l>>>0>g>>>0|(l|0)==(g|0)&m>>>0>k>>>0){j=d;k=1;break a}if(j>>>0<63)d=j;else{k=1;break}}}else{d=l>>>11;g=1;while(1){l=qd(1,0,g|0)|0;p=C;j=g+1|0;if(p>>>0>0|(p|0)==0&l>>>0>d>>>0){j=g;break}if(j>>>0<63)g=j;else break}k=pd(m|0,k|0,2)|0;k=pd(k|0,C|0,j|0)|0;p=C;k=p>>>0>0|(p|0)==0&k>>>0>1073741823?134217727:k>>>3}while(0);j=qd(1,0,j|0)|0;c[n+4>>2]=0;c[n>>2]=0;c[n+8>>2]=0;j=Wb(n,e,f,h,32,j,C,8,k,a,b)|0;k=c[n>>2]|0;if(k)id(k);p=j;i=o;return p|0}function Ub(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;v=i=i+63&-64;i=i+112|0;t=v+72|0;u=v+12|0;n=b+0|0;m=n+102|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(m|0));if(g>>>0>0|(g|0)==0&f>>>0>4294967295){c[(oa()|0)>>2]=27;v=-1;i=w;return v|0}m=j>>>0<0|(j|0)==0&h>>>0<32768;l=m?32768:h;m=m?0:j;a:do if(m>>>0<0|(m|0)==0&l>>>0<k>>>5>>>0){m=pd(l|0,m|0,6)|0;j=C;h=1;while(1){k=qd(1,0,h|0)|0;g=C;n=h+1|0;if(g>>>0>j>>>0|(g|0)==(j|0)&k>>>0>m>>>0){n=h;m=1;break a}if(n>>>0<63)h=n;else{m=1;break}}}else{g=k>>>11;h=1;while(1){k=qd(1,0,h|0)|0;j=C;n=h+1|0;if(j>>>0>0|(j|0)==0&k>>>0>g>>>0){n=h;break}if(n>>>0<63)h=n;else break}m=pd(l|0,m|0,2)|0;m=pd(m|0,C|0,n|0)|0;k=C;m=k>>>0>0|(k|0)==0&m>>>0>1073741823?134217727:m>>>3}while(0);j=0;do{a[t+j>>0]=pa(0)|0;j=j+1|0}while((j|0)!=32);b:do if((((((((n>>>0<=63?(k=qd(m|0,0,3)|0,g=C,!(g>>>0>0|(g|0)==0&k>>>0>1073741823)):0)?(a[u>>0]=36,a[u+1>>0]=55,a[u+2>>0]=36,a[u+3>>0]=a[456+n>>0]|0,a[u+4>>0]=54,k=u+5|0,p=u+9|0,a[k>>0]=46,a[k+1>>0]=46,a[k+2>>0]=46,a[k+3>>0]=46,(p|0)!=0):0)?(o=p,r=u+58|0,(r|0)!=(o|0)):0)?(q=r-o|0,a[p>>0]=a[456+(m&63)>>0]|0,(q|0)!=1):0)?(a[u+10>>0]=a[456+(m>>>6&63)>>0]|0,(q|0)!=2):0)?(a[u+11>>0]=a[456+(m>>>12&63)>>0]|0,(q|0)!=3):0)?(a[u+12>>0]=a[456+(m>>>18&63)>>0]|0,(q|0)!=4):0)?(s=u+14|0,a[u+13>>0]=a[456+(m>>>24&63)>>0]|0,(s|0)!=0):0){p=s;k=r-s|0;o=0;while(1){j=o+1|0;j=o-(j>>>0<32?32:j)|0;j=j>>>0>4294967293?j:-3;n=0;m=o;o=o-j|0;l=0;while(1){s=m;m=m+1|0;l=(d[t+s>>0]|0)<<n|l;if((m|0)==(o|0))break;else n=n+8|0}g=_(j,-8)|0;if(!g)n=p;else{m=k;j=p;h=0;while(1){if(!m)break b;n=j+1|0;a[j>>0]=a[456+(l&63)>>0]|0;h=h+6|0;if(h>>>0>=g>>>0)break;else{l=l>>>6;m=m+-1|0;j=n}}}if(!n)break b;k=p+k-n|0;if(o>>>0>=32)break;else p=n}if(n>>>0<(u+58|0)>>>0){a[n>>0]=0;m=v+4|0;c[m>>2]=0;c[v>>2]=0;n=v+8|0;c[n>>2]=0;l=(Ib(v,e,f,u,b)|0)==0;j=c[v>>2]|0;if(j)id(j);c[m>>2]=0;c[v>>2]=0;c[n>>2]=0;if(!l){v=0;i=w;return v|0}c[(oa()|0)>>2]=22;v=-1;i=w;return v|0}}while(0);c[(oa()|0)>>2]=22;v=-1;i=w;return v|0}function Vb(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;m=i;k=i=i+63&-64;i=i+128|0;l=k+12|0;a:do if(b&3){h=102;f=b;do{if(!(a[f>>0]|0)){j=5;break a}f=f+1|0;h=h+-1|0;g=(h|0)!=0}while(g&(f&3|0)!=0);if(g)j=5;else h=0}else{h=102;f=b;j=5}while(0);b:do if((j|0)==5)if(a[f>>0]|0){c:do if(h>>>0>3)while(1){g=c[f>>2]|0;if((g&-2139062144^-2139062144)&g+-16843009)break;f=f+4|0;h=h+-4|0;if(h>>>0<=3){j=10;break c}}else j=10;while(0);if((j|0)==10)if(!h){h=0;break}while(1){if(!(a[f>>0]|0))break b;f=f+1|0;h=h+-1|0;if(!h){h=0;break}}}while(0);if((((h|0)!=0?f:0)|0)!=(b+101|0)){l=-1;i=m;return l|0}g=k+4|0;c[g>>2]=0;c[k>>2]=0;j=k+8|0;c[j>>2]=0;h=(Ib(k,d,e,b,l)|0)==0;f=c[k>>2]|0;if(f)id(f);c[g>>2]=0;c[k>>2]=0;c[j>>2]=0;if(h){l=-1;i=m;return l|0}else{h=0;f=0}do{h=a[b+f>>0]^a[l+f>>0]|h;f=f+1|0}while((f|0)!=102);h=(((h&255)+511|0)>>>8&1)+-1|0;g=l+0|0;f=g+102|0;do{a[g>>0]=0;g=g+1|0}while((g|0)<(f|0));l=h;i=m;return l|0}function Wb(b,e,f,g,h,i,j,k,l,m,n){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;K=yd(l|0,0,k|0,0)|0;J=C;if(J>>>0>0|(J|0)==0&K>>>0>1073741823){c[(oa()|0)>>2]=27;f=-1;return f|0}I=nd(i|0,j|0,-1,-1)|0;J=C;if(j>>>0<0|(j|0)==0&i>>>0<2|((I&i|0)!=0|(J&j|0)!=0)){c[(oa()|0)>>2]=22;f=-1;return f|0}if((k|0)==0|(l|0)==0){c[(oa()|0)>>2]=22;f=-1;return f|0}if(!(k>>>0>16777215?1:(33554431/(l>>>0)|0)>>>0<k>>>0)?!(0<j>>>0|(0==(j|0)?(33554431/(k>>>0)|0)>>>0<i>>>0:0)):0){B=k<<7;K=_(B,l)|0;A=yd(B|0,0,i|0,j|0)|0;A=K+A|0;if(A>>>0<K>>>0){c[(oa()|0)>>2]=12;f=-1;return f|0}z=A+(k<<8|64)|0;if(z>>>0<A>>>0){c[(oa()|0)>>2]=12;f=-1;return f|0}y=b+8|0;a:do if((c[y>>2]|0)>>>0<z>>>0){o=c[b>>2]|0;if(o)id(o);x=b+4|0;c[x>>2]=0;c[b>>2]=0;c[y>>2]=0;do if(z>>>0<=4294967168){if(z>>>0>=4294967168){c[(oa()|0)>>2]=12;break}v=z|8;p=hd(v+76|0)|0;if(p){s=p+-8|0;do if(p&63){t=p+63&-64;q=t+-8|0;u=s;H=(q-u|0)>>>0>15;r=H?-4:60;q=H?q:t+56|0;u=q-u|0;p=p+-4|0;H=c[p>>2]|0;o=(H&-8)-u|0;if(!(H&3)){c[q>>2]=(c[s>>2]|0)+u;c[t+r>>2]=o;break}else{H=t+r|0;c[H>>2]=o|c[H>>2]&1|2;G=t+(r+o)|0;c[G>>2]=c[G>>2]|1;c[p>>2]=u|c[p>>2]&1|2;c[H>>2]=c[H>>2]|1;jd(s,u);break}}else q=s;while(0);o=q+4|0;p=c[o>>2]|0;if((p&3|0)!=0?(w=p&-8,w>>>0>(v+16|0)>>>0):0){H=w-v|0;c[o>>2]=v|p&1|2;c[q+(z|12)>>2]=H|3;G=q+(w|4)|0;c[G>>2]=c[G>>2]|1;jd(q+v|0,H)}o=q+8|0;c[(oa()|0)>>2]=0;c[b>>2]=o;c[x>>2]=o;c[y>>2]=(o|0)!=0?z:0;if(!o)o=-1;else break a;return o|0}}while(0);c[(oa()|0)>>2]=12;c[b>>2]=0;c[x>>2]=0;c[y>>2]=0;f=-1;return f|0}else o=c[b+4>>2]|0;while(0);H=o+K|0;G=o+A|0;Lb(e,f,g,h,o,K);y=k<<5;x=G+(y<<2)|0;s=G+(k<<6<<2)|0;p=(y|0)==0;D=(i|0)==0&(j|0)==0;E=y&1073741792;F=(E|0)==0;h=B+-64|0;B=G+h|0;h=x+h|0;g=h+4|0;A=B+4|0;b=0;do{z=_(b<<7,k)|0;if(!p){q=0;do{w=q<<2;c[G+(q<<2)>>2]=(d[o+((w|1)+z)>>0]|0)<<8|(d[o+(w+z)>>0]|0)|(d[o+((w|2)+z)>>0]|0)<<16|(d[o+((w|3)+z)>>0]|0)<<24;q=q+1|0}while((q|0)!=(y|0))}b:do if(!D){if(F){r=0;q=0;do{Xb(G,x,s,k);Xb(x,G,s,k);r=nd(r|0,q|0,2,0)|0;q=C}while(q>>>0<j>>>0|(q|0)==(j|0)&r>>>0<i>>>0)}else{w=0;v=0;do{u=yd(w|0,v|0,y|0,0)|0;t=0;do{c[H+(t+u<<2)>>2]=c[G+(t<<2)>>2];t=t+1|0}while((t|0)!=(E|0));Xb(G,x,s,k);u=yd(w|1|0,v|0,y|0,0)|0;t=0;do{c[H+(t+u<<2)>>2]=c[G+(t+y<<2)>>2];t=t+1|0}while((t|0)!=(E|0));Xb(x,G,s,k);w=nd(w|0,v|0,2,0)|0;v=C}while(v>>>0<j>>>0|(v|0)==(j|0)&w>>>0<i>>>0)}if(F){r=0;q=0;while(1){Xb(G,x,s,k);Xb(x,G,s,k);r=nd(r|0,q|0,2,0)|0;q=C;if(!(q>>>0<j>>>0|(q|0)==(j|0)&r>>>0<i>>>0))break b}}else{w=0;v=0}do{u=yd(c[B>>2]&I|0,c[A>>2]&J|0,y|0,0)|0;t=0;do{r=G+(t<<2)|0;c[r>>2]=c[r>>2]^c[H+(t+u<<2)>>2];t=t+1|0}while((t|0)!=(E|0));Xb(G,x,s,k);u=yd(c[h>>2]&I|0,c[g>>2]&J|0,y|0,0)|0;t=0;do{r=G+(t+y<<2)|0;c[r>>2]=c[r>>2]^c[H+(t+u<<2)>>2];t=t+1|0}while((t|0)!=(E|0));Xb(x,G,s,k);w=nd(w|0,v|0,2,0)|0;v=C}while(v>>>0<j>>>0|(v|0)==(j|0)&w>>>0<i>>>0)}while(0);if(!p){q=0;do{w=q<<2;v=c[G+(q<<2)>>2]|0;a[o+(w+z)>>0]=v;a[o+((w|1)+z)>>0]=v>>>8;a[o+((w|2)+z)>>0]=v>>>16;a[o+((w|3)+z)>>0]=v>>>24;q=q+1|0}while((q|0)!=(y|0))}b=b+1|0}while((b|0)!=(l|0));Lb(e,f,o,K,m,n);f=0;return f|0}c[(oa()|0)>>2]=12;f=-1;return f|0}function Xb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;w=e<<1;m=e<<5;o=c[a+(m+-16<<2)>>2]|0;c[d>>2]=o;q=c[a+(m+-15<<2)>>2]|0;L=d+4|0;c[L>>2]=q;t=c[a+(m+-14<<2)>>2]|0;x=d+8|0;c[x>>2]=t;u=c[a+(m+-13<<2)>>2]|0;y=d+12|0;c[y>>2]=u;s=c[a+(m+-12<<2)>>2]|0;z=d+16|0;c[z>>2]=s;r=c[a+(m+-11<<2)>>2]|0;A=d+20|0;c[A>>2]=r;p=c[a+(m+-10<<2)>>2]|0;B=d+24|0;c[B>>2]=p;n=c[a+(m+-9<<2)>>2]|0;C=d+28|0;c[C>>2]=n;l=c[a+(m+-8<<2)>>2]|0;D=d+32|0;c[D>>2]=l;j=c[a+(m+-7<<2)>>2]|0;E=d+36|0;c[E>>2]=j;h=c[a+(m+-6<<2)>>2]|0;F=d+40|0;c[F>>2]=h;f=c[a+(m+-5<<2)>>2]|0;G=d+44|0;c[G>>2]=f;g=c[a+(m+-4<<2)>>2]|0;H=d+48|0;c[H>>2]=g;i=c[a+(m+-3<<2)>>2]|0;I=d+52|0;c[I>>2]=i;k=c[a+(m+-2<<2)>>2]|0;J=d+56|0;c[J>>2]=k;m=c[a+(m+-1<<2)>>2]|0;K=d+60|0;c[K>>2]=m;if(!w)return;v=e<<4;e=0;while(1){M=e<<4;c[d>>2]=o^c[a+(M<<2)>>2];c[L>>2]=q^c[a+((M|1)<<2)>>2];c[x>>2]=t^c[a+((M|2)<<2)>>2];c[y>>2]=u^c[a+((M|3)<<2)>>2];c[z>>2]=s^c[a+((M|4)<<2)>>2];c[A>>2]=r^c[a+((M|5)<<2)>>2];c[B>>2]=p^c[a+((M|6)<<2)>>2];c[C>>2]=n^c[a+((M|7)<<2)>>2];c[D>>2]=l^c[a+((M|8)<<2)>>2];c[E>>2]=j^c[a+((M|9)<<2)>>2];c[F>>2]=h^c[a+((M|10)<<2)>>2];c[G>>2]=f^c[a+((M|11)<<2)>>2];c[H>>2]=g^c[a+((M|12)<<2)>>2];c[I>>2]=i^c[a+((M|13)<<2)>>2];c[J>>2]=k^c[a+((M|14)<<2)>>2];c[K>>2]=m^c[a+((M|15)<<2)>>2];Yb(d);u=e<<3;c[b+(u<<2)>>2]=c[d>>2];c[b+((u|1)<<2)>>2]=c[L>>2];c[b+((u|2)<<2)>>2]=c[x>>2];c[b+((u|3)<<2)>>2]=c[y>>2];c[b+((u|4)<<2)>>2]=c[z>>2];c[b+((u|5)<<2)>>2]=c[A>>2];c[b+((u|6)<<2)>>2]=c[B>>2];c[b+((u|7)<<2)>>2]=c[C>>2];c[b+((u|8)<<2)>>2]=c[D>>2];c[b+((u|9)<<2)>>2]=c[E>>2];c[b+((u|10)<<2)>>2]=c[F>>2];c[b+((u|11)<<2)>>2]=c[G>>2];c[b+((u|12)<<2)>>2]=c[H>>2];c[b+((u|13)<<2)>>2]=c[I>>2];c[b+((u|14)<<2)>>2]=c[J>>2];c[b+((u|15)<<2)>>2]=c[K>>2];c[d>>2]=c[d>>2]^c[a+((M|16)<<2)>>2];c[L>>2]=c[L>>2]^c[a+((M|17)<<2)>>2];c[x>>2]=c[x>>2]^c[a+((M|18)<<2)>>2];c[y>>2]=c[y>>2]^c[a+((M|19)<<2)>>2];c[z>>2]=c[z>>2]^c[a+((M|20)<<2)>>2];c[A>>2]=c[A>>2]^c[a+((M|21)<<2)>>2];c[B>>2]=c[B>>2]^c[a+((M|22)<<2)>>2];c[C>>2]=c[C>>2]^c[a+((M|23)<<2)>>2];c[D>>2]=c[D>>2]^c[a+((M|24)<<2)>>2];c[E>>2]=c[E>>2]^c[a+((M|25)<<2)>>2];c[F>>2]=c[F>>2]^c[a+((M|26)<<2)>>2];c[G>>2]=c[G>>2]^c[a+((M|27)<<2)>>2];c[H>>2]=c[H>>2]^c[a+((M|28)<<2)>>2];c[I>>2]=c[I>>2]^c[a+((M|29)<<2)>>2];c[J>>2]=c[J>>2]^c[a+((M|30)<<2)>>2];c[K>>2]=c[K>>2]^c[a+((M|31)<<2)>>2];Yb(d);u=u+v|0;c[b+(u<<2)>>2]=c[d>>2];c[b+((u|1)<<2)>>2]=c[L>>2];c[b+((u|2)<<2)>>2]=c[x>>2];c[b+((u|3)<<2)>>2]=c[y>>2];c[b+((u|4)<<2)>>2]=c[z>>2];c[b+((u|5)<<2)>>2]=c[A>>2];c[b+((u|6)<<2)>>2]=c[B>>2];c[b+((u|7)<<2)>>2]=c[C>>2];c[b+((u|8)<<2)>>2]=c[D>>2];c[b+((u|9)<<2)>>2]=c[E>>2];c[b+((u|10)<<2)>>2]=c[F>>2];c[b+((u|11)<<2)>>2]=c[G>>2];c[b+((u|12)<<2)>>2]=c[H>>2];c[b+((u|13)<<2)>>2]=c[I>>2];c[b+((u|14)<<2)>>2]=c[J>>2];c[b+((u|15)<<2)>>2]=c[K>>2];e=e+2|0;if(e>>>0>=w>>>0)break;f=c[G>>2]|0;g=c[H>>2]|0;i=c[I>>2]|0;k=c[J>>2]|0;m=c[K>>2]|0;o=c[d>>2]|0;q=c[L>>2]|0;t=c[x>>2]|0;u=c[y>>2]|0;s=c[z>>2]|0;r=c[A>>2]|0;p=c[B>>2]|0;n=c[C>>2]|0;l=c[D>>2]|0;j=c[E>>2]|0;h=c[F>>2]|0}return}function Yb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;b=a+4|0;z=a+8|0;A=a+12|0;B=a+16|0;F=a+20|0;f=a+24|0;k=a+28|0;n=a+32|0;s=a+36|0;t=a+40|0;u=a+44|0;v=a+48|0;w=a+52|0;x=a+56|0;y=a+60|0;d=c[b>>2]|0;e=c[F>>2]|0;g=c[s>>2]|0;h=c[w>>2]|0;i=c[f>>2]|0;j=c[t>>2]|0;l=c[x>>2]|0;m=c[z>>2]|0;o=c[u>>2]|0;p=c[y>>2]|0;q=c[A>>2]|0;r=c[k>>2]|0;C=c[v>>2]|0;D=c[a>>2]|0;E=c[B>>2]|0;G=c[n>>2]|0;H=0;do{R=C+D|0;R=(R<<7|R>>>25)^E;O=R+D|0;O=(O<<9|O>>>23)^G;L=O+R|0;L=(L<<13|L>>>19)^C;U=L+O|0;U=(U<<18|U>>>14)^D;N=d+e|0;N=(N<<7|N>>>25)^g;K=N+e|0;K=(K<<9|K>>>23)^h;X=K+N|0;X=(X<<13|X>>>19)^d;Q=X+K|0;Q=(Q<<18|Q>>>14)^e;J=i+j|0;J=(J<<7|J>>>25)^l;W=J+j|0;W=(W<<9|W>>>23)^m;T=W+J|0;T=(T<<13|T>>>19)^i;M=T+W|0;M=(M<<18|M>>>14)^j;V=o+p|0;V=(V<<7|V>>>25)^q;S=V+p|0;S=(S<<9|S>>>23)^r;P=S+V|0;P=(P<<13|P>>>19)^o;I=P+S|0;I=(I<<18|I>>>14)^p;Y=V+U|0;d=(Y<<7|Y>>>25)^X;X=d+U|0;m=(X<<9|X>>>23)^W;W=m+d|0;q=(W<<13|W>>>19)^V;V=q+m|0;D=(V<<18|V>>>14)^U;U=R+Q|0;i=(U<<7|U>>>25)^T;T=i+Q|0;r=(T<<9|T>>>23)^S;S=r+i|0;E=(S<<13|S>>>19)^R;R=E+r|0;e=(R<<18|R>>>14)^Q;Q=N+M|0;o=(Q<<7|Q>>>25)^P;P=o+M|0;G=(P<<9|P>>>23)^O;O=G+o|0;g=(O<<13|O>>>19)^N;N=g+G|0;j=(N<<18|N>>>14)^M;M=J+I|0;C=(M<<7|M>>>25)^L;L=C+I|0;h=(L<<9|L>>>23)^K;K=h+C|0;l=(K<<13|K>>>19)^J;J=l+h|0;p=(J<<18|J>>>14)^I;H=H+2|0}while(H>>>0<8);c[a>>2]=(c[a>>2]|0)+D;c[b>>2]=(c[b>>2]|0)+d;c[z>>2]=(c[z>>2]|0)+m;c[A>>2]=(c[A>>2]|0)+q;c[B>>2]=(c[B>>2]|0)+E;c[F>>2]=(c[F>>2]|0)+e;c[f>>2]=(c[f>>2]|0)+i;c[k>>2]=(c[k>>2]|0)+r;c[n>>2]=(c[n>>2]|0)+G;c[s>>2]=(c[s>>2]|0)+g;c[t>>2]=(c[t>>2]|0)+j;c[u>>2]=(c[u>>2]|0)+o;c[v>>2]=(c[v>>2]|0)+C;c[w>>2]=(c[w>>2]|0)+h;c[x>>2]=(c[x>>2]|0)+l;c[y>>2]=(c[y>>2]|0)+p;return}function Zb(){return 32}function _b(){return 32}function $b(a,b){a=a|0;b=b|0;ed(a,b,33088);return 0}function ac(a,b,c){a=a|0;b=b|0;c=c|0;ed(a,b,c);return 0}function bc(){return 32}function cc(){return 24}function dc(){return 16}function ec(b,c,d,e,f,g,h){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=i;q=i=i+63&-64;i=i+240|0;p=q;o=q+176|0;q=q+144|0;hb(q,g,h,536);h=b;j=d;if(b>>>0>=d>>>0?0<f>>>0|0==(f|0)&(h-j|0)>>>0<e>>>0:0)k=5;else if(d>>>0>=b>>>0?0<f>>>0|0==(f|0)&(j-h|0)>>>0<e>>>0:0)k=5;if((k|0)==5){td(b|0,d|0,e|0)|0;d=b}j=o+0|0;h=j+32|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(h|0));l=f>>>0>0|(f|0)==0&e>>>0>32;m=l?32:e;n=l?0:f;j=o+32|0;if(!((m|0)==0&(n|0)==0)){k=nd(e|0,f|0,-1,0)|0;sd(j|0,d|0,(f>>>0<0|(f|0)==0&e>>>0<32?k+1|0:32)|0)|0}h=nd(m|0,n|0,32,0)|0;k=g+16|0;fd(o,o,h,C,k,0,0,q);Eb(p,o);sd(b|0,j|0,m|0)|0;j=o+0|0;h=j+64|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(h|0));if(!l){Fb(p,b,e,f);Gb(p,c);i=r;return 0}o=md(e|0,f|0,m|0,n|0)|0;fd(b+m|0,d+m|0,o,C,k,1,0,q);Fb(p,b,e,f);Gb(p,c);i=r;return 0}function fc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0>0|(d|0)==0&c>>>0>4294967279){e=-1;return e|0}ec(a+16|0,a,b,c,d,e,f)|0;e=0;return e|0}function gc(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=i;s=i=i+63&-64;i=i+288|0;n=s+16|0;o=s;l=s+256|0;r=s+192|0;s=s+160|0;hb(s,j,k,536);q=j+16|0;k=l+0|0;j=s+0|0;m=k+32|0;do{a[k>>0]=a[j>>0]|0;k=k+1|0;j=j+1|0}while((k|0)<(m|0));k=q;m=k;k=k+4|0;k=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;j=o;c[j>>2]=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;c[j+4>>2]=k;j=o+8|0;k=j;c[k>>2]=0;c[k+4>>2]=0;ib(n,o,l,33120);k=0;do{a[r+k>>0]=a[n+k>>0]|0;k=k+1|0}while((k|0)!=32);Eb(n,r);Fb(n,e,g,h);Gb(n,o);m=c[o>>2]|0;k=c[o+4>>2]|0;n=c[j>>2]|0;o=c[o+12>>2]|0;if(!((((m&65535)>>>8&255^a[f+1>>0]|m&255^a[f>>0]|m>>>16&255^a[f+2>>0]|m>>>24&255^a[f+3>>0]|k&255^a[f+4>>0]|(k&65535)>>>8&255^a[f+5>>0]|k>>>16&255^a[f+6>>0]|k>>>24&255^a[f+7>>0]|n&255^a[f+8>>0]|(n&65535)>>>8&255^a[f+9>>0]|n>>>16&255^a[f+10>>0]|n>>>24&255^a[f+11>>0]|o&255^a[f+12>>0]|(o&65535)>>>8&255^a[f+13>>0]|o>>>16&255^a[f+14>>0]|o>>>24&255^a[f+15>>0])&255)+511&256)){k=s+0|0;m=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(m|0));s=-1;i=t;return s|0}l=e;m=b;if(e>>>0>=b>>>0?0<h>>>0|0==(h|0)&(l-m|0)>>>0<g>>>0:0)p=9;else if(b>>>0>=e>>>0?0<h>>>0|0==(h|0)&(m-l|0)>>>0<g>>>0:0)p=9;if((p|0)==9){td(b|0,e|0,g|0)|0;e=b}m=h>>>0>0|(h|0)==0&g>>>0>32;l=m?32:g;j=m?0:h;k=r+32|0;sd(k|0,e|0,l|0)|0;p=nd(l|0,j|0,32,0)|0;fd(r,r,p,C,q,0,0,s);if(!((l|0)==0&(j|0)==0)){r=nd(g|0,h|0,-1,0)|0;sd(b|0,k|0,(h>>>0<0|(h|0)==0&g>>>0<32?r+1|0:32)|0)|0}if(m){r=md(g|0,h|0,l|0,j|0)|0;fd(b+l|0,e+l|0,r,C,q,1,0,s)}k=s+0|0;m=k+32|0;do{a[k>>0]=0;k=k+1|0}while((k|0)<(m|0));s=0;i=t;return s|0}function hc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0<0|(d|0)==0&c>>>0<16){e=-1;return e|0}d=nd(c|0,d|0,-16,-1)|0;e=gc(a,b+16|0,b,d,C,e,f)|0;return e|0}function ic(){return 8}function jc(){return 16}function kc(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=d[g>>0]|0;o=qd(d[g+1>>0]|0|0,0,8)|0;n=C;j=qd(d[g+2>>0]|0|0,0,16)|0;n=n|C;k=qd(d[g+3>>0]|0|0,0,24)|0;n=n|C|(d[g+4>>0]|0);r=qd(d[g+5>>0]|0|0,0,40)|0;n=n|C;i=qd(d[g+6>>0]|0|0,0,48)|0;n=n|C;l=qd(d[g+7>>0]|0|0,0,56)|0;l=o|h|j|k|r|i|l;n=n|C;i=d[g+8>>0]|0;r=qd(d[g+9>>0]|0|0,0,8)|0;k=C;j=qd(d[g+10>>0]|0|0,0,16)|0;k=k|C;h=qd(d[g+11>>0]|0|0,0,24)|0;k=k|C|(d[g+12>>0]|0);o=qd(d[g+13>>0]|0|0,0,40)|0;k=k|C;p=qd(d[g+14>>0]|0|0,0,48)|0;k=k|C;m=qd(d[g+15>>0]|0|0,0,56)|0;m=r|i|j|h|o|p|m;k=k|C;p=e&7;o=c+(e-p)|0;e=qd(e|0,f|0,56)|0;f=C;h=m^2037671283;j=k^1952801890;i=l^1852142177;g=n^1819895653;m=m^1852075885;k=k^1685025377;l=l^1886610805;n=n^1936682341;if((o|0)!=(c|0)){do{x=d[c>>0]|0;y=qd(d[c+1>>0]|0|0,0,8)|0;r=C;w=qd(d[c+2>>0]|0|0,0,16)|0;r=r|C;t=qd(d[c+3>>0]|0|0,0,24)|0;r=r|C|(d[c+4>>0]|0);u=qd(d[c+5>>0]|0|0,0,40)|0;r=r|C;v=qd(d[c+6>>0]|0|0,0,48)|0;r=r|C;s=qd(d[c+7>>0]|0|0,0,56)|0;s=y|x|w|t|u|v|s;r=r|C;v=s^h;u=r^j;n=nd(l|0,n|0,m|0,k|0)|0;l=C;t=qd(m|0,k|0,13)|0;h=C;m=pd(m|0,k|0,51)|0;m=(t|m)^n;h=(h|C)^l;g=nd(v|0,u|0,i|0,g|0)|0;i=C;t=qd(v|0,u|0,16)|0;j=C;u=pd(v|0,u|0,48)|0;u=(t|u)^g;j=(j|C)^i;n=nd(u|0,j|0,l|0,n|0)|0;l=C;t=qd(u|0,j|0,21)|0;k=C;j=pd(u|0,j|0,43)|0;j=(t|j)^n;k=(k|C)^l;i=nd(g|0,i|0,m|0,h|0)|0;g=C;t=qd(m|0,h|0,17)|0;u=C;h=pd(m|0,h|0,47)|0;h=i^(t|h);u=g^(u|C);l=nd(n|0,l|0,h|0,u|0)|0;n=C;t=qd(h|0,u|0,13)|0;m=C;u=pd(h|0,u|0,51)|0;u=(t|u)^l;m=(m|C)^n;i=nd(j|0,k|0,g|0,i|0)|0;g=C;t=qd(j|0,k|0,16)|0;h=C;k=pd(j|0,k|0,48)|0;k=(t|k)^i;h=(h|C)^g;l=nd(k|0,h|0,n|0,l|0)|0;n=C;t=qd(k|0,h|0,21)|0;j=C;h=pd(k|0,h|0,43)|0;h=(t|h)^l;j=(j|C)^n;g=nd(i|0,g|0,u|0,m|0)|0;i=C;t=qd(u|0,m|0,17)|0;k=C;m=pd(u|0,m|0,47)|0;m=(t|m)^g;k=(k|C)^i;l=l^s;n=n^r;c=c+8|0}while((c|0)!=(o|0));c=o}switch(p|0){case 7:{e=qd(d[c+6>>0]|0|0,0,48)|0|e;f=C|f;q=5;break}case 6:{q=5;break}case 5:{q=6;break}case 4:{q=7;break}case 3:{q=8;break}case 2:{q=9;break}case 1:{q=10;break}default:{}}if((q|0)==5){y=qd(d[c+5>>0]|0|0,0,40)|0;f=C|f;e=y|e;q=6}if((q|0)==6){f=d[c+4>>0]|0|f;q=7}if((q|0)==7){y=qd(d[c+3>>0]|0|0,0,24)|0;e=y|e;f=C|f;q=8}if((q|0)==8){y=qd(d[c+2>>0]|0|0,0,16)|0;e=y|e;f=C|f;q=9}if((q|0)==9){y=qd(d[c+1>>0]|0|0,0,8)|0;e=y|e;f=C|f;q=10}if((q|0)==10)e=d[c>>0]|0|e;y=e^h;r=f^j;s=nd(l|0,n|0,m|0,k|0)|0;q=C;w=qd(m|0,k|0,13)|0;t=C;x=pd(m|0,k|0,51)|0;x=(w|x)^s;t=(t|C)^q;w=nd(y|0,r|0,i|0,g|0)|0;v=C;u=qd(y|0,r|0,16)|0;p=C;r=pd(y|0,r|0,48)|0;r=(u|r)^w;p=(p|C)^v;s=nd(r|0,p|0,q|0,s|0)|0;q=C;u=qd(r|0,p|0,21)|0;y=C;p=pd(r|0,p|0,43)|0;p=(u|p)^s;y=(y|C)^q;v=nd(w|0,v|0,x|0,t|0)|0;w=C;u=qd(x|0,t|0,17)|0;r=C;t=pd(x|0,t|0,47)|0;t=v^(u|t);r=w^(r|C);q=nd(s|0,q|0,t|0,r|0)|0;s=C;u=qd(t|0,r|0,13)|0;x=C;r=pd(t|0,r|0,51)|0;r=(u|r)^q;x=(x|C)^s;v=nd(p|0,y|0,w|0,v|0)|0;w=C;u=qd(p|0,y|0,16)|0;t=C;y=pd(p|0,y|0,48)|0;y=(u|y)^v;t=(t|C)^w;q=nd(y|0,t|0,s|0,q|0)|0;s=C;u=qd(y|0,t|0,21)|0;p=C;t=pd(y|0,t|0,43)|0;t=(u|t)^q;p=(p|C)^s;w=nd(v|0,w|0,r|0,x|0)|0;v=C;u=qd(r|0,x|0,17)|0;y=C;x=pd(r|0,x|0,47)|0;x=(u|x)^w;y=(y|C)^v;s=nd(q^e|0,s^f|0,x|0,y|0)|0;q=C;u=qd(x|0,y|0,13)|0;r=C;y=pd(x|0,y|0,51)|0;y=s^(u|y);r=q^(r|C);w=nd(t|0,p|0,v^255|0,w|0)|0;v=C;u=qd(t|0,p|0,16)|0;x=C;p=pd(t|0,p|0,48)|0;p=(u|p)^w;x=(x|C)^v;s=nd(p|0,x|0,q|0,s|0)|0;q=C;u=qd(p|0,x|0,21)|0;t=C;x=pd(p|0,x|0,43)|0;x=(u|x)^s;t=(t|C)^q;v=nd(w|0,v|0,y|0,r|0)|0;w=C;u=qd(y|0,r|0,17)|0;p=C;r=pd(y|0,r|0,47)|0;r=(u|r)^v;p=(p|C)^w;q=nd(s|0,q|0,r|0,p|0)|0;s=C;u=qd(r|0,p|0,13)|0;y=C;p=pd(r|0,p|0,51)|0;p=(u|p)^q;y=(y|C)^s;v=nd(x|0,t|0,w|0,v|0)|0;w=C;u=qd(x|0,t|0,16)|0;r=C;t=pd(x|0,t|0,48)|0;t=(u|t)^v;r=(r|C)^w;q=nd(t|0,r|0,s|0,q|0)|0;s=C;u=qd(t|0,r|0,21)|0;x=C;r=pd(t|0,r|0,43)|0;r=(u|r)^q;x=(x|C)^s;w=nd(v|0,w|0,p|0,y|0)|0;v=C;u=qd(p|0,y|0,17)|0;t=C;y=pd(p|0,y|0,47)|0;y=(u|y)^w;t=(t|C)^v;s=nd(q|0,s|0,y|0,t|0)|0;q=C;u=qd(y|0,t|0,13)|0;p=C;t=pd(y|0,t|0,51)|0;t=(u|t)^s;p=(p|C)^q;w=nd(r|0,x|0,v|0,w|0)|0;v=C;u=qd(r|0,x|0,16)|0;y=C;x=pd(r|0,x|0,48)|0;x=(u|x)^w;y=(y|C)^v;s=nd(x|0,y|0,q|0,s|0)|0;q=C;u=qd(x|0,y|0,21)|0;r=C;y=pd(x|0,y|0,43)|0;y=(u|y)^s;r=(r|C)^q;v=nd(w|0,v|0,t|0,p|0)|0;w=C;u=qd(t|0,p|0,17)|0;x=C;p=pd(t|0,p|0,47)|0;p=(u|p)^v;x=(x|C)^w;q=nd(s|0,q|0,p|0,x|0)|0;s=C;u=qd(p|0,x|0,13)|0;t=C;x=pd(p|0,x|0,51)|0;q=(u|x)^q;s=(t|C)^s;v=nd(y|0,r|0,w|0,v|0)|0;w=C;t=qd(y|0,r|0,16)|0;x=C;r=pd(y|0,r|0,48)|0;r=(t|r)^v;x=(x|C)^w;t=qd(r|0,x|0,21)|0;y=C;x=pd(r|0,x|0,43)|0;y=y|C;w=nd(v|0,w|0,q|0,s|0)|0;v=C;r=qd(q|0,s|0,17)|0;u=C;s=pd(q|0,s|0,47)|0;x=(r|s)^w^v^(t|x);y=(u|C)^v^w^y;a[b>>0]=x;a[b+1>>0]=x>>>8;a[b+2>>0]=x>>>16;a[b+3>>0]=x>>>24;a[b+4>>0]=y;w=pd(x|0,y|0,40)|0;a[b+5>>0]=w;w=pd(x|0,y|0,48)|0;a[b+6>>0]=w;y=pd(x|0,y|0,56)|0;a[b+7>>0]=y;return 0}function lc(){return 64}function mc(){return 32}function nc(){return 32}function oc(){return 64}function pc(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=i;g=i=i+63&-64;i=i+496|0;j=g;h=g+448|0;k=g+408|0;l=g+368|0;g=g+208|0;m=j;c[m>>2]=-205731576;c[m+4>>2]=1779033703;m=j+8|0;c[m>>2]=-2067093701;c[m+4>>2]=-1150833019;m=j+16|0;c[m>>2]=-23791573;c[m+4>>2]=1013904242;m=j+24|0;c[m>>2]=1595750129;c[m+4>>2]=-1521486534;m=j+32|0;c[m>>2]=-1377402159;c[m+4>>2]=1359893119;m=j+40|0;c[m>>2]=725511199;c[m+4>>2]=-1694144372;m=j+48|0;c[m>>2]=-79577749;c[m+4>>2]=528734635;m=j+56|0;c[m>>2]=327033209;c[m+4>>2]=1541459225;m=j+72|0;c[m>>2]=256;c[m+4>>2]=0;m=j+64|0;c[m>>2]=0;c[m+4>>2]=0;m=j+80|0;o=f+0|0;p=m+32|0;do{a[m>>0]=a[o>>0]|0;m=m+1|0;o=o+1|0}while((m|0)<(p|0));Bb(j,e);a[e>>0]=(d[e>>0]|0)&248;p=e+31|0;a[p>>0]=(d[p>>0]|0)&63|64;Ec(g,e);vc(h,g+80|0);wc(k,g,h);wc(l,g+40|0,h);yc(b,l);yc(j,k);p=b+31|0;a[p>>0]=(d[p>>0]|0)^(d[j>>0]|0)<<7;td(e|0,f|0,32)|0;td(e+32|0,b|0,32)|0;i=n;return 0}function qc(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=i;m=i=i+63&-64;i=i+528|0;l=m;k=m+448|0;n=m+408|0;o=m+368|0;j=m+208|0;m=m+488|0;f=0;do{a[m+f>>0]=pa(0)|0;f=f+1|0}while((f|0)!=32);f=l;c[f>>2]=-205731576;c[f+4>>2]=1779033703;f=l+8|0;c[f>>2]=-2067093701;c[f+4>>2]=-1150833019;f=l+16|0;c[f>>2]=-23791573;c[f+4>>2]=1013904242;f=l+24|0;c[f>>2]=1595750129;c[f+4>>2]=-1521486534;f=l+32|0;c[f>>2]=-1377402159;c[f+4>>2]=1359893119;f=l+40|0;c[f>>2]=725511199;c[f+4>>2]=-1694144372;f=l+48|0;c[f>>2]=-79577749;c[f+4>>2]=528734635;f=l+56|0;c[f>>2]=327033209;c[f+4>>2]=1541459225;f=l+72|0;c[f>>2]=256;c[f+4>>2]=0;f=l+64|0;c[f>>2]=0;c[f+4>>2]=0;f=l+80|0;g=m+0|0;h=f+32|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));Bb(l,e);a[e>>0]=(d[e>>0]|0)&248;f=e+31|0;a[f>>0]=(d[f>>0]|0)&63|64;Ec(j,e);vc(k,j+80|0);wc(n,j,k);wc(o,j+40|0,k);yc(b,o);yc(l,n);f=b+31|0;a[f>>0]=(d[f>>0]|0)^(d[l>>0]|0)<<7;f=e+0|0;g=m+0|0;h=f+32|0;do{a[f>>0]=a[g>>0]|0;f=f+1|0;g=g+1|0}while((f|0)<(h|0));td(e+32|0,b|0,32)|0;i=p;return 0}function rc(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=i=i+63&-64;i=i+16|0;k=a+64|0;td(k|0,d|0,e|0)|0;Kc(a,j,k,e,f,g);g=j;d=(b|0)!=0;if((c[g>>2]|0)==64&(c[g+4>>2]|0)==0){if(!d){k=0;i=h;return k|0}j=nd(e|0,f|0,64,0)|0;k=b;c[k>>2]=j;c[k+4>>2]=C;k=0;i=h;return k|0}else{if(d){k=b;c[k>>2]=0;c[k+4>>2]=0}k=nd(e|0,f|0,64,0)|0;od(a|0,0,k|0)|0;k=-1;i=h;return k|0}return 0}function sc(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;f=nd(e|0,f|0,-64,-1)|0;e=C;do if(!(e>>>0>0|(e|0)==0&f>>>0>4294967231)){h=d+64|0;if(Ic(d,h,f,e,g)|0){od(a|0,0,f|0)|0;break}if(b){d=b;c[d>>2]=f;c[d+4>>2]=e}td(a|0,h|0,f|0)|0;d=0;return d|0}while(0);if(!b){d=-1;return d|0}d=b;c[d>>2]=0;c[d+4>>2]=0;d=-1;return d|0}function tc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Kc(a,b,c,d,e,f);return 0}function uc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ic(a,b,c,d,e)|0}function vc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=i;c=i=i+63&-64;i=i+160|0;d=c+120|0;e=c+80|0;f=c+40|0;xc(d,b);xc(e,d);xc(e,e);wc(e,b,e);wc(d,d,e);xc(f,d);wc(e,e,f);xc(f,e);xc(f,f);xc(f,f);xc(f,f);xc(f,f);wc(e,f,e);xc(f,e);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);wc(f,f,e);xc(c,f);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);xc(c,c);wc(f,c,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);xc(f,f);wc(e,f,e);xc(f,e);b=1;do{xc(f,f);b=b+1|0}while((b|0)!=50);wc(f,f,e);xc(c,f);b=1;do{xc(c,c);b=b+1|0}while((b|0)!=100);wc(f,c,f);xc(f,f);b=1;do{xc(f,f);b=b+1|0}while((b|0)!=50);wc(e,f,e);xc(e,e);xc(e,e);xc(e,e);xc(e,e);xc(e,e);wc(a,e,d);i=g;return}function wc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0;l=c[b>>2]|0;s=c[b+4>>2]|0;j=c[b+8>>2]|0;Rb=c[b+12>>2]|0;e=c[b+16>>2]|0;za=c[b+20>>2]|0;ya=c[b+24>>2]|0;zb=c[b+28>>2]|0;h=c[b+32>>2]|0;ga=c[b+36>>2]|0;H=c[d>>2]|0;J=c[d+4>>2]|0;F=c[d+8>>2]|0;D=c[d+12>>2]|0;A=c[d+16>>2]|0;y=c[d+20>>2]|0;w=c[d+24>>2]|0;u=c[d+28>>2]|0;k=c[d+32>>2]|0;t=c[d+36>>2]|0;Oc=J*19|0;bc=F*19|0;rb=D*19|0;Ha=A*19|0;jc=y*19|0;Db=w*19|0;Ta=u*19|0;Sc=k*19|0;Qc=t*19|0;p=s<<1;f=Rb<<1;M=za<<1;i=zb<<1;d=ga<<1;o=((l|0)<0)<<31>>31;I=((H|0)<0)<<31>>31;Mc=yd(H|0,I|0,l|0,o|0)|0;Lc=C;K=((J|0)<0)<<31>>31;wc=yd(J|0,K|0,l|0,o|0)|0;vc=C;G=((F|0)<0)<<31>>31;ub=yd(F|0,G|0,l|0,o|0)|0;tb=C;E=((D|0)<0)<<31>>31;Ka=yd(D|0,E|0,l|0,o|0)|0;Ja=C;B=((A|0)<0)<<31>>31;mc=yd(A|0,B|0,l|0,o|0)|0;lc=C;z=((y|0)<0)<<31>>31;Gb=yd(y|0,z|0,l|0,o|0)|0;Fb=C;x=((w|0)<0)<<31>>31;Wa=yd(w|0,x|0,l|0,o|0)|0;Va=C;v=((u|0)<0)<<31>>31;ja=yd(u|0,v|0,l|0,o|0)|0;ia=C;Pc=((k|0)<0)<<31>>31;P=yd(k|0,Pc|0,l|0,o|0)|0;O=C;o=yd(t|0,((t|0)<0)<<31>>31|0,l|0,o|0)|0;l=C;t=((s|0)<0)<<31>>31;dc=yd(H|0,I|0,s|0,t|0)|0;ec=C;n=((p|0)<0)<<31>>31;yb=yd(J|0,K|0,p|0,n|0)|0;xb=C;Ma=yd(F|0,G|0,s|0,t|0)|0;La=C;oc=yd(D|0,E|0,p|0,n|0)|0;nc=C;Ib=yd(A|0,B|0,s|0,t|0)|0;Hb=C;Ya=yd(y|0,z|0,p|0,n|0)|0;Xa=C;la=yd(w|0,x|0,s|0,t|0)|0;ka=C;R=yd(u|0,v|0,p|0,n|0)|0;Q=C;t=yd(k|0,Pc|0,s|0,t|0)|0;s=C;Pc=((Qc|0)<0)<<31>>31;n=yd(Qc|0,Pc|0,p|0,n|0)|0;p=C;k=((j|0)<0)<<31>>31;wb=yd(H|0,I|0,j|0,k|0)|0;vb=C;Qa=yd(J|0,K|0,j|0,k|0)|0;Pa=C;qc=yd(F|0,G|0,j|0,k|0)|0;pc=C;Kb=yd(D|0,E|0,j|0,k|0)|0;Jb=C;_a=yd(A|0,B|0,j|0,k|0)|0;Za=C;na=yd(y|0,z|0,j|0,k|0)|0;ma=C;T=yd(w|0,x|0,j|0,k|0)|0;S=C;v=yd(u|0,v|0,j|0,k|0)|0;u=C;Rc=((Sc|0)<0)<<31>>31;yc=yd(Sc|0,Rc|0,j|0,k|0)|0;xc=C;k=yd(Qc|0,Pc|0,j|0,k|0)|0;j=C;Sb=((Rb|0)<0)<<31>>31;Oa=yd(H|0,I|0,Rb|0,Sb|0)|0;Na=C;fa=((f|0)<0)<<31>>31;uc=yd(J|0,K|0,f|0,fa|0)|0;tc=C;Mb=yd(F|0,G|0,Rb|0,Sb|0)|0;Lb=C;ab=yd(D|0,E|0,f|0,fa|0)|0;$a=C;pa=yd(A|0,B|0,Rb|0,Sb|0)|0;oa=C;V=yd(y|0,z|0,f|0,fa|0)|0;U=C;x=yd(w|0,x|0,Rb|0,Sb|0)|0;w=C;Ua=((Ta|0)<0)<<31>>31;Ac=yd(Ta|0,Ua|0,f|0,fa|0)|0;zc=C;Sb=yd(Sc|0,Rc|0,Rb|0,Sb|0)|0;Rb=C;fa=yd(Qc|0,Pc|0,f|0,fa|0)|0;f=C;N=((e|0)<0)<<31>>31;sc=yd(H|0,I|0,e|0,N|0)|0;rc=C;Qb=yd(J|0,K|0,e|0,N|0)|0;Pb=C;cb=yd(F|0,G|0,e|0,N|0)|0;bb=C;ra=yd(D|0,E|0,e|0,N|0)|0;qa=C;X=yd(A|0,B|0,e|0,N|0)|0;W=C;z=yd(y|0,z|0,e|0,N|0)|0;y=C;Eb=((Db|0)<0)<<31>>31;Cc=yd(Db|0,Eb|0,e|0,N|0)|0;Bc=C;Ub=yd(Ta|0,Ua|0,e|0,N|0)|0;Tb=C;ib=yd(Sc|0,Rc|0,e|0,N|0)|0;hb=C;N=yd(Qc|0,Pc|0,e|0,N|0)|0;e=C;Aa=((za|0)<0)<<31>>31;Ob=yd(H|0,I|0,za|0,Aa|0)|0;Nb=C;b=((M|0)<0)<<31>>31;gb=yd(J|0,K|0,M|0,b|0)|0;fb=C;ta=yd(F|0,G|0,za|0,Aa|0)|0;sa=C;Z=yd(D|0,E|0,M|0,b|0)|0;Y=C;B=yd(A|0,B|0,za|0,Aa|0)|0;A=C;kc=((jc|0)<0)<<31>>31;Ec=yd(jc|0,kc|0,M|0,b|0)|0;Dc=C;Wb=yd(Db|0,Eb|0,za|0,Aa|0)|0;Vb=C;kb=yd(Ta|0,Ua|0,M|0,b|0)|0;jb=C;Aa=yd(Sc|0,Rc|0,za|0,Aa|0)|0;za=C;b=yd(Qc|0,Pc|0,M|0,b|0)|0;M=C;g=((ya|0)<0)<<31>>31;eb=yd(H|0,I|0,ya|0,g|0)|0;db=C;xa=yd(J|0,K|0,ya|0,g|0)|0;wa=C;$=yd(F|0,G|0,ya|0,g|0)|0;_=C;E=yd(D|0,E|0,ya|0,g|0)|0;D=C;Ia=((Ha|0)<0)<<31>>31;Gc=yd(Ha|0,Ia|0,ya|0,g|0)|0;Fc=C;Yb=yd(jc|0,kc|0,ya|0,g|0)|0;Xb=C;mb=yd(Db|0,Eb|0,ya|0,g|0)|0;lb=C;Ca=yd(Ta|0,Ua|0,ya|0,g|0)|0;Ba=C;m=yd(Sc|0,Rc|0,ya|0,g|0)|0;r=C;g=yd(Qc|0,Pc|0,ya|0,g|0)|0;ya=C;Ab=((zb|0)<0)<<31>>31;va=yd(H|0,I|0,zb|0,Ab|0)|0;ua=C;ea=((i|0)<0)<<31>>31;da=yd(J|0,K|0,i|0,ea|0)|0;ca=C;G=yd(F|0,G|0,zb|0,Ab|0)|0;F=C;sb=((rb|0)<0)<<31>>31;Ic=yd(rb|0,sb|0,i|0,ea|0)|0;Hc=C;_b=yd(Ha|0,Ia|0,zb|0,Ab|0)|0;Zb=C;ob=yd(jc|0,kc|0,i|0,ea|0)|0;nb=C;Ea=yd(Db|0,Eb|0,zb|0,Ab|0)|0;Da=C;gc=yd(Ta|0,Ua|0,i|0,ea|0)|0;fc=C;Ab=yd(Sc|0,Rc|0,zb|0,Ab|0)|0;zb=C;ea=yd(Qc|0,Pc|0,i|0,ea|0)|0;i=C;L=((h|0)<0)<<31>>31;ba=yd(H|0,I|0,h|0,L|0)|0;aa=C;K=yd(J|0,K|0,h|0,L|0)|0;J=C;cc=((bc|0)<0)<<31>>31;Kc=yd(bc|0,cc|0,h|0,L|0)|0;Jc=C;ac=yd(rb|0,sb|0,h|0,L|0)|0;$b=C;qb=yd(Ha|0,Ia|0,h|0,L|0)|0;pb=C;Ga=yd(jc|0,kc|0,h|0,L|0)|0;Fa=C;ic=yd(Db|0,Eb|0,h|0,L|0)|0;hc=C;Cb=yd(Ta|0,Ua|0,h|0,L|0)|0;Bb=C;Sa=yd(Sc|0,Rc|0,h|0,L|0)|0;Ra=C;L=yd(Qc|0,Pc|0,h|0,L|0)|0;h=C;ha=((ga|0)<0)<<31>>31;I=yd(H|0,I|0,ga|0,ha|0)|0;H=C;q=((d|0)<0)<<31>>31;Oc=yd(Oc|0,((Oc|0)<0)<<31>>31|0,d|0,q|0)|0;Nc=C;cc=yd(bc|0,cc|0,ga|0,ha|0)|0;bc=C;sb=yd(rb|0,sb|0,d|0,q|0)|0;rb=C;Ia=yd(Ha|0,Ia|0,ga|0,ha|0)|0;Ha=C;kc=yd(jc|0,kc|0,d|0,q|0)|0;jc=C;Eb=yd(Db|0,Eb|0,ga|0,ha|0)|0;Db=C;Ua=yd(Ta|0,Ua|0,d|0,q|0)|0;Ta=C;ha=yd(Sc|0,Rc|0,ga|0,ha|0)|0;ga=C;q=yd(Qc|0,Pc|0,d|0,q|0)|0;d=C;Lc=nd(Oc|0,Nc|0,Mc|0,Lc|0)|0;Jc=nd(Lc|0,C|0,Kc|0,Jc|0)|0;Hc=nd(Jc|0,C|0,Ic|0,Hc|0)|0;Fc=nd(Hc|0,C|0,Gc|0,Fc|0)|0;Dc=nd(Fc|0,C|0,Ec|0,Dc|0)|0;Bc=nd(Dc|0,C|0,Cc|0,Bc|0)|0;zc=nd(Bc|0,C|0,Ac|0,zc|0)|0;xc=nd(zc|0,C|0,yc|0,xc|0)|0;p=nd(xc|0,C|0,n|0,p|0)|0;n=C;ec=nd(wc|0,vc|0,dc|0,ec|0)|0;dc=C;rc=nd(uc|0,tc|0,sc|0,rc|0)|0;pc=nd(rc|0,C|0,qc|0,pc|0)|0;nc=nd(pc|0,C|0,oc|0,nc|0)|0;lc=nd(nc|0,C|0,mc|0,lc|0)|0;jc=nd(lc|0,C|0,kc|0,jc|0)|0;hc=nd(jc|0,C|0,ic|0,hc|0)|0;fc=nd(hc|0,C|0,gc|0,fc|0)|0;r=nd(fc|0,C|0,m|0,r|0)|0;M=nd(r|0,C|0,b|0,M|0)|0;b=C;r=nd(p|0,n|0,33554432,0)|0;r=ld(r|0,C|0,26)|0;m=C;bc=nd(ec|0,dc|0,cc|0,bc|0)|0;$b=nd(bc|0,C|0,ac|0,$b|0)|0;Zb=nd($b|0,C|0,_b|0,Zb|0)|0;Xb=nd(Zb|0,C|0,Yb|0,Xb|0)|0;Vb=nd(Xb|0,C|0,Wb|0,Vb|0)|0;Tb=nd(Vb|0,C|0,Ub|0,Tb|0)|0;Rb=nd(Tb|0,C|0,Sb|0,Rb|0)|0;j=nd(Rb|0,C|0,k|0,j|0)|0;j=nd(j|0,C|0,r|0,m|0)|0;k=C;m=qd(r|0,m|0,26)|0;m=md(p|0,n|0,m|0,C|0)|0;n=C;p=nd(M|0,b|0,33554432,0)|0;p=ld(p|0,C|0,26)|0;r=C;Nb=nd(Qb|0,Pb|0,Ob|0,Nb|0)|0;Lb=nd(Nb|0,C|0,Mb|0,Lb|0)|0;Jb=nd(Lb|0,C|0,Kb|0,Jb|0)|0;Hb=nd(Jb|0,C|0,Ib|0,Hb|0)|0;Fb=nd(Hb|0,C|0,Gb|0,Fb|0)|0;Db=nd(Fb|0,C|0,Eb|0,Db|0)|0;Bb=nd(Db|0,C|0,Cb|0,Bb|0)|0;zb=nd(Bb|0,C|0,Ab|0,zb|0)|0;ya=nd(zb|0,C|0,g|0,ya|0)|0;ya=nd(ya|0,C|0,p|0,r|0)|0;g=C;r=qd(p|0,r|0,26)|0;r=md(M|0,b|0,r|0,C|0)|0;b=C;M=nd(j|0,k|0,16777216,0)|0;M=ld(M|0,C|0,25)|0;p=C;vb=nd(yb|0,xb|0,wb|0,vb|0)|0;tb=nd(vb|0,C|0,ub|0,tb|0)|0;rb=nd(tb|0,C|0,sb|0,rb|0)|0;pb=nd(rb|0,C|0,qb|0,pb|0)|0;nb=nd(pb|0,C|0,ob|0,nb|0)|0;lb=nd(nb|0,C|0,mb|0,lb|0)|0;jb=nd(lb|0,C|0,kb|0,jb|0)|0;hb=nd(jb|0,C|0,ib|0,hb|0)|0;f=nd(hb|0,C|0,fa|0,f|0)|0;f=nd(f|0,C|0,M|0,p|0)|0;fa=C;p=qd(M|0,p|0,25)|0;p=md(j|0,k|0,p|0,C|0)|0;k=C;j=nd(ya|0,g|0,16777216,0)|0;j=ld(j|0,C|0,25)|0;M=C;db=nd(gb|0,fb|0,eb|0,db|0)|0;bb=nd(db|0,C|0,cb|0,bb|0)|0;$a=nd(bb|0,C|0,ab|0,$a|0)|0;Za=nd($a|0,C|0,_a|0,Za|0)|0;Xa=nd(Za|0,C|0,Ya|0,Xa|0)|0;Va=nd(Xa|0,C|0,Wa|0,Va|0)|0;Ta=nd(Va|0,C|0,Ua|0,Ta|0)|0;Ra=nd(Ta|0,C|0,Sa|0,Ra|0)|0;i=nd(Ra|0,C|0,ea|0,i|0)|0;i=nd(i|0,C|0,j|0,M|0)|0;ea=C;M=qd(j|0,M|0,25)|0;M=md(ya|0,g|0,M|0,C|0)|0;g=C;ya=nd(f|0,fa|0,33554432,0)|0;ya=ld(ya|0,C|0,26)|0;j=C;Na=nd(Qa|0,Pa|0,Oa|0,Na|0)|0;La=nd(Na|0,C|0,Ma|0,La|0)|0;Ja=nd(La|0,C|0,Ka|0,Ja|0)|0;Ha=nd(Ja|0,C|0,Ia|0,Ha|0)|0;Fa=nd(Ha|0,C|0,Ga|0,Fa|0)|0;Da=nd(Fa|0,C|0,Ea|0,Da|0)|0;Ba=nd(Da|0,C|0,Ca|0,Ba|0)|0;za=nd(Ba|0,C|0,Aa|0,za|0)|0;e=nd(za|0,C|0,N|0,e|0)|0;e=nd(e|0,C|0,ya|0,j|0)|0;N=C;j=qd(ya|0,j|0,26)|0;j=md(f|0,fa|0,j|0,C|0)|0;fa=nd(i|0,ea|0,33554432,0)|0;fa=ld(fa|0,C|0,26)|0;f=C;ua=nd(xa|0,wa|0,va|0,ua|0)|0;sa=nd(ua|0,C|0,ta|0,sa|0)|0;qa=nd(sa|0,C|0,ra|0,qa|0)|0;oa=nd(qa|0,C|0,pa|0,oa|0)|0;ma=nd(oa|0,C|0,na|0,ma|0)|0;ka=nd(ma|0,C|0,la|0,ka|0)|0;ia=nd(ka|0,C|0,ja|0,ia|0)|0;ga=nd(ia|0,C|0,ha|0,ga|0)|0;h=nd(ga|0,C|0,L|0,h|0)|0;h=nd(h|0,C|0,fa|0,f|0)|0;L=C;f=qd(fa|0,f|0,26)|0;f=md(i|0,ea|0,f|0,C|0)|0;ea=nd(e|0,N|0,16777216,0)|0;ea=ld(ea|0,C|0,25)|0;i=C;b=nd(ea|0,i|0,r|0,b|0)|0;r=C;i=qd(ea|0,i|0,25)|0;i=md(e|0,N|0,i|0,C|0)|0;N=nd(h|0,L|0,16777216,0)|0;N=ld(N|0,C|0,25)|0;e=C;aa=nd(da|0,ca|0,ba|0,aa|0)|0;_=nd(aa|0,C|0,$|0,_|0)|0;Y=nd(_|0,C|0,Z|0,Y|0)|0;W=nd(Y|0,C|0,X|0,W|0)|0;U=nd(W|0,C|0,V|0,U|0)|0;S=nd(U|0,C|0,T|0,S|0)|0;Q=nd(S|0,C|0,R|0,Q|0)|0;O=nd(Q|0,C|0,P|0,O|0)|0;d=nd(O|0,C|0,q|0,d|0)|0;d=nd(d|0,C|0,N|0,e|0)|0;q=C;e=qd(N|0,e|0,25)|0;e=md(h|0,L|0,e|0,C|0)|0;L=nd(b|0,r|0,33554432,0)|0;L=ld(L|0,C|0,26)|0;h=C;g=nd(M|0,g|0,L|0,h|0)|0;h=qd(L|0,h|0,26)|0;h=md(b|0,r|0,h|0,C|0)|0;r=nd(d|0,q|0,33554432,0)|0;r=ld(r|0,C|0,26)|0;b=C;H=nd(K|0,J|0,I|0,H|0)|0;F=nd(H|0,C|0,G|0,F|0)|0;D=nd(F|0,C|0,E|0,D|0)|0;A=nd(D|0,C|0,B|0,A|0)|0;y=nd(A|0,C|0,z|0,y|0)|0;w=nd(y|0,C|0,x|0,w|0)|0;u=nd(w|0,C|0,v|0,u|0)|0;s=nd(u|0,C|0,t|0,s|0)|0;l=nd(s|0,C|0,o|0,l|0)|0;l=nd(l|0,C|0,r|0,b|0)|0;o=C;b=qd(r|0,b|0,26)|0;b=md(d|0,q|0,b|0,C|0)|0;q=nd(l|0,o|0,16777216,0)|0;q=ld(q|0,C|0,25)|0;d=C;r=yd(q|0,d|0,19,0)|0;n=nd(r|0,C|0,m|0,n|0)|0;m=C;d=qd(q|0,d|0,25)|0;d=md(l|0,o|0,d|0,C|0)|0;o=nd(n|0,m|0,33554432,0)|0;o=ld(o|0,C|0,26)|0;l=C;k=nd(p|0,k|0,o|0,l|0)|0;l=qd(o|0,l|0,26)|0;l=md(n|0,m|0,l|0,C|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=b;c[a+36>>2]=d;return}function xc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0;bb=c[b>>2]|0;ua=c[b+4>>2]|0;j=c[b+8>>2]|0;la=c[b+12>>2]|0;e=c[b+16>>2]|0;db=c[b+20>>2]|0;Y=c[b+24>>2]|0;La=c[b+28>>2]|0;h=c[b+32>>2]|0;b=c[b+36>>2]|0;l=bb<<1;p=ua<<1;Xa=j<<1;f=la<<1;na=e<<1;B=db<<1;m=Y<<1;i=La<<1;Ka=db*38|0;ra=Y*19|0;va=La*38|0;da=h*19|0;gb=b*38|0;cb=((bb|0)<0)<<31>>31;cb=yd(bb|0,cb|0,bb|0,cb|0)|0;bb=C;o=((l|0)<0)<<31>>31;ta=((ua|0)<0)<<31>>31;Ia=yd(l|0,o|0,ua|0,ta|0)|0;Ha=C;k=((j|0)<0)<<31>>31;Wa=yd(j|0,k|0,l|0,o|0)|0;Va=C;ma=((la|0)<0)<<31>>31;Ua=yd(la|0,ma|0,l|0,o|0)|0;Ta=C;D=((e|0)<0)<<31>>31;Oa=yd(e|0,D|0,l|0,o|0)|0;Na=C;eb=((db|0)<0)<<31>>31;ya=yd(db|0,eb|0,l|0,o|0)|0;xa=C;g=((Y|0)<0)<<31>>31;ga=yd(Y|0,g|0,l|0,o|0)|0;fa=C;Ma=((La|0)<0)<<31>>31;R=yd(La|0,Ma|0,l|0,o|0)|0;Q=C;A=((h|0)<0)<<31>>31;F=yd(h|0,A|0,l|0,o|0)|0;E=C;q=((b|0)<0)<<31>>31;o=yd(b|0,q|0,l|0,o|0)|0;l=C;n=((p|0)<0)<<31>>31;ta=yd(p|0,n|0,ua|0,ta|0)|0;ua=C;ba=yd(p|0,n|0,j|0,k|0)|0;ca=C;P=((f|0)<0)<<31>>31;Sa=yd(f|0,P|0,p|0,n|0)|0;Ra=C;Ca=yd(e|0,D|0,p|0,n|0)|0;Ba=C;d=((B|0)<0)<<31>>31;ia=yd(B|0,d|0,p|0,n|0)|0;ha=C;T=yd(Y|0,g|0,p|0,n|0)|0;S=C;O=((i|0)<0)<<31>>31;H=yd(i|0,O|0,p|0,n|0)|0;G=C;t=yd(h|0,A|0,p|0,n|0)|0;s=C;fb=((gb|0)<0)<<31>>31;n=yd(gb|0,fb|0,p|0,n|0)|0;p=C;Qa=yd(j|0,k|0,j|0,k|0)|0;Pa=C;Ya=((Xa|0)<0)<<31>>31;Aa=yd(Xa|0,Ya|0,la|0,ma|0)|0;za=C;ka=yd(e|0,D|0,Xa|0,Ya|0)|0;ja=C;X=yd(db|0,eb|0,Xa|0,Ya|0)|0;W=C;N=yd(Y|0,g|0,Xa|0,Ya|0)|0;M=C;v=yd(La|0,Ma|0,Xa|0,Ya|0)|0;u=C;ea=((da|0)<0)<<31>>31;Ya=yd(da|0,ea|0,Xa|0,Ya|0)|0;Xa=C;k=yd(gb|0,fb|0,j|0,k|0)|0;j=C;ma=yd(f|0,P|0,la|0,ma|0)|0;la=C;V=yd(f|0,P|0,e|0,D|0)|0;U=C;J=yd(B|0,d|0,f|0,P|0)|0;I=C;z=yd(Y|0,g|0,f|0,P|0)|0;y=C;wa=((va|0)<0)<<31>>31;_a=yd(va|0,wa|0,f|0,P|0)|0;Za=C;Ea=yd(da|0,ea|0,f|0,P|0)|0;Da=C;P=yd(gb|0,fb|0,f|0,P|0)|0;f=C;L=yd(e|0,D|0,e|0,D|0)|0;K=C;oa=((na|0)<0)<<31>>31;x=yd(na|0,oa|0,db|0,eb|0)|0;w=C;sa=((ra|0)<0)<<31>>31;ab=yd(ra|0,sa|0,na|0,oa|0)|0;$a=C;Ga=yd(va|0,wa|0,e|0,D|0)|0;Fa=C;oa=yd(da|0,ea|0,na|0,oa|0)|0;na=C;D=yd(gb|0,fb|0,e|0,D|0)|0;e=C;eb=yd(Ka|0,((Ka|0)<0)<<31>>31|0,db|0,eb|0)|0;db=C;Ka=yd(ra|0,sa|0,B|0,d|0)|0;Ja=C;qa=yd(va|0,wa|0,B|0,d|0)|0;pa=C;_=yd(da|0,ea|0,B|0,d|0)|0;Z=C;d=yd(gb|0,fb|0,B|0,d|0)|0;B=C;sa=yd(ra|0,sa|0,Y|0,g|0)|0;ra=C;aa=yd(va|0,wa|0,Y|0,g|0)|0;$=C;m=yd(da|0,ea|0,m|0,((m|0)<0)<<31>>31|0)|0;r=C;g=yd(gb|0,fb|0,Y|0,g|0)|0;Y=C;Ma=yd(va|0,wa|0,La|0,Ma|0)|0;La=C;wa=yd(da|0,ea|0,i|0,O|0)|0;va=C;O=yd(gb|0,fb|0,i|0,O|0)|0;i=C;ea=yd(da|0,ea|0,h|0,A|0)|0;da=C;A=yd(gb|0,fb|0,h|0,A|0)|0;h=C;q=yd(gb|0,fb|0,b|0,q|0)|0;b=C;bb=nd(eb|0,db|0,cb|0,bb|0)|0;$a=nd(bb|0,C|0,ab|0,$a|0)|0;Za=nd($a|0,C|0,_a|0,Za|0)|0;Xa=nd(Za|0,C|0,Ya|0,Xa|0)|0;p=nd(Xa|0,C|0,n|0,p|0)|0;n=C;ua=nd(Wa|0,Va|0,ta|0,ua|0)|0;ta=C;ca=nd(Ua|0,Ta|0,ba|0,ca|0)|0;ba=C;Pa=nd(Sa|0,Ra|0,Qa|0,Pa|0)|0;Na=nd(Pa|0,C|0,Oa|0,Na|0)|0;La=nd(Na|0,C|0,Ma|0,La|0)|0;r=nd(La|0,C|0,m|0,r|0)|0;B=nd(r|0,C|0,d|0,B|0)|0;d=C;r=nd(p|0,n|0,33554432,0)|0;r=ld(r|0,C|0,26)|0;m=C;Ha=nd(Ka|0,Ja|0,Ia|0,Ha|0)|0;Fa=nd(Ha|0,C|0,Ga|0,Fa|0)|0;Da=nd(Fa|0,C|0,Ea|0,Da|0)|0;j=nd(Da|0,C|0,k|0,j|0)|0;j=nd(j|0,C|0,r|0,m|0)|0;k=C;m=qd(r|0,m|0,26)|0;m=md(p|0,n|0,m|0,C|0)|0;n=C;p=nd(B|0,d|0,33554432,0)|0;p=ld(p|0,C|0,26)|0;r=C;za=nd(Ca|0,Ba|0,Aa|0,za|0)|0;xa=nd(za|0,C|0,ya|0,xa|0)|0;va=nd(xa|0,C|0,wa|0,va|0)|0;Y=nd(va|0,C|0,g|0,Y|0)|0;Y=nd(Y|0,C|0,p|0,r|0)|0;g=C;r=qd(p|0,r|0,26)|0;r=md(B|0,d|0,r|0,C|0)|0;d=C;B=nd(j|0,k|0,16777216,0)|0;B=ld(B|0,C|0,25)|0;p=C;ra=nd(ua|0,ta|0,sa|0,ra|0)|0;pa=nd(ra|0,C|0,qa|0,pa|0)|0;na=nd(pa|0,C|0,oa|0,na|0)|0;f=nd(na|0,C|0,P|0,f|0)|0;f=nd(f|0,C|0,B|0,p|0)|0;P=C;p=qd(B|0,p|0,25)|0;p=md(j|0,k|0,p|0,C|0)|0;k=C;j=nd(Y|0,g|0,16777216,0)|0;j=ld(j|0,C|0,25)|0;B=C;ja=nd(ma|0,la|0,ka|0,ja|0)|0;ha=nd(ja|0,C|0,ia|0,ha|0)|0;fa=nd(ha|0,C|0,ga|0,fa|0)|0;da=nd(fa|0,C|0,ea|0,da|0)|0;i=nd(da|0,C|0,O|0,i|0)|0;i=nd(i|0,C|0,j|0,B|0)|0;O=C;B=qd(j|0,B|0,25)|0;B=md(Y|0,g|0,B|0,C|0)|0;g=C;Y=nd(f|0,P|0,33554432,0)|0;Y=ld(Y|0,C|0,26)|0;j=C;$=nd(ca|0,ba|0,aa|0,$|0)|0;Z=nd($|0,C|0,_|0,Z|0)|0;e=nd(Z|0,C|0,D|0,e|0)|0;e=nd(e|0,C|0,Y|0,j|0)|0;D=C;j=qd(Y|0,j|0,26)|0;j=md(f|0,P|0,j|0,C|0)|0;P=nd(i|0,O|0,33554432,0)|0;P=ld(P|0,C|0,26)|0;f=C;U=nd(X|0,W|0,V|0,U|0)|0;S=nd(U|0,C|0,T|0,S|0)|0;Q=nd(S|0,C|0,R|0,Q|0)|0;h=nd(Q|0,C|0,A|0,h|0)|0;h=nd(h|0,C|0,P|0,f|0)|0;A=C;f=qd(P|0,f|0,26)|0;f=md(i|0,O|0,f|0,C|0)|0;O=nd(e|0,D|0,16777216,0)|0;O=ld(O|0,C|0,25)|0;i=C;d=nd(O|0,i|0,r|0,d|0)|0;r=C;i=qd(O|0,i|0,25)|0;i=md(e|0,D|0,i|0,C|0)|0;D=nd(h|0,A|0,16777216,0)|0;D=ld(D|0,C|0,25)|0;e=C;K=nd(N|0,M|0,L|0,K|0)|0;I=nd(K|0,C|0,J|0,I|0)|0;G=nd(I|0,C|0,H|0,G|0)|0;E=nd(G|0,C|0,F|0,E|0)|0;b=nd(E|0,C|0,q|0,b|0)|0;b=nd(b|0,C|0,D|0,e|0)|0;q=C;e=qd(D|0,e|0,25)|0;e=md(h|0,A|0,e|0,C|0)|0;A=nd(d|0,r|0,33554432,0)|0;A=ld(A|0,C|0,26)|0;h=C;g=nd(B|0,g|0,A|0,h|0)|0;h=qd(A|0,h|0,26)|0;h=md(d|0,r|0,h|0,C|0)|0;r=nd(b|0,q|0,33554432,0)|0;r=ld(r|0,C|0,26)|0;d=C;w=nd(z|0,y|0,x|0,w|0)|0;u=nd(w|0,C|0,v|0,u|0)|0;s=nd(u|0,C|0,t|0,s|0)|0;l=nd(s|0,C|0,o|0,l|0)|0;l=nd(l|0,C|0,r|0,d|0)|0;o=C;d=qd(r|0,d|0,26)|0;d=md(b|0,q|0,d|0,C|0)|0;q=nd(l|0,o|0,16777216,0)|0;q=ld(q|0,C|0,25)|0;b=C;r=yd(q|0,b|0,19,0)|0;n=nd(r|0,C|0,m|0,n|0)|0;m=C;b=qd(q|0,b|0,25)|0;b=md(l|0,o|0,b|0,C|0)|0;o=nd(n|0,m|0,33554432,0)|0;o=ld(o|0,C|0,26)|0;l=C;k=nd(p|0,k|0,o|0,l|0)|0;l=qd(o|0,l|0,26)|0;l=md(n|0,m|0,l|0,C|0)|0;c[a>>2]=l;c[a+4>>2]=k;c[a+8>>2]=j;c[a+12>>2]=i;c[a+16>>2]=h;c[a+20>>2]=g;c[a+24>>2]=f;c[a+28>>2]=e;c[a+32>>2]=d;c[a+36>>2]=b;return}function yc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=c[d>>2]|0;l=c[d+4>>2]|0;k=c[d+8>>2]|0;j=c[d+12>>2]|0;i=c[d+16>>2]|0;h=c[d+20>>2]|0;g=c[d+24>>2]|0;f=c[d+28>>2]|0;o=c[d+32>>2]|0;e=c[d+36>>2]|0;m=(((((((((((((e*19|0)+16777216>>25)+m>>26)+l>>25)+k>>26)+j>>25)+i>>26)+h>>25)+g>>26)+f>>25)+o>>26)+e>>25)*19|0)+m|0;n=m>>26;l=n+l|0;n=m-(n<<26)|0;m=l>>25;k=m+k|0;m=l-(m<<25)|0;l=k>>26;j=l+j|0;l=k-(l<<26)|0;k=j>>25;i=k+i|0;k=j-(k<<25)|0;j=i>>26;h=j+h|0;j=i-(j<<26)|0;i=h>>25;g=i+g|0;i=h-(i<<25)|0;h=g>>26;f=h+f|0;h=g-(h<<26)|0;g=f>>25;d=g+o|0;g=f-(g<<25)|0;f=d>>26;e=f+e|0;f=d-(f<<26)|0;d=e&33554431;a[b>>0]=n;a[b+1>>0]=n>>>8;a[b+2>>0]=n>>>16;a[b+3>>0]=m<<2|n>>>24;a[b+4>>0]=m>>>6;a[b+5>>0]=m>>>14;a[b+6>>0]=l<<3|m>>>22;a[b+7>>0]=l>>>5;a[b+8>>0]=l>>>13;a[b+9>>0]=k<<5|l>>>21;a[b+10>>0]=k>>>3;a[b+11>>0]=k>>>11;a[b+12>>0]=j<<6|k>>>19;a[b+13>>0]=j>>>2;a[b+14>>0]=j>>>10;a[b+15>>0]=j>>>18;a[b+16>>0]=i;a[b+17>>0]=i>>>8;a[b+18>>0]=i>>>16;a[b+19>>0]=h<<1|i>>>24;a[b+20>>0]=h>>>7;a[b+21>>0]=h>>>15;a[b+22>>0]=g<<3|h>>>23;a[b+23>>0]=g>>>5;a[b+24>>0]=g>>>13;a[b+25>>0]=f<<4|g>>>21;a[b+26>>0]=f>>>4;a[b+27>>0]=f>>>12;a[b+28>>0]=f>>>20|d<<6;a[b+29>>0]=e>>>2;a[b+30>>0]=e>>>10;a[b+31>>0]=d>>>18;return}function zc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;V=b+40|0;j=b+44|0;m=b+48|0;p=b+52|0;s=b+56|0;v=b+60|0;y=b+64|0;B=b+68|0;E=b+72|0;C=b+76|0;S=b+4|0;P=b+8|0;e=b+12|0;l=b+16|0;n=b+20|0;u=b+24|0;w=b+28|0;D=b+32|0;O=b+36|0;ga=(c[S>>2]|0)+(c[j>>2]|0)|0;fa=(c[P>>2]|0)+(c[m>>2]|0)|0;ea=(c[e>>2]|0)+(c[p>>2]|0)|0;da=(c[l>>2]|0)+(c[s>>2]|0)|0;ca=(c[n>>2]|0)+(c[v>>2]|0)|0;ba=(c[u>>2]|0)+(c[y>>2]|0)|0;aa=(c[w>>2]|0)+(c[B>>2]|0)|0;$=(c[D>>2]|0)+(c[E>>2]|0)|0;Y=(c[O>>2]|0)+(c[C>>2]|0)|0;c[a>>2]=(c[b>>2]|0)+(c[V>>2]|0);ha=a+4|0;c[ha>>2]=ga;ga=a+8|0;c[ga>>2]=fa;fa=a+12|0;c[fa>>2]=ea;ea=a+16|0;c[ea>>2]=da;da=a+20|0;c[da>>2]=ca;ca=a+24|0;c[ca>>2]=ba;ba=a+28|0;c[ba>>2]=aa;aa=a+32|0;c[aa>>2]=$;$=a+36|0;c[$>>2]=Y;Y=a+40|0;S=(c[j>>2]|0)-(c[S>>2]|0)|0;P=(c[m>>2]|0)-(c[P>>2]|0)|0;e=(c[p>>2]|0)-(c[e>>2]|0)|0;l=(c[s>>2]|0)-(c[l>>2]|0)|0;n=(c[v>>2]|0)-(c[n>>2]|0)|0;u=(c[y>>2]|0)-(c[u>>2]|0)|0;w=(c[B>>2]|0)-(c[w>>2]|0)|0;D=(c[E>>2]|0)-(c[D>>2]|0)|0;O=(c[C>>2]|0)-(c[O>>2]|0)|0;c[Y>>2]=(c[V>>2]|0)-(c[b>>2]|0);V=a+44|0;c[V>>2]=S;S=a+48|0;c[S>>2]=P;P=a+52|0;c[P>>2]=e;e=a+56|0;c[e>>2]=l;l=a+60|0;c[l>>2]=n;n=a+64|0;c[n>>2]=u;u=a+68|0;c[u>>2]=w;w=a+72|0;c[w>>2]=D;D=a+76|0;c[D>>2]=O;O=a+80|0;wc(O,a,d);wc(Y,Y,d+40|0);C=a+120|0;wc(C,d+120|0,b+120|0);wc(a,b+80|0,d+80|0);E=c[a>>2]<<1;B=c[ha>>2]<<1;y=c[ga>>2]<<1;v=c[fa>>2]<<1;s=c[ea>>2]<<1;p=c[da>>2]<<1;m=c[ca>>2]<<1;j=c[ba>>2]<<1;g=c[aa>>2]<<1;b=c[$>>2]<<1;Z=c[O>>2]|0;N=a+84|0;W=c[N>>2]|0;M=a+88|0;T=c[M>>2]|0;L=a+92|0;Q=c[L>>2]|0;K=a+96|0;f=c[K>>2]|0;J=a+100|0;h=c[J>>2]|0;I=a+104|0;o=c[I>>2]|0;H=a+108|0;q=c[H>>2]|0;G=a+112|0;x=c[G>>2]|0;F=a+116|0;z=c[F>>2]|0;_=c[Y>>2]|0;X=c[V>>2]|0;U=c[S>>2]|0;R=c[P>>2]|0;d=c[e>>2]|0;i=c[l>>2]|0;k=c[n>>2]|0;r=c[u>>2]|0;t=c[w>>2]|0;A=c[D>>2]|0;c[a>>2]=Z-_;c[ha>>2]=W-X;c[ga>>2]=T-U;c[fa>>2]=Q-R;c[ea>>2]=f-d;c[da>>2]=h-i;c[ca>>2]=o-k;c[ba>>2]=q-r;c[aa>>2]=x-t;c[$>>2]=z-A;c[Y>>2]=_+Z;c[V>>2]=X+W;c[S>>2]=U+T;c[P>>2]=R+Q;c[e>>2]=d+f;c[l>>2]=i+h;c[n>>2]=k+o;c[u>>2]=r+q;c[w>>2]=t+x;c[D>>2]=A+z;D=c[C>>2]|0;z=a+124|0;A=c[z>>2]|0;w=a+128|0;x=c[w>>2]|0;t=a+132|0;u=c[t>>2]|0;q=a+136|0;r=c[q>>2]|0;n=a+140|0;o=c[n>>2]|0;k=a+144|0;l=c[k>>2]|0;h=a+148|0;i=c[h>>2]|0;e=a+152|0;f=c[e>>2]|0;a=a+156|0;d=c[a>>2]|0;c[O>>2]=D+E;c[N>>2]=A+B;c[M>>2]=x+y;c[L>>2]=u+v;c[K>>2]=r+s;c[J>>2]=o+p;c[I>>2]=l+m;c[H>>2]=i+j;c[G>>2]=f+g;c[F>>2]=d+b;c[C>>2]=E-D;c[z>>2]=B-A;c[w>>2]=y-x;c[t>>2]=v-u;c[q>>2]=s-r;c[n>>2]=p-o;c[k>>2]=m-l;c[h>>2]=j-i;c[e>>2]=g-f;c[a>>2]=b-d;return}
function ta(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function ua(){return i|0}function va(a){a=a|0;i=a}function wa(a,b){a=a|0;b=b|0;if(!n){n=a;o=b}}function xa(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function ya(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function za(a){a=a|0;C=a}function Aa(){return C|0}function Ba(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;t=i;i=i+288|0;p=t+144|0;r=t;m=t+216|0;q=t+208|0;Nc(p,o);c[p+48>>2]=0;c[p+52>>2]=0;c[p+56>>2]=(d[n+1>>0]|0)<<8|(d[n>>0]|0)|(d[n+2>>0]|0)<<16|(d[n+3>>0]|0)<<24;c[p+60>>2]=(d[n+5>>0]|0)<<8|(d[n+4>>0]|0)|(d[n+6>>0]|0)<<16|(d[n+7>>0]|0)<<24;s=m+0|0;u=s+64|0;do{a[s>>0]=0;s=s+1|0}while((s|0)<(u|0));Oc(p,m,m,64,0);Eb(r,m);s=m+0|0;u=s+64|0;do{a[s>>0]=0;s=s+1|0}while((s|0)<(u|0));Fb(r,j,k,l);a[q>>0]=k;p=pd(k|0,l|0,8)|0;w=q+1|0;a[w>>0]=p;p=pd(k|0,l|0,16)|0;v=q+2|0;a[v>>0]=p;p=pd(k|0,l|0,24)|0;m=q+3|0;a[m>>0]=p;p=q+4|0;a[p>>0]=l;j=pd(k|0,l|0,40)|0;s=q+5|0;a[s>>0]=j;j=pd(k|0,l|0,48)|0;u=q+6|0;a[u>>0]=j;l=pd(k|0,l|0,56)|0;j=q+7|0;a[j>>0]=l;Fb(r,q,8,0);Lc(b,f,g,h,n,o);Fb(r,b,g,h);a[q>>0]=g;n=pd(g|0,h|0,8)|0;a[w>>0]=n;n=pd(g|0,h|0,16)|0;a[v>>0]=n;n=pd(g|0,h|0,24)|0;a[m>>0]=n;a[p>>0]=h;n=pd(g|0,h|0,40)|0;a[s>>0]=n;n=pd(g|0,h|0,48)|0;a[u>>0]=n;n=pd(g|0,h|0,56)|0;a[j>>0]=n;Fb(r,q,8,0);Gb(r,b+g|0);od(r|0,0,144)|0;if(!e){i=t;return 0}v=nd(g|0,h|0,16,0)|0;w=e;c[w>>2]=v;c[w+4>>2]=C;i=t;return 0}function Ca(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0;t=i;i=i+288|0;p=t+144|0;r=t;m=t+216|0;q=t+208|0;Nc(p,o);c[p+48>>2]=0;c[p+52>>2]=(d[n+1>>0]|0)<<8|(d[n>>0]|0)|(d[n+2>>0]|0)<<16|(d[n+3>>0]|0)<<24;c[p+56>>2]=(d[n+5>>0]|0)<<8|(d[n+4>>0]|0)|(d[n+6>>0]|0)<<16|(d[n+7>>0]|0)<<24;c[p+60>>2]=(d[n+9>>0]|0)<<8|(d[n+8>>0]|0)|(d[n+10>>0]|0)<<16|(d[n+11>>0]|0)<<24;s=m+0|0;u=s+64|0;do{a[s>>0]=0;s=s+1|0}while((s|0)<(u|0));Oc(p,m,m,64,0);Eb(r,m);s=m+0|0;u=s+64|0;do{a[s>>0]=0;s=s+1|0}while((s|0)<(u|0));Fb(r,j,k,l);j=md(0,0,k|0,l|0)|0;Fb(r,8,j&15,0);Mc(b,f,g,h,n,o);Fb(r,b,g,h);j=md(0,0,g|0,h|0)|0;Fb(r,8,j&15,0);a[q>>0]=k;j=pd(k|0,l|0,8)|0;p=q+1|0;a[p>>0]=j;j=pd(k|0,l|0,16)|0;s=q+2|0;a[s>>0]=j;j=pd(k|0,l|0,24)|0;u=q+3|0;a[u>>0]=j;j=q+4|0;a[j>>0]=l;n=pd(k|0,l|0,40)|0;o=q+5|0;a[o>>0]=n;n=pd(k|0,l|0,48)|0;f=q+6|0;a[f>>0]=n;l=pd(k|0,l|0,56)|0;n=q+7|0;a[n>>0]=l;Fb(r,q,8,0);a[q>>0]=g;l=pd(g|0,h|0,8)|0;a[p>>0]=l;l=pd(g|0,h|0,16)|0;a[s>>0]=l;l=pd(g|0,h|0,24)|0;a[u>>0]=l;a[j>>0]=h;j=pd(g|0,h|0,40)|0;a[o>>0]=j;o=pd(g|0,h|0,48)|0;a[f>>0]=o;f=pd(g|0,h|0,56)|0;a[n>>0]=f;Fb(r,q,8,0);Gb(r,b+g|0);od(r|0,0,144)|0;if(!e){i=t;return 0}f=nd(g|0,h|0,16,0)|0;n=e;c[n>>2]=f;c[n+4>>2]=C;i=t;return 0}function Da(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;v=i;i=i+304|0;p=v+144|0;r=v;q=v+232|0;f=v+224|0;t=v+208|0;s=(e|0)!=0;if(s){w=e;c[w>>2]=0;c[w+4>>2]=0}if(j>>>0<0|(j|0)==0&h>>>0<16){n=-1;i=v;return n|0}Nc(p,o);c[p+48>>2]=0;c[p+52>>2]=0;c[p+56>>2]=(d[n+1>>0]|0)<<8|(d[n>>0]|0)|(d[n+2>>0]|0)<<16|(d[n+3>>0]|0)<<24;c[p+60>>2]=(d[n+5>>0]|0)<<8|(d[n+4>>0]|0)|(d[n+6>>0]|0)<<16|(d[n+7>>0]|0)<<24;u=q+0|0;w=u+64|0;do{a[u>>0]=0;u=u+1|0}while((u|0)<(w|0));Oc(p,q,q,64,0);Eb(r,q);u=q+0|0;w=u+64|0;do{a[u>>0]=0;u=u+1|0}while((u|0)<(w|0));Fb(r,k,l,m);a[f>>0]=l;x=pd(l|0,m|0,8)|0;A=f+1|0;a[A>>0]=x;x=pd(l|0,m|0,16)|0;z=f+2|0;a[z>>0]=x;x=pd(l|0,m|0,24)|0;y=f+3|0;a[y>>0]=x;x=f+4|0;a[x>>0]=m;p=pd(l|0,m|0,40)|0;k=f+5|0;a[k>>0]=p;p=pd(l|0,m|0,48)|0;w=f+6|0;a[w>>0]=p;p=pd(l|0,m|0,56)|0;u=f+7|0;a[u>>0]=p;Fb(r,f,8,0);p=nd(h|0,j|0,-16,-1)|0;q=C;Fb(r,g,p,q);a[f>>0]=p;m=pd(p|0,q|0,8)|0;a[A>>0]=m;m=pd(p|0,q|0,16)|0;a[z>>0]=m;m=pd(p|0,q|0,24)|0;a[y>>0]=m;a[x>>0]=q;m=pd(p|0,q|0,40)|0;a[k>>0]=m;k=pd(p|0,q|0,48)|0;a[w>>0]=k;w=pd(p|0,q|0,56)|0;a[u>>0]=w;Fb(r,f,8,0);Gb(r,t);od(r|0,0,144)|0;f=((a[g+(p+1)>>0]^a[t+1>>0]|a[g+p>>0]^a[t>>0]|a[g+(p+2)>>0]^a[t+2>>0]|a[g+(p+3)>>0]^a[t+3>>0]|a[g+(p+4)>>0]^a[t+4>>0]|a[g+(p+5)>>0]^a[t+5>>0]|a[g+(p+6)>>0]^a[t+6>>0]|a[g+(p+7)>>0]^a[t+7>>0]|a[g+(p+8)>>0]^a[t+8>>0]|a[g+(p+9)>>0]^a[t+9>>0]|a[g+(p+10)>>0]^a[t+10>>0]|a[g+(p+11)>>0]^a[t+11>>0]|a[g+(p+12)>>0]^a[t+12>>0]|a[g+(p+13)>>0]^a[t+13>>0]|a[g+(p+14)>>0]^a[t+14>>0]|a[g+(p+15)>>0]^a[t+15>>0])&255)+511&256;u=t+0|0;w=u+16|0;do{a[u>>0]=0;u=u+1|0}while((u|0)<(w|0));if(!f){od(b|0,0,p|0)|0;A=-1;i=v;return A|0}Lc(b,g,p,q,n,o);if(!s){A=0;i=v;return A|0}A=e;c[A>>2]=p;c[A+4>>2]=q;A=0;i=v;return A|0}function Ea(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;v=i;i=i+304|0;p=v+144|0;r=v;q=v+232|0;f=v+224|0;t=v+208|0;s=(e|0)!=0;if(s){w=e;c[w>>2]=0;c[w+4>>2]=0}if(j>>>0<0|(j|0)==0&h>>>0<16){n=-1;i=v;return n|0}Nc(p,o);c[p+48>>2]=0;c[p+52>>2]=(d[n+1>>0]|0)<<8|(d[n>>0]|0)|(d[n+2>>0]|0)<<16|(d[n+3>>0]|0)<<24;c[p+56>>2]=(d[n+5>>0]|0)<<8|(d[n+4>>0]|0)|(d[n+6>>0]|0)<<16|(d[n+7>>0]|0)<<24;c[p+60>>2]=(d[n+9>>0]|0)<<8|(d[n+8>>0]|0)|(d[n+10>>0]|0)<<16|(d[n+11>>0]|0)<<24;u=q+0|0;w=u+64|0;do{a[u>>0]=0;u=u+1|0}while((u|0)<(w|0));Oc(p,q,q,64,0);Eb(r,q);u=q+0|0;w=u+64|0;do{a[u>>0]=0;u=u+1|0}while((u|0)<(w|0));Fb(r,k,l,m);p=md(0,0,l|0,m|0)|0;Fb(r,8,p&15,0);p=nd(h|0,j|0,-16,-1)|0;q=C;Fb(r,g,p,q);h=md(0,0,h|0,j|0)|0;Fb(r,8,h&15,0);a[f>>0]=l;h=pd(l|0,m|0,8)|0;y=f+1|0;a[y>>0]=h;h=pd(l|0,m|0,16)|0;x=f+2|0;a[x>>0]=h;h=pd(l|0,m|0,24)|0;k=f+3|0;a[k>>0]=h;h=f+4|0;a[h>>0]=m;u=pd(l|0,m|0,40)|0;j=f+5|0;a[j>>0]=u;u=pd(l|0,m|0,48)|0;w=f+6|0;a[w>>0]=u;m=pd(l|0,m|0,56)|0;u=f+7|0;a[u>>0]=m;Fb(r,f,8,0);a[f>>0]=p;m=pd(p|0,q|0,8)|0;a[y>>0]=m;m=pd(p|0,q|0,16)|0;a[x>>0]=m;m=pd(p|0,q|0,24)|0;a[k>>0]=m;a[h>>0]=q;m=pd(p|0,q|0,40)|0;a[j>>0]=m;m=pd(p|0,q|0,48)|0;a[w>>0]=m;w=pd(p|0,q|0,56)|0;a[u>>0]=w;Fb(r,f,8,0);Gb(r,t);od(r|0,0,144)|0;f=((a[g+(p+1)>>0]^a[t+1>>0]|a[g+p>>0]^a[t>>0]|a[g+(p+2)>>0]^a[t+2>>0]|a[g+(p+3)>>0]^a[t+3>>0]|a[g+(p+4)>>0]^a[t+4>>0]|a[g+(p+5)>>0]^a[t+5>>0]|a[g+(p+6)>>0]^a[t+6>>0]|a[g+(p+7)>>0]^a[t+7>>0]|a[g+(p+8)>>0]^a[t+8>>0]|a[g+(p+9)>>0]^a[t+9>>0]|a[g+(p+10)>>0]^a[t+10>>0]|a[g+(p+11)>>0]^a[t+11>>0]|a[g+(p+12)>>0]^a[t+12>>0]|a[g+(p+13)>>0]^a[t+13>>0]|a[g+(p+14)>>0]^a[t+14>>0]|a[g+(p+15)>>0]^a[t+15>>0])&255)+511&256;u=t+0|0;w=u+16|0;do{a[u>>0]=0;u=u+1|0}while((u|0)<(w|0));if(!f){od(b|0,0,p|0)|0;y=-1;i=v;return y|0}Mc(b,g,p,q,n,o);if(!s){y=0;i=v;return y|0}y=e;c[y>>2]=p;c[y+4>>2]=q;y=0;i=v;return y|0}function Fa(){return 32}function Ga(){return 8}function Ha(){return 12}function Ia(){return 0}function Ja(){return 16}function Ka(){return 32}function La(){return 32}function Ma(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Oa(a,b,c,d,e);return 0}function Na(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=i;i=i+32|0;g=h;Oa(g,c,d,e,f);e=Pc(b,g)|0;d=(g|0)==(b|0);f=0;c=0;do{f=a[b+c>>0]^a[g+c>>0]|f;c=c+1|0}while((c|0)!=32);i=h;return (d?-1:e)|(((f&255)+511|0)>>>8&1)+-1|0}function Oa(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=i;i=i+608|0;n=p+480|0;m=p+416|0;o=p;j=o+64|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;j=o;c[j>>2]=-205731576;c[j+4>>2]=1779033703;j=o+8|0;c[j>>2]=-2067093701;c[j+4>>2]=-1150833019;j=o+16|0;c[j>>2]=-23791573;c[j+4>>2]=1013904242;j=o+24|0;c[j>>2]=1595750129;c[j+4>>2]=-1521486534;j=o+32|0;c[j>>2]=-1377402159;c[j+4>>2]=1359893119;j=o+40|0;c[j>>2]=725511199;c[j+4>>2]=-1694144372;j=o+48|0;c[j>>2]=-79577749;c[j+4>>2]=528734635;j=o+56|0;c[j>>2]=327033209;c[j+4>>2]=1541459225;j=n+0|0;k=j+128|0;do{a[j>>0]=54;j=j+1|0}while((j|0)<(k|0));j=54;h=0;while(1){a[n+h>>0]=j^a[g+h>>0];h=h+1|0;if((h|0)==32)break;j=a[n+h>>0]|0}Ab(o,n,128,0);l=o+208|0;j=o+272|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;j=l;c[j>>2]=-205731576;c[j+4>>2]=1779033703;j=o+216|0;c[j>>2]=-2067093701;c[j+4>>2]=-1150833019;j=o+224|0;c[j>>2]=-23791573;c[j+4>>2]=1013904242;j=o+232|0;c[j>>2]=1595750129;c[j+4>>2]=-1521486534;j=o+240|0;c[j>>2]=-1377402159;c[j+4>>2]=1359893119;j=o+248|0;c[j>>2]=725511199;c[j+4>>2]=-1694144372;j=o+256|0;c[j>>2]=-79577749;c[j+4>>2]=528734635;j=o+264|0;c[j>>2]=327033209;c[j+4>>2]=1541459225;j=n+0|0;k=j+128|0;do{a[j>>0]=92;j=j+1|0}while((j|0)<(k|0));h=92;j=0;while(1){a[n+j>>0]=h^a[g+j>>0];j=j+1|0;if((j|0)==32)break;h=a[n+j>>0]|0}Ab(l,n,128,0);Ab(o,d,e,f);Bb(o,m);Ab(l,m,64,0);Bb(l,n);j=b+0|0;h=n+0|0;k=j+32|0;do{a[j>>0]=a[h>>0]|0;j=j+1|0;h=h+1|0}while((j|0)<(k|0));i=p;return}function Pa(){return 32}function Qa(){return 32}function Ra(){return 32}function Sa(){return 32}function Ta(){return 24}function Ua(){return 16}function Va(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;k=i;i=i+272|0;h=k;g=k+208|0;j=h;c[j>>2]=-205731576;c[j+4>>2]=1779033703;j=h+8|0;c[j>>2]=-2067093701;c[j+4>>2]=-1150833019;j=h+16|0;c[j>>2]=-23791573;c[j+4>>2]=1013904242;j=h+24|0;c[j>>2]=1595750129;c[j+4>>2]=-1521486534;j=h+32|0;c[j>>2]=-1377402159;c[j+4>>2]=1359893119;j=h+40|0;c[j>>2]=725511199;c[j+4>>2]=-1694144372;j=h+48|0;c[j>>2]=-79577749;c[j+4>>2]=528734635;j=h+56|0;c[j>>2]=327033209;c[j+4>>2]=1541459225;j=h+72|0;c[j>>2]=256;c[j+4>>2]=0;j=h+64|0;c[j>>2]=0;c[j+4>>2]=0;j=h+80|0;e=e+0|0;f=j+32|0;do{a[j>>0]=a[e>>0]|0;j=j+1|0;e=e+1|0}while((j|0)<(f|0));Bb(h,g);j=d+0|0;e=g+0|0;f=j+32|0;do{a[j>>0]=a[e>>0]|0;j=j+1|0;e=e+1|0}while((j|0)<(f|0));ed(b,d,33088);i=k;return 0}function Wa(b,c){b=b|0;c=c|0;var d=0;d=0;do{a[c+d>>0]=pa(0)|0;d=d+1|0}while((d|0)!=32);ed(b,c,33088);return 0}function Xa(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;i=i+32|0;e=d;ed(e,c,b);hb(a,24,e,40);i=d;return 0}function Ya(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ec(a,b,c,d,e,f,g)|0;return 0}function Za(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+64|0;l=j+32|0;k=j;ed(l,h,g);hb(k,24,l,40);ec(a,b,c,d,e,f,k)|0;i=j;return 0}function _a(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0>0|(d|0)==0&c>>>0>4294967279){e=-1;return e|0}ec(a+16|0,a,b,c,d,e,f)|0;e=0;return e|0}function $a(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;k=i;i=i+64|0;j=k+32|0;h=k;if(d>>>0>0|(d|0)==0&c>>>0>4294967279){g=-1;i=k;return g|0}ed(j,g,f);hb(h,24,j,40);ec(a+16|0,a,b,c,d,e,h)|0;g=0;i=k;return g|0}function ab(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return gc(a,b,c,d,e,f,g)|0}function bb(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+64|0;l=j+32|0;k=j;ed(l,h,g);hb(k,24,l,40);h=gc(a,b,c,d,e,f,k)|0;i=j;return h|0}function cb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(d>>>0<0|(d|0)==0&c>>>0<16){e=-1;return e|0}d=nd(c|0,d|0,-16,-1)|0;e=gc(a,b+16|0,b,d,C,e,f)|0;return e|0}function db(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;k=i;i=i+64|0;j=k+32|0;h=k;if(d>>>0<0|(d|0)==0&c>>>0<16){g=-1;i=k;return g|0}c=nd(c|0,d|0,-16,-1)|0;d=C;ed(j,g,f);hb(h,24,j,40);g=gc(a,b+16|0,b,c,d,e,h)|0;i=k;return g|0}function eb(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;A=i;v=i=i+63&-64;i=i+480|0;y=v;w=v+448|0;x=v+424|0;j=v+392|0;v=v+360|0;h=0;do{a[v+h>>0]=pa(0)|0;h=h+1|0}while((h|0)!=32);ed(j,v,33088);h=b+0|0;o=j+0|0;p=h+32|0;do{a[h>>0]=a[o>>0]|0;h=h+1|0;o=o+1|0}while((h|0)<(p|0));od(y|0,0,357)|0;q=y;c[q>>2]=-222443248;c[q+4>>2]=1779033703;q=y+8|0;c[q>>2]=-2067093701;c[q+4>>2]=-1150833019;q=y+16|0;c[q>>2]=-23791573;c[q+4>>2]=1013904242;q=y+24|0;c[q>>2]=1595750129;c[q+4>>2]=-1521486534;q=y+32|0;c[q>>2]=-1377402159;c[q+4>>2]=1359893119;q=y+40|0;c[q>>2]=725511199;c[q+4>>2]=-1694144372;q=y+48|0;c[q>>2]=-79577749;c[q+4>>2]=528734635;q=y+56|0;c[q>>2]=327033209;c[q+4>>2]=1541459225;q=y+352|0;r=y+96|0;s=y+64|0;t=y+72|0;u=y+224|0;h=0;m=0;l=32;while(1){n=256-h|0;h=y+h+96|0;if(!(m>>>0>0|(m|0)==0&l>>>0>n>>>0)){z=5;break}sd(h|0,j|0,n|0)|0;c[q>>2]=(c[q>>2]|0)+n;p=s;h=c[p>>2]|0;p=c[p+4>>2]|0;k=nd(h|0,p|0,128,0)|0;o=s;c[o>>2]=k;c[o+4>>2]=C;o=t;o=nd((p>>>0>4294967295|(p|0)==-1&h>>>0>4294967167)&1|0,0,c[o>>2]|0,c[o+4>>2]|0)|0;h=t;c[h>>2]=o;c[h+4>>2]=C;ub(y,r);h=r+0|0;o=u+0|0;p=h+128|0;do{c[h>>2]=c[o>>2];h=h+4|0;o=o+4|0}while((h|0)<(p|0));h=(c[q>>2]|0)+-128|0;c[q>>2]=h;k=md(l|0,m|0,n|0,0)|0;if((l|0)==(n|0)&(m|0)==0){n=g;j=h;l=0;m=32;break}else{j=j+n|0;m=C;l=k}}if((z|0)==5){sd(h|0,j|0,l|0)|0;j=nd(c[q>>2]|0,0,l|0,m|0)|0;c[q>>2]=j;n=g;l=0;m=32}while(1){k=256-j|0;h=y+j+96|0;if(!(l>>>0>0|(l|0)==0&m>>>0>k>>>0)){z=8;break}sd(h|0,n|0,k|0)|0;c[q>>2]=(c[q>>2]|0)+k;p=s;h=c[p>>2]|0;p=c[p+4>>2]|0;j=nd(h|0,p|0,128,0)|0;o=s;c[o>>2]=j;c[o+4>>2]=C;o=t;o=nd((p>>>0>4294967295|(p|0)==-1&h>>>0>4294967167)&1|0,0,c[o>>2]|0,c[o+4>>2]|0)|0;h=t;c[h>>2]=o;c[h+4>>2]=C;ub(y,r);h=r+0|0;o=u+0|0;p=h+128|0;do{c[h>>2]=c[o>>2];h=h+4|0;o=o+4|0}while((h|0)<(p|0));j=(c[q>>2]|0)+-128|0;c[q>>2]=j;h=md(m|0,l|0,k|0,0)|0;if((m|0)==(k|0)&(l|0)==0)break;else{n=n+k|0;l=C;m=h}}if((z|0)==8){sd(h|0,n|0,m|0)|0;z=nd(c[q>>2]|0,0,m|0,l|0)|0;c[q>>2]=z}tb(y,x,24)|0;if(f>>>0>0|(f|0)==0&e>>>0>4294967279){z=-1;i=A;return z|0}ed(y,v,g);hb(w,24,y,40);ec(b+48|0,b+32|0,d,e,f,x,w)|0;z=0;i=A;return z|0}function fb(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=i;v=i=i+63&-64;i=i+416|0;w=v;u=v+384|0;v=v+360|0;if(e>>>0<0|(e|0)==0&d>>>0<48){x=-1;i=y;return x|0}od(w|0,0,357)|0;p=w;c[p>>2]=-222443248;c[p+4>>2]=1779033703;p=w+8|0;c[p>>2]=-2067093701;c[p+4>>2]=-1150833019;p=w+16|0;c[p>>2]=-23791573;c[p+4>>2]=1013904242;p=w+24|0;c[p>>2]=1595750129;c[p+4>>2]=-1521486534;p=w+32|0;c[p>>2]=-1377402159;c[p+4>>2]=1359893119;p=w+40|0;c[p>>2]=725511199;c[p+4>>2]=-1694144372;p=w+48|0;c[p>>2]=-79577749;c[p+4>>2]=528734635;p=w+56|0;c[p>>2]=327033209;c[p+4>>2]=1541459225;p=w+352|0;q=w+96|0;r=w+64|0;s=w+72|0;t=w+224|0;m=b;h=0;k=0;n=32;while(1){l=256-h|0;j=w+h+96|0;if(!(k>>>0>0|(k|0)==0&n>>>0>l>>>0)){x=4;break}sd(j|0,m|0,l|0)|0;c[p>>2]=(c[p>>2]|0)+l;o=r;j=c[o>>2]|0;o=c[o+4>>2]|0;z=nd(j|0,o|0,128,0)|0;h=r;c[h>>2]=z;c[h+4>>2]=C;h=s;h=nd((o>>>0>4294967295|(o|0)==-1&j>>>0>4294967167)&1|0,0,c[h>>2]|0,c[h+4>>2]|0)|0;j=s;c[j>>2]=h;c[j+4>>2]=C;ub(w,q);j=q+0|0;h=t+0|0;o=j+128|0;do{c[j>>2]=c[h>>2];j=j+4|0;h=h+4|0}while((j|0)<(o|0));h=(c[p>>2]|0)+-128|0;c[p>>2]=h;j=md(n|0,k|0,l|0,0)|0;if((n|0)==(l|0)&(k|0)==0){l=0;m=32;break}else{m=m+l|0;k=C;n=j}}if((x|0)==4){sd(j|0,m|0,n|0)|0;h=nd(c[p>>2]|0,0,n|0,k|0)|0;c[p>>2]=h;l=0;m=32}while(1){k=256-h|0;h=w+h+96|0;if(!(l>>>0>0|(l|0)==0&m>>>0>k>>>0)){x=7;break}sd(h|0,f|0,k|0)|0;c[p>>2]=(c[p>>2]|0)+k;o=r;j=c[o>>2]|0;o=c[o+4>>2]|0;z=nd(j|0,o|0,128,0)|0;h=r;c[h>>2]=z;c[h+4>>2]=C;h=s;h=nd((o>>>0>4294967295|(o|0)==-1&j>>>0>4294967167)&1|0,0,c[h>>2]|0,c[h+4>>2]|0)|0;j=s;c[j>>2]=h;c[j+4>>2]=C;ub(w,q);j=q+0|0;h=t+0|0;o=j+128|0;do{c[j>>2]=c[h>>2];j=j+4|0;h=h+4|0}while((j|0)<(o|0));h=(c[p>>2]|0)+-128|0;c[p>>2]=h;j=md(m|0,l|0,k|0,0)|0;if((m|0)==(k|0)&(l|0)==0)break;else{f=f+k|0;l=C;m=j}}if((x|0)==7){sd(h|0,f|0,m|0)|0;z=nd(c[p>>2]|0,0,m|0,l|0)|0;c[p>>2]=z}tb(w,v,24)|0;if((d&-16|0)==32&(e|0)==0){z=-1;i=y;return z|0}x=nd(d|0,e|0,-48,-1)|0;z=C;ed(w,g,b);hb(u,24,w,40);z=gc(a,b+48|0,b+32|0,x,z,v,u)|0;i=y;return z|0}function gb(){return 48}function hb(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;k=20;l=(d[f+1>>0]|0)<<8|(d[f>>0]|0)|(d[f+2>>0]|0)<<16|(d[f+3>>0]|0)<<24;m=(d[e+1>>0]|0)<<8|(d[e>>0]|0)|(d[e+2>>0]|0)<<16|(d[e+3>>0]|0)<<24;n=(d[f+9>>0]|0)<<8|(d[f+8>>0]|0)|(d[f+10>>0]|0)<<16|(d[f+11>>0]|0)<<24;o=(d[e+17>>0]|0)<<8|(d[e+16>>0]|0)|(d[e+18>>0]|0)<<16|(d[e+19>>0]|0)<<24;p=(d[e+21>>0]|0)<<8|(d[e+20>>0]|0)|(d[e+22>>0]|0)<<16|(d[e+23>>0]|0)<<24;q=(d[e+25>>0]|0)<<8|(d[e+24>>0]|0)|(d[e+26>>0]|0)<<16|(d[e+27>>0]|0)<<24;r=(d[e+29>>0]|0)<<8|(d[e+28>>0]|0)|(d[e+30>>0]|0)<<16|(d[e+31>>0]|0)<<24;s=(d[f+13>>0]|0)<<8|(d[f+12>>0]|0)|(d[f+14>>0]|0)<<16|(d[f+15>>0]|0)<<24;t=(d[e+5>>0]|0)<<8|(d[e+4>>0]|0)|(d[e+6>>0]|0)<<16|(d[e+7>>0]|0)<<24;u=(d[e+9>>0]|0)<<8|(d[e+8>>0]|0)|(d[e+10>>0]|0)<<16|(d[e+11>>0]|0)<<24;j=(d[e+13>>0]|0)<<8|(d[e+12>>0]|0)|(d[e+14>>0]|0)<<16|(d[e+15>>0]|0)<<24;e=(d[f+5>>0]|0)<<8|(d[f+4>>0]|0)|(d[f+6>>0]|0)<<16|(d[f+7>>0]|0)<<24;g=(d[c+1>>0]|0)<<8|(d[c>>0]|0)|(d[c+2>>0]|0)<<16|(d[c+3>>0]|0)<<24;h=(d[c+5>>0]|0)<<8|(d[c+4>>0]|0)|(d[c+6>>0]|0)<<16|(d[c+7>>0]|0)<<24;i=(d[c+9>>0]|0)<<8|(d[c+8>>0]|0)|(d[c+10>>0]|0)<<16|(d[c+11>>0]|0)<<24;f=(d[c+13>>0]|0)<<8|(d[c+12>>0]|0)|(d[c+14>>0]|0)<<16|(d[c+15>>0]|0)<<24;do{D=p+l|0;D=(D>>>25|D<<7)^j;A=D+l|0;A=(A>>>23|A<<9)^i;x=A+D|0;x=(x>>>19|x<<13)^p;G=x+A|0;G=(G>>>14|G<<18)^l;z=e+m|0;z=f^(z>>>25|z<<7);w=z+e|0;w=q^(w>>>23|w<<9);J=w+z|0;J=(J>>>19|J<<13)^m;C=J+w|0;C=(C>>>14|C<<18)^e;v=n+g|0;v=r^(v>>>25|v<<7);I=v+n|0;I=(I>>>23|I<<9)^t;F=I+v|0;F=(F>>>19|F<<13)^g;y=F+I|0;y=(y>>>14|y<<18)^n;H=s+o|0;H=(H>>>25|H<<7)^u;E=H+s|0;E=(E>>>23|E<<9)^h;B=E+H|0;B=(B>>>19|B<<13)^o;c=B+E|0;c=(c>>>14|c<<18)^s;K=G+H|0;m=(K>>>25|K<<7)^J;J=m+G|0;t=(J>>>23|J<<9)^I;I=t+m|0;u=(I>>>19|I<<13)^H;H=u+t|0;l=(H>>>14|H<<18)^G;G=C+D|0;g=(G>>>25|G<<7)^F;F=g+C|0;h=(F>>>23|F<<9)^E;E=h+g|0;j=(E>>>19|E<<13)^D;D=j+h|0;e=(D>>>14|D<<18)^C;C=y+z|0;o=(C>>>25|C<<7)^B;B=o+y|0;i=(B>>>23|B<<9)^A;A=i+o|0;f=(A>>>19|A<<13)^z;z=f+i|0;n=(z>>>14|z<<18)^y;y=c+v|0;p=(y>>>25|y<<7)^x;x=p+c|0;q=(x>>>23|x<<9)^w;w=q+p|0;r=(w>>>19|w<<13)^v;v=r+q|0;s=(v>>>14|v<<18)^c;k=k+-2|0}while((k|0)>0);a[b>>0]=l;a[b+1>>0]=l>>>8;a[b+2>>0]=l>>>16;a[b+3>>0]=l>>>24;a[b+4>>0]=e;a[b+5>>0]=e>>>8;a[b+6>>0]=e>>>16;a[b+7>>0]=e>>>24;a[b+8>>0]=n;a[b+9>>0]=n>>>8;a[b+10>>0]=n>>>16;a[b+11>>0]=n>>>24;a[b+12>>0]=s;a[b+13>>0]=s>>>8;a[b+14>>0]=s>>>16;a[b+15>>0]=s>>>24;a[b+16>>0]=g;a[b+17>>0]=g>>>8;a[b+18>>0]=g>>>16;a[b+19>>0]=g>>>24;a[b+20>>0]=h;a[b+21>>0]=h>>>8;a[b+22>>0]=h>>>16;a[b+23>>0]=h>>>24;a[b+24>>0]=i;a[b+25>>0]=i>>>8;a[b+26>>0]=i>>>16;a[b+27>>0]=i>>>24;a[b+28>>0]=f;a[b+29>>0]=f>>>8;a[b+30>>0]=f>>>16;a[b+31>>0]=f>>>24;return}function ib(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;F=(d[f+1>>0]|0)<<8|(d[f>>0]|0)|(d[f+2>>0]|0)<<16|(d[f+3>>0]|0)<<24;G=(d[e+1>>0]|0)<<8|(d[e>>0]|0)|(d[e+2>>0]|0)<<16|(d[e+3>>0]|0)<<24;H=(d[e+5>>0]|0)<<8|(d[e+4>>0]|0)|(d[e+6>>0]|0)<<16|(d[e+7>>0]|0)<<24;I=(d[e+9>>0]|0)<<8|(d[e+8>>0]|0)|(d[e+10>>0]|0)<<16|(d[e+11>>0]|0)<<24;J=(d[e+13>>0]|0)<<8|(d[e+12>>0]|0)|(d[e+14>>0]|0)<<16|(d[e+15>>0]|0)<<24;B=(d[f+5>>0]|0)<<8|(d[f+4>>0]|0)|(d[f+6>>0]|0)<<16|(d[f+7>>0]|0)<<24;C=(d[c+1>>0]|0)<<8|(d[c>>0]|0)|(d[c+2>>0]|0)<<16|(d[c+3>>0]|0)<<24;D=(d[c+5>>0]|0)<<8|(d[c+4>>0]|0)|(d[c+6>>0]|0)<<16|(d[c+7>>0]|0)<<24;E=(d[c+9>>0]|0)<<8|(d[c+8>>0]|0)|(d[c+10>>0]|0)<<16|(d[c+11>>0]|0)<<24;w=(d[c+13>>0]|0)<<8|(d[c+12>>0]|0)|(d[c+14>>0]|0)<<16|(d[c+15>>0]|0)<<24;x=(d[f+9>>0]|0)<<8|(d[f+8>>0]|0)|(d[f+10>>0]|0)<<16|(d[f+11>>0]|0)<<24;y=(d[e+17>>0]|0)<<8|(d[e+16>>0]|0)|(d[e+18>>0]|0)<<16|(d[e+19>>0]|0)<<24;z=(d[e+21>>0]|0)<<8|(d[e+20>>0]|0)|(d[e+22>>0]|0)<<16|(d[e+23>>0]|0)<<24;A=(d[e+25>>0]|0)<<8|(d[e+24>>0]|0)|(d[e+26>>0]|0)<<16|(d[e+27>>0]|0)<<24;v=(d[e+29>>0]|0)<<8|(d[e+28>>0]|0)|(d[e+30>>0]|0)<<16|(d[e+31>>0]|0)<<24;f=(d[f+13>>0]|0)<<8|(d[f+12>>0]|0)|(d[f+14>>0]|0)<<16|(d[f+15>>0]|0)<<24;e=20;c=F;g=G;h=x;i=y;j=z;k=A;l=v;m=f;n=H;o=I;p=J;q=B;r=C;s=D;t=E;u=w;do{T=c+j|0;T=(T>>>25|T<<7)^p;Q=T+c|0;Q=(Q>>>23|Q<<9)^t;N=Q+T|0;N=(N>>>19|N<<13)^j;W=N+Q|0;W=(W>>>14|W<<18)^c;P=g+q|0;P=(P>>>25|P<<7)^u;M=P+q|0;M=(M>>>23|M<<9)^k;Z=M+P|0;Z=(Z>>>19|Z<<13)^g;S=Z+M|0;S=(S>>>14|S<<18)^q;L=r+h|0;L=(L>>>25|L<<7)^l;Y=L+h|0;Y=(Y>>>23|Y<<9)^n;V=Y+L|0;V=(V>>>19|V<<13)^r;O=V+Y|0;O=(O>>>14|O<<18)^h;X=i+m|0;X=o^(X>>>25|X<<7);U=X+m|0;U=(U>>>23|U<<9)^s;R=U+X|0;R=(R>>>19|R<<13)^i;K=R+U|0;K=(K>>>14|K<<18)^m;_=W+X|0;g=(_>>>25|_<<7)^Z;Z=g+W|0;n=(Z>>>23|Z<<9)^Y;Y=n+g|0;o=(Y>>>19|Y<<13)^X;X=o+n|0;c=(X>>>14|X<<18)^W;W=S+T|0;r=(W>>>25|W<<7)^V;V=r+S|0;s=(V>>>23|V<<9)^U;U=s+r|0;p=(U>>>19|U<<13)^T;T=p+s|0;q=(T>>>14|T<<18)^S;S=O+P|0;i=(S>>>25|S<<7)^R;R=i+O|0;t=(R>>>23|R<<9)^Q;Q=t+i|0;u=(Q>>>19|Q<<13)^P;P=u+t|0;h=(P>>>14|P<<18)^O;O=K+L|0;j=(O>>>25|O<<7)^N;N=j+K|0;k=(N>>>23|N<<9)^M;M=k+j|0;l=(M>>>19|M<<13)^L;L=l+k|0;m=(L>>>14|L<<18)^K;e=e+-2|0}while((e|0)>0);L=c+F|0;M=g+G|0;N=n+H|0;O=o+I|0;P=p+J|0;Q=q+B|0;R=r+C|0;S=s+D|0;T=t+E|0;U=u+w|0;V=h+x|0;W=i+y|0;X=j+z|0;Y=k+A|0;Z=l+v|0;_=m+f|0;a[b>>0]=L;a[b+1>>0]=L>>>8;a[b+2>>0]=L>>>16;a[b+3>>0]=L>>>24;a[b+4>>0]=M;a[b+5>>0]=M>>>8;a[b+6>>0]=M>>>16;a[b+7>>0]=M>>>24;a[b+8>>0]=N;a[b+9>>0]=N>>>8;a[b+10>>0]=N>>>16;a[b+11>>0]=N>>>24;a[b+12>>0]=O;a[b+13>>0]=O>>>8;a[b+14>>0]=O>>>16;a[b+15>>0]=O>>>24;a[b+16>>0]=P;a[b+17>>0]=P>>>8;a[b+18>>0]=P>>>16;a[b+19>>0]=P>>>24;a[b+20>>0]=Q;a[b+21>>0]=Q>>>8;a[b+22>>0]=Q>>>16;a[b+23>>0]=Q>>>24;a[b+24>>0]=R;a[b+25>>0]=R>>>8;a[b+26>>0]=R>>>16;a[b+27>>0]=R>>>24;a[b+28>>0]=S;a[b+29>>0]=S>>>8;a[b+30>>0]=S>>>16;a[b+31>>0]=S>>>24;a[b+32>>0]=T;a[b+33>>0]=T>>>8;a[b+34>>0]=T>>>16;a[b+35>>0]=T>>>24;a[b+36>>0]=U;a[b+37>>0]=U>>>8;a[b+38>>0]=U>>>16;a[b+39>>0]=U>>>24;a[b+40>>0]=V;a[b+41>>0]=V>>>8;a[b+42>>0]=V>>>16;a[b+43>>0]=V>>>24;a[b+44>>0]=W;a[b+45>>0]=W>>>8;a[b+46>>0]=W>>>16;a[b+47>>0]=W>>>24;a[b+48>>0]=X;a[b+49>>0]=X>>>8;a[b+50>>0]=X>>>16;a[b+51>>0]=X>>>24;a[b+52>>0]=Y;a[b+53>>0]=Y>>>8;a[b+54>>0]=Y>>>16;a[b+55>>0]=Y>>>24;a[b+56>>0]=Z;a[b+57>>0]=Z>>>8;a[b+58>>0]=Z>>>16;a[b+59>>0]=Z>>>24;a[b+60>>0]=_;a[b+61>>0]=_>>>8;a[b+62>>0]=_>>>16;a[b+63>>0]=_>>>24;return}function jb(){return 16}function kb(){return 64}function lb(){return 32}function mb(){return 16}function nb(){return 64}function ob(){return 32}function pb(){return 357}function qb(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=i;w=i=i+63&-64;i=i+496|0;x=w+360|0;if((e+-1|0)>>>0>63|k>>>0>64){b=-1;i=y;return b|0}if(e>>>0>=256)ha(56,80,18,136);if(k>>>0>=256)ha(168,80,19,136);v=e&255;m=k&255;do if((b|0)==0|(f|0)==0)l=-1;else{n=v+-1<<24>>24;if((j|0)==0|m<<24>>24==0){if((n&255)>63){l=-1;break}od(w|0,0,357)|0;l=w;c[l>>2]=e&255^-222443256;c[l+4>>2]=1779033703;l=w+8|0;c[l>>2]=-2067093701;c[l+4>>2]=-1150833019;l=w+16|0;c[l>>2]=-23791573;c[l+4>>2]=1013904242;l=w+24|0;c[l>>2]=1595750129;c[l+4>>2]=-1521486534;l=w+32|0;c[l>>2]=-1377402159;c[l+4>>2]=1359893119;l=w+40|0;c[l>>2]=725511199;c[l+4>>2]=-1694144372;l=w+48|0;c[l>>2]=-79577749;c[l+4>>2]=528734635;l=w+56|0;c[l>>2]=327033209;c[l+4>>2]=1541459225;l=0}else{if(((n|m+-1<<24>>24)&255)>63){l=-1;break}n=k&255;od(w|0,0,357)|0;p=qd(n|0,0,8)|0;o=w;c[o>>2]=(p|e&255)^-222443256;c[o+4>>2]=C^1779033703;o=w+8|0;c[o>>2]=-2067093701;c[o+4>>2]=-1150833019;o=w+16|0;c[o>>2]=-23791573;c[o+4>>2]=1013904242;o=w+24|0;c[o>>2]=1595750129;c[o+4>>2]=-1521486534;o=w+32|0;c[o>>2]=-1377402159;c[o+4>>2]=1359893119;o=w+40|0;c[o>>2]=725511199;c[o+4>>2]=-1694144372;o=w+48|0;c[o>>2]=-79577749;c[o+4>>2]=528734635;o=w+56|0;c[o>>2]=327033209;c[o+4>>2]=1541459225;o=x+0|0;p=o+128|0;do{a[o>>0]=0;o=o+1|0}while((o|0)<(p|0));sd(x|0,j|0,n|0)|0;n=w+352|0;o=w+96|0;l=x+0|0;p=o+128|0;do{a[o>>0]=a[l>>0]|0;o=o+1|0;l=l+1|0}while((o|0)<(p|0));c[n>>2]=128;l=128}a:do if(!((g|0)==0&(h|0)==0)){q=w+352|0;r=w+96|0;s=w+64|0;t=w+72|0;u=w+224|0;k=h;m=g;while(1){n=256-l|0;j=w+l+96|0;if(!(k>>>0>0|(k|0)==0&m>>>0>n>>>0))break;sd(j|0,f|0,n|0)|0;c[q>>2]=(c[q>>2]|0)+n;p=s;o=c[p>>2]|0;p=c[p+4>>2]|0;g=nd(o|0,p|0,128,0)|0;l=s;c[l>>2]=g;c[l+4>>2]=C;l=t;l=nd((p>>>0>4294967295|(p|0)==-1&o>>>0>4294967167)&1|0,0,c[l>>2]|0,c[l+4>>2]|0)|0;o=t;c[o>>2]=l;c[o+4>>2]=C;ub(w,r);o=r+0|0;l=u+0|0;p=o+128|0;do{c[o>>2]=c[l>>2];o=o+4|0;l=l+4|0}while((o|0)<(p|0));l=(c[q>>2]|0)+-128|0;c[q>>2]=l;j=md(m|0,k|0,n|0,0)|0;if((m|0)==(n|0)&(k|0)==0)break a;else{f=f+n|0;k=C;m=j}}sd(j|0,f|0,m|0)|0;l=nd(c[q>>2]|0,0,m|0,k|0)|0;c[q>>2]=l}while(0);j=e&255;if((v&255)<=64){k=w+352|0;n=w+64|0;if(l>>>0>128){e=n;v=c[e>>2]|0;e=c[e+4>>2]|0;l=nd(v|0,e|0,128,0)|0;m=n;c[m>>2]=l;c[m+4>>2]=C;m=w+72|0;l=m;l=nd((e>>>0>4294967295|(e|0)==-1&v>>>0>4294967167)&1|0,0,c[l>>2]|0,c[l+4>>2]|0)|0;v=m;c[v>>2]=l;c[v+4>>2]=C;v=w+96|0;ub(w,v);l=(c[k>>2]|0)+-128|0;c[k>>2]=l;td(v|0,w+224|0,l|0)|0;l=c[k>>2]|0}else m=w+72|0;t=n;v=c[t>>2]|0;t=c[t+4>>2]|0;g=nd(v|0,t|0,l|0,0)|0;s=C;u=n;c[u>>2]=g;c[u+4>>2]=s;u=m;e=u;u=u+4|0;u=nd((s>>>0<t>>>0|(s|0)==(t|0)&g>>>0<v>>>0)&1|0,0,d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24|0,d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24|0)|0;e=C;v=m;g=v;a[g>>0]=u;a[g+1>>0]=u>>8;a[g+2>>0]=u>>16;a[g+3>>0]=u>>24;v=v+4|0;a[v>>0]=e;a[v+1>>0]=e>>8;a[v+2>>0]=e>>16;a[v+3>>0]=e>>24;if(a[w+356>>0]|0){v=w+88|0;c[v>>2]=-1;c[v+4>>2]=-1}o=w+80|0;c[o>>2]=-1;c[o+4>>2]=-1;od(w+l+96|0,0,256-l|0)|0;ub(w,w+96|0);o=x+0|0;l=w+0|0;p=o+64|0;do{a[o>>0]=a[l>>0]|0;o=o+1|0;l=l+1|0}while((o|0)<(p|0));sd(b|0,x|0,j|0)|0}l=0}while(0);b=l;i=y;return b|0}function rb(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;j=i;h=i=i+63&-64;i=i+128|0;if(d>>>0>64|(e+-1|0)>>>0>63){b=-1;i=j;return b|0}if(e>>>0>=256)ha(56,80,53,192);if(d>>>0>=256)ha(168,80,54,192);f=((e&255)+-1&255)>63;if((c|0)==0|(d|0)==0){if(f){b=-1;i=j;return b|0}od(b|0,0,357)|0;g=e&255^-222443256;h=b;c=h;a[c>>0]=g;a[c+1>>0]=g>>8;a[c+2>>0]=g>>16;a[c+3>>0]=g>>24;h=h+4|0;a[h>>0]=103;a[h+1>>0]=230;a[h+2>>0]=9;a[h+3>>0]=106;h=b+8|0;c=h;a[c>>0]=-2067093701;a[c+1>>0]=-2067093701>>8;a[c+2>>0]=-2067093701>>16;a[c+3>>0]=-2067093701>>24;h=h+4|0;a[h>>0]=-1150833019;a[h+1>>0]=-1150833019>>8;a[h+2>>0]=-1150833019>>16;a[h+3>>0]=-1150833019>>24;h=b+16|0;c=h;a[c>>0]=-23791573;a[c+1>>0]=-23791573>>8;a[c+2>>0]=-23791573>>16;a[c+3>>0]=-23791573>>24;h=h+4|0;a[h>>0]=114;a[h+1>>0]=243;a[h+2>>0]=110;a[h+3>>0]=60;h=b+24|0;c=h;a[c>>0]=241;a[c+1>>0]=54;a[c+2>>0]=29;a[c+3>>0]=95;h=h+4|0;a[h>>0]=-1521486534;a[h+1>>0]=-1521486534>>8;a[h+2>>0]=-1521486534>>16;a[h+3>>0]=-1521486534>>24;h=b+32|0;c=h;a[c>>0]=-1377402159;a[c+1>>0]=-1377402159>>8;a[c+2>>0]=-1377402159>>16;a[c+3>>0]=-1377402159>>24;h=h+4|0;a[h>>0]=127;a[h+1>>0]=82;a[h+2>>0]=14;a[h+3>>0]=81;h=b+40|0;c=h;a[c>>0]=31;a[c+1>>0]=108;a[c+2>>0]=62;a[c+3>>0]=43;h=h+4|0;a[h>>0]=-1694144372;a[h+1>>0]=-1694144372>>8;a[h+2>>0]=-1694144372>>16;a[h+3>>0]=-1694144372>>24;h=b+48|0;c=h;a[c>>0]=-79577749;a[c+1>>0]=-79577749>>8;a[c+2>>0]=-79577749>>16;a[c+3>>0]=-79577749>>24;h=h+4|0;a[h>>0]=171;a[h+1>>0]=217;a[h+2>>0]=131;a[h+3>>0]=31;b=b+56|0;h=b;a[h>>0]=121;a[h+1>>0]=33;a[h+2>>0]=126;a[h+3>>0]=19;b=b+4|0;a[b>>0]=25;a[b+1>>0]=205;a[b+2>>0]=224;a[b+3>>0]=91;b=0;i=j;return b|0}if(f){b=-1;i=j;return b|0}if(((d&255)+-1&255)>63){b=-1;i=j;return b|0}d=d&255;od(b|0,0,357)|0;k=qd(d|0,0,8)|0;k=(k|e&255)^-222443256;g=C^1779033703;e=b;f=e;a[f>>0]=k;a[f+1>>0]=k>>8;a[f+2>>0]=k>>16;a[f+3>>0]=k>>24;e=e+4|0;a[e>>0]=g;a[e+1>>0]=g>>8;a[e+2>>0]=g>>16;a[e+3>>0]=g>>24;e=b+8|0;g=e;a[g>>0]=-2067093701;a[g+1>>0]=-2067093701>>8;a[g+2>>0]=-2067093701>>16;a[g+3>>0]=-2067093701>>24;e=e+4|0;a[e>>0]=-1150833019;a[e+1>>0]=-1150833019>>8;a[e+2>>0]=-1150833019>>16;a[e+3>>0]=-1150833019>>24;e=b+16|0;g=e;a[g>>0]=-23791573;a[g+1>>0]=-23791573>>8;a[g+2>>0]=-23791573>>16;a[g+3>>0]=-23791573>>24;e=e+4|0;a[e>>0]=114;a[e+1>>0]=243;a[e+2>>0]=110;a[e+3>>0]=60;e=b+24|0;g=e;a[g>>0]=241;a[g+1>>0]=54;a[g+2>>0]=29;a[g+3>>0]=95;e=e+4|0;a[e>>0]=-1521486534;a[e+1>>0]=-1521486534>>8;a[e+2>>0]=-1521486534>>16;a[e+3>>0]=-1521486534>>24;e=b+32|0;g=e;a[g>>0]=-1377402159;a[g+1>>0]=-1377402159>>8;a[g+2>>0]=-1377402159>>16;a[g+3>>0]=-1377402159>>24;e=e+4|0;a[e>>0]=127;a[e+1>>0]=82;a[e+2>>0]=14;a[e+3>>0]=81;e=b+40|0;g=e;a[g>>0]=31;a[g+1>>0]=108;a[g+2>>0]=62;a[g+3>>0]=43;e=e+4|0;a[e>>0]=-1694144372;a[e+1>>0]=-1694144372>>8;a[e+2>>0]=-1694144372>>16;a[e+3>>0]=-1694144372>>24;e=b+48|0;g=e;a[g>>0]=-79577749;a[g+1>>0]=-79577749>>8;a[g+2>>0]=-79577749>>16;a[g+3>>0]=-79577749>>24;e=e+4|0;a[e>>0]=171;a[e+1>>0]=217;a[e+2>>0]=131;a[e+3>>0]=31;e=b+56|0;g=e;a[g>>0]=121;a[g+1>>0]=33;a[g+2>>0]=126;a[g+3>>0]=19;e=e+4|0;a[e>>0]=25;a[e+1>>0]=205;a[e+2>>0]=224;a[e+3>>0]=91;e=h+0|0;g=e+128|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(g|0));sd(h|0,c|0,d|0)|0;d=b+352|0;e=b+96|0;f=h+0|0;g=e+128|0;do{a[e>>0]=a[f>>0]|0;e=e+1|0;f=f+1|0}while((e|0)<(g|0));a[d>>0]=128;a[d+1>>0]=0;a[d+2>>0]=0;a[d+3>>0]=0;k=0;i=j;return k|0}function sb(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;if((e|0)==0&(f|0)==0)return 0;k=b+352|0;l=b+96|0;m=b+64|0;n=b+72|0;o=b+224|0;h=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;j=e;while(1){i=256-h|0;e=b+h+96|0;if(!(f>>>0>0|(f|0)==0&j>>>0>i>>>0))break;sd(e|0,c|0,i|0)|0;h=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)+i|0;a[k>>0]=h;a[k+1>>0]=h>>8;a[k+2>>0]=h>>16;a[k+3>>0]=h>>24;h=m;e=h;e=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;h=h+4|0;h=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;s=nd(e|0,h|0,128,0)|0;g=C;q=m;r=q;a[r>>0]=s;a[r+1>>0]=s>>8;a[r+2>>0]=s>>16;a[r+3>>0]=s>>24;q=q+4|0;a[q>>0]=g;a[q+1>>0]=g>>8;a[q+2>>0]=g>>16;a[q+3>>0]=g>>24;q=n;g=q;q=q+4|0;q=nd((h>>>0>4294967295|(h|0)==-1&e>>>0>4294967167)&1|0,0,d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24|0,d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24|0)|0;g=C;e=n;h=e;a[h>>0]=q;a[h+1>>0]=q>>8;a[h+2>>0]=q>>16;a[h+3>>0]=q>>24;e=e+4|0;a[e>>0]=g;a[e+1>>0]=g>>8;a[e+2>>0]=g>>16;a[e+3>>0]=g>>24;ub(b,l);e=l+0|0;g=o+0|0;h=e+128|0;do{a[e>>0]=a[g>>0]|0;e=e+1|0;g=g+1|0}while((e|0)<(h|0));h=(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)+-128|0;a[k>>0]=h;a[k+1>>0]=h>>8;a[k+2>>0]=h>>16;a[k+3>>0]=h>>24;e=md(j|0,f|0,i|0,0)|0;if((j|0)==(i|0)&(f|0)==0){p=6;break}else{c=c+i|0;f=C;j=e}}if((p|0)==6)return 0;sd(e|0,c|0,j|0)|0;s=nd(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24|0,0,j|0,f|0)|0;a[k>>0]=s;a[k+1>>0]=s>>8;a[k+2>>0]=s>>16;a[k+3>>0]=s>>24;return 0}function tb(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;l=i;k=i=i+63&-64;i=i+64|0;if(e>>>0>=256)ha(56,80,106,224);j=e&255;if((e&255)>64){c=-1;i=l;return c|0}g=b+352|0;f=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;h=b+64|0;if(f>>>0>128){n=h;m=n;m=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;n=n+4|0;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;p=nd(m|0,n|0,128,0)|0;o=C;e=h;f=e;a[f>>0]=p;a[f+1>>0]=p>>8;a[f+2>>0]=p>>16;a[f+3>>0]=p>>24;e=e+4|0;a[e>>0]=o;a[e+1>>0]=o>>8;a[e+2>>0]=o>>16;a[e+3>>0]=o>>24;e=b+72|0;o=e;f=o;o=o+4|0;o=nd((n>>>0>4294967295|(n|0)==-1&m>>>0>4294967167)&1|0,0,d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24|0,d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24|0)|0;f=C;m=e;n=m;a[n>>0]=o;a[n+1>>0]=o>>8;a[n+2>>0]=o>>16;a[n+3>>0]=o>>24;m=m+4|0;a[m>>0]=f;a[m+1>>0]=f>>8;a[m+2>>0]=f>>16;a[m+3>>0]=f>>24;m=b+96|0;ub(b,m);f=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)+-128|0;a[g>>0]=f;a[g+1>>0]=f>>8;a[g+2>>0]=f>>16;a[g+3>>0]=f>>24;td(m|0,b+224|0,f|0)|0;f=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24}else e=b+72|0;g=h;p=g;p=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;g=g+4|0;g=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;n=nd(p|0,g|0,f|0,0)|0;q=C;m=h;o=m;a[o>>0]=n;a[o+1>>0]=n>>8;a[o+2>>0]=n>>16;a[o+3>>0]=n>>24;m=m+4|0;a[m>>0]=q;a[m+1>>0]=q>>8;a[m+2>>0]=q>>16;a[m+3>>0]=q>>24;m=e;o=m;m=m+4|0;m=nd((q>>>0<g>>>0|(q|0)==(g|0)&n>>>0<p>>>0)&1|0,0,d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24|0,d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24|0)|0;o=C;p=e;n=p;a[n>>0]=m;a[n+1>>0]=m>>8;a[n+2>>0]=m>>16;a[n+3>>0]=m>>24;p=p+4|0;a[p>>0]=o;a[p+1>>0]=o>>8;a[p+2>>0]=o>>16;a[p+3>>0]=o>>24;if(a[b+356>>0]|0){q=b+88|0;p=q;a[p>>0]=-1;a[p+1>>0]=-1>>8;a[p+2>>0]=-1>>16;a[p+3>>0]=-1>>24;q=q+4|0;a[q>>0]=-1;a[q+1>>0]=-1>>8;a[q+2>>0]=-1>>16;a[q+3>>0]=-1>>24}g=b+80|0;e=g;a[e>>0]=-1;a[e+1>>0]=-1>>8;a[e+2>>0]=-1>>16;a[e+3>>0]=-1>>24;g=g+4|0;a[g>>0]=-1;a[g+1>>0]=-1>>8;a[g+2>>0]=-1>>16;a[g+3>>0]=-1>>24;od(b+f+96|0,0,256-f|0)|0;ub(b,b+96|0);g=k+0|0;e=b+0|0;f=g+64|0;do{a[g>>0]=a[e>>0]|0;g=g+1|0;e=e+1|0}while((g|0)<(f|0));sd(c|0,k|0,j|0)|0;q=0;i=l;return q|0}function ub(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;P=c;R=P;R=d[R>>0]|d[R+1>>0]<<8|d[R+2>>0]<<16|d[R+3>>0]<<24;P=P+4|0;P=d[P>>0]|d[P+1>>0]<<8|d[P+2>>0]<<16|d[P+3>>0]<<24;U=c+8|0;W=U;W=d[W>>0]|d[W+1>>0]<<8|d[W+2>>0]<<16|d[W+3>>0]<<24;U=U+4|0;U=d[U>>0]|d[U+1>>0]<<8|d[U+2>>0]<<16|d[U+3>>0]<<24;x=c+16|0;t=x;t=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;x=x+4|0;x=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;l=c+24|0;h=l;h=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;l=l+4|0;l=d[l>>0]|d[l+1>>0]<<8|d[l+2>>0]<<16|d[l+3>>0]<<24;$=c+32|0;p=$;p=d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24;$=$+4|0;$=d[$>>0]|d[$+1>>0]<<8|d[$+2>>0]<<16|d[$+3>>0]<<24;F=c+40|0;H=F;H=d[H>>0]|d[H+1>>0]<<8|d[H+2>>0]<<16|d[H+3>>0]<<24;F=F+4|0;F=d[F>>0]|d[F+1>>0]<<8|d[F+2>>0]<<16|d[F+3>>0]<<24;u=c+48|0;s=u;s=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;u=u+4|0;u=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;r=c+56|0;n=r;n=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;r=r+4|0;r=d[r>>0]|d[r+1>>0]<<8|d[r+2>>0]<<16|d[r+3>>0]<<24;i=c+64|0;g=i;g=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;i=i+4|0;i=d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24;Y=c+72|0;j=Y;j=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24;Y=Y+4|0;Y=d[Y>>0]|d[Y+1>>0]<<8|d[Y+2>>0]<<16|d[Y+3>>0]<<24;o=c+80|0;m=o;m=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;o=o+4|0;o=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;K=c+88|0;M=K;M=d[M>>0]|d[M+1>>0]<<8|d[M+2>>0]<<16|d[M+3>>0]<<24;K=K+4|0;K=d[K>>0]|d[K+1>>0]<<8|d[K+2>>0]<<16|d[K+3>>0]<<24;f=c+96|0;e=f;e=d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24;f=f+4|0;f=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;S=c+104|0;B=S;B=d[B>>0]|d[B+1>>0]<<8|d[B+2>>0]<<16|d[B+3>>0]<<24;S=S+4|0;S=d[S>>0]|d[S+1>>0]<<8|d[S+2>>0]<<16|d[S+3>>0]<<24;sa=c+112|0;ra=sa;ra=d[ra>>0]|d[ra+1>>0]<<8|d[ra+2>>0]<<16|d[ra+3>>0]<<24;sa=sa+4|0;sa=d[sa>>0]|d[sa+1>>0]<<8|d[sa+2>>0]<<16|d[sa+3>>0]<<24;A=c+120|0;y=A;y=d[y>>0]|d[y+1>>0]<<8|d[y+2>>0]<<16|d[y+3>>0]<<24;A=A+4|0;A=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24;ca=b;v=ca;ca=ca+4|0;N=b+8|0;oa=N;na=oa;na=d[na>>0]|d[na+1>>0]<<8|d[na+2>>0]<<16|d[na+3>>0]<<24;oa=oa+4|0;oa=d[oa>>0]|d[oa+1>>0]<<8|d[oa+2>>0]<<16|d[oa+3>>0]<<24;I=b+16|0;ka=I;ja=ka;ja=d[ja>>0]|d[ja+1>>0]<<8|d[ja+2>>0]<<16|d[ja+3>>0]<<24;ka=ka+4|0;ka=d[ka>>0]|d[ka+1>>0]<<8|d[ka+2>>0]<<16|d[ka+3>>0]<<24;D=b+24|0;ga=D;fa=ga;fa=d[fa>>0]|d[fa+1>>0]<<8|d[fa+2>>0]<<16|d[fa+3>>0]<<24;ga=ga+4|0;ga=d[ga>>0]|d[ga+1>>0]<<8|d[ga+2>>0]<<16|d[ga+3>>0]<<24;w=b+32|0;ma=w;la=ma;la=d[la>>0]|d[la+1>>0]<<8|d[la+2>>0]<<16|d[la+3>>0]<<24;ma=ma+4|0;ma=d[ma>>0]|d[ma+1>>0]<<8|d[ma+2>>0]<<16|d[ma+3>>0]<<24;q=b+40|0;ia=q;ha=ia;ha=d[ha>>0]|d[ha+1>>0]<<8|d[ha+2>>0]<<16|d[ha+3>>0]<<24;ia=ia+4|0;ia=d[ia>>0]|d[ia+1>>0]<<8|d[ia+2>>0]<<16|d[ia+3>>0]<<24;k=b+48|0;ua=k;ta=ua;ta=d[ta>>0]|d[ta+1>>0]<<8|d[ta+2>>0]<<16|d[ta+3>>0]<<24;ua=ua+4|0;ua=d[ua>>0]|d[ua+1>>0]<<8|d[ua+2>>0]<<16|d[ua+3>>0]<<24;c=b+56|0;qa=c;pa=qa;pa=d[pa>>0]|d[pa+1>>0]<<8|d[pa+2>>0]<<16|d[pa+3>>0]<<24;qa=qa+4|0;qa=d[qa>>0]|d[qa+1>>0]<<8|d[qa+2>>0]<<16|d[qa+3>>0]<<24;ba=b+64|0;aa=ba;ba=ba+4|0;aa=(d[aa>>0]|d[aa+1>>0]<<8|d[aa+2>>0]<<16|d[aa+3>>0]<<24)^-1377402159;ba=(d[ba>>0]|d[ba+1>>0]<<8|d[ba+2>>0]<<16|d[ba+3>>0]<<24)^1359893119;_=b+72|0;Z=_;_=_+4|0;Z=(d[Z>>0]|d[Z+1>>0]<<8|d[Z+2>>0]<<16|d[Z+3>>0]<<24)^725511199;_=(d[_>>0]|d[_+1>>0]<<8|d[_+2>>0]<<16|d[_+3>>0]<<24)^-1694144372;X=b+80|0;V=X;X=X+4|0;V=(d[V>>0]|d[V+1>>0]<<8|d[V+2>>0]<<16|d[V+3>>0]<<24)^-79577749;X=(d[X>>0]|d[X+1>>0]<<8|d[X+2>>0]<<16|d[X+3>>0]<<24)^528734635;ea=b+88|0;da=ea;ea=ea+4|0;da=(d[da>>0]|d[da+1>>0]<<8|d[da+2>>0]<<16|d[da+3>>0]<<24)^327033209;ea=(d[ea>>0]|d[ea+1>>0]<<8|d[ea+2>>0]<<16|d[ea+3>>0]<<24)^1541459225;ca=nd(la|0,ma|0,d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24|0,d[ca>>0]|d[ca+1>>0]<<8|d[ca+2>>0]<<16|d[ca+3>>0]<<24|0)|0;ca=nd(ca|0,C|0,R|0,P|0)|0;v=C;aa=aa^ca;ba=ba^v;Q=nd(ba|0,aa|0,-205731576,1779033703)|0;T=C;la=Q^la;ma=T^ma;O=pd(la|0,ma|0,24)|0;L=C;ma=qd(la|0,ma|0,40)|0;O=ma|O;L=C|L;v=nd(W|0,U|0,ca|0,v|0)|0;v=nd(v|0,C|0,O|0,L|0)|0;ca=C;ba=v^ba;aa=ca^aa;ma=pd(ba|0,aa|0,16)|0;la=C;aa=qd(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=nd(ma|0,la|0,Q|0,T|0)|0;Q=C;O=T^O;L=Q^L;aa=pd(O|0,L|0,63)|0;ba=C;L=qd(O|0,L|0,1)|0;aa=L|aa;ba=C|ba;oa=nd(ha|0,ia|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,t|0,x|0)|0;na=C;Z=Z^oa;_=_^na;L=nd(_|0,Z|0,-2067093701,-1150833019)|0;O=C;ha=L^ha;ia=O^ia;J=pd(ha|0,ia|0,24)|0;G=C;ia=qd(ha|0,ia|0,40)|0;J=ia|J;G=C|G;na=nd(h|0,l|0,oa|0,na|0)|0;na=nd(na|0,C|0,J|0,G|0)|0;oa=C;_=na^_;Z=oa^Z;ia=pd(_|0,Z|0,16)|0;ha=C;Z=qd(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;O=nd(ia|0,ha|0,L|0,O|0)|0;L=C;J=O^J;G=L^G;Z=pd(J|0,G|0,63)|0;_=C;G=qd(J|0,G|0,1)|0;Z=G|Z;_=C|_;ka=nd(ta|0,ua|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,p|0,$|0)|0;ja=C;V=V^ka;X=X^ja;G=nd(X|0,V|0,-23791573,1013904242)|0;J=C;ta=G^ta;ua=J^ua;E=pd(ta|0,ua|0,24)|0;z=C;ua=qd(ta|0,ua|0,40)|0;E=ua|E;z=C|z;ja=nd(H|0,F|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,E|0,z|0)|0;ka=C;X=ja^X;V=ka^V;ua=pd(X|0,V|0,16)|0;ta=C;V=qd(X|0,V|0,48)|0;ua=V|ua;ta=C|ta;J=nd(ua|0,ta|0,G|0,J|0)|0;G=C;E=J^E;z=G^z;V=pd(E|0,z|0,63)|0;X=C;z=qd(E|0,z|0,1)|0;V=z|V;X=C|X;ga=nd(pa|0,qa|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,s|0,u|0)|0;fa=C;da=da^ga;ea=ea^fa;z=nd(ea|0,da|0,1595750129,-1521486534)|0;E=C;pa=z^pa;qa=E^qa;wa=pd(pa|0,qa|0,24)|0;va=C;qa=qd(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=nd(n|0,r|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ea=fa^ea;da=ga^da;qa=pd(ea|0,da|0,16)|0;pa=C;da=qd(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;E=nd(qa|0,pa|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;da=pd(wa|0,va|0,63)|0;ea=C;va=qd(wa|0,va|0,1)|0;da=va|da;ea=C|ea;ca=nd(Z|0,_|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,g|0,i|0)|0;v=C;qa=qa^ca;pa=pa^v;G=nd(pa|0,qa|0,J|0,G|0)|0;J=C;Z=G^Z;_=J^_;va=pd(Z|0,_|0,24)|0;wa=C;_=qd(Z|0,_|0,40)|0;va=_|va;wa=C|wa;v=nd(j|0,Y|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;pa=v^pa;qa=ca^qa;_=pd(pa|0,qa|0,16)|0;Z=C;qa=qd(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;J=nd(_|0,Z|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;qa=pd(va|0,wa|0,63)|0;pa=C;wa=qd(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=nd(V|0,X|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,m|0,o|0)|0;na=C;ma=ma^oa;la=la^na;z=nd(la|0,ma|0,E|0,z|0)|0;E=C;V=z^V;X=E^X;wa=pd(V|0,X|0,24)|0;va=C;X=qd(V|0,X|0,40)|0;wa=X|wa;va=C|va;na=nd(M|0,K|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;la=na^la;ma=oa^ma;X=pd(la|0,ma|0,16)|0;V=C;ma=qd(la|0,ma|0,48)|0;X=ma|X;V=C|V;E=nd(X|0,V|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ma=pd(wa|0,va|0,63)|0;la=C;va=qd(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=nd(da|0,ea|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,e|0,f|0)|0;ja=C;ia=ia^ka;ha=ha^ja;Q=nd(ha|0,ia|0,T|0,Q|0)|0;T=C;da=Q^da;ea=T^ea;va=pd(da|0,ea|0,24)|0;wa=C;ea=qd(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=nd(B|0,S|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;ha=ja^ha;ia=ka^ia;ea=pd(ha|0,ia|0,16)|0;da=C;ia=qd(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=nd(ea|0,da|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;ia=pd(va|0,wa|0,63)|0;ha=C;wa=qd(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=nd(aa|0,ba|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,ra|0,sa|0)|0;fa=C;ua=ua^ga;ta=ta^fa;L=nd(ta|0,ua|0,O|0,L|0)|0;O=C;aa=L^aa;ba=O^ba;wa=pd(aa|0,ba|0,24)|0;va=C;ba=qd(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=nd(y|0,A|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ta=fa^ta;ua=ga^ua;ba=pd(ta|0,ua|0,16)|0;aa=C;ua=qd(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;O=nd(ba|0,aa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ua=pd(wa|0,va|0,63)|0;ta=C;va=qd(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;ca=nd(ra|0,sa|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,ua|0,ta|0)|0;v=C;X=ca^X;V=v^V;Q=nd(V|0,X|0,T|0,Q|0)|0;T=C;ua=Q^ua;ta=T^ta;va=pd(ua|0,ta|0,24)|0;wa=C;ta=qd(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;v=nd(m|0,o|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;V=v^V;X=ca^X;ta=pd(V|0,X|0,16)|0;ua=C;X=qd(V|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=nd(ta|0,ua|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;X=pd(va|0,wa|0,63)|0;V=C;wa=qd(va|0,wa|0,1)|0;X=wa|X;V=C|V;oa=nd(qa|0,pa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,p|0,$|0)|0;na=C;ea=ea^oa;da=da^na;L=nd(da|0,ea|0,O|0,L|0)|0;O=C;qa=L^qa;pa=O^pa;wa=pd(qa|0,pa|0,24)|0;va=C;pa=qd(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=nd(g|0,i|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;da=na^da;ea=oa^ea;pa=pd(da|0,ea|0,16)|0;qa=C;ea=qd(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;O=nd(pa|0,qa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ea=pd(wa|0,va|0,63)|0;da=C;va=qd(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=nd(ma|0,la|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,j|0,Y|0)|0;ja=C;ba=ba^ka;aa=aa^ja;G=nd(aa|0,ba|0,J|0,G|0)|0;J=C;ma=G^ma;la=J^la;va=pd(ma|0,la|0,24)|0;wa=C;la=qd(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=nd(y|0,A|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;aa=ja^aa;ba=ka^ba;la=pd(aa|0,ba|0,16)|0;ma=C;ba=qd(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;J=nd(la|0,ma|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ba=pd(va|0,wa|0,63)|0;aa=C;wa=qd(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=nd(ia|0,ha|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,B|0,S|0)|0;fa=C;_=_^ga;Z=Z^fa;z=nd(Z|0,_|0,E|0,z|0)|0;E=C;ia=z^ia;ha=E^ha;wa=pd(ia|0,ha|0,24)|0;va=C;ha=qd(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=nd(s|0,u|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;Z=fa^Z;_=ga^_;ha=pd(Z|0,_|0,16)|0;ia=C;_=qd(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;E=nd(ha|0,ia|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;_=pd(wa|0,va|0,63)|0;Z=C;va=qd(wa|0,va|0,1)|0;_=va|_;Z=C|Z;ca=nd(ea|0,da|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,W|0,U|0)|0;v=C;ha=ha^ca;ia=ia^v;G=nd(ia|0,ha|0,J|0,G|0)|0;J=C;ea=G^ea;da=J^da;va=pd(ea|0,da|0,24)|0;wa=C;da=qd(ea|0,da|0,40)|0;va=da|va;wa=C|wa;v=nd(e|0,f|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ia=v^ia;ha=ca^ha;da=pd(ia|0,ha|0,16)|0;ea=C;ha=qd(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;J=nd(da|0,ea|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ha=pd(va|0,wa|0,63)|0;ia=C;wa=qd(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=nd(ba|0,aa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,R|0,P|0)|0;na=C;ta=ta^oa;ua=ua^na;z=nd(ua|0,ta|0,E|0,z|0)|0;E=C;ba=z^ba;aa=E^aa;wa=pd(ba|0,aa|0,24)|0;va=C;aa=qd(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=nd(t|0,x|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;ua=na^ua;ta=oa^ta;aa=pd(ua|0,ta|0,16)|0;ba=C;ta=qd(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;E=nd(aa|0,ba|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ta=pd(wa|0,va|0,63)|0;ua=C;va=qd(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=nd(_|0,Z|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,M|0,K|0)|0;ja=C;pa=pa^ka;qa=qa^ja;Q=nd(qa|0,pa|0,T|0,Q|0)|0;T=C;_=Q^_;Z=T^Z;va=pd(_|0,Z|0,24)|0;wa=C;Z=qd(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=nd(n|0,r|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;qa=ja^qa;pa=ka^pa;Z=pd(qa|0,pa|0,16)|0;_=C;pa=qd(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=nd(Z|0,_|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;pa=pd(va|0,wa|0,63)|0;qa=C;wa=qd(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=nd(X|0,V|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,H|0,F|0)|0;fa=C;la=la^ga;ma=ma^fa;L=nd(ma|0,la|0,O|0,L|0)|0;O=C;X=L^X;V=O^V;wa=pd(X|0,V|0,24)|0;va=C;V=qd(X|0,V|0,40)|0;wa=V|wa;va=C|va;fa=nd(h|0,l|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ma=fa^ma;la=ga^la;V=pd(ma|0,la|0,16)|0;X=C;la=qd(ma|0,la|0,48)|0;V=la|V;X=C|X;O=nd(V|0,X|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;la=pd(wa|0,va|0,63)|0;ma=C;va=qd(wa|0,va|0,1)|0;la=va|la;ma=C|ma;ca=nd(M|0,K|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,la|0,ma|0)|0;v=C;aa=ca^aa;ba=v^ba;Q=nd(ba|0,aa|0,T|0,Q|0)|0;T=C;la=Q^la;ma=T^ma;va=pd(la|0,ma|0,24)|0;wa=C;ma=qd(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;v=nd(g|0,i|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ba=v^ba;aa=ca^aa;ma=pd(ba|0,aa|0,16)|0;la=C;aa=qd(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=nd(ma|0,la|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;aa=pd(va|0,wa|0,63)|0;ba=C;wa=qd(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=nd(ha|0,ia|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,e|0,f|0)|0;na=C;Z=Z^oa;_=_^na;L=nd(_|0,Z|0,O|0,L|0)|0;O=C;ha=L^ha;ia=O^ia;wa=pd(ha|0,ia|0,24)|0;va=C;ia=qd(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=nd(R|0,P|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;_=na^_;Z=oa^Z;ia=pd(_|0,Z|0,16)|0;ha=C;Z=qd(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;O=nd(ia|0,ha|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;Z=pd(wa|0,va|0,63)|0;_=C;va=qd(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=nd(ta|0,ua|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,H|0,F|0)|0;ja=C;V=V^ka;X=X^ja;G=nd(X|0,V|0,J|0,G|0)|0;J=C;ta=G^ta;ua=J^ua;va=pd(ta|0,ua|0,24)|0;wa=C;ua=qd(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=nd(t|0,x|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;X=ja^X;V=ka^V;ua=pd(X|0,V|0,16)|0;ta=C;V=qd(X|0,V|0,48)|0;ua=V|ua;ta=C|ta;J=nd(ua|0,ta|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;V=pd(va|0,wa|0,63)|0;X=C;wa=qd(va|0,wa|0,1)|0;V=wa|V;X=C|X;ga=nd(pa|0,qa|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,y|0,A|0)|0;fa=C;da=da^ga;ea=ea^fa;z=nd(ea|0,da|0,E|0,z|0)|0;E=C;pa=z^pa;qa=E^qa;wa=pd(pa|0,qa|0,24)|0;va=C;qa=qd(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=nd(B|0,S|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ea=fa^ea;da=ga^da;qa=pd(ea|0,da|0,16)|0;pa=C;da=qd(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;E=nd(qa|0,pa|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;da=pd(wa|0,va|0,63)|0;ea=C;va=qd(wa|0,va|0,1)|0;da=va|da;ea=C|ea;ca=nd(Z|0,_|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,m|0,o|0)|0;v=C;qa=qa^ca;pa=pa^v;G=nd(pa|0,qa|0,J|0,G|0)|0;J=C;Z=G^Z;_=J^_;va=pd(Z|0,_|0,24)|0;wa=C;_=qd(Z|0,_|0,40)|0;va=_|va;wa=C|wa;v=nd(ra|0,sa|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;pa=v^pa;qa=ca^qa;_=pd(pa|0,qa|0,16)|0;Z=C;qa=qd(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;J=nd(_|0,Z|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;qa=pd(va|0,wa|0,63)|0;pa=C;wa=qd(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=nd(V|0,X|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,h|0,l|0)|0;na=C;ma=ma^oa;la=la^na;z=nd(la|0,ma|0,E|0,z|0)|0;E=C;V=z^V;X=E^X;wa=pd(V|0,X|0,24)|0;va=C;X=qd(V|0,X|0,40)|0;wa=X|wa;va=C|va;na=nd(s|0,u|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;la=na^la;ma=oa^ma;X=pd(la|0,ma|0,16)|0;V=C;ma=qd(la|0,ma|0,48)|0;X=ma|X;V=C|V;E=nd(X|0,V|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ma=pd(wa|0,va|0,63)|0;la=C;va=qd(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=nd(da|0,ea|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,n|0,r|0)|0;ja=C;ia=ia^ka;ha=ha^ja;Q=nd(ha|0,ia|0,T|0,Q|0)|0;T=C;da=Q^da;ea=T^ea;va=pd(da|0,ea|0,24)|0;wa=C;ea=qd(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=nd(W|0,U|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;ha=ja^ha;ia=ka^ia;ea=pd(ha|0,ia|0,16)|0;da=C;ia=qd(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=nd(ea|0,da|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;ia=pd(va|0,wa|0,63)|0;ha=C;wa=qd(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=nd(aa|0,ba|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,j|0,Y|0)|0;fa=C;ua=ua^ga;ta=ta^fa;L=nd(ta|0,ua|0,O|0,L|0)|0;O=C;aa=L^aa;ba=O^ba;wa=pd(aa|0,ba|0,24)|0;va=C;ba=qd(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=nd(p|0,$|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ta=fa^ta;ua=ga^ua;ba=pd(ta|0,ua|0,16)|0;aa=C;ua=qd(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;O=nd(ba|0,aa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ua=pd(wa|0,va|0,63)|0;ta=C;va=qd(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;ca=nd(n|0,r|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,ua|0,ta|0)|0;v=C;X=ca^X;V=v^V;Q=nd(V|0,X|0,T|0,Q|0)|0;T=C;ua=Q^ua;ta=T^ta;va=pd(ua|0,ta|0,24)|0;wa=C;ta=qd(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;v=nd(j|0,Y|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;V=v^V;X=ca^X;ta=pd(V|0,X|0,16)|0;ua=C;X=qd(V|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=nd(ta|0,ua|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;X=pd(va|0,wa|0,63)|0;V=C;wa=qd(va|0,wa|0,1)|0;X=wa|X;V=C|V;oa=nd(qa|0,pa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,h|0,l|0)|0;na=C;ea=ea^oa;da=da^na;L=nd(da|0,ea|0,O|0,L|0)|0;O=C;qa=L^qa;pa=O^pa;wa=pd(qa|0,pa|0,24)|0;va=C;pa=qd(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=nd(W|0,U|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;da=na^da;ea=oa^ea;pa=pd(da|0,ea|0,16)|0;qa=C;ea=qd(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;O=nd(pa|0,qa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ea=pd(wa|0,va|0,63)|0;da=C;va=qd(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=nd(ma|0,la|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,B|0,S|0)|0;ja=C;ba=ba^ka;aa=aa^ja;G=nd(aa|0,ba|0,J|0,G|0)|0;J=C;ma=G^ma;la=J^la;va=pd(ma|0,la|0,24)|0;wa=C;la=qd(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=nd(e|0,f|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;aa=ja^aa;ba=ka^ba;la=pd(aa|0,ba|0,16)|0;ma=C;ba=qd(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;J=nd(la|0,ma|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ba=pd(va|0,wa|0,63)|0;aa=C;wa=qd(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=nd(ia|0,ha|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,M|0,K|0)|0;fa=C;_=_^ga;Z=Z^fa;z=nd(Z|0,_|0,E|0,z|0)|0;E=C;ia=z^ia;ha=E^ha;wa=pd(ia|0,ha|0,24)|0;va=C;ha=qd(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=nd(ra|0,sa|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;Z=fa^Z;_=ga^_;ha=pd(Z|0,_|0,16)|0;ia=C;_=qd(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;E=nd(ha|0,ia|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;_=pd(wa|0,va|0,63)|0;Z=C;va=qd(wa|0,va|0,1)|0;_=va|_;Z=C|Z;ca=nd(ea|0,da|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,t|0,x|0)|0;v=C;ha=ha^ca;ia=ia^v;G=nd(ia|0,ha|0,J|0,G|0)|0;J=C;ea=G^ea;da=J^da;va=pd(ea|0,da|0,24)|0;wa=C;da=qd(ea|0,da|0,40)|0;va=da|va;wa=C|wa;v=nd(s|0,u|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ia=v^ia;ha=ca^ha;da=pd(ia|0,ha|0,16)|0;ea=C;ha=qd(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;J=nd(da|0,ea|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ha=pd(va|0,wa|0,63)|0;ia=C;wa=qd(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=nd(ba|0,aa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,H|0,F|0)|0;na=C;ta=ta^oa;ua=ua^na;z=nd(ua|0,ta|0,E|0,z|0)|0;E=C;ba=z^ba;aa=E^aa;wa=pd(ba|0,aa|0,24)|0;va=C;aa=qd(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=nd(m|0,o|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;ua=na^ua;ta=oa^ta;aa=pd(ua|0,ta|0,16)|0;ba=C;ta=qd(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;E=nd(aa|0,ba|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ta=pd(wa|0,va|0,63)|0;ua=C;va=qd(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=nd(_|0,Z|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,p|0,$|0)|0;ja=C;pa=pa^ka;qa=qa^ja;Q=nd(qa|0,pa|0,T|0,Q|0)|0;T=C;_=Q^_;Z=T^Z;va=pd(_|0,Z|0,24)|0;wa=C;Z=qd(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=nd(R|0,P|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;qa=ja^qa;pa=ka^pa;Z=pd(qa|0,pa|0,16)|0;_=C;pa=qd(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=nd(Z|0,_|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;pa=pd(va|0,wa|0,63)|0;qa=C;wa=qd(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=nd(X|0,V|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,y|0,A|0)|0;fa=C;la=la^ga;ma=ma^fa;L=nd(ma|0,la|0,O|0,L|0)|0;O=C;X=L^X;V=O^V;wa=pd(X|0,V|0,24)|0;va=C;V=qd(X|0,V|0,40)|0;wa=V|wa;va=C|va;fa=nd(g|0,i|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ma=fa^ma;la=ga^la;V=pd(ma|0,la|0,16)|0;X=C;la=qd(ma|0,la|0,48)|0;V=la|V;X=C|X;O=nd(V|0,X|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;la=pd(wa|0,va|0,63)|0;ma=C;va=qd(wa|0,va|0,1)|0;la=va|la;ma=C|ma;ca=nd(j|0,Y|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,la|0,ma|0)|0;v=C;aa=ca^aa;ba=v^ba;Q=nd(ba|0,aa|0,T|0,Q|0)|0;T=C;la=Q^la;ma=T^ma;va=pd(la|0,ma|0,24)|0;wa=C;ma=qd(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;v=nd(R|0,P|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ba=v^ba;aa=ca^aa;ma=pd(ba|0,aa|0,16)|0;la=C;aa=qd(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=nd(ma|0,la|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;aa=pd(va|0,wa|0,63)|0;ba=C;wa=qd(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=nd(ha|0,ia|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,H|0,F|0)|0;na=C;Z=Z^oa;_=_^na;L=nd(_|0,Z|0,O|0,L|0)|0;O=C;ha=L^ha;ia=O^ia;wa=pd(ha|0,ia|0,24)|0;va=C;ia=qd(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=nd(n|0,r|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;_=na^_;Z=oa^Z;ia=pd(_|0,Z|0,16)|0;ha=C;Z=qd(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;O=nd(ia|0,ha|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;Z=pd(wa|0,va|0,63)|0;_=C;va=qd(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=nd(ta|0,ua|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,t|0,x|0)|0;ja=C;V=V^ka;X=X^ja;G=nd(X|0,V|0,J|0,G|0)|0;J=C;ta=G^ta;ua=J^ua;va=pd(ta|0,ua|0,24)|0;wa=C;ua=qd(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=nd(p|0,$|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;X=ja^X;V=ka^V;ua=pd(X|0,V|0,16)|0;ta=C;V=qd(X|0,V|0,48)|0;ua=V|ua;ta=C|ta;J=nd(ua|0,ta|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;V=pd(va|0,wa|0,63)|0;X=C;wa=qd(va|0,wa|0,1)|0;V=wa|V;X=C|X;ga=nd(pa|0,qa|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,m|0,o|0)|0;fa=C;da=da^ga;ea=ea^fa;z=nd(ea|0,da|0,E|0,z|0)|0;E=C;pa=z^pa;qa=E^qa;wa=pd(pa|0,qa|0,24)|0;va=C;qa=qd(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=nd(y|0,A|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ea=fa^ea;da=ga^da;qa=pd(ea|0,da|0,16)|0;pa=C;da=qd(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;E=nd(qa|0,pa|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;da=pd(wa|0,va|0,63)|0;ea=C;va=qd(wa|0,va|0,1)|0;da=va|da;ea=C|ea;ca=nd(Z|0,_|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,ra|0,sa|0)|0;v=C;qa=qa^ca;pa=pa^v;G=nd(pa|0,qa|0,J|0,G|0)|0;J=C;Z=G^Z;_=J^_;va=pd(Z|0,_|0,24)|0;wa=C;_=qd(Z|0,_|0,40)|0;va=_|va;wa=C|wa;v=nd(W|0,U|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;pa=v^pa;qa=ca^qa;_=pd(pa|0,qa|0,16)|0;Z=C;qa=qd(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;J=nd(_|0,Z|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;qa=pd(va|0,wa|0,63)|0;pa=C;wa=qd(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=nd(V|0,X|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,M|0,K|0)|0;na=C;ma=ma^oa;la=la^na;z=nd(la|0,ma|0,E|0,z|0)|0;E=C;V=z^V;X=E^X;wa=pd(V|0,X|0,24)|0;va=C;X=qd(V|0,X|0,40)|0;wa=X|wa;va=C|va;na=nd(e|0,f|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;la=na^la;ma=oa^ma;X=pd(la|0,ma|0,16)|0;V=C;ma=qd(la|0,ma|0,48)|0;X=ma|X;V=C|V;E=nd(X|0,V|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ma=pd(wa|0,va|0,63)|0;la=C;va=qd(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=nd(da|0,ea|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,s|0,u|0)|0;ja=C;ia=ia^ka;ha=ha^ja;Q=nd(ha|0,ia|0,T|0,Q|0)|0;T=C;da=Q^da;ea=T^ea;va=pd(da|0,ea|0,24)|0;wa=C;ea=qd(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=nd(g|0,i|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;ha=ja^ha;ia=ka^ia;ea=pd(ha|0,ia|0,16)|0;da=C;ia=qd(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=nd(ea|0,da|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;ia=pd(va|0,wa|0,63)|0;ha=C;wa=qd(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=nd(aa|0,ba|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,h|0,l|0)|0;fa=C;ua=ua^ga;ta=ta^fa;L=nd(ta|0,ua|0,O|0,L|0)|0;O=C;aa=L^aa;ba=O^ba;wa=pd(aa|0,ba|0,24)|0;va=C;ba=qd(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=nd(B|0,S|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ta=fa^ta;ua=ga^ua;ba=pd(ta|0,ua|0,16)|0;aa=C;ua=qd(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;O=nd(ba|0,aa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ua=pd(wa|0,va|0,63)|0;ta=C;va=qd(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;ca=nd(t|0,x|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,ua|0,ta|0)|0;v=C;X=ca^X;V=v^V;Q=nd(V|0,X|0,T|0,Q|0)|0;T=C;ua=Q^ua;ta=T^ta;va=pd(ua|0,ta|0,24)|0;wa=C;ta=qd(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;v=nd(e|0,f|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;V=v^V;X=ca^X;ta=pd(V|0,X|0,16)|0;ua=C;X=qd(V|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=nd(ta|0,ua|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;X=pd(va|0,wa|0,63)|0;V=C;wa=qd(va|0,wa|0,1)|0;X=wa|X;V=C|V;oa=nd(qa|0,pa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,s|0,u|0)|0;na=C;ea=ea^oa;da=da^na;L=nd(da|0,ea|0,O|0,L|0)|0;O=C;qa=L^qa;pa=O^pa;wa=pd(qa|0,pa|0,24)|0;va=C;pa=qd(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=nd(m|0,o|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;da=na^da;ea=oa^ea;pa=pd(da|0,ea|0,16)|0;qa=C;ea=qd(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;O=nd(pa|0,qa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ea=pd(wa|0,va|0,63)|0;da=C;va=qd(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=nd(ma|0,la|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,R|0,P|0)|0;ja=C;ba=ba^ka;aa=aa^ja;G=nd(aa|0,ba|0,J|0,G|0)|0;J=C;ma=G^ma;la=J^la;va=pd(ma|0,la|0,24)|0;wa=C;la=qd(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=nd(M|0,K|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;aa=ja^aa;ba=ka^ba;la=pd(aa|0,ba|0,16)|0;ma=C;ba=qd(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;J=nd(la|0,ma|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ba=pd(va|0,wa|0,63)|0;aa=C;wa=qd(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=nd(ia|0,ha|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,g|0,i|0)|0;fa=C;_=_^ga;Z=Z^fa;z=nd(Z|0,_|0,E|0,z|0)|0;E=C;ia=z^ia;ha=E^ha;wa=pd(ia|0,ha|0,24)|0;va=C;ha=qd(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=nd(h|0,l|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;Z=fa^Z;_=ga^_;ha=pd(Z|0,_|0,16)|0;ia=C;_=qd(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;E=nd(ha|0,ia|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;_=pd(wa|0,va|0,63)|0;Z=C;va=qd(wa|0,va|0,1)|0;_=va|_;Z=C|Z;ca=nd(ea|0,da|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,p|0,$|0)|0;v=C;ha=ha^ca;ia=ia^v;G=nd(ia|0,ha|0,J|0,G|0)|0;J=C;ea=G^ea;da=J^da;va=pd(ea|0,da|0,24)|0;wa=C;da=qd(ea|0,da|0,40)|0;va=da|va;wa=C|wa;v=nd(B|0,S|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ia=v^ia;ha=ca^ha;da=pd(ia|0,ha|0,16)|0;ea=C;ha=qd(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;J=nd(da|0,ea|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ha=pd(va|0,wa|0,63)|0;ia=C;wa=qd(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=nd(ba|0,aa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,n|0,r|0)|0;na=C;ta=ta^oa;ua=ua^na;z=nd(ua|0,ta|0,E|0,z|0)|0;E=C;ba=z^ba;aa=E^aa;wa=pd(ba|0,aa|0,24)|0;va=C;aa=qd(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=nd(H|0,F|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;ua=na^ua;ta=oa^ta;aa=pd(ua|0,ta|0,16)|0;ba=C;ta=qd(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;E=nd(aa|0,ba|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ta=pd(wa|0,va|0,63)|0;ua=C;va=qd(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=nd(_|0,Z|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,y|0,A|0)|0;ja=C;pa=pa^ka;qa=qa^ja;Q=nd(qa|0,pa|0,T|0,Q|0)|0;T=C;_=Q^_;Z=T^Z;va=pd(_|0,Z|0,24)|0;wa=C;Z=qd(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=nd(ra|0,sa|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;qa=ja^qa;pa=ka^pa;Z=pd(qa|0,pa|0,16)|0;_=C;pa=qd(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=nd(Z|0,_|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;pa=pd(va|0,wa|0,63)|0;qa=C;wa=qd(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=nd(X|0,V|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,W|0,U|0)|0;fa=C;la=la^ga;ma=ma^fa;L=nd(ma|0,la|0,O|0,L|0)|0;O=C;X=L^X;V=O^V;wa=pd(X|0,V|0,24)|0;va=C;V=qd(X|0,V|0,40)|0;wa=V|wa;va=C|va;fa=nd(j|0,Y|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ma=fa^ma;la=ga^la;V=pd(ma|0,la|0,16)|0;X=C;la=qd(ma|0,la|0,48)|0;V=la|V;X=C|X;O=nd(V|0,X|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;la=pd(wa|0,va|0,63)|0;ma=C;va=qd(wa|0,va|0,1)|0;la=va|la;ma=C|ma;ca=nd(e|0,f|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,la|0,ma|0)|0;v=C;aa=ca^aa;ba=v^ba;Q=nd(ba|0,aa|0,T|0,Q|0)|0;T=C;la=Q^la;ma=T^ma;va=pd(la|0,ma|0,24)|0;wa=C;ma=qd(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;v=nd(H|0,F|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ba=v^ba;aa=ca^aa;ma=pd(ba|0,aa|0,16)|0;la=C;aa=qd(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=nd(ma|0,la|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;aa=pd(va|0,wa|0,63)|0;ba=C;wa=qd(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=nd(ha|0,ia|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,W|0,U|0)|0;na=C;Z=Z^oa;_=_^na;L=nd(_|0,Z|0,O|0,L|0)|0;O=C;ha=L^ha;ia=O^ia;wa=pd(ha|0,ia|0,24)|0;va=C;ia=qd(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=nd(y|0,A|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;_=na^_;Z=oa^Z;ia=pd(_|0,Z|0,16)|0;ha=C;Z=qd(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;O=nd(ia|0,ha|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;Z=pd(wa|0,va|0,63)|0;_=C;va=qd(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=nd(ta|0,ua|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,ra|0,sa|0)|0;ja=C;V=V^ka;X=X^ja;G=nd(X|0,V|0,J|0,G|0)|0;J=C;ta=G^ta;ua=J^ua;va=pd(ta|0,ua|0,24)|0;wa=C;ua=qd(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=nd(B|0,S|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;X=ja^X;V=ka^V;ua=pd(X|0,V|0,16)|0;ta=C;V=qd(X|0,V|0,48)|0;ua=V|ua;ta=C|ta;J=nd(ua|0,ta|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;V=pd(va|0,wa|0,63)|0;X=C;wa=qd(va|0,wa|0,1)|0;V=wa|V;X=C|X;ga=nd(pa|0,qa|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,p|0,$|0)|0;fa=C;da=da^ga;ea=ea^fa;z=nd(ea|0,da|0,E|0,z|0)|0;E=C;pa=z^pa;qa=E^qa;wa=pd(pa|0,qa|0,24)|0;va=C;qa=qd(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=nd(m|0,o|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ea=fa^ea;da=ga^da;qa=pd(ea|0,da|0,16)|0;pa=C;da=qd(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;E=nd(qa|0,pa|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;da=pd(wa|0,va|0,63)|0;ea=C;va=qd(wa|0,va|0,1)|0;da=va|da;ea=C|ea;ca=nd(Z|0,_|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,R|0,P|0)|0;v=C;qa=qa^ca;pa=pa^v;G=nd(pa|0,qa|0,J|0,G|0)|0;J=C;Z=G^Z;_=J^_;va=pd(Z|0,_|0,24)|0;wa=C;_=qd(Z|0,_|0,40)|0;va=_|va;wa=C|wa;v=nd(n|0,r|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;pa=v^pa;qa=ca^qa;_=pd(pa|0,qa|0,16)|0;Z=C;qa=qd(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;J=nd(_|0,Z|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;qa=pd(va|0,wa|0,63)|0;pa=C;wa=qd(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=nd(V|0,X|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,s|0,u|0)|0;na=C;ma=ma^oa;la=la^na;z=nd(la|0,ma|0,E|0,z|0)|0;E=C;V=z^V;X=E^X;wa=pd(V|0,X|0,24)|0;va=C;X=qd(V|0,X|0,40)|0;wa=X|wa;va=C|va;na=nd(h|0,l|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;la=na^la;ma=oa^ma;X=pd(la|0,ma|0,16)|0;V=C;ma=qd(la|0,ma|0,48)|0;X=ma|X;V=C|V;E=nd(X|0,V|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ma=pd(wa|0,va|0,63)|0;la=C;va=qd(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=nd(da|0,ea|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,j|0,Y|0)|0;ja=C;ia=ia^ka;ha=ha^ja;Q=nd(ha|0,ia|0,T|0,Q|0)|0;T=C;da=Q^da;ea=T^ea;va=pd(da|0,ea|0,24)|0;wa=C;ea=qd(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=nd(t|0,x|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;ha=ja^ha;ia=ka^ia;ea=pd(ha|0,ia|0,16)|0;da=C;ia=qd(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=nd(ea|0,da|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;ia=pd(va|0,wa|0,63)|0;ha=C;wa=qd(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=nd(aa|0,ba|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,g|0,i|0)|0;fa=C;ua=ua^ga;ta=ta^fa;L=nd(ta|0,ua|0,O|0,L|0)|0;O=C;aa=L^aa;ba=O^ba;wa=pd(aa|0,ba|0,24)|0;va=C;ba=qd(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=nd(M|0,K|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ta=fa^ta;ua=ga^ua;ba=pd(ta|0,ua|0,16)|0;aa=C;ua=qd(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;O=nd(ba|0,aa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ua=pd(wa|0,va|0,63)|0;ta=C;va=qd(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;ca=nd(B|0,S|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,ua|0,ta|0)|0;v=C;X=ca^X;V=v^V;Q=nd(V|0,X|0,T|0,Q|0)|0;T=C;ua=Q^ua;ta=T^ta;va=pd(ua|0,ta|0,24)|0;wa=C;ta=qd(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;v=nd(M|0,K|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;V=v^V;X=ca^X;ta=pd(V|0,X|0,16)|0;ua=C;X=qd(V|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=nd(ta|0,ua|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;X=pd(va|0,wa|0,63)|0;V=C;wa=qd(va|0,wa|0,1)|0;X=wa|X;V=C|V;oa=nd(qa|0,pa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,n|0,r|0)|0;na=C;ea=ea^oa;da=da^na;L=nd(da|0,ea|0,O|0,L|0)|0;O=C;qa=L^qa;pa=O^pa;wa=pd(qa|0,pa|0,24)|0;va=C;pa=qd(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=nd(ra|0,sa|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;da=na^da;ea=oa^ea;pa=pd(da|0,ea|0,16)|0;qa=C;ea=qd(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;O=nd(pa|0,qa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ea=pd(wa|0,va|0,63)|0;da=C;va=qd(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=nd(ma|0,la|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,e|0,f|0)|0;ja=C;ba=ba^ka;aa=aa^ja;G=nd(aa|0,ba|0,J|0,G|0)|0;J=C;ma=G^ma;la=J^la;va=pd(ma|0,la|0,24)|0;wa=C;la=qd(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=nd(W|0,U|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;aa=ja^aa;ba=ka^ba;la=pd(aa|0,ba|0,16)|0;ma=C;ba=qd(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;J=nd(la|0,ma|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ba=pd(va|0,wa|0,63)|0;aa=C;wa=qd(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=nd(ia|0,ha|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,h|0,l|0)|0;fa=C;_=_^ga;Z=Z^fa;z=nd(Z|0,_|0,E|0,z|0)|0;E=C;ia=z^ia;ha=E^ha;wa=pd(ia|0,ha|0,24)|0;va=C;ha=qd(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=nd(j|0,Y|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;Z=fa^Z;_=ga^_;ha=pd(Z|0,_|0,16)|0;ia=C;_=qd(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;E=nd(ha|0,ia|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;_=pd(wa|0,va|0,63)|0;Z=C;va=qd(wa|0,va|0,1)|0;_=va|_;Z=C|Z;ca=nd(ea|0,da|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,H|0,F|0)|0;v=C;ha=ha^ca;ia=ia^v;G=nd(ia|0,ha|0,J|0,G|0)|0;J=C;ea=G^ea;da=J^da;va=pd(ea|0,da|0,24)|0;wa=C;da=qd(ea|0,da|0,40)|0;va=da|va;wa=C|wa;v=nd(R|0,P|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ia=v^ia;ha=ca^ha;da=pd(ia|0,ha|0,16)|0;ea=C;ha=qd(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;J=nd(da|0,ea|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ha=pd(va|0,wa|0,63)|0;ia=C;wa=qd(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=nd(ba|0,aa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,y|0,A|0)|0;na=C;ta=ta^oa;ua=ua^na;z=nd(ua|0,ta|0,E|0,z|0)|0;E=C;ba=z^ba;aa=E^aa;wa=pd(ba|0,aa|0,24)|0;va=C;aa=qd(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=nd(p|0,$|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;ua=na^ua;ta=oa^ta;aa=pd(ua|0,ta|0,16)|0;ba=C;ta=qd(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;E=nd(aa|0,ba|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ta=pd(wa|0,va|0,63)|0;ua=C;va=qd(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=nd(_|0,Z|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,g|0,i|0)|0;ja=C;pa=pa^ka;qa=qa^ja;Q=nd(qa|0,pa|0,T|0,Q|0)|0;T=C;_=Q^_;Z=T^Z;va=pd(_|0,Z|0,24)|0;wa=C;Z=qd(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=nd(s|0,u|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;qa=ja^qa;pa=ka^pa;Z=pd(qa|0,pa|0,16)|0;_=C;pa=qd(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=nd(Z|0,_|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;pa=pd(va|0,wa|0,63)|0;qa=C;wa=qd(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=nd(X|0,V|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,t|0,x|0)|0;fa=C;la=la^ga;ma=ma^fa;L=nd(ma|0,la|0,O|0,L|0)|0;O=C;X=L^X;V=O^V;wa=pd(X|0,V|0,24)|0;va=C;V=qd(X|0,V|0,40)|0;wa=V|wa;va=C|va;fa=nd(m|0,o|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ma=fa^ma;la=ga^la;V=pd(ma|0,la|0,16)|0;X=C;la=qd(ma|0,la|0,48)|0;V=la|V;X=C|X;O=nd(V|0,X|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;la=pd(wa|0,va|0,63)|0;ma=C;va=qd(wa|0,va|0,1)|0;la=va|la;ma=C|ma;ca=nd(s|0,u|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,la|0,ma|0)|0;v=C;aa=ca^aa;ba=v^ba;Q=nd(ba|0,aa|0,T|0,Q|0)|0;T=C;la=Q^la;ma=T^ma;va=pd(la|0,ma|0,24)|0;wa=C;ma=qd(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;v=nd(y|0,A|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ba=v^ba;aa=ca^aa;ma=pd(ba|0,aa|0,16)|0;la=C;aa=qd(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=nd(ma|0,la|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;aa=pd(va|0,wa|0,63)|0;ba=C;wa=qd(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=nd(ha|0,ia|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,ra|0,sa|0)|0;na=C;Z=Z^oa;_=_^na;L=nd(_|0,Z|0,O|0,L|0)|0;O=C;ha=L^ha;ia=O^ia;wa=pd(ha|0,ia|0,24)|0;va=C;ia=qd(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=nd(j|0,Y|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;_=na^_;Z=oa^Z;ia=pd(_|0,Z|0,16)|0;ha=C;Z=qd(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;O=nd(ia|0,ha|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;Z=pd(wa|0,va|0,63)|0;_=C;va=qd(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=nd(ta|0,ua|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,M|0,K|0)|0;ja=C;V=V^ka;X=X^ja;G=nd(X|0,V|0,J|0,G|0)|0;J=C;ta=G^ta;ua=J^ua;va=pd(ta|0,ua|0,24)|0;wa=C;ua=qd(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=nd(h|0,l|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;X=ja^X;V=ka^V;ua=pd(X|0,V|0,16)|0;ta=C;V=qd(X|0,V|0,48)|0;ua=V|ua;ta=C|ta;J=nd(ua|0,ta|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;V=pd(va|0,wa|0,63)|0;X=C;wa=qd(va|0,wa|0,1)|0;V=wa|V;X=C|X;ga=nd(pa|0,qa|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,R|0,P|0)|0;fa=C;da=da^ga;ea=ea^fa;z=nd(ea|0,da|0,E|0,z|0)|0;E=C;pa=z^pa;qa=E^qa;wa=pd(pa|0,qa|0,24)|0;va=C;qa=qd(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=nd(g|0,i|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ea=fa^ea;da=ga^da;qa=pd(ea|0,da|0,16)|0;pa=C;da=qd(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;E=nd(qa|0,pa|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;da=pd(wa|0,va|0,63)|0;ea=C;va=qd(wa|0,va|0,1)|0;da=va|da;ea=C|ea;ca=nd(Z|0,_|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,e|0,f|0)|0;v=C;qa=qa^ca;pa=pa^v;G=nd(pa|0,qa|0,J|0,G|0)|0;J=C;Z=G^Z;_=J^_;va=pd(Z|0,_|0,24)|0;wa=C;_=qd(Z|0,_|0,40)|0;va=_|va;wa=C|wa;v=nd(t|0,x|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;pa=v^pa;qa=ca^qa;_=pd(pa|0,qa|0,16)|0;Z=C;qa=qd(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;J=nd(_|0,Z|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;qa=pd(va|0,wa|0,63)|0;pa=C;wa=qd(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=nd(V|0,X|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,B|0,S|0)|0;na=C;ma=ma^oa;la=la^na;z=nd(la|0,ma|0,E|0,z|0)|0;E=C;V=z^V;X=E^X;wa=pd(V|0,X|0,24)|0;va=C;X=qd(V|0,X|0,40)|0;wa=X|wa;va=C|va;na=nd(n|0,r|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;la=na^la;ma=oa^ma;X=pd(la|0,ma|0,16)|0;V=C;ma=qd(la|0,ma|0,48)|0;X=ma|X;V=C|V;E=nd(X|0,V|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ma=pd(wa|0,va|0,63)|0;la=C;va=qd(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=nd(da|0,ea|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,W|0,U|0)|0;ja=C;ia=ia^ka;ha=ha^ja;Q=nd(ha|0,ia|0,T|0,Q|0)|0;T=C;da=Q^da;ea=T^ea;va=pd(da|0,ea|0,24)|0;wa=C;ea=qd(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=nd(p|0,$|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;ha=ja^ha;ia=ka^ia;ea=pd(ha|0,ia|0,16)|0;da=C;ia=qd(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=nd(ea|0,da|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;ia=pd(va|0,wa|0,63)|0;ha=C;wa=qd(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=nd(aa|0,ba|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,m|0,o|0)|0;fa=C;ua=ua^ga;ta=ta^fa;L=nd(ta|0,ua|0,O|0,L|0)|0;O=C;aa=L^aa;ba=O^ba;wa=pd(aa|0,ba|0,24)|0;va=C;ba=qd(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=nd(H|0,F|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ta=fa^ta;ua=ga^ua;ba=pd(ta|0,ua|0,16)|0;aa=C;ua=qd(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;O=nd(ba|0,aa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ua=pd(wa|0,va|0,63)|0;ta=C;va=qd(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;ca=nd(m|0,o|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,ua|0,ta|0)|0;v=C;X=ca^X;V=v^V;Q=nd(V|0,X|0,T|0,Q|0)|0;T=C;ua=Q^ua;ta=T^ta;va=pd(ua|0,ta|0,24)|0;wa=C;ta=qd(ua|0,ta|0,40)|0;va=ta|va;wa=C|wa;v=nd(t|0,x|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;V=v^V;X=ca^X;ta=pd(V|0,X|0,16)|0;ua=C;X=qd(V|0,X|0,48)|0;ta=X|ta;ua=C|ua;T=nd(ta|0,ua|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;X=pd(va|0,wa|0,63)|0;V=C;wa=qd(va|0,wa|0,1)|0;X=wa|X;V=C|V;oa=nd(qa|0,pa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,g|0,i|0)|0;na=C;ea=ea^oa;da=da^na;L=nd(da|0,ea|0,O|0,L|0)|0;O=C;qa=L^qa;pa=O^pa;wa=pd(qa|0,pa|0,24)|0;va=C;pa=qd(qa|0,pa|0,40)|0;wa=pa|wa;va=C|va;na=nd(p|0,$|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;da=na^da;ea=oa^ea;pa=pd(da|0,ea|0,16)|0;qa=C;ea=qd(da|0,ea|0,48)|0;pa=ea|pa;qa=C|qa;O=nd(pa|0,qa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ea=pd(wa|0,va|0,63)|0;da=C;va=qd(wa|0,va|0,1)|0;ea=va|ea;da=C|da;ka=nd(ma|0,la|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,n|0,r|0)|0;ja=C;ba=ba^ka;aa=aa^ja;G=nd(aa|0,ba|0,J|0,G|0)|0;J=C;ma=G^ma;la=J^la;va=pd(ma|0,la|0,24)|0;wa=C;la=qd(ma|0,la|0,40)|0;va=la|va;wa=C|wa;ja=nd(s|0,u|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;aa=ja^aa;ba=ka^ba;la=pd(aa|0,ba|0,16)|0;ma=C;ba=qd(aa|0,ba|0,48)|0;la=ba|la;ma=C|ma;J=nd(la|0,ma|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ba=pd(va|0,wa|0,63)|0;aa=C;wa=qd(va|0,wa|0,1)|0;ba=wa|ba;aa=C|aa;ga=nd(ia|0,ha|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,W|0,U|0)|0;fa=C;_=_^ga;Z=Z^fa;z=nd(Z|0,_|0,E|0,z|0)|0;E=C;ia=z^ia;ha=E^ha;wa=pd(ia|0,ha|0,24)|0;va=C;ha=qd(ia|0,ha|0,40)|0;wa=ha|wa;va=C|va;fa=nd(H|0,F|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;Z=fa^Z;_=ga^_;ha=pd(Z|0,_|0,16)|0;ia=C;_=qd(Z|0,_|0,48)|0;ha=_|ha;ia=C|ia;E=nd(ha|0,ia|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;_=pd(wa|0,va|0,63)|0;Z=C;va=qd(wa|0,va|0,1)|0;_=va|_;Z=C|Z;ca=nd(ea|0,da|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,y|0,A|0)|0;v=C;ha=ha^ca;ia=ia^v;G=nd(ia|0,ha|0,J|0,G|0)|0;J=C;ea=G^ea;da=J^da;va=pd(ea|0,da|0,24)|0;wa=C;da=qd(ea|0,da|0,40)|0;va=da|va;wa=C|wa;v=nd(M|0,K|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ia=v^ia;ha=ca^ha;da=pd(ia|0,ha|0,16)|0;ea=C;ha=qd(ia|0,ha|0,48)|0;da=ha|da;ea=C|ea;J=nd(da|0,ea|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;ha=pd(va|0,wa|0,63)|0;ia=C;wa=qd(va|0,wa|0,1)|0;ha=wa|ha;ia=C|ia;oa=nd(ba|0,aa|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,j|0,Y|0)|0;na=C;ta=ta^oa;ua=ua^na;z=nd(ua|0,ta|0,E|0,z|0)|0;E=C;ba=z^ba;aa=E^aa;wa=pd(ba|0,aa|0,24)|0;va=C;aa=qd(ba|0,aa|0,40)|0;wa=aa|wa;va=C|va;na=nd(ra|0,sa|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;ua=na^ua;ta=oa^ta;aa=pd(ua|0,ta|0,16)|0;ba=C;ta=qd(ua|0,ta|0,48)|0;aa=ta|aa;ba=C|ba;E=nd(aa|0,ba|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ta=pd(wa|0,va|0,63)|0;ua=C;va=qd(wa|0,va|0,1)|0;ta=va|ta;ua=C|ua;ka=nd(_|0,Z|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,h|0,l|0)|0;ja=C;pa=pa^ka;qa=qa^ja;Q=nd(qa|0,pa|0,T|0,Q|0)|0;T=C;_=Q^_;Z=T^Z;va=pd(_|0,Z|0,24)|0;wa=C;Z=qd(_|0,Z|0,40)|0;va=Z|va;wa=C|wa;ja=nd(e|0,f|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;qa=ja^qa;pa=ka^pa;Z=pd(qa|0,pa|0,16)|0;_=C;pa=qd(qa|0,pa|0,48)|0;Z=pa|Z;_=C|_;T=nd(Z|0,_|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;pa=pd(va|0,wa|0,63)|0;qa=C;wa=qd(va|0,wa|0,1)|0;pa=wa|pa;qa=C|qa;ga=nd(X|0,V|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,B|0,S|0)|0;fa=C;la=la^ga;ma=ma^fa;L=nd(ma|0,la|0,O|0,L|0)|0;O=C;X=L^X;V=O^V;wa=pd(X|0,V|0,24)|0;va=C;V=qd(X|0,V|0,40)|0;wa=V|wa;va=C|va;fa=nd(R|0,P|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ma=fa^ma;la=ga^la;V=pd(ma|0,la|0,16)|0;X=C;la=qd(ma|0,la|0,48)|0;V=la|V;X=C|X;O=nd(V|0,X|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;la=pd(wa|0,va|0,63)|0;ma=C;va=qd(wa|0,va|0,1)|0;la=va|la;ma=C|ma;ca=nd(R|0,P|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,la|0,ma|0)|0;v=C;aa=ca^aa;ba=v^ba;Q=nd(ba|0,aa|0,T|0,Q|0)|0;T=C;la=Q^la;ma=T^ma;va=pd(la|0,ma|0,24)|0;wa=C;ma=qd(la|0,ma|0,40)|0;va=ma|va;wa=C|wa;v=nd(W|0,U|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;ba=v^ba;aa=ca^aa;ma=pd(ba|0,aa|0,16)|0;la=C;aa=qd(ba|0,aa|0,48)|0;ma=aa|ma;la=C|la;T=nd(ma|0,la|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;aa=pd(va|0,wa|0,63)|0;ba=C;wa=qd(va|0,wa|0,1)|0;aa=wa|aa;ba=C|ba;oa=nd(ha|0,ia|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,t|0,x|0)|0;na=C;Z=Z^oa;_=_^na;L=nd(_|0,Z|0,O|0,L|0)|0;O=C;ha=L^ha;ia=O^ia;wa=pd(ha|0,ia|0,24)|0;va=C;ia=qd(ha|0,ia|0,40)|0;wa=ia|wa;va=C|va;na=nd(h|0,l|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;_=na^_;Z=oa^Z;ia=pd(_|0,Z|0,16)|0;ha=C;Z=qd(_|0,Z|0,48)|0;ia=Z|ia;ha=C|ha;O=nd(ia|0,ha|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;Z=pd(wa|0,va|0,63)|0;_=C;va=qd(wa|0,va|0,1)|0;Z=va|Z;_=C|_;ka=nd(ta|0,ua|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,p|0,$|0)|0;ja=C;V=V^ka;X=X^ja;G=nd(X|0,V|0,J|0,G|0)|0;J=C;ta=G^ta;ua=J^ua;va=pd(ta|0,ua|0,24)|0;wa=C;ua=qd(ta|0,ua|0,40)|0;va=ua|va;wa=C|wa;ja=nd(H|0,F|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;X=ja^X;V=ka^V;ua=pd(X|0,V|0,16)|0;ta=C;V=qd(X|0,V|0,48)|0;ua=V|ua;ta=C|ta;J=nd(ua|0,ta|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;V=pd(va|0,wa|0,63)|0;X=C;wa=qd(va|0,wa|0,1)|0;V=wa|V;X=C|X;ga=nd(pa|0,qa|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,s|0,u|0)|0;fa=C;da=da^ga;ea=ea^fa;z=nd(ea|0,da|0,E|0,z|0)|0;E=C;pa=z^pa;qa=E^qa;wa=pd(pa|0,qa|0,24)|0;va=C;qa=qd(pa|0,qa|0,40)|0;wa=qa|wa;va=C|va;fa=nd(n|0,r|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ea=fa^ea;da=ga^da;qa=pd(ea|0,da|0,16)|0;pa=C;da=qd(ea|0,da|0,48)|0;qa=da|qa;pa=C|pa;E=nd(qa|0,pa|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;da=pd(wa|0,va|0,63)|0;ea=C;va=qd(wa|0,va|0,1)|0;da=va|da;ea=C|ea;ca=nd(Z|0,_|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,g|0,i|0)|0;v=C;qa=qa^ca;pa=pa^v;G=nd(pa|0,qa|0,J|0,G|0)|0;J=C;Z=G^Z;_=J^_;va=pd(Z|0,_|0,24)|0;wa=C;_=qd(Z|0,_|0,40)|0;va=_|va;wa=C|wa;v=nd(j|0,Y|0,ca|0,v|0)|0;v=nd(v|0,C|0,va|0,wa|0)|0;ca=C;pa=v^pa;qa=ca^qa;_=pd(pa|0,qa|0,16)|0;Z=C;qa=qd(pa|0,qa|0,48)|0;_=qa|_;Z=C|Z;J=nd(_|0,Z|0,G|0,J|0)|0;G=C;va=J^va;wa=G^wa;qa=pd(va|0,wa|0,63)|0;pa=C;wa=qd(va|0,wa|0,1)|0;qa=wa|qa;pa=C|pa;oa=nd(V|0,X|0,na|0,oa|0)|0;oa=nd(oa|0,C|0,m|0,o|0)|0;na=C;ma=ma^oa;la=la^na;z=nd(la|0,ma|0,E|0,z|0)|0;E=C;V=z^V;X=E^X;wa=pd(V|0,X|0,24)|0;va=C;X=qd(V|0,X|0,40)|0;wa=X|wa;va=C|va;na=nd(M|0,K|0,oa|0,na|0)|0;na=nd(na|0,C|0,wa|0,va|0)|0;oa=C;la=na^la;ma=oa^ma;X=pd(la|0,ma|0,16)|0;V=C;ma=qd(la|0,ma|0,48)|0;X=ma|X;V=C|V;E=nd(X|0,V|0,z|0,E|0)|0;z=C;wa=E^wa;va=z^va;ma=pd(wa|0,va|0,63)|0;la=C;va=qd(wa|0,va|0,1)|0;ma=va|ma;la=C|la;ka=nd(da|0,ea|0,ja|0,ka|0)|0;ka=nd(ka|0,C|0,e|0,f|0)|0;ja=C;ia=ia^ka;ha=ha^ja;Q=nd(ha|0,ia|0,T|0,Q|0)|0;T=C;da=Q^da;ea=T^ea;va=pd(da|0,ea|0,24)|0;wa=C;ea=qd(da|0,ea|0,40)|0;va=ea|va;wa=C|wa;ja=nd(B|0,S|0,ka|0,ja|0)|0;ja=nd(ja|0,C|0,va|0,wa|0)|0;ka=C;ha=ja^ha;ia=ka^ia;ea=pd(ha|0,ia|0,16)|0;da=C;ia=qd(ha|0,ia|0,48)|0;ea=ia|ea;da=C|da;T=nd(ea|0,da|0,Q|0,T|0)|0;Q=C;va=T^va;wa=Q^wa;ia=pd(va|0,wa|0,63)|0;ha=C;wa=qd(va|0,wa|0,1)|0;ia=wa|ia;ha=C|ha;ga=nd(aa|0,ba|0,fa|0,ga|0)|0;ga=nd(ga|0,C|0,ra|0,sa|0)|0;fa=C;ua=ua^ga;ta=ta^fa;L=nd(ta|0,ua|0,O|0,L|0)|0;O=C;aa=L^aa;ba=O^ba;wa=pd(aa|0,ba|0,24)|0;va=C;ba=qd(aa|0,ba|0,40)|0;wa=ba|wa;va=C|va;fa=nd(y|0,A|0,ga|0,fa|0)|0;fa=nd(fa|0,C|0,wa|0,va|0)|0;ga=C;ta=fa^ta;ua=ga^ua;ba=pd(ta|0,ua|0,16)|0;aa=C;ua=qd(ta|0,ua|0,48)|0;ba=ua|ba;aa=C|aa;O=nd(ba|0,aa|0,L|0,O|0)|0;L=C;wa=O^wa;va=L^va;ua=pd(wa|0,va|0,63)|0;ta=C;va=qd(wa|0,va|0,1)|0;ua=va|ua;ta=C|ta;ca=nd(ra|0,sa|0,v|0,ca|0)|0;ca=nd(ca|0,C|0,ua|0,ta|0)|0;v=C;X=ca^X;V=v^V;Q=nd(V|0,X|0,T|0,Q|0)|0;T=C;ua=Q^ua;ta=T^ta;sa=pd(ua|0,ta|0,24)|0;ra=C;ta=qd(ua|0,ta|0,40)|0;sa=ta|sa;ra=C|ra;v=nd(m|0,o|0,ca|0,v|0)|0;v=nd(v|0,C|0,sa|0,ra|0)|0;ca=C;V=v^V;X=ca^X;o=pd(V|0,X|0,16)|0;m=C;X=qd(V|0,X|0,48)|0;o=X|o;m=C|m;T=nd(o|0,m|0,Q|0,T|0)|0;Q=C;sa=T^sa;ra=Q^ra;X=pd(sa|0,ra|0,63)|0;V=C;ra=qd(sa|0,ra|0,1)|0;X=ra|X;V=C|V;oa=nd(qa|0,pa|0,na|0,oa|0)|0;$=nd(oa|0,C|0,p|0,$|0)|0;p=C;ea=ea^$;da=da^p;L=nd(da|0,ea|0,O|0,L|0)|0;O=C;qa=L^qa;pa=O^pa;oa=pd(qa|0,pa|0,24)|0;na=C;pa=qd(qa|0,pa|0,40)|0;oa=pa|oa;na=C|na;p=nd(g|0,i|0,$|0,p|0)|0;p=nd(p|0,C|0,oa|0,na|0)|0;$=C;da=p^da;ea=$^ea;i=pd(da|0,ea|0,16)|0;g=C;ea=qd(da|0,ea|0,48)|0;i=ea|i;g=C|g;O=nd(i|0,g|0,L|0,O|0)|0;L=C;oa=O^oa;na=L^na;ea=pd(oa|0,na|0,63)|0;da=C;na=qd(oa|0,na|0,1)|0;ea=na|ea;da=C|da;ka=nd(ma|0,la|0,ja|0,ka|0)|0;Y=nd(ka|0,C|0,j|0,Y|0)|0;j=C;ba=ba^Y;aa=aa^j;G=nd(aa|0,ba|0,J|0,G|0)|0;J=C;ma=G^ma;la=J^la;ka=pd(ma|0,la|0,24)|0;ja=C;la=qd(ma|0,la|0,40)|0;ka=la|ka;ja=C|ja;j=nd(y|0,A|0,Y|0,j|0)|0;j=nd(j|0,C|0,ka|0,ja|0)|0;Y=C;aa=j^aa;ba=Y^ba;A=pd(aa|0,ba|0,16)|0;y=C;ba=qd(aa|0,ba|0,48)|0;A=ba|A;y=C|y;J=nd(A|0,y|0,G|0,J|0)|0;G=C;ka=J^ka;ja=G^ja;ba=pd(ka|0,ja|0,63)|0;aa=C;ja=qd(ka|0,ja|0,1)|0;ba=ja|ba;aa=C|aa;ga=nd(ia|0,ha|0,fa|0,ga|0)|0;S=nd(ga|0,C|0,B|0,S|0)|0;B=C;_=_^S;Z=Z^B;z=nd(Z|0,_|0,E|0,z|0)|0;E=C;ia=z^ia;ha=E^ha;ga=pd(ia|0,ha|0,24)|0;fa=C;ha=qd(ia|0,ha|0,40)|0;ga=ha|ga;fa=C|fa;B=nd(s|0,u|0,S|0,B|0)|0;B=nd(B|0,C|0,ga|0,fa|0)|0;S=C;Z=B^Z;_=S^_;u=pd(Z|0,_|0,16)|0;s=C;_=qd(Z|0,_|0,48)|0;u=_|u;s=C|s;E=nd(u|0,s|0,z|0,E|0)|0;z=C;ga=E^ga;fa=z^fa;_=pd(ga|0,fa|0,63)|0;Z=C;fa=qd(ga|0,fa|0,1)|0;_=fa|_;Z=C|Z;ca=nd(ea|0,da|0,v|0,ca|0)|0;U=nd(ca|0,C|0,W|0,U|0)|0;W=C;u=u^U;s=s^W;G=nd(s|0,u|0,J|0,G|0)|0;J=C;ea=G^ea;da=J^da;ca=pd(ea|0,da|0,24)|0;v=C;da=qd(ea|0,da|0,40)|0;ca=da|ca;v=C|v;W=nd(e|0,f|0,U|0,W|0)|0;W=nd(W|0,C|0,ca|0,v|0)|0;U=C;s=W^s;u=U^u;f=pd(s|0,u|0,16)|0;e=C;u=qd(s|0,u|0,48)|0;f=u|f;e=C|e;J=nd(f|0,e|0,G|0,J|0)|0;G=C;ca=J^ca;v=G^v;u=pd(ca|0,v|0,63)|0;s=C;v=qd(ca|0,v|0,1)|0;s=C|s;$=nd(ba|0,aa|0,p|0,$|0)|0;P=nd($|0,C|0,R|0,P|0)|0;R=C;o=o^P;m=m^R;z=nd(m|0,o|0,E|0,z|0)|0;E=C;ba=z^ba;aa=E^aa;$=pd(ba|0,aa|0,24)|0;p=C;aa=qd(ba|0,aa|0,40)|0;$=aa|$;p=C|p;R=nd(t|0,x|0,P|0,R|0)|0;R=nd(R|0,C|0,$|0,p|0)|0;P=C;m=R^m;o=P^o;x=pd(m|0,o|0,16)|0;t=C;o=qd(m|0,o|0,48)|0;x=o|x;t=C|t;E=nd(x|0,t|0,z|0,E|0)|0;z=C;$=E^$;p=z^p;o=pd($|0,p|0,63)|0;m=C;p=qd($|0,p|0,1)|0;m=C|m;Y=nd(_|0,Z|0,j|0,Y|0)|0;K=nd(Y|0,C|0,M|0,K|0)|0;M=C;i=i^K;g=g^M;Q=nd(g|0,i|0,T|0,Q|0)|0;T=C;_=Q^_;Z=T^Z;Y=pd(_|0,Z|0,24)|0;j=C;Z=qd(_|0,Z|0,40)|0;Y=Z|Y;j=C|j;M=nd(n|0,r|0,K|0,M|0)|0;M=nd(M|0,C|0,Y|0,j|0)|0;K=C;g=M^g;i=K^i;r=pd(g|0,i|0,16)|0;n=C;i=qd(g|0,i|0,48)|0;r=i|r;n=C|n;T=nd(r|0,n|0,Q|0,T|0)|0;Q=C;Y=T^Y;j=Q^j;i=pd(Y|0,j|0,63)|0;g=C;j=qd(Y|0,j|0,1)|0;g=C|g;S=nd(X|0,V|0,B|0,S|0)|0;F=nd(S|0,C|0,H|0,F|0)|0;H=C;A=A^F;y=y^H;L=nd(y|0,A|0,O|0,L|0)|0;O=C;X=L^X;V=O^V;S=pd(X|0,V|0,24)|0;B=C;V=qd(X|0,V|0,40)|0;S=V|S;B=C|B;H=nd(h|0,l|0,F|0,H|0)|0;H=nd(H|0,C|0,S|0,B|0)|0;F=C;y=H^y;A=F^A;l=pd(y|0,A|0,16)|0;h=C;A=qd(y|0,A|0,48)|0;l=A|l;h=C|h;O=nd(l|0,h|0,L|0,O|0)|0;L=C;S=O^S;B=L^B;A=pd(S|0,B|0,63)|0;y=C;B=qd(S|0,B|0,1)|0;S=b;V=S;S=S+4|0;T=W^(d[V>>0]|d[V+1>>0]<<8|d[V+2>>0]<<16|d[V+3>>0]<<24)^T;Q=U^(d[S>>0]|d[S+1>>0]<<8|d[S+2>>0]<<16|d[S+3>>0]<<24)^Q;S=b;a[S>>0]=T;a[S+1>>0]=T>>8;a[S+2>>0]=T>>16;a[S+3>>0]=T>>24;b=b+4|0;a[b>>0]=Q;a[b+1>>0]=Q>>8;a[b+2>>0]=Q>>16;a[b+3>>0]=Q>>24;b=N;Q=b;b=b+4|0;O=R^(d[Q>>0]|d[Q+1>>0]<<8|d[Q+2>>0]<<16|d[Q+3>>0]<<24)^O;L=P^(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)^L;b=N;N=b;a[N>>0]=O;a[N+1>>0]=O>>8;a[N+2>>0]=O>>16;a[N+3>>0]=O>>24;b=b+4|0;a[b>>0]=L;a[b+1>>0]=L>>8;a[b+2>>0]=L>>16;a[b+3>>0]=L>>24;b=I;L=b;b=b+4|0;J=M^(d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24)^J;G=K^(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)^G;b=I;I=b;a[I>>0]=J;a[I+1>>0]=J>>8;a[I+2>>0]=J>>16;a[I+3>>0]=J>>24;b=b+4|0;a[b>>0]=G;a[b+1>>0]=G>>8;a[b+2>>0]=G>>16;a[b+3>>0]=G>>24;b=D;G=b;b=b+4|0;E=H^(d[G>>0]|d[G+1>>0]<<8|d[G+2>>0]<<16|d[G+3>>0]<<24)^E;z=F^(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)^z;b=D;D=b;a[D>>0]=E;a[D+1>>0]=E>>8;a[D+2>>0]=E>>16;a[D+3>>0]=E>>24;b=b+4|0;a[b>>0]=z;a[b+1>>0]=z>>8;a[b+2>>0]=z>>16;a[b+3>>0]=z>>24;b=w;z=b;b=b+4|0;x=(B|A)^(d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24)^x;t=(C|y)^(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)^t;b=w;w=b;a[w>>0]=x;a[w+1>>0]=x>>8;a[w+2>>0]=x>>16;a[w+3>>0]=x>>24;b=b+4|0;a[b>>0]=t;a[b+1>>0]=t>>8;a[b+2>>0]=t>>16;a[b+3>>0]=t>>24;b=q;t=b;b=b+4|0;r=(v|u)^(d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24)^r;n=s^(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)^n;b=q;q=b;a[q>>0]=r;a[q+1>>0]=r>>8;a[q+2>>0]=r>>16;a[q+3>>0]=r>>24;b=b+4|0;a[b>>0]=n;a[b+1>>0]=n>>8;a[b+2>>0]=n>>16;a[b+3>>0]=n>>24;b=k;n=b;b=b+4|0;l=(p|o)^(d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)^l;h=m^(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)^h;b=k;k=b;a[k>>0]=l;a[k+1>>0]=l>>8;a[k+2>>0]=l>>16;a[k+3>>0]=l>>24;b=b+4|0;a[b>>0]=h;a[b+1>>0]=h>>8;a[b+2>>0]=h>>16;a[b+3>>0]=h>>24;b=c;h=b;b=b+4|0;f=(j|i)^(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)^f;b=g^(d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)^e;e=c;a[e>>0]=f;a[e+1>>0]=f>>8;a[e+2>>0]=f>>16;a[e+3>>0]=f>>24;c=c+4|0;a[c>>0]=b;a[c+1>>0]=b>>8;a[c+2>>0]=b>>16;a[c+3>>0]=b>>24;return}function vb(){return 64}function wb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Cb(a,b,c,d);return 0}function xb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=a+36|0;j=c[f>>2]|0;k=j>>>3&63;h=pd(d|0,e|0,29)|0;i=j+(d<<3)|0;c[f>>2]=i;f=a+32|0;g=c[f>>2]|0;if(i>>>0<j>>>0){g=g+1|0;c[f>>2]=g}c[f>>2]=g+h;i=64-k|0;g=a+k+40|0;if(0>e>>>0|0==(e|0)&i>>>0>d>>>0){sd(g|0,b|0,d|0)|0;return}sd(g|0,b|0,i|0)|0;j=a+40|0;zb(a,j);g=b+i|0;f=md(d|0,e|0,i|0,0)|0;h=C;if(h>>>0>0|(h|0)==0&f>>>0>63){d=nd(d|0,e|0,-64,0)|0;d=md(d|0,C|0,i|0,0)|0;i=d+128&-64;while(1){zb(a,g);f=nd(f|0,h|0,-64,-1)|0;h=C;if(!(h>>>0>0|(h|0)==0&f>>>0>63))break;else g=g+64|0}g=b+(i-k)|0;f=d&63}sd(j|0,g|0,f|0)|0;return}function yb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=i;o=i=i+63&-64;i=i+16|0;n=b+32|0;f=c[n>>2]|0;a[o+3>>0]=f;a[o+2>>0]=f>>>8;a[o+1>>0]=f>>>16;a[o>>0]=f>>>24;m=b+36|0;j=c[m>>2]|0;a[o+7>>0]=j;a[o+6>>0]=j>>>8;a[o+5>>0]=j>>>16;a[o+4>>0]=j>>>24;l=j>>>3&63;k=(l>>>0<56?56:120)-l|0;e=j+(k<<3)|0;c[m>>2]=e;if(e>>>0<j>>>0){f=f+1|0;c[n>>2]=f}f=f+(k>>>29)|0;c[n>>2]=f;j=64-l|0;h=b+l+40|0;if(k>>>0<j>>>0)sd(h|0,264,k|0)|0;else{sd(h|0,264,j|0)|0;e=b+40|0;zb(b,e);g=264+j|0;f=md(k|0,0,j|0,0)|0;h=C;if(h>>>0>0|(h|0)==0&f>>>0>63){j=k+(-64-j)|0;while(1){zb(b,g);f=nd(f|0,h|0,-64,-1)|0;h=C;if(!(h>>>0>0|(h|0)==0&f>>>0>63))break;else g=g+64|0}g=264+((j+128&-64)-l)|0;f=j&63}sd(e|0,g|0,f|0)|0;e=c[m>>2]|0;f=c[n>>2]|0}k=e>>>3&63;c[m>>2]=e+64;if(e>>>0>4294967231){f=f+1|0;c[n>>2]=f}c[n>>2]=f;h=64-k|0;f=b+k+40|0;if(h>>>0>8){n=o;l=c[n>>2]|0;n=c[n+4>>2]|0;o=f;m=o;a[m>>0]=l;a[m+1>>0]=l>>8;a[m+2>>0]=l>>16;a[m+3>>0]=l>>24;o=o+4|0;a[o>>0]=n;a[o+1>>0]=n>>8;a[o+2>>0]=n>>16;a[o+3>>0]=n>>24}else{sd(f|0,o|0,h|0)|0;j=b+40|0;zb(b,j);e=o+h|0;f=md(8,0,h|0,0)|0;g=C;if(g>>>0>0|(g|0)==0&f>>>0>63){h=-56-h|0;while(1){zb(b,e);f=nd(f|0,g|0,-64,-1)|0;g=C;if(!(g>>>0>0|(g|0)==0&f>>>0>63))break;else e=e+64|0}e=o+((h+128&-64)-k)|0;f=h&63}sd(j|0,e|0,f|0)|0}f=0;do{o=f<<2;n=c[b+(f<<2)>>2]|0;a[d+(o|3)>>0]=n;a[d+(o|2)>>0]=n>>>8;a[d+(o|1)>>0]=n>>>16;a[d+o>>0]=n>>>24;f=f+1|0}while((f|0)!=8);e=b+0|0;f=e+104|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));i=p;return}function zb(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;f=i=i+63&-64;i=i+256|0;e=0;do{h=e<<2;c[f+(e<<2)>>2]=(d[b+(h|2)>>0]|0)<<8|(d[b+(h|3)>>0]|0)|(d[b+(h|1)>>0]|0)<<16|(d[b+h>>0]|0)<<24;e=e+1|0}while((e|0)!=16);b=c[f>>2]|0;e=16;do{h=c[f+(e+-2<<2)>>2]|0;j=b;b=c[f+(e+-15<<2)>>2]|0;c[f+(e<<2)>>2]=j+(c[f+(e+-7<<2)>>2]|0)+((h>>>19|h<<13)^h>>>10^(h>>>17|h<<15))+((b>>>18|b<<14)^b>>>3^(b>>>7|b<<25));e=e+1|0}while((e|0)!=64);u=c[a>>2]|0;s=a+4|0;t=c[s>>2]|0;q=a+8|0;r=c[q>>2]|0;o=a+12|0;m=a+16|0;n=c[m>>2]|0;k=a+20|0;l=c[k>>2]|0;e=a+24|0;b=c[e>>2]|0;j=a+28|0;h=(c[j>>2]|0)+1116352408+(c[f>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=(c[o>>2]|0)+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+1899447441+(c[f+4>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1245643825+(c[f+8>>2]|0)+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-373957723+(c[f+12>>2]|0)+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+961987163+(c[f+16>>2]|0)+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1508970993+(c[f+20>>2]|0)+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1841331548+(c[f+24>>2]|0)+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1424204075+(c[f+28>>2]|0)+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-670586216+(c[f+32>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+310598401+(c[f+36>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+607225278+(c[f+40>>2]|0)+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+1426881987+(c[f+44>>2]|0)+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+1925078388+(c[f+48>>2]|0)+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-2132889090+(c[f+52>>2]|0)+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1680079193+(c[f+56>>2]|0)+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1046744716+(c[f+60>>2]|0)+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-459576895+(c[f+64>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-272742522+(c[f+68>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+264347078+(c[f+72>>2]|0)+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+604807628+(c[f+76>>2]|0)+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+770255983+(c[f+80>>2]|0)+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1249150122+(c[f+84>>2]|0)+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+1555081692+(c[f+88>>2]|0)+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+1996064986+(c[f+92>>2]|0)+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-1740746414+(c[f+96>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-1473132947+(c[f+100>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1341970488+(c[f+104>>2]|0)+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-1084653625+(c[f+108>>2]|0)+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-958395405+(c[f+112>>2]|0)+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-710438585+(c[f+116>>2]|0)+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+113926993+(c[f+120>>2]|0)+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+338241895+(c[f+124>>2]|0)+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+666307205+(c[f+128>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+773529912+(c[f+132>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+1294757372+(c[f+136>>2]|0)+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+1396182291+(c[f+140>>2]|0)+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+1695183700+(c[f+144>>2]|0)+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1986661051+(c[f+148>>2]|0)+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-2117940946+(c[f+152>>2]|0)+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+-1838011259+(c[f+156>>2]|0)+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+-1564481375+(c[f+160>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+-1474664885+(c[f+164>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-1035236496+(c[f+168>>2]|0)+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-949202525+(c[f+172>>2]|0)+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-778901479+(c[f+176>>2]|0)+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-694614492+(c[f+180>>2]|0)+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-200395387+(c[f+184>>2]|0)+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+275423344+(c[f+188>>2]|0)+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+430227734+(c[f+192>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+506948616+(c[f+196>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+659060556+(c[f+200>>2]|0)+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+883997877+(c[f+204>>2]|0)+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+958139571+(c[f+208>>2]|0)+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+1322822218+(c[f+212>>2]|0)+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+1537002063+(c[f+216>>2]|0)+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;u=u+1747873779+(c[f+220>>2]|0)+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((h^b)&l^h)|0;n=n+u|0;u=((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+u|0;h=h+1955562222+(c[f+224>>2]|0)+((n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7))+((b^l)&n^b)|0;p=p+h|0;h=((r|t)&u|r&t)+((u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10))+h|0;b=b+2024104815+(c[f+228>>2]|0)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((l^n)&p^l)|0;r=r+b|0;b=((t|u)&h|t&u)+((h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10))+b|0;l=l+-2067236844+(c[f+232>>2]|0)+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((n^p)&r^n)|0;t=t+l|0;l=((u|h)&b|u&h)+((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+l|0;n=n+-1933114872+(c[f+236>>2]|0)+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((p^r)&t^p)|0;u=u+n|0;n=((h|b)&l|h&b)+((l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+n|0;p=p+-1866530822+(c[f+240>>2]|0)+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+((r^t)&u^r)|0;h=h+p|0;p=((b|l)&n|b&l)+((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+p|0;r=r+-1538233109+(c[f+244>>2]|0)+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+((t^u)&h^t)|0;b=b+r|0;r=((l|n)&p|l&n)+((p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10))+r|0;t=t+-1090935817+(c[f+248>>2]|0)+((b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7))+((u^h)&b^u)|0;l=l+t|0;t=((n|p)&r|n&p)+((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+t|0;f=u+-965641998+(c[f+252>>2]|0)+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((h^b)&l^h)|0;c[a>>2]=(c[a>>2]|0)+(((p|r)&t|p&r)+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))+f);c[s>>2]=(c[s>>2]|0)+t;c[q>>2]=(c[q>>2]|0)+r;c[o>>2]=(c[o>>2]|0)+p;c[m>>2]=(c[m>>2]|0)+(n+f);c[k>>2]=(c[k>>2]|0)+l;c[e>>2]=(c[e>>2]|0)+b;c[j>>2]=(c[j>>2]|0)+h;i=g;return}function Ab(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=a+72|0;o=j;l=c[o>>2]|0;o=c[o+4>>2]|0;m=pd(l|0,o|0,3)|0;k=m&127;p=qd(d|0,e|0,3)|0;n=C;i=pd(d|0,e|0,61)|0;f=C;n=nd(l|0,o|0,p|0,n|0)|0;p=C;c[j>>2]=n;c[j+4>>2]=p;j=a+64|0;g=j;h=c[g>>2]|0;g=c[g+4>>2]|0;if(p>>>0<o>>>0|(p|0)==(o|0)&n>>>0<l>>>0){h=nd(h|0,g|0,1,0)|0;g=C;p=j;c[p>>2]=h;c[p+4>>2]=g}i=nd(h|0,g|0,i|0,f|0)|0;h=j;c[h>>2]=i;c[h+4>>2]=C;h=md(128,0,k|0,0)|0;i=C;g=a+k+80|0;if(i>>>0>e>>>0|(i|0)==(e|0)&h>>>0>d>>>0){sd(g|0,b|0,d|0)|0;return}sd(g|0,b|0,h|0)|0;l=a+80|0;Db(a,l);f=b+h|0;g=md(d|0,e|0,h|0,i|0)|0;h=C;if(h>>>0>0|(h|0)==0&g>>>0>127){j=nd(k|0,0,d|0,e|0)|0;j=nd(j|0,C|0,-256,0)|0;d=j+256|0;i=m&127;while(1){Db(a,f);g=nd(g|0,h|0,-128,-1)|0;h=C;if(!(h>>>0>0|(h|0)==0&g>>>0>127))break;else f=f+128|0}g=j&127;f=b+((d&-128)-i)|0}sd(l|0,f|0,g|0)|0;return}function Bb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;u=i;t=i=i+63&-64;i=i+16|0;s=b+64|0;g=s;j=c[g>>2]|0;g=c[g+4>>2]|0;a[t+7>>0]=j;r=pd(j|0,g|0,8)|0;a[t+6>>0]=r;r=pd(j|0,g|0,16)|0;a[t+5>>0]=r;r=pd(j|0,g|0,24)|0;a[t+4>>0]=r;a[t+3>>0]=g;r=pd(j|0,g|0,40)|0;a[t+2>>0]=r;r=pd(j|0,g|0,48)|0;a[t+1>>0]=r;r=pd(j|0,g|0,56)|0;a[t>>0]=r;r=b+72|0;v=r;l=c[v>>2]|0;v=c[v+4>>2]|0;a[t+15>>0]=l;q=pd(l|0,v|0,8)|0;a[t+14>>0]=q;q=pd(l|0,v|0,16)|0;a[t+13>>0]=q;q=pd(l|0,v|0,24)|0;a[t+12>>0]=q;a[t+11>>0]=v;q=pd(l|0,v|0,40)|0;a[t+10>>0]=q;q=pd(l|0,v|0,48)|0;a[t+9>>0]=q;q=pd(l|0,v|0,56)|0;a[t+8>>0]=q;q=pd(l|0,v|0,3)|0;m=q&127;n=0<0|0==0&m>>>0<112;p=n?112:240;n=md(p|0,(n?0:0)|0,m|0,0)|0;o=C;h=qd(n|0,o|0,3)|0;e=C;f=pd(n|0,o|0,61)|0;k=C;e=nd(l|0,v|0,h|0,e|0)|0;h=C;w=r;c[w>>2]=e;c[w+4>>2]=h;if(h>>>0<v>>>0|(h|0)==(v|0)&e>>>0<l>>>0){j=nd(j|0,g|0,1,0)|0;g=C;w=s;c[w>>2]=j;c[w+4>>2]=g}f=nd(j|0,g|0,f|0,k|0)|0;g=C;k=s;c[k>>2]=f;c[k+4>>2]=g;k=md(128,0,m|0,0)|0;l=C;j=b+m+80|0;if(o>>>0<l>>>0|(o|0)==(l|0)&n>>>0<k>>>0)sd(j|0,328,n|0)|0;else{sd(j|0,328,k|0)|0;j=b+80|0;Db(b,j);g=328+k|0;h=md(n|0,o|0,k|0,l|0)|0;f=C;if(f>>>0>0|(f|0)==0&h>>>0>127){e=p|-256;while(1){Db(b,g);h=nd(h|0,f|0,-128,-1)|0;f=C;if(!(f>>>0>0|(f|0)==0&h>>>0>127))break;else g=g+128|0}h=112;g=328+((e+256&-128)-(q&127))|0}sd(j|0,g|0,h|0)|0;h=r;g=s;e=c[h>>2]|0;h=c[h+4>>2]|0;f=c[g>>2]|0;g=c[g+4>>2]|0}m=pd(e|0,h|0,3)|0;l=m&127;v=nd(e|0,h|0,128,0)|0;w=r;c[w>>2]=v;c[w+4>>2]=C;if(h>>>0>4294967295|(h|0)==-1&e>>>0>4294967167){f=nd(f|0,g|0,1,0)|0;g=C;w=s;c[w>>2]=f;c[w+4>>2]=g}h=s;c[h>>2]=f;c[h+4>>2]=g;f=md(128,0,l|0,0)|0;h=C;g=b+l+80|0;if(h>>>0>0|(h|0)==0&f>>>0>16){g=g+0|0;e=t+0|0;f=g+16|0;do{a[g>>0]=a[e>>0]|0;g=g+1|0;e=e+1|0}while((g|0)<(f|0))}else{sd(g|0,t|0,f|0)|0;j=b+80|0;Db(b,j);e=t+f|0;g=md(16,0,f|0,h|0)|0;h=C;if(h>>>0>0|(h|0)==0&g>>>0>127){f=nd(l|0,0,-240,0)|0;while(1){Db(b,e);g=nd(g|0,h|0,-128,-1)|0;h=C;if(!(h>>>0>0|(h|0)==0&g>>>0>127))break;else e=e+128|0}g=f&127;e=t+((f+256&-128)-(m&127))|0}sd(j|0,e|0,g|0)|0}e=0;do{w=e<<3;v=b+(e<<3)|0;t=c[v>>2]|0;v=c[v+4>>2]|0;a[d+(w|7)>>0]=t;s=pd(t|0,v|0,8)|0;a[d+(w|6)>>0]=s;s=pd(t|0,v|0,16)|0;a[d+(w|5)>>0]=s;s=pd(t|0,v|0,24)|0;a[d+(w|4)>>0]=s;a[d+(w|3)>>0]=v;s=pd(t|0,v|0,40)|0;a[d+(w|2)>>0]=s;s=pd(t|0,v|0,48)|0;a[d+(w|1)>>0]=s;v=pd(t|0,v|0,56)|0;a[d+w>>0]=v;e=e+1|0}while((e|0)!=8);od(b|0,0,208)|0;i=u;return}function Cb(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;m=i;l=i=i+63&-64;i=i+208|0;g=l;c[g>>2]=-205731576;c[g+4>>2]=1779033703;g=l+8|0;c[g>>2]=-2067093701;c[g+4>>2]=-1150833019;g=l+16|0;c[g>>2]=-23791573;c[g+4>>2]=1013904242;g=l+24|0;c[g>>2]=1595750129;c[g+4>>2]=-1521486534;g=l+32|0;c[g>>2]=-1377402159;c[g+4>>2]=1359893119;g=l+40|0;c[g>>2]=725511199;c[g+4>>2]=-1694144372;g=l+48|0;c[g>>2]=-79577749;c[g+4>>2]=528734635;g=l+56|0;c[g>>2]=327033209;c[g+4>>2]=1541459225;g=qd(e|0,f|0,3)|0;h=C;j=pd(e|0,f|0,61)|0;k=l+72|0;c[k>>2]=g;c[k+4>>2]=h;k=l+64|0;c[k>>2]=j;c[k+4>>2]=C;k=l+80|0;if(f>>>0<0|(f|0)==0&e>>>0<128){sd(k|0,d|0,e|0)|0;Bb(l,b);i=m;return}h=k+0|0;g=d+0|0;j=h+128|0;do{a[h>>0]=a[g>>0]|0;h=h+1|0;g=g+1|0}while((h|0)<(j|0));Db(l,k);g=d+128|0;h=nd(e|0,f|0,-128,-1)|0;j=C;if(j>>>0>0|(j|0)==0&h>>>0>127){e=nd(e|0,f|0,-256,0)|0;f=d;while(1){Db(l,g);h=nd(h|0,j|0,-128,-1)|0;j=C;if(!(j>>>0>0|(j|0)==0&h>>>0>127))break;else{n=g;g=f+256|0;f=n}}h=e&127;g=d+(e+256&-128)|0}sd(k|0,g|0,h|0)|0;Bb(l,b);i=m;return}
function gd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;f=d&255;if(!f){d=b+(rd(b|0)|0)|0;return d|0}a:do if(b&3){e=d&255;while(1){g=a[b>>0]|0;if(g<<24>>24==0?1:g<<24>>24==e<<24>>24)break;b=b+1|0;if(!(b&3))break a}return b|0}while(0);f=_(f,16843009)|0;e=c[b>>2]|0;b:do if(!((e&-2139062144^-2139062144)&e+-16843009))do{g=e^f;if((g&-2139062144^-2139062144)&g+-16843009)break b;b=b+4|0;e=c[b>>2]|0}while(((e&-2139062144^-2139062144)&e+-16843009|0)==0);while(0);e=d&255;while(1){g=a[b>>0]|0;if(g<<24>>24==0?1:g<<24>>24==e<<24>>24)break;else b=b+1|0}return b|0}function hd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;do if(a>>>0<245){if(a>>>0<11)o=16;else o=a+11&-8;a=o>>>3;k=c[8288]|0;j=k>>>a;if(j&3){e=(j&1^1)+a|0;f=e<<1;b=33192+(f<<2)|0;f=33192+(f+2<<2)|0;g=c[f>>2]|0;h=g+8|0;i=c[h>>2]|0;do if((b|0)!=(i|0)){if(i>>>0<(c[8292]|0)>>>0)ia();d=i+12|0;if((c[d>>2]|0)==(g|0)){c[d>>2]=b;c[f>>2]=i;break}else ia()}else c[8288]=k&~(1<<e);while(0);J=e<<3;c[g+4>>2]=J|3;J=g+(J|4)|0;c[J>>2]=c[J>>2]|1;J=h;return J|0}i=c[8290]|0;if(o>>>0>i>>>0){if(j){f=2<<a;f=j<<a&(f|0-f);f=(f&0-f)+-1|0;a=f>>>12&16;f=f>>>a;e=f>>>5&8;f=f>>>e;d=f>>>2&4;f=f>>>d;g=f>>>1&2;f=f>>>g;h=f>>>1&1;h=(e|a|d|g|h)+(f>>>h)|0;f=h<<1;g=33192+(f<<2)|0;f=33192+(f+2<<2)|0;d=c[f>>2]|0;a=d+8|0;e=c[a>>2]|0;do if((g|0)!=(e|0)){if(e>>>0<(c[8292]|0)>>>0)ia();i=e+12|0;if((c[i>>2]|0)==(d|0)){c[i>>2]=g;c[f>>2]=e;l=c[8290]|0;break}else ia()}else{c[8288]=k&~(1<<h);l=i}while(0);J=h<<3;b=J-o|0;c[d+4>>2]=o|3;j=d+o|0;c[d+(o|4)>>2]=b|1;c[d+J>>2]=b;if(l){e=c[8293]|0;g=l>>>3;i=g<<1;f=33192+(i<<2)|0;h=c[8288]|0;g=1<<g;if(h&g){h=33192+(i+2<<2)|0;i=c[h>>2]|0;if(i>>>0<(c[8292]|0)>>>0)ia();else{m=h;n=i}}else{c[8288]=h|g;m=33192+(i+2<<2)|0;n=f}c[m>>2]=e;c[n+12>>2]=e;c[e+8>>2]=n;c[e+12>>2]=f}c[8290]=b;c[8293]=j;J=a;return J|0}a=c[8289]|0;if(a){k=(a&0-a)+-1|0;I=k>>>12&16;k=k>>>I;H=k>>>5&8;k=k>>>H;J=k>>>2&4;k=k>>>J;i=k>>>1&2;k=k>>>i;l=k>>>1&1;l=c[33456+((H|I|J|i|l)+(k>>>l)<<2)>>2]|0;k=(c[l+4>>2]&-8)-o|0;i=l;while(1){d=c[i+16>>2]|0;if(!d){d=c[i+20>>2]|0;if(!d)break}i=(c[d+4>>2]&-8)-o|0;J=i>>>0<k>>>0;k=J?i:k;i=d;l=J?d:l}j=c[8292]|0;if(l>>>0<j>>>0)ia();b=l+o|0;if(l>>>0>=b>>>0)ia();a=c[l+24>>2]|0;g=c[l+12>>2]|0;do if((g|0)==(l|0)){h=l+20|0;i=c[h>>2]|0;if(!i){h=l+16|0;i=c[h>>2]|0;if(!i){e=0;break}}while(1){g=i+20|0;f=c[g>>2]|0;if(f){i=f;h=g;continue}g=i+16|0;f=c[g>>2]|0;if(!f)break;else{i=f;h=g}}if(h>>>0<j>>>0)ia();else{c[h>>2]=0;e=i;break}}else{f=c[l+8>>2]|0;if(f>>>0<j>>>0)ia();i=f+12|0;if((c[i>>2]|0)!=(l|0))ia();h=g+8|0;if((c[h>>2]|0)==(l|0)){c[i>>2]=g;c[h>>2]=f;e=g;break}else ia()}while(0);do if(a){i=c[l+28>>2]|0;h=33456+(i<<2)|0;if((l|0)==(c[h>>2]|0)){c[h>>2]=e;if(!e){c[8289]=c[8289]&~(1<<i);break}}else{if(a>>>0<(c[8292]|0)>>>0)ia();i=a+16|0;if((c[i>>2]|0)==(l|0))c[i>>2]=e;else c[a+20>>2]=e;if(!e)break}h=c[8292]|0;if(e>>>0<h>>>0)ia();c[e+24>>2]=a;i=c[l+16>>2]|0;do if(i)if(i>>>0<h>>>0)ia();else{c[e+16>>2]=i;c[i+24>>2]=e;break}while(0);i=c[l+20>>2]|0;if(i)if(i>>>0<(c[8292]|0)>>>0)ia();else{c[e+20>>2]=i;c[i+24>>2]=e;break}}while(0);if(k>>>0<16){J=k+o|0;c[l+4>>2]=J|3;J=l+(J+4)|0;c[J>>2]=c[J>>2]|1}else{c[l+4>>2]=o|3;c[l+(o|4)>>2]=k|1;c[l+(k+o)>>2]=k;d=c[8290]|0;if(d){e=c[8293]|0;g=d>>>3;i=g<<1;f=33192+(i<<2)|0;h=c[8288]|0;g=1<<g;if(h&g){i=33192+(i+2<<2)|0;h=c[i>>2]|0;if(h>>>0<(c[8292]|0)>>>0)ia();else{q=i;p=h}}else{c[8288]=h|g;q=33192+(i+2<<2)|0;p=f}c[q>>2]=e;c[p+12>>2]=e;c[e+8>>2]=p;c[e+12>>2]=f}c[8290]=k;c[8293]=b}J=l+8|0;return J|0}}}else if(a>>>0<=4294967231){a=a+11|0;o=a&-8;l=c[8289]|0;if(l){i=0-o|0;a=a>>>8;if(a)if(o>>>0>16777215)k=31;else{q=(a+1048320|0)>>>16&8;u=a<<q;p=(u+520192|0)>>>16&4;u=u<<p;k=(u+245760|0)>>>16&2;k=14-(p|q|k)+(u<<k>>>15)|0;k=o>>>(k+7|0)&1|k<<1}else k=0;h=c[33456+(k<<2)>>2]|0;a:do if(!h){a=0;j=0;u=90}else{if((k|0)==31)j=0;else j=25-(k>>>1)|0;f=i;a=0;e=o<<j;j=0;while(1){g=c[h+4>>2]&-8;i=g-o|0;if(i>>>0<f>>>0)if((g|0)==(o|0)){a=h;j=h;u=94;break a}else j=h;else i=f;u=c[h+20>>2]|0;h=c[h+(e>>>31<<2)+16>>2]|0;a=(u|0)==0|(u|0)==(h|0)?a:u;if(!h){u=90;break}else{f=i;e=e<<1}}}while(0);if((u|0)==90){if((a|0)==0&(j|0)==0){a=2<<k;a=l&(a|0-a);if(!a)break;q=(a&0-a)+-1|0;m=q>>>12&16;q=q>>>m;l=q>>>5&8;q=q>>>l;n=q>>>2&4;q=q>>>n;p=q>>>1&2;q=q>>>p;a=q>>>1&1;a=c[33456+((l|m|n|p|a)+(q>>>a)<<2)>>2]|0}if(!a)m=i;else u=94}if((u|0)==94)while(1){u=0;q=(c[a+4>>2]&-8)-o|0;h=q>>>0<i>>>0;i=h?q:i;j=h?a:j;h=c[a+16>>2]|0;if(h){a=h;u=94;continue}a=c[a+20>>2]|0;if(!a){m=i;break}else u=94}if((j|0)!=0?m>>>0<((c[8290]|0)-o|0)>>>0:0){a=c[8292]|0;if(j>>>0<a>>>0)ia();n=j+o|0;if(j>>>0>=n>>>0)ia();e=c[j+24>>2]|0;g=c[j+12>>2]|0;do if((g|0)==(j|0)){h=j+20|0;i=c[h>>2]|0;if(!i){h=j+16|0;i=c[h>>2]|0;if(!i){d=0;break}}while(1){g=i+20|0;f=c[g>>2]|0;if(f){i=f;h=g;continue}g=i+16|0;f=c[g>>2]|0;if(!f)break;else{i=f;h=g}}if(h>>>0<a>>>0)ia();else{c[h>>2]=0;d=i;break}}else{f=c[j+8>>2]|0;if(f>>>0<a>>>0)ia();i=f+12|0;if((c[i>>2]|0)!=(j|0))ia();h=g+8|0;if((c[h>>2]|0)==(j|0)){c[i>>2]=g;c[h>>2]=f;d=g;break}else ia()}while(0);do if(e){i=c[j+28>>2]|0;h=33456+(i<<2)|0;if((j|0)==(c[h>>2]|0)){c[h>>2]=d;if(!d){c[8289]=c[8289]&~(1<<i);break}}else{if(e>>>0<(c[8292]|0)>>>0)ia();i=e+16|0;if((c[i>>2]|0)==(j|0))c[i>>2]=d;else c[e+20>>2]=d;if(!d)break}h=c[8292]|0;if(d>>>0<h>>>0)ia();c[d+24>>2]=e;i=c[j+16>>2]|0;do if(i)if(i>>>0<h>>>0)ia();else{c[d+16>>2]=i;c[i+24>>2]=d;break}while(0);i=c[j+20>>2]|0;if(i)if(i>>>0<(c[8292]|0)>>>0)ia();else{c[d+20>>2]=i;c[i+24>>2]=d;break}}while(0);b:do if(m>>>0>=16){c[j+4>>2]=o|3;c[j+(o|4)>>2]=m|1;c[j+(m+o)>>2]=m;i=m>>>3;if(m>>>0<256){h=i<<1;f=33192+(h<<2)|0;g=c[8288]|0;i=1<<i;if(g&i){i=33192+(h+2<<2)|0;h=c[i>>2]|0;if(h>>>0<(c[8292]|0)>>>0)ia();else{b=i;s=h}}else{c[8288]=g|i;b=33192+(h+2<<2)|0;s=f}c[b>>2]=n;c[s+12>>2]=n;c[j+(o+8)>>2]=s;c[j+(o+12)>>2]=f;break}d=m>>>8;if(d)if(m>>>0>16777215)f=31;else{I=(d+1048320|0)>>>16&8;J=d<<I;H=(J+520192|0)>>>16&4;J=J<<H;f=(J+245760|0)>>>16&2;f=14-(H|I|f)+(J<<f>>>15)|0;f=m>>>(f+7|0)&1|f<<1}else f=0;i=33456+(f<<2)|0;c[j+(o+28)>>2]=f;c[j+(o+20)>>2]=0;c[j+(o+16)>>2]=0;h=c[8289]|0;g=1<<f;if(!(h&g)){c[8289]=h|g;c[i>>2]=n;c[j+(o+24)>>2]=i;c[j+(o+12)>>2]=n;c[j+(o+8)>>2]=n;break}i=c[i>>2]|0;if((f|0)==31)d=0;else d=25-(f>>>1)|0;c:do if((c[i+4>>2]&-8|0)!=(m|0)){f=m<<d;while(1){g=i+(f>>>31<<2)+16|0;h=c[g>>2]|0;if(!h)break;if((c[h+4>>2]&-8|0)==(m|0)){z=h;break c}else{f=f<<1;i=h}}if(g>>>0<(c[8292]|0)>>>0)ia();else{c[g>>2]=n;c[j+(o+24)>>2]=i;c[j+(o+12)>>2]=n;c[j+(o+8)>>2]=n;break b}}else z=i;while(0);d=z+8|0;b=c[d>>2]|0;J=c[8292]|0;if(z>>>0>=J>>>0&b>>>0>=J>>>0){c[b+12>>2]=n;c[d>>2]=n;c[j+(o+8)>>2]=b;c[j+(o+12)>>2]=z;c[j+(o+24)>>2]=0;break}else ia()}else{J=m+o|0;c[j+4>>2]=J|3;J=j+(J+4)|0;c[J>>2]=c[J>>2]|1}while(0);J=j+8|0;return J|0}}}else o=-1;while(0);j=c[8290]|0;if(j>>>0>=o>>>0){b=j-o|0;d=c[8293]|0;if(b>>>0>15){c[8293]=d+o;c[8290]=b;c[d+(o+4)>>2]=b|1;c[d+j>>2]=b;c[d+4>>2]=o|3}else{c[8290]=0;c[8293]=0;c[d+4>>2]=j|3;J=d+(j+4)|0;c[J>>2]=c[J>>2]|1}J=d+8|0;return J|0}j=c[8291]|0;if(j>>>0>o>>>0){I=j-o|0;c[8291]=I;J=c[8294]|0;c[8294]=J+o;c[J+(o+4)>>2]=I|1;c[J+4>>2]=o|3;J=J+8|0;return J|0}do if(!(c[8406]|0)){j=na(30)|0;if(!(j+-1&j)){c[8408]=j;c[8407]=j;c[8409]=-1;c[8410]=-1;c[8411]=0;c[8399]=0;c[8406]=(la(0)|0)&-16^1431655768;break}else ia()}while(0);k=o+48|0;h=c[8408]|0;f=o+47|0;i=h+f|0;h=0-h|0;l=i&h;if(l>>>0<=o>>>0){J=0;return J|0}a=c[8398]|0;if((a|0)!=0?(s=c[8396]|0,z=s+l|0,z>>>0<=s>>>0|z>>>0>a>>>0):0){J=0;return J|0}d:do if(!(c[8399]&4)){j=c[8294]|0;e:do if(j){g=33600|0;while(1){a=c[g>>2]|0;if(a>>>0<=j>>>0?(r=g+4|0,(a+(c[r>>2]|0)|0)>>>0>j>>>0):0)break;a=c[g+8>>2]|0;if(!a){u=180;break e}else g=a}j=i-(c[8291]|0)&h;if(j>>>0<2147483647){a=ka(j|0)|0;if((a|0)==((c[g>>2]|0)+(c[r>>2]|0)|0)){if((a|0)!=(-1|0)){v=a;r=j;u=200;break d}}else u=190}else j=0}else u=180;while(0);do if((u|0)==180){h=ka(0)|0;if((h|0)!=(-1|0)){a=h;j=c[8407]|0;i=j+-1|0;if(!(i&a))j=l;else j=l-a+(i+a&0-j)|0;a=c[8396]|0;i=a+j|0;if(j>>>0>o>>>0&j>>>0<2147483647){z=c[8398]|0;if((z|0)!=0?i>>>0<=a>>>0|i>>>0>z>>>0:0){j=0;break}a=ka(j|0)|0;if((a|0)==(h|0)){v=h;r=j;u=200;break d}else u=190}else j=0}else j=0}while(0);f:do if((u|0)==190){i=0-j|0;do if(k>>>0>j>>>0&(j>>>0<2147483647&(a|0)!=(-1|0))?(t=c[8408]|0,t=f-j+t&0-t,t>>>0<2147483647):0)if((ka(t|0)|0)==(-1|0)){ka(i|0)|0;j=0;break f}else{j=t+j|0;break}while(0);if((a|0)==(-1|0))j=0;else{v=a;r=j;u=200;break d}}while(0);c[8399]=c[8399]|4;u=197}else{j=0;u=197}while(0);if((((u|0)==197?l>>>0<2147483647:0)?(v=ka(l|0)|0,w=ka(0)|0,v>>>0<w>>>0&((v|0)!=(-1|0)&(w|0)!=(-1|0))):0)?(x=w-v|0,y=x>>>0>(o+40|0)>>>0,y):0){r=y?x:j;u=200}if((u|0)==200){i=(c[8396]|0)+r|0;c[8396]=i;if(i>>>0>(c[8397]|0)>>>0)c[8397]=i;m=c[8294]|0;g:do if(m){f=33600|0;while(1){j=c[f>>2]|0;i=f+4|0;h=c[i>>2]|0;if((v|0)==(j+h|0)){u=212;break}g=c[f+8>>2]|0;if(!g)break;else f=g}if(((u|0)==212?(c[f+12>>2]&8|0)==0:0)?m>>>0<v>>>0&m>>>0>=j>>>0:0){c[i>>2]=h+r;b=(c[8291]|0)+r|0;d=m+8|0;if(!(d&7))d=0;else d=0-d&7;J=b-d|0;c[8294]=m+d;c[8291]=J;c[m+(d+4)>>2]=J|1;c[m+(b+4)>>2]=40;c[8295]=c[8410];break}j=c[8292]|0;if(v>>>0<j>>>0){c[8292]=v;j=v}h=v+r|0;i=33600|0;while(1){if((c[i>>2]|0)==(h|0)){u=222;break}i=c[i+8>>2]|0;if(!i){i=33600|0;break}}if((u|0)==222)if(!(c[i+12>>2]&8)){c[i>>2]=v;i=i+4|0;c[i>>2]=(c[i>>2]|0)+r;i=v+8|0;if(!(i&7))q=0;else q=0-i&7;i=v+(r+8)|0;if(!(i&7))k=0;else k=0-i&7;i=v+(k+r)|0;n=q+o|0;p=v+n|0;a=i-(v+q)-o|0;c[v+(q+4)>>2]=o|3;h:do if((i|0)!=(m|0)){if((i|0)==(c[8293]|0)){J=(c[8290]|0)+a|0;c[8290]=J;c[8293]=p;c[v+(n+4)>>2]=J|1;c[v+(J+n)>>2]=J;break}b=r+4|0;h=c[v+(b+k)>>2]|0;if((h&3|0)==1){l=h&-8;e=h>>>3;i:do if(h>>>0>=256){d=c[v+((k|24)+r)>>2]|0;g=c[v+(r+12+k)>>2]|0;do if((g|0)==(i|0)){g=k|16;f=v+(b+g)|0;h=c[f>>2]|0;if(!h){g=v+(g+r)|0;h=c[g>>2]|0;if(!h){G=0;break}}else g=f;while(1){f=h+20|0;e=c[f>>2]|0;if(e){h=e;g=f;continue}f=h+16|0;e=c[f>>2]|0;if(!e)break;else{h=e;g=f}}if(g>>>0<j>>>0)ia();else{c[g>>2]=0;G=h;break}}else{f=c[v+((k|8)+r)>>2]|0;if(f>>>0<j>>>0)ia();j=f+12|0;if((c[j>>2]|0)!=(i|0))ia();h=g+8|0;if((c[h>>2]|0)==(i|0)){c[j>>2]=g;c[h>>2]=f;G=g;break}else ia()}while(0);if(!d)break;j=c[v+(r+28+k)>>2]|0;h=33456+(j<<2)|0;do if((i|0)!=(c[h>>2]|0)){if(d>>>0<(c[8292]|0)>>>0)ia();j=d+16|0;if((c[j>>2]|0)==(i|0))c[j>>2]=G;else c[d+20>>2]=G;if(!G)break i}else{c[h>>2]=G;if(G)break;c[8289]=c[8289]&~(1<<j);break i}while(0);h=c[8292]|0;if(G>>>0<h>>>0)ia();c[G+24>>2]=d;j=k|16;i=c[v+(j+r)>>2]|0;do if(i)if(i>>>0<h>>>0)ia();else{c[G+16>>2]=i;c[i+24>>2]=G;break}while(0);i=c[v+(b+j)>>2]|0;if(!i)break;if(i>>>0<(c[8292]|0)>>>0)ia();else{c[G+20>>2]=i;c[i+24>>2]=G;break}}else{g=c[v+((k|8)+r)>>2]|0;f=c[v+(r+12+k)>>2]|0;h=33192+(e<<1<<2)|0;do if((g|0)!=(h|0)){if(g>>>0<j>>>0)ia();if((c[g+12>>2]|0)==(i|0))break;ia()}while(0);if((f|0)==(g|0)){c[8288]=c[8288]&~(1<<e);break}do if((f|0)==(h|0))C=f+8|0;else{if(f>>>0<j>>>0)ia();j=f+8|0;if((c[j>>2]|0)==(i|0)){C=j;break}ia()}while(0);c[g+12>>2]=f;c[C>>2]=g}while(0);i=v+((l|k)+r)|0;a=l+a|0}i=i+4|0;c[i>>2]=c[i>>2]&-2;c[v+(n+4)>>2]=a|1;c[v+(a+n)>>2]=a;i=a>>>3;if(a>>>0<256){h=i<<1;f=33192+(h<<2)|0;g=c[8288]|0;i=1<<i;do if(!(g&i)){c[8288]=g|i;H=33192+(h+2<<2)|0;I=f}else{i=33192+(h+2<<2)|0;h=c[i>>2]|0;if(h>>>0>=(c[8292]|0)>>>0){H=i;I=h;break}ia()}while(0);c[H>>2]=p;c[I+12>>2]=p;c[v+(n+8)>>2]=I;c[v+(n+12)>>2]=f;break}d=a>>>8;do if(!d)f=0;else{if(a>>>0>16777215){f=31;break}H=(d+1048320|0)>>>16&8;I=d<<H;G=(I+520192|0)>>>16&4;I=I<<G;f=(I+245760|0)>>>16&2;f=14-(G|H|f)+(I<<f>>>15)|0;f=a>>>(f+7|0)&1|f<<1}while(0);i=33456+(f<<2)|0;c[v+(n+28)>>2]=f;c[v+(n+20)>>2]=0;c[v+(n+16)>>2]=0;h=c[8289]|0;g=1<<f;if(!(h&g)){c[8289]=h|g;c[i>>2]=p;c[v+(n+24)>>2]=i;c[v+(n+12)>>2]=p;c[v+(n+8)>>2]=p;break}h=c[i>>2]|0;if((f|0)==31)i=0;else i=25-(f>>>1)|0;j:do if((c[h+4>>2]&-8|0)!=(a|0)){f=a<<i;while(1){g=h+(f>>>31<<2)+16|0;i=c[g>>2]|0;if(!i)break;if((c[i+4>>2]&-8|0)==(a|0)){J=i;break j}else{f=f<<1;h=i}}if(g>>>0<(c[8292]|0)>>>0)ia();else{c[g>>2]=p;c[v+(n+24)>>2]=h;c[v+(n+12)>>2]=p;c[v+(n+8)>>2]=p;break h}}else J=h;while(0);d=J+8|0;b=c[d>>2]|0;I=c[8292]|0;if(J>>>0>=I>>>0&b>>>0>=I>>>0){c[b+12>>2]=p;c[d>>2]=p;c[v+(n+8)>>2]=b;c[v+(n+12)>>2]=J;c[v+(n+24)>>2]=0;break}else ia()}else{J=(c[8291]|0)+a|0;c[8291]=J;c[8294]=p;c[v+(n+4)>>2]=J|1}while(0);J=v+(q|8)|0;return J|0}else i=33600|0;while(1){h=c[i>>2]|0;if(h>>>0<=m>>>0?(A=c[i+4>>2]|0,B=h+A|0,B>>>0>m>>>0):0)break;i=c[i+8>>2]|0}i=h+(A+-39)|0;if(!(i&7))i=0;else i=0-i&7;g=h+(A+-47+i)|0;f=m+16|0;g=g>>>0<f>>>0?m:g;h=g+8|0;i=v+8|0;if(!(i&7))i=0;else i=0-i&7;j=r+-40-i|0;c[8294]=v+i;c[8291]=j;c[v+(i+4)>>2]=j|1;c[v+(r+-36)>>2]=40;c[8295]=c[8410];j=g+4|0;c[j>>2]=27;c[h+0>>2]=c[8400];c[h+4>>2]=c[8401];c[h+8>>2]=c[8402];c[h+12>>2]=c[8403];c[8400]=v;c[8401]=r;c[8403]=0;c[8402]=h;i=g+28|0;c[i>>2]=7;if((g+32|0)>>>0<B>>>0)do{J=i;i=i+4|0;c[i>>2]=7}while((J+8|0)>>>0<B>>>0);if((g|0)!=(m|0)){a=g-m|0;c[j>>2]=c[j>>2]&-2;c[m+4>>2]=a|1;c[g>>2]=a;i=a>>>3;if(a>>>0<256){h=i<<1;f=33192+(h<<2)|0;g=c[8288]|0;i=1<<i;do if(!(g&i)){c[8288]=g|i;D=33192+(h+2<<2)|0;E=f}else{d=33192+(h+2<<2)|0;b=c[d>>2]|0;if(b>>>0>=(c[8292]|0)>>>0){D=d;E=b;break}ia()}while(0);c[D>>2]=m;c[E+12>>2]=m;c[m+8>>2]=E;c[m+12>>2]=f;break}d=a>>>8;if(d)if(a>>>0>16777215)h=31;else{I=(d+1048320|0)>>>16&8;J=d<<I;H=(J+520192|0)>>>16&4;J=J<<H;h=(J+245760|0)>>>16&2;h=14-(H|I|h)+(J<<h>>>15)|0;h=a>>>(h+7|0)&1|h<<1}else h=0;i=33456+(h<<2)|0;c[m+28>>2]=h;c[m+20>>2]=0;c[f>>2]=0;d=c[8289]|0;b=1<<h;if(!(d&b)){c[8289]=d|b;c[i>>2]=m;c[m+24>>2]=i;c[m+12>>2]=m;c[m+8>>2]=m;break}b=c[i>>2]|0;if((h|0)==31)d=0;else d=25-(h>>>1)|0;k:do if((c[b+4>>2]&-8|0)!=(a|0)){i=a<<d;while(1){e=b+(i>>>31<<2)+16|0;d=c[e>>2]|0;if(!d)break;if((c[d+4>>2]&-8|0)==(a|0)){F=d;break k}else{i=i<<1;b=d}}if(e>>>0<(c[8292]|0)>>>0)ia();else{c[e>>2]=m;c[m+24>>2]=b;c[m+12>>2]=m;c[m+8>>2]=m;break g}}else F=b;while(0);d=F+8|0;b=c[d>>2]|0;J=c[8292]|0;if(F>>>0>=J>>>0&b>>>0>=J>>>0){c[b+12>>2]=m;c[d>>2]=m;c[m+8>>2]=b;c[m+12>>2]=F;c[m+24>>2]=0;break}else ia()}}else{J=c[8292]|0;if((J|0)==0|v>>>0<J>>>0)c[8292]=v;c[8400]=v;c[8401]=r;c[8403]=0;c[8297]=c[8406];c[8296]=-1;d=0;do{J=d<<1;I=33192+(J<<2)|0;c[33192+(J+3<<2)>>2]=I;c[33192+(J+2<<2)>>2]=I;d=d+1|0}while((d|0)!=32);d=v+8|0;if(!(d&7))d=0;else d=0-d&7;J=r+-40-d|0;c[8294]=v+d;c[8291]=J;c[v+(d+4)>>2]=J|1;c[v+(r+-36)>>2]=40;c[8295]=c[8410]}while(0);b=c[8291]|0;if(b>>>0>o>>>0){I=b-o|0;c[8291]=I;J=c[8294]|0;c[8294]=J+o;c[J+(o+4)>>2]=I|1;c[J+4>>2]=o|3;J=J+8|0;return J|0}}c[(oa()|0)>>2]=12;J=0;return J|0}function id(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if(!a)return;g=a+-8|0;h=c[8292]|0;if(g>>>0<h>>>0)ia();f=c[a+-4>>2]|0;e=f&3;if((e|0)==1)ia();o=f&-8;q=a+(o+-8)|0;do if(!(f&1)){g=c[g>>2]|0;if(!e)return;i=-8-g|0;l=a+i|0;m=g+o|0;if(l>>>0<h>>>0)ia();if((l|0)==(c[8293]|0)){g=a+(o+-4)|0;f=c[g>>2]|0;if((f&3|0)!=3){u=l;k=m;break}c[8290]=m;c[g>>2]=f&-2;c[a+(i+4)>>2]=m|1;c[q>>2]=m;return}d=g>>>3;if(g>>>0<256){e=c[a+(i+8)>>2]|0;f=c[a+(i+12)>>2]|0;g=33192+(d<<1<<2)|0;if((e|0)!=(g|0)){if(e>>>0<h>>>0)ia();if((c[e+12>>2]|0)!=(l|0))ia()}if((f|0)==(e|0)){c[8288]=c[8288]&~(1<<d);u=l;k=m;break}if((f|0)!=(g|0)){if(f>>>0<h>>>0)ia();g=f+8|0;if((c[g>>2]|0)==(l|0))b=g;else ia()}else b=f+8|0;c[e+12>>2]=f;c[b>>2]=e;u=l;k=m;break}b=c[a+(i+24)>>2]|0;e=c[a+(i+12)>>2]|0;do if((e|0)==(l|0)){f=a+(i+20)|0;g=c[f>>2]|0;if(!g){f=a+(i+16)|0;g=c[f>>2]|0;if(!g){j=0;break}}while(1){e=g+20|0;d=c[e>>2]|0;if(d){g=d;f=e;continue}e=g+16|0;d=c[e>>2]|0;if(!d)break;else{g=d;f=e}}if(f>>>0<h>>>0)ia();else{c[f>>2]=0;j=g;break}}else{d=c[a+(i+8)>>2]|0;if(d>>>0<h>>>0)ia();g=d+12|0;if((c[g>>2]|0)!=(l|0))ia();f=e+8|0;if((c[f>>2]|0)==(l|0)){c[g>>2]=e;c[f>>2]=d;j=e;break}else ia()}while(0);if(b){g=c[a+(i+28)>>2]|0;f=33456+(g<<2)|0;if((l|0)==(c[f>>2]|0)){c[f>>2]=j;if(!j){c[8289]=c[8289]&~(1<<g);u=l;k=m;break}}else{if(b>>>0<(c[8292]|0)>>>0)ia();g=b+16|0;if((c[g>>2]|0)==(l|0))c[g>>2]=j;else c[b+20>>2]=j;if(!j){u=l;k=m;break}}f=c[8292]|0;if(j>>>0<f>>>0)ia();c[j+24>>2]=b;g=c[a+(i+16)>>2]|0;do if(g)if(g>>>0<f>>>0)ia();else{c[j+16>>2]=g;c[g+24>>2]=j;break}while(0);g=c[a+(i+20)>>2]|0;if(g)if(g>>>0<(c[8292]|0)>>>0)ia();else{c[j+20>>2]=g;c[g+24>>2]=j;u=l;k=m;break}else{u=l;k=m}}else{u=l;k=m}}else{u=g;k=o}while(0);if(u>>>0>=q>>>0)ia();g=a+(o+-4)|0;f=c[g>>2]|0;if(!(f&1))ia();if(!(f&2)){if((q|0)==(c[8294]|0)){t=(c[8291]|0)+k|0;c[8291]=t;c[8294]=u;c[u+4>>2]=t|1;if((u|0)!=(c[8293]|0))return;c[8293]=0;c[8290]=0;return}if((q|0)==(c[8293]|0)){t=(c[8290]|0)+k|0;c[8290]=t;c[8293]=u;c[u+4>>2]=t|1;c[u+t>>2]=t;return}h=(f&-8)+k|0;b=f>>>3;do if(f>>>0>=256){b=c[a+(o+16)>>2]|0;g=c[a+(o|4)>>2]|0;do if((g|0)==(q|0)){f=a+(o+12)|0;g=c[f>>2]|0;if(!g){f=a+(o+8)|0;g=c[f>>2]|0;if(!g){p=0;break}}while(1){e=g+20|0;d=c[e>>2]|0;if(d){g=d;f=e;continue}e=g+16|0;d=c[e>>2]|0;if(!d)break;else{g=d;f=e}}if(f>>>0<(c[8292]|0)>>>0)ia();else{c[f>>2]=0;p=g;break}}else{f=c[a+o>>2]|0;if(f>>>0<(c[8292]|0)>>>0)ia();e=f+12|0;if((c[e>>2]|0)!=(q|0))ia();d=g+8|0;if((c[d>>2]|0)==(q|0)){c[e>>2]=g;c[d>>2]=f;p=g;break}else ia()}while(0);if(b){g=c[a+(o+20)>>2]|0;f=33456+(g<<2)|0;if((q|0)==(c[f>>2]|0)){c[f>>2]=p;if(!p){c[8289]=c[8289]&~(1<<g);break}}else{if(b>>>0<(c[8292]|0)>>>0)ia();g=b+16|0;if((c[g>>2]|0)==(q|0))c[g>>2]=p;else c[b+20>>2]=p;if(!p)break}g=c[8292]|0;if(p>>>0<g>>>0)ia();c[p+24>>2]=b;f=c[a+(o+8)>>2]|0;do if(f)if(f>>>0<g>>>0)ia();else{c[p+16>>2]=f;c[f+24>>2]=p;break}while(0);d=c[a+(o+12)>>2]|0;if(d)if(d>>>0<(c[8292]|0)>>>0)ia();else{c[p+20>>2]=d;c[d+24>>2]=p;break}}}else{d=c[a+o>>2]|0;e=c[a+(o|4)>>2]|0;g=33192+(b<<1<<2)|0;if((d|0)!=(g|0)){if(d>>>0<(c[8292]|0)>>>0)ia();if((c[d+12>>2]|0)!=(q|0))ia()}if((e|0)==(d|0)){c[8288]=c[8288]&~(1<<b);break}if((e|0)!=(g|0)){if(e>>>0<(c[8292]|0)>>>0)ia();f=e+8|0;if((c[f>>2]|0)==(q|0))n=f;else ia()}else n=e+8|0;c[d+12>>2]=e;c[n>>2]=d}while(0);c[u+4>>2]=h|1;c[u+h>>2]=h;if((u|0)==(c[8293]|0)){c[8290]=h;return}else g=h}else{c[g>>2]=f&-2;c[u+4>>2]=k|1;c[u+k>>2]=k;g=k}f=g>>>3;if(g>>>0<256){e=f<<1;g=33192+(e<<2)|0;b=c[8288]|0;d=1<<f;if(b&d){d=33192+(e+2<<2)|0;b=c[d>>2]|0;if(b>>>0<(c[8292]|0)>>>0)ia();else{r=d;s=b}}else{c[8288]=b|d;r=33192+(e+2<<2)|0;s=g}c[r>>2]=u;c[s+12>>2]=u;c[u+8>>2]=s;c[u+12>>2]=g;return}b=g>>>8;if(b)if(g>>>0>16777215)f=31;else{r=(b+1048320|0)>>>16&8;s=b<<r;q=(s+520192|0)>>>16&4;s=s<<q;f=(s+245760|0)>>>16&2;f=14-(q|r|f)+(s<<f>>>15)|0;f=g>>>(f+7|0)&1|f<<1}else f=0;d=33456+(f<<2)|0;c[u+28>>2]=f;c[u+20>>2]=0;c[u+16>>2]=0;b=c[8289]|0;e=1<<f;a:do if(b&e){e=c[d>>2]|0;if((f|0)==31)d=0;else d=25-(f>>>1)|0;b:do if((c[e+4>>2]&-8|0)!=(g|0)){f=g<<d;while(1){b=e+(f>>>31<<2)+16|0;d=c[b>>2]|0;if(!d)break;if((c[d+4>>2]&-8|0)==(g|0)){t=d;break b}else{f=f<<1;e=d}}if(b>>>0<(c[8292]|0)>>>0)ia();else{c[b>>2]=u;c[u+24>>2]=e;c[u+12>>2]=u;c[u+8>>2]=u;break a}}else t=e;while(0);b=t+8|0;d=c[b>>2]|0;s=c[8292]|0;if(t>>>0>=s>>>0&d>>>0>=s>>>0){c[d+12>>2]=u;c[b>>2]=u;c[u+8>>2]=d;c[u+12>>2]=t;c[u+24>>2]=0;break}else ia()}else{c[8289]=b|e;c[d>>2]=u;c[u+24>>2]=d;c[u+12>>2]=u;c[u+8>>2]=u}while(0);u=(c[8296]|0)+-1|0;c[8296]=u;if(!u)b=33608|0;else return;while(1){b=c[b>>2]|0;if(!b)break;else b=b+8|0}c[8296]=-1;return}function jd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;q=a+b|0;h=c[a+4>>2]|0;do if(!(h&1)){j=c[a>>2]|0;if(!(h&3))return;n=a+(0-j)|0;m=j+b|0;i=c[8292]|0;if(n>>>0<i>>>0)ia();if((n|0)==(c[8293]|0)){g=a+(b+4)|0;h=c[g>>2]|0;if((h&3|0)!=3){t=n;l=m;break}c[8290]=m;c[g>>2]=h&-2;c[a+(4-j)>>2]=m|1;c[q>>2]=m;return}e=j>>>3;if(j>>>0<256){f=c[a+(8-j)>>2]|0;g=c[a+(12-j)>>2]|0;h=33192+(e<<1<<2)|0;if((f|0)!=(h|0)){if(f>>>0<i>>>0)ia();if((c[f+12>>2]|0)!=(n|0))ia()}if((g|0)==(f|0)){c[8288]=c[8288]&~(1<<e);t=n;l=m;break}if((g|0)!=(h|0)){if(g>>>0<i>>>0)ia();h=g+8|0;if((c[h>>2]|0)==(n|0))d=h;else ia()}else d=g+8|0;c[f+12>>2]=g;c[d>>2]=f;t=n;l=m;break}d=c[a+(24-j)>>2]|0;f=c[a+(12-j)>>2]|0;do if((f|0)==(n|0)){g=16-j|0;f=a+(g+4)|0;h=c[f>>2]|0;if(!h){g=a+g|0;h=c[g>>2]|0;if(!h){k=0;break}}else g=f;while(1){f=h+20|0;e=c[f>>2]|0;if(e){h=e;g=f;continue}f=h+16|0;e=c[f>>2]|0;if(!e)break;else{h=e;g=f}}if(g>>>0<i>>>0)ia();else{c[g>>2]=0;k=h;break}}else{e=c[a+(8-j)>>2]|0;if(e>>>0<i>>>0)ia();h=e+12|0;if((c[h>>2]|0)!=(n|0))ia();g=f+8|0;if((c[g>>2]|0)==(n|0)){c[h>>2]=f;c[g>>2]=e;k=f;break}else ia()}while(0);if(d){h=c[a+(28-j)>>2]|0;g=33456+(h<<2)|0;if((n|0)==(c[g>>2]|0)){c[g>>2]=k;if(!k){c[8289]=c[8289]&~(1<<h);t=n;l=m;break}}else{if(d>>>0<(c[8292]|0)>>>0)ia();h=d+16|0;if((c[h>>2]|0)==(n|0))c[h>>2]=k;else c[d+20>>2]=k;if(!k){t=n;l=m;break}}f=c[8292]|0;if(k>>>0<f>>>0)ia();c[k+24>>2]=d;h=16-j|0;g=c[a+h>>2]|0;do if(g)if(g>>>0<f>>>0)ia();else{c[k+16>>2]=g;c[g+24>>2]=k;break}while(0);h=c[a+(h+4)>>2]|0;if(h)if(h>>>0<(c[8292]|0)>>>0)ia();else{c[k+20>>2]=h;c[h+24>>2]=k;t=n;l=m;break}else{t=n;l=m}}else{t=n;l=m}}else{t=a;l=b}while(0);i=c[8292]|0;if(q>>>0<i>>>0)ia();h=a+(b+4)|0;g=c[h>>2]|0;if(!(g&2)){if((q|0)==(c[8294]|0)){s=(c[8291]|0)+l|0;c[8291]=s;c[8294]=t;c[t+4>>2]=s|1;if((t|0)!=(c[8293]|0))return;c[8293]=0;c[8290]=0;return}if((q|0)==(c[8293]|0)){s=(c[8290]|0)+l|0;c[8290]=s;c[8293]=t;c[t+4>>2]=s|1;c[t+s>>2]=s;return}j=(g&-8)+l|0;d=g>>>3;do if(g>>>0>=256){d=c[a+(b+24)>>2]|0;f=c[a+(b+12)>>2]|0;do if((f|0)==(q|0)){g=a+(b+20)|0;h=c[g>>2]|0;if(!h){g=a+(b+16)|0;h=c[g>>2]|0;if(!h){p=0;break}}while(1){f=h+20|0;e=c[f>>2]|0;if(e){h=e;g=f;continue}f=h+16|0;e=c[f>>2]|0;if(!e)break;else{h=e;g=f}}if(g>>>0<i>>>0)ia();else{c[g>>2]=0;p=h;break}}else{e=c[a+(b+8)>>2]|0;if(e>>>0<i>>>0)ia();h=e+12|0;if((c[h>>2]|0)!=(q|0))ia();g=f+8|0;if((c[g>>2]|0)==(q|0)){c[h>>2]=f;c[g>>2]=e;p=f;break}else ia()}while(0);if(d){h=c[a+(b+28)>>2]|0;g=33456+(h<<2)|0;if((q|0)==(c[g>>2]|0)){c[g>>2]=p;if(!p){c[8289]=c[8289]&~(1<<h);break}}else{if(d>>>0<(c[8292]|0)>>>0)ia();g=d+16|0;if((c[g>>2]|0)==(q|0))c[g>>2]=p;else c[d+20>>2]=p;if(!p)break}f=c[8292]|0;if(p>>>0<f>>>0)ia();c[p+24>>2]=d;g=c[a+(b+16)>>2]|0;do if(g)if(g>>>0<f>>>0)ia();else{c[p+16>>2]=g;c[g+24>>2]=p;break}while(0);f=c[a+(b+20)>>2]|0;if(f)if(f>>>0<(c[8292]|0)>>>0)ia();else{c[p+20>>2]=f;c[f+24>>2]=p;break}}}else{e=c[a+(b+8)>>2]|0;f=c[a+(b+12)>>2]|0;h=33192+(d<<1<<2)|0;if((e|0)!=(h|0)){if(e>>>0<i>>>0)ia();if((c[e+12>>2]|0)!=(q|0))ia()}if((f|0)==(e|0)){c[8288]=c[8288]&~(1<<d);break}if((f|0)!=(h|0)){if(f>>>0<i>>>0)ia();g=f+8|0;if((c[g>>2]|0)==(q|0))o=g;else ia()}else o=f+8|0;c[e+12>>2]=f;c[o>>2]=e}while(0);c[t+4>>2]=j|1;c[t+j>>2]=j;if((t|0)==(c[8293]|0)){c[8290]=j;return}else h=j}else{c[h>>2]=g&-2;c[t+4>>2]=l|1;c[t+l>>2]=l;h=l}g=h>>>3;if(h>>>0<256){e=g<<1;h=33192+(e<<2)|0;d=c[8288]|0;f=1<<g;if(d&f){f=33192+(e+2<<2)|0;e=c[f>>2]|0;if(e>>>0<(c[8292]|0)>>>0)ia();else{r=f;s=e}}else{c[8288]=d|f;r=33192+(e+2<<2)|0;s=h}c[r>>2]=t;c[s+12>>2]=t;c[t+8>>2]=s;c[t+12>>2]=h;return}d=h>>>8;if(d)if(h>>>0>16777215)g=31;else{r=(d+1048320|0)>>>16&8;s=d<<r;q=(s+520192|0)>>>16&4;s=s<<q;g=(s+245760|0)>>>16&2;g=14-(q|r|g)+(s<<g>>>15)|0;g=h>>>(g+7|0)&1|g<<1}else g=0;f=33456+(g<<2)|0;c[t+28>>2]=g;c[t+20>>2]=0;c[t+16>>2]=0;e=c[8289]|0;d=1<<g;if(!(e&d)){c[8289]=e|d;c[f>>2]=t;c[t+24>>2]=f;c[t+12>>2]=t;c[t+8>>2]=t;return}f=c[f>>2]|0;if((g|0)==31)d=0;else d=25-(g>>>1)|0;a:do if((c[f+4>>2]&-8|0)!=(h|0)){g=h<<d;d=f;while(1){e=d+(g>>>31<<2)+16|0;f=c[e>>2]|0;if(!f)break;if((c[f+4>>2]&-8|0)==(h|0))break a;else{g=g<<1;d=f}}if(e>>>0<(c[8292]|0)>>>0)ia();c[e>>2]=t;c[t+24>>2]=d;c[t+12>>2]=t;c[t+8>>2]=t;return}while(0);d=f+8|0;e=c[d>>2]|0;s=c[8292]|0;if(!(f>>>0>=s>>>0&e>>>0>=s>>>0))ia();c[e+12>>2]=t;c[d>>2]=t;c[t+8>>2]=e;c[t+12>>2]=f;c[t+24>>2]=0;return}function kd(){}function ld(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=(b|0)<0?-1:0;return b>>c-32|0}function md(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (C=d,a-c>>>0|0)|0}function nd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (C=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function od(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;h=b&3;i=d|d<<8|d<<16|d<<24;g=f&~3;if(h){h=b+4-h|0;while((b|0)<(h|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(g|0)){c[b>>2]=i;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function pd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=0;return b>>>c-32|0}function qd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}C=a<<c-32;return 0}function rd(b){b=b|0;var c=0;c=b;while(a[c>>0]|0)c=c+1|0;return c-b|0}function sd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return ma(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function td(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else sd(b,c,d)|0;return b|0}function ud(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[m+(b>>>24)>>0]|0)+24|0}function vd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=_(e,f)|0;d=a>>>16;a=(c>>>16)+(_(e,d)|0)|0;e=b>>>16;b=_(e,f)|0;return (C=(a>>>16)+(_(e,d)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|c&65535|0)|0}function wd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=md(j^a,i^b,j,i)|0;g=C;a=f^j;b=e^i;d=md((Bd(h,g,md(f^c,e^d,f,e)|0,C,0)|0)^a,C^b,a,b)|0;return d|0}function xd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;j=f|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;l=e>>31|((e|0)<0?-1:0)<<1;k=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;a=md(h^a,g^b,h,g)|0;b=C;Bd(a,b,md(l^d,k^e,l,k)|0,C,j)|0;e=md(c[j>>2]^h,c[j+4>>2]^g,h,g)|0;d=C;i=f;return (C=d,e)|0}function yd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=vd(e,f)|0;a=C;return (C=(_(b,f)|0)+(_(d,e)|0)+a|a&0,c|0|0)|0}function zd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=Bd(a,b,c,d,0)|0;return d|0}function Ad(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;i=i+8|0;f=g|0;Bd(a,b,d,e,f)|0;i=g;return (C=c[f+4>>2]|0,c[f>>2]|0)|0}function Bd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;n=a;l=b;m=l;k=d;o=e;i=o;if(!m){g=(f|0)!=0;if(!i){if(g){c[f>>2]=(n>>>0)%(k>>>0);c[f+4>>2]=0}o=0;f=(n>>>0)/(k>>>0)>>>0;return (C=o,f)|0}else{if(!g){o=0;f=0;return (C=o,f)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;o=0;f=0;return (C=o,f)|0}}j=(i|0)==0;do if(k){if(!j){h=(aa(i|0)|0)-(aa(m|0)|0)|0;if(h>>>0<=31){g=h+1|0;l=31-h|0;k=h-31>>31;i=g;j=n>>>(g>>>0)&k|m<<l;k=m>>>(g>>>0)&k;g=0;h=n<<l;break}if(!f){o=0;f=0;return (C=o,f)|0}c[f>>2]=a|0;c[f+4>>2]=l|b&0;o=0;f=0;return (C=o,f)|0}j=k-1|0;if(j&k){h=(aa(k|0)|0)+33-(aa(m|0)|0)|0;p=64-h|0;l=32-h|0;a=l>>31;b=h-32|0;k=b>>31;i=h;j=l-1>>31&m>>>(b>>>0)|(m<<l|n>>>(h>>>0))&k;k=k&m>>>(h>>>0);g=n<<p&a;h=(m<<p|n>>>(b>>>0))&a|n<<l&h-33>>31;break}if(f){c[f>>2]=j&n;c[f+4>>2]=0}if((k|0)==1){f=l|b&0;p=a|0|0;return (C=f,p)|0}else{p=ud(k|0)|0;f=m>>>(p>>>0)|0;p=m<<32-p|n>>>(p>>>0)|0;return (C=f,p)|0}}else{if(j){if(f){c[f>>2]=(m>>>0)%(k>>>0);c[f+4>>2]=0}f=0;p=(m>>>0)/(k>>>0)>>>0;return (C=f,p)|0}if(!n){if(f){c[f>>2]=0;c[f+4>>2]=(m>>>0)%(i>>>0)}f=0;p=(m>>>0)/(i>>>0)>>>0;return (C=f,p)|0}j=i-1|0;if(!(j&i)){if(f){c[f>>2]=a|0;c[f+4>>2]=j&m|b&0}f=0;p=m>>>((ud(i|0)|0)>>>0);return (C=f,p)|0}h=(aa(i|0)|0)-(aa(m|0)|0)|0;if(h>>>0<=30){k=h+1|0;h=31-h|0;i=k;j=m<<h|n>>>(k>>>0);k=m>>>(k>>>0);g=0;h=n<<h;break}if(!f){f=0;p=0;return (C=f,p)|0}c[f>>2]=a|0;c[f+4>>2]=l|b&0;f=0;p=0;return (C=f,p)|0}while(0);if(!i){l=h;i=0;h=0}else{m=d|0|0;l=o|e&0;b=nd(m,l,-1,-1)|0;a=C;d=h;h=0;do{n=d;d=g>>>31|d<<1;g=h|g<<1;n=j<<1|n>>>31|0;e=j>>>31|k<<1|0;md(b,a,n,e)|0;p=C;o=p>>31|((p|0)<0?-1:0)<<1;h=o&1;j=md(n,e,o&m,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l)|0;k=C;i=i-1|0}while((i|0)!=0);l=d;i=0}d=0;if(f){c[f>>2]=j;c[f+4>>2]=k}f=(g|0)>>>31|(l|d)<<1|(d<<1|g>>>31)&0|i;p=(g<<1|0>>>31)&-2|h;return (C=f,p)|0}function Cd(a){a=a|0;return ra[a&31]()|0}function Dd(){return ea(0)|0}function Ed(){return ea(1)|0}function Fd(){return ea(2)|0}function Gd(){return ea(3)|0}function Hd(){return ea(4)|0}function Id(){return ea(5)|0}function Jd(){return ea(6)|0}function Kd(){return ea(7)|0}function Ld(a,b){a=a|0;b=b|0;return sa[a&31](b|0)|0}function Md(a){a=a|0;return ga(0,a|0)|0}function Nd(a){a=a|0;return ga(1,a|0)|0}function Od(a){a=a|0;return ga(2,a|0)|0}function Pd(a){a=a|0;return ga(3,a|0)|0}function Qd(a){a=a|0;return ga(4,a|0)|0}function Rd(a){a=a|0;return ga(5,a|0)|0}function Sd(a){a=a|0;return ga(6,a|0)|0}function Td(a){a=a|0;return ga(7,a|0)|0}function Ud(){ba(0);return 0}function Vd(a){a=a|0;ba(1);return 0}

// EMSCRIPTEN_END_FUNCS
var ra=[Ud,Ud,Dd,Ud,Ed,Ud,Fd,Ud,Gd,Ud,Hd,Ud,Id,Ud,Jd,Ud,Kd,Ud,Ud,Ud,Ud,Ud,Ud,Ud,Ud,Ud,Ud,Ud,Ud,Ud,Ud,Ud];var sa=[Vd,Vd,Md,Vd,Nd,Vd,Od,Vd,Pd,Vd,Qd,Vd,Rd,Vd,Sd,Vd,Td,Vd,Vd,Vd,Vd,Vd,Vd,Vd,Vd,Vd,Vd,Vd,Vd,Vd,Vd,Vd];return{_sodium_library_version_minor:bd,_strlen:rd,_sodium_version_string:$c,_sodium_hex2bin:_c,_crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive:Sb,_bitshift64Lshr:pd,_crypto_pwhash_scryptsalsa208sha256:Tb,_crypto_box_noncebytes:Ta,_crypto_box_beforenm:Xa,_crypto_scalarmult_base:$b,_crypto_aead_chacha20poly1305_abytes:Ja,_crypto_auth_bytes:Ka,_crypto_sign_open:sc,_memcpy:sd,_crypto_box_seed_keypair:Va,_crypto_pwhash_scryptsalsa208sha256_memlimit_interactive:Qb,_crypto_box_open_easy_afternm:cb,_crypto_sign_ed25519_sk_to_curve25519:Hc,_sodium_memzero:Xc,_crypto_aead_chacha20poly1305_keybytes:Fa,_crypto_box_seal:eb,_free:id,_crypto_shorthash:kc,_crypto_auth_keybytes:La,_crypto_pwhash_scryptsalsa208sha256_saltbytes:Mb,_crypto_aead_chacha20poly1305_npubbytes:Ga,_crypto_sign_seedbytes:mc,_crypto_box_detached_afternm:Ya,_crypto_auth:Ma,_randombytes_random:Rc,_crypto_sign_keypair:qc,_crypto_shorthash_keybytes:jc,_crypto_generichash_statebytes:pb,_crypto_pwhash_scryptsalsa208sha256_str_verify:Vb,_crypto_generichash_init:rb,_crypto_generichash_keybytes_max:nb,_crypto_sign_ed25519_pk_to_curve25519:Gc,_i64Add:nd,_crypto_box_beforenmbytes:Sa,_crypto_generichash:qb,_sodium_library_version_major:ad,_randombytes_stir:Sc,_crypto_aead_chacha20poly1305_ietf_encrypt:Ca,_crypto_aead_chacha20poly1305_ietf_decrypt:Ea,_randombytes_close:Vc,_crypto_shorthash_bytes:ic,_crypto_box_secretkeybytes:Ra,_crypto_aead_chacha20poly1305_encrypt:Ba,_crypto_pwhash_scryptsalsa208sha256_ll:Jb,_crypto_box_detached:Za,_randombytes_buf:Uc,_crypto_pwhash_scryptsalsa208sha256_str:Ub,_bitshift64Ashr:ld,_crypto_box_open_detached:bb,_crypto_scalarmult_bytes:Zb,_crypto_auth_verify:Na,_crypto_box_seal_open:fb,_crypto_secretbox_detached:ec,_crypto_secretbox_easy:fc,_crypto_pwhash_scryptsalsa208sha256_strbytes:Nb,_memset:od,_crypto_box_open_detached_afternm:ab,_crypto_box_sealbytes:gb,_i64Subtract:md,_crypto_pwhash_scryptsalsa208sha256_strprefix:Ob,_crypto_box_seedbytes:Pa,_crypto_hash:wb,_crypto_box_easy_afternm:_a,_crypto_box_macbytes:Ua,_crypto_box_publickeybytes:Qa,_sodium_bin2hex:Zc,_crypto_sign_secretkeybytes:oc,_crypto_scalarmult_scalarbytes:_b,_crypto_generichash_keybytes_min:mb,_malloc:hd,_crypto_aead_chacha20poly1305_decrypt:Da,_memmove:td,_crypto_sign:rc,_crypto_secretbox_noncebytes:cc,_randombytes_set_implementation:Qc,_crypto_box_keypair:Wa,_crypto_generichash_keybytes:ob,_crypto_generichash_bytes_min:jb,_sodium_init:Wc,_crypto_secretbox_macbytes:dc,_crypto_secretbox_keybytes:bc,_bitshift64Shl:qd,_crypto_hash_bytes:vb,_crypto_generichash_bytes:lb,_crypto_generichash_bytes_max:kb,_crypto_secretbox_open_detached:gc,_sodium_memcmp:Yc,_crypto_sign_verify_detached:uc,_crypto_box_open_easy:db,_crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive:Rb,_crypto_sign_publickeybytes:nc,_crypto_aead_chacha20poly1305_nsecbytes:Ia,_crypto_sign_bytes:lc,_crypto_generichash_update:sb,_crypto_scalarmult:ac,_crypto_sign_detached:tc,_crypto_box_easy:$a,_crypto_secretbox_open_easy:hc,_crypto_generichash_final:tb,_randombytes_uniform:Tc,_crypto_sign_seed_keypair:pc,_crypto_pwhash_scryptsalsa208sha256_opslimit_interactive:Pb,_crypto_aead_chacha20poly1305_ietf_npubbytes:Ha,runPostSets:kd,stackAlloc:ta,stackSave:ua,stackRestore:va,setThrew:wa,setTempRet0:za,getTempRet0:Aa,dynCall_i:Cd,dynCall_ii:Ld}})


// EMSCRIPTEN_END_ASM
(d.Sa,d.Ta,R);d._sodium_library_version_minor=Y._sodium_library_version_minor;var gb=d._strlen=Y._strlen;d._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive=Y._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive;var eb=d._bitshift64Lshr=Y._bitshift64Lshr;
d._crypto_pwhash_scryptsalsa208sha256=Y._crypto_pwhash_scryptsalsa208sha256;d._crypto_box_noncebytes=Y._crypto_box_noncebytes;d._crypto_box_beforenm=Y._crypto_box_beforenm;d._crypto_scalarmult_base=Y._crypto_scalarmult_base;d._crypto_aead_chacha20poly1305_abytes=Y._crypto_aead_chacha20poly1305_abytes;d._crypto_auth_bytes=Y._crypto_auth_bytes;d._crypto_sign_open=Y._crypto_sign_open;var hb=d._memcpy=Y._memcpy;d._crypto_box_seed_keypair=Y._crypto_box_seed_keypair;
d._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive=Y._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive;d._crypto_box_open_easy_afternm=Y._crypto_box_open_easy_afternm;d._crypto_sign_ed25519_sk_to_curve25519=Y._crypto_sign_ed25519_sk_to_curve25519;d._sodium_memzero=Y._sodium_memzero;d._crypto_aead_chacha20poly1305_keybytes=Y._crypto_aead_chacha20poly1305_keybytes;d._crypto_box_seal=Y._crypto_box_seal;var Da=d._free=Y._free;d.runPostSets=Y.runPostSets;d._crypto_shorthash=Y._crypto_shorthash;
d._crypto_auth_keybytes=Y._crypto_auth_keybytes;d._crypto_pwhash_scryptsalsa208sha256_saltbytes=Y._crypto_pwhash_scryptsalsa208sha256_saltbytes;d._crypto_aead_chacha20poly1305_npubbytes=Y._crypto_aead_chacha20poly1305_npubbytes;d._crypto_sign_seedbytes=Y._crypto_sign_seedbytes;d._crypto_box_detached_afternm=Y._crypto_box_detached_afternm;d._crypto_auth=Y._crypto_auth;d._randombytes_random=Y._randombytes_random;d._crypto_sign_keypair=Y._crypto_sign_keypair;d._crypto_generichash_keybytes_min=Y._crypto_generichash_keybytes_min;
d._crypto_generichash_statebytes=Y._crypto_generichash_statebytes;d._crypto_pwhash_scryptsalsa208sha256_str_verify=Y._crypto_pwhash_scryptsalsa208sha256_str_verify;d._sodium_version_string=Y._sodium_version_string;d._crypto_generichash_keybytes_max=Y._crypto_generichash_keybytes_max;d._crypto_sign_ed25519_pk_to_curve25519=Y._crypto_sign_ed25519_pk_to_curve25519;d._crypto_sign_publickeybytes=Y._crypto_sign_publickeybytes;d._crypto_box_beforenmbytes=Y._crypto_box_beforenmbytes;
d._crypto_generichash=Y._crypto_generichash;d._sodium_library_version_major=Y._sodium_library_version_major;d._randombytes_stir=Y._randombytes_stir;d._crypto_aead_chacha20poly1305_ietf_encrypt=Y._crypto_aead_chacha20poly1305_ietf_encrypt;d._crypto_shorthash_keybytes=Y._crypto_shorthash_keybytes;d._crypto_aead_chacha20poly1305_ietf_decrypt=Y._crypto_aead_chacha20poly1305_ietf_decrypt;d._randombytes_close=Y._randombytes_close;d._crypto_shorthash_bytes=Y._crypto_shorthash_bytes;
d._crypto_box_secretkeybytes=Y._crypto_box_secretkeybytes;d._crypto_aead_chacha20poly1305_encrypt=Y._crypto_aead_chacha20poly1305_encrypt;d._crypto_pwhash_scryptsalsa208sha256_ll=Y._crypto_pwhash_scryptsalsa208sha256_ll;d._crypto_box_detached=Y._crypto_box_detached;d._randombytes_buf=Y._randombytes_buf;d._crypto_pwhash_scryptsalsa208sha256_strbytes=Y._crypto_pwhash_scryptsalsa208sha256_strbytes;var ab=d._bitshift64Ashr=Y._bitshift64Ashr;d._crypto_box_open_detached=Y._crypto_box_open_detached;
d._crypto_scalarmult_bytes=Y._crypto_scalarmult_bytes;d._crypto_auth_verify=Y._crypto_auth_verify;d._crypto_sign_detached=Y._crypto_sign_detached;d._crypto_secretbox_detached=Y._crypto_secretbox_detached;d._crypto_secretbox_easy=Y._crypto_secretbox_easy;d._crypto_pwhash_scryptsalsa208sha256_str=Y._crypto_pwhash_scryptsalsa208sha256_str;var db=d._memset=Y._memset;d._crypto_box_open_detached_afternm=Y._crypto_box_open_detached_afternm;d._crypto_box_sealbytes=Y._crypto_box_sealbytes;
var bb=d._i64Subtract=Y._i64Subtract;d._crypto_pwhash_scryptsalsa208sha256_strprefix=Y._crypto_pwhash_scryptsalsa208sha256_strprefix;d._crypto_box_seedbytes=Y._crypto_box_seedbytes;d._crypto_hash=Y._crypto_hash;d._crypto_box_easy_afternm=Y._crypto_box_easy_afternm;d._crypto_box_macbytes=Y._crypto_box_macbytes;d._crypto_box_publickeybytes=Y._crypto_box_publickeybytes;d._sodium_bin2hex=Y._sodium_bin2hex;d._crypto_sign_secretkeybytes=Y._crypto_sign_secretkeybytes;d._crypto_scalarmult_scalarbytes=Y._crypto_scalarmult_scalarbytes;
d._crypto_generichash_bytes_min=Y._crypto_generichash_bytes_min;var xa=d._malloc=Y._malloc;d._crypto_aead_chacha20poly1305_decrypt=Y._crypto_aead_chacha20poly1305_decrypt;d._crypto_secretbox_open_easy=Y._crypto_secretbox_open_easy;d._crypto_sign=Y._crypto_sign;d._crypto_secretbox_noncebytes=Y._crypto_secretbox_noncebytes;d._randombytes_set_implementation=Y._randombytes_set_implementation;d._crypto_box_keypair=Y._crypto_box_keypair;d._crypto_generichash_keybytes=Y._crypto_generichash_keybytes;
d._sodium_hex2bin=Y._sodium_hex2bin;d._sodium_init=Y._sodium_init;d._crypto_aead_chacha20poly1305_nsecbytes=Y._crypto_aead_chacha20poly1305_nsecbytes;d._crypto_secretbox_macbytes=Y._crypto_secretbox_macbytes;d._crypto_secretbox_keybytes=Y._crypto_secretbox_keybytes;var fb=d._bitshift64Shl=Y._bitshift64Shl;d._crypto_hash_bytes=Y._crypto_hash_bytes;d._crypto_generichash_bytes=Y._crypto_generichash_bytes;d._crypto_generichash_bytes_max=Y._crypto_generichash_bytes_max;
d._crypto_secretbox_open_detached=Y._crypto_secretbox_open_detached;d._sodium_memcmp=Y._sodium_memcmp;d._crypto_sign_verify_detached=Y._crypto_sign_verify_detached;d._crypto_box_open_easy=Y._crypto_box_open_easy;d._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive=Y._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive;d._crypto_generichash_init=Y._crypto_generichash_init;var cb=d._i64Add=Y._i64Add;d._crypto_sign_bytes=Y._crypto_sign_bytes;d._crypto_generichash_update=Y._crypto_generichash_update;
d._crypto_scalarmult=Y._crypto_scalarmult;d._crypto_box_seal_open=Y._crypto_box_seal_open;d._crypto_box_easy=Y._crypto_box_easy;var kb=d._memmove=Y._memmove;d._crypto_generichash_final=Y._crypto_generichash_final;d._randombytes_uniform=Y._randombytes_uniform;d._crypto_sign_seed_keypair=Y._crypto_sign_seed_keypair;d._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive=Y._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive;d._crypto_aead_chacha20poly1305_ietf_npubbytes=Y._crypto_aead_chacha20poly1305_ietf_npubbytes;
d.dynCall_i=Y.dynCall_i;d.dynCall_ii=Y.dynCall_ii;D.aa=Y.stackAlloc;D.oa=Y.stackSave;D.ba=Y.stackRestore;D.jb=Y.setTempRet0;D.Ya=Y.getTempRet0;
(function(){function a(a,b){this.n=a|0;this.p=b|0}function b(a,b){null!=a&&("number"==typeof a?this.G(a):null==b&&"string"!=typeof a?this.r(a,256):this.r(a,b))}function c(){return new b(null)}function e(a){return"0123456789abcdefghijklmnopqrstuvwxyz".charAt(a)}function f(a,b){var k=z[a.charCodeAt(b)];return null==k?-1:k}function n(a){var b=c();b.N(a);return b}function l(a){var b=1,k;0!=(k=a>>>16)&&(a=k,b+=16);0!=(k=a>>8)&&(a=k,b+=8);0!=(k=a>>4)&&(a=k,b+=4);0!=(k=a>>2)&&(a=k,b+=2);0!=a>>1&&(b+=1);
return b}function m(a){this.u=a}function w(a){this.u=a;this.Ha=a.ab();this.Ia=this.Ha&32767;this.eb=this.Ha>>15;this.lb=(1<<a.k-15)-1;this.fb=2*a.e}a.sa={};a.N=function(p){if(-128<=p&&128>p){var b=a.sa[p];if(b)return b}b=new a(p|0,0>p?-1:0);-128<=p&&128>p&&(a.sa[p]=b);return b};a.G=function(p){return isNaN(p)||!isFinite(p)?a.K:p<=-a.va?a.D:p+1>=a.va?a.Wa:0>p?a.G(-p).o():new a(p%a.L|0,p/a.L|0)};a.J=function(p,b){return new a(p,b)};a.r=function(p,b){if(0==p.length)throw Error("number format error: empty string");
var k=b||10;if(2>k||36<k)throw Error("radix out of range: "+k);if("-"==p.charAt(0))return a.r(p.substring(1),k).o();if(0<=p.indexOf("-"))throw Error('number format error: interior "-" character: '+p);for(var c=a.G(Math.pow(k,8)),e=a.K,h=0;h<p.length;h+=8){var r=Math.min(8,p.length-h),f=parseInt(p.substring(h,h+r),k);8>r?(r=a.G(Math.pow(k,r)),e=e.multiply(r).add(a.G(f))):(e=e.multiply(c),e=e.add(a.G(f)))}return e};a.ea=65536;a.nb=16777216;a.L=a.ea*a.ea;a.ob=a.L/2;a.pb=a.L*a.ea;a.Qa=a.L*a.L;a.va=a.Qa/
2;a.K=a.N(0);a.U=a.N(1);a.ta=a.N(-1);a.Wa=a.J(-1,2147483647);a.D=a.J(0,-2147483648);a.ua=a.N(16777216);a.prototype.ca=function(){return this.p*a.L+this.S()};a.prototype.toString=function(p){p=p||10;if(2>p||36<p)throw Error("radix out of range: "+p);if(this.Q())return"0";if(this.A()){if(this.F(a.D)){var b=a.G(p),k=this.P(b),b=k.multiply(b).W(this);return k.toString(p)+b.n.toString(p)}return"-"+this.o().toString(p)}for(var k=a.G(Math.pow(p,6)),b=this,c="";;){var e=b.P(k),h=b.W(e.multiply(k)).n.toString(p),
b=e;if(b.Q())return h+c;for(;6>h.length;)h="0"+h;c=""+h+c}};a.prototype.S=function(){return 0<=this.n?this.n:a.L+this.n};a.prototype.Q=function(){return 0==this.p&&0==this.n};a.prototype.A=function(){return 0>this.p};a.prototype.Ea=function(){return 1==(this.n&1)};a.prototype.F=function(a){return this.p==a.p&&this.n==a.n};a.prototype.Ga=function(a){return 0>this.q(a)};a.prototype.Za=function(a){return 0<this.q(a)};a.prototype.$a=function(a){return 0<=this.q(a)};a.prototype.q=function(a){if(this.F(a))return 0;
var b=this.A(),k=a.A();return b&&!k?-1:!b&&k?1:this.W(a).A()?-1:1};a.prototype.o=function(){return this.F(a.D)?a.D:this.bb().add(a.U)};a.prototype.add=function(b){var c=this.p>>>16,k=this.p&65535,t=this.n>>>16,e=b.p>>>16,h=b.p&65535,r=b.n>>>16,f;f=0+((this.n&65535)+(b.n&65535));b=0+(f>>>16);b+=t+r;t=0+(b>>>16);t+=k+h;k=0+(t>>>16);k=k+(c+e)&65535;return a.J((b&65535)<<16|f&65535,k<<16|t&65535)};a.prototype.W=function(a){return this.add(a.o())};a.prototype.multiply=function(b){if(this.Q()||b.Q())return a.K;
if(this.F(a.D))return b.Ea()?a.D:a.K;if(b.F(a.D))return this.Ea()?a.D:a.K;if(this.A())return b.A()?this.o().multiply(b.o()):this.o().multiply(b).o();if(b.A())return this.multiply(b.o()).o();if(this.Ga(a.ua)&&b.Ga(a.ua))return a.G(this.ca()*b.ca());var c=this.p>>>16,k=this.p&65535,e=this.n>>>16,f=this.n&65535,h=b.p>>>16,r=b.p&65535,m=b.n>>>16;b=b.n&65535;var n,l,u,w;w=0+f*b;u=0+(w>>>16);u+=e*b;l=0+(u>>>16);u=(u&65535)+f*m;l+=u>>>16;u&=65535;l+=k*b;n=0+(l>>>16);l=(l&65535)+e*m;n+=l>>>16;l&=65535;l+=
f*r;n+=l>>>16;l&=65535;n=n+(c*b+k*m+e*r+f*h)&65535;return a.J(u<<16|w&65535,n<<16|l)};a.prototype.P=function(b){if(b.Q())throw Error("division by zero");if(this.Q())return a.K;if(this.F(a.D)){if(b.F(a.U)||b.F(a.ta))return a.D;if(b.F(a.D))return a.U;var c=this.gb().P(b).shiftLeft(1);if(c.F(a.K))return b.A()?a.U:a.ta;var k=this.W(b.multiply(c));return c.add(k.P(b))}if(b.F(a.D))return a.K;if(this.A())return b.A()?this.o().P(b.o()):this.o().P(b).o();if(b.A())return this.P(b.o()).o();for(var e=a.K,k=this;k.$a(b);){for(var c=
Math.max(1,Math.floor(k.ca()/b.ca())),f=Math.ceil(Math.log(c)/Math.LN2),f=48>=f?1:Math.pow(2,f-48),h=a.G(c),r=h.multiply(b);r.A()||r.Za(k);)c-=f,h=a.G(c),r=h.multiply(b);h.Q()&&(h=a.U);e=e.add(h);k=k.W(r)}return e};a.prototype.bb=function(){return a.J(~this.n,~this.p)};a.prototype.shiftLeft=function(b){b&=63;if(0==b)return this;var c=this.n;return 32>b?a.J(c<<b,this.p<<b|c>>>32-b):a.J(0,c<<b-32)};a.prototype.gb=function(){var b;b=1;if(0==b)return this;var c=this.p;return 32>b?a.J(this.n>>>b|c<<32-
b,c>>b):a.J(c>>b-32,0<=c?0:-1)};b.prototype.O=function(a,b,c,e,f,h){for(;0<=--h;){var r=b*this[a++]+c[e]+f;f=Math.floor(r/67108864);c[e++]=r&67108863}return f};b.prototype.k=26;b.prototype.H=67108863;b.prototype.C=67108864;b.prototype.Pa=Math.pow(2,52);b.prototype.qa=26;b.prototype.ra=0;var z=[],x,v;x=48;for(v=0;9>=v;++v)z[x++]=v;x=97;for(v=10;36>v;++v)z[x++]=v;x=65;for(v=10;36>v;++v)z[x++]=v;m.prototype.xa=function(a){return 0>a.g||0<=a.M(this.u)?a.cb(this.u):a};m.prototype.Ka=function(a){return a};
m.prototype.reduce=function(a){a.T(this.u,null,a)};m.prototype.Ja=function(a,b,c){a.la(b,c);this.reduce(c)};m.prototype.La=function(a,b){a.Ma(b);this.reduce(b)};w.prototype.xa=function(a){var B=c();a.abs().Z(this.u.e,B);B.T(this.u,null,B);0>a.g&&0<B.M(b.q)&&this.u.B(B,B);return B};w.prototype.Ka=function(a){var b=c();a.copyTo(b);this.reduce(b);return b};w.prototype.reduce=function(a){for(;a.e<=this.fb;)a[a.e++]=0;for(var b=0;b<this.u.e;++b){var c=a[b]&32767,e=c*this.Ia+((c*this.eb+(a[b]>>15)*this.Ia&
this.lb)<<15)&a.H,c=b+this.u.e;for(a[c]+=this.u.O(0,e,a,b,0,this.u.e);a[c]>=a.C;)a[c]-=a.C,a[++c]++}a.I();a.Aa(this.u.e,a);0<=a.M(this.u)&&a.B(this.u,a)};w.prototype.Ja=function(a,b,c){a.la(b,c);this.reduce(c)};w.prototype.La=function(a,b){a.Ma(b);this.reduce(b)};b.prototype.copyTo=function(a){for(var b=this.e-1;0<=b;--b)a[b]=this[b];a.e=this.e;a.g=this.g};b.prototype.N=function(a){this.e=1;this.g=0>a?-1:0;0<a?this[0]=a:-1>a?this[0]=a+DV:this.e=0};b.prototype.r=function(a,c){var k;if(16==c)k=4;else if(8==
c)k=3;else if(256==c)k=8;else if(2==c)k=1;else if(32==c)k=5;else if(4==c)k=2;else{this.Va(a,c);return}this.g=this.e=0;for(var e=a.length,l=!1,h=0;0<=--e;){var r=8==k?a[e]&255:f(a,e);0>r?"-"==a.charAt(e)&&(l=!0):(l=!1,0==h?this[this.e++]=r:h+k>this.k?(this[this.e-1]|=(r&(1<<this.k-h)-1)<<h,this[this.e++]=r>>this.k-h):this[this.e-1]|=r<<h,h+=k,h>=this.k&&(h-=this.k))}8==k&&0!=(a[0]&128)&&(this.g=-1,0<h&&(this[this.e-1]|=(1<<this.k-h)-1<<h));this.I();l&&b.q.B(this,this)};b.prototype.I=function(){for(var a=
this.g&this.H;0<this.e&&this[this.e-1]==a;)--this.e};b.prototype.Z=function(a,b){var c;for(c=this.e-1;0<=c;--c)b[c+a]=this[c];for(c=a-1;0<=c;--c)b[c]=0;b.e=this.e+a;b.g=this.g};b.prototype.Aa=function(a,b){for(var c=a;c<this.e;++c)b[c-a]=this[c];b.e=Math.max(this.e-a,0);b.g=this.g};b.prototype.Fa=function(a,b){var c=a%this.k,e=this.k-c,f=(1<<e)-1,h=Math.floor(a/this.k),r=this.g<<c&this.H,l;for(l=this.e-1;0<=l;--l)b[l+h+1]=this[l]>>e|r,r=(this[l]&f)<<c;for(l=h-1;0<=l;--l)b[l]=0;b[h]=r;b.e=this.e+h+
1;b.g=this.g;b.I()};b.prototype.hb=function(a,b){b.g=this.g;var c=Math.floor(a/this.k);if(c>=this.e)b.e=0;else{var e=a%this.k,f=this.k-e,h=(1<<e)-1;b[0]=this[c]>>e;for(var l=c+1;l<this.e;++l)b[l-c-1]|=(this[l]&h)<<f,b[l-c]=this[l]>>e;0<e&&(b[this.e-c-1]|=(this.g&h)<<f);b.e=this.e-c;b.I()}};b.prototype.B=function(a,b){for(var c=0,e=0,f=Math.min(a.e,this.e);c<f;)e+=this[c]-a[c],b[c++]=e&this.H,e>>=this.k;if(a.e<this.e){for(e-=a.g;c<this.e;)e+=this[c],b[c++]=e&this.H,e>>=this.k;e+=this.g}else{for(e+=
this.g;c<a.e;)e-=a[c],b[c++]=e&this.H,e>>=this.k;e-=a.g}b.g=0>e?-1:0;-1>e?b[c++]=this.C+e:0<e&&(b[c++]=e);b.e=c;b.I()};b.prototype.la=function(a,c){var e=this.abs(),t=a.abs(),f=e.e;for(c.e=f+t.e;0<=--f;)c[f]=0;for(f=0;f<t.e;++f)c[f+e.e]=e.O(0,t[f],c,f,0,e.e);c.g=0;c.I();this.g!=a.g&&b.q.B(c,c)};b.prototype.Ma=function(a){for(var b=this.abs(),c=a.e=2*b.e;0<=--c;)a[c]=0;for(c=0;c<b.e-1;++c){var e=b.O(c,b[c],a,2*c,0,1);(a[c+b.e]+=b.O(c+1,2*b[c],a,2*c+1,e,b.e-c-1))>=b.C&&(a[c+b.e]-=b.C,a[c+b.e+1]=1)}0<
a.e&&(a[a.e-1]+=b.O(c,b[c],a,2*c,0,1));a.g=0;a.I()};b.prototype.T=function(a,e,k){var t=a.abs();if(!(0>=t.e)){var f=this.abs();if(f.e<t.e)null!=e&&e.N(0),null!=k&&this.copyTo(k);else{null==k&&(k=c());var h=c(),r=this.g;a=a.g;var m=this.k-l(t[t.e-1]);0<m?(t.Fa(m,h),f.Fa(m,k)):(t.copyTo(h),f.copyTo(k));t=h.e;f=h[t-1];if(0!=f){var n=f*(1<<this.qa)+(1<t?h[t-2]>>this.ra:0),u=this.Pa/n,n=(1<<this.qa)/n,w=1<<this.ra,v=k.e,z=v-t,x=null==e?c():e;h.Z(z,x);0<=k.M(x)&&(k[k.e++]=1,k.B(x,k));b.S.Z(t,x);for(x.B(h,
h);h.e<t;)h[h.e++]=0;for(;0<=--z;){var wa=k[--v]==f?this.H:Math.floor(k[v]*u+(k[v-1]+w)*n);if((k[v]+=h.O(0,wa,k,z,0,t))<wa)for(h.Z(z,x),k.B(x,k);k[v]<--wa;)k.B(x,k)}null!=e&&(k.Aa(t,e),r!=a&&b.q.B(e,e));k.e=t;k.I();0<m&&k.hb(m,k);0>r&&b.q.B(k,k)}}}};b.prototype.ab=function(){if(1>this.e)return 0;var a=this[0];if(0==(a&1))return 0;var b=a&3,b=b*(2-(a&15)*b)&15,b=b*(2-(a&255)*b)&255,b=b*(2-((a&65535)*b&65535))&65535,b=b*(2-a*b%this.C)%this.C;return 0<b?this.C-b:-b};b.prototype.exp=function(a,e){if(4294967295<
a||1>a)return b.S;var k=c(),f=c(),m=e.xa(this),h=l(a)-1;for(m.copyTo(k);0<=--h;)if(e.La(k,f),0<(a&1<<h))e.Ja(f,m,k);else var r=k,k=f,f=r;return e.Ka(k)};b.prototype.toString=function(a){if(0>this.g)return"-"+this.o().toString(a);if(16==a)a=4;else if(8==a)a=3;else if(2==a)a=1;else if(32==a)a=5;else if(4==a)a=2;else return this.kb(a);var b=(1<<a)-1,c,f=!1,l="",h=this.e,m=this.k-h*this.k%a;if(0<h--)for(m<this.k&&0<(c=this[h]>>m)&&(f=!0,l=e(c));0<=h;)m<a?(c=(this[h]&(1<<m)-1)<<a-m,c|=this[--h]>>(m+=this.k-
a)):(c=this[h]>>(m-=a)&b,0>=m&&(m+=this.k,--h)),0<c&&(f=!0),f&&(l+=e(c));return f?l:"0"};b.prototype.o=function(){var a=c();b.q.B(this,a);return a};b.prototype.abs=function(){return 0>this.g?this.o():this};b.prototype.M=function(a){var b=this.g-a.g;if(0!=b)return b;var c=this.e,b=c-a.e;if(0!=b)return 0>this.g?-b:b;for(;0<=--c;)if(0!=(b=this[c]-a[c]))return b;return 0};b.prototype.cb=function(a){var e=c();this.abs().T(a,null,e);0>this.g&&0<e.M(b.q)&&a.B(e,e);return e};b.q=n(0);b.S=n(1);b.prototype.Va=
function(a,c){this.N(0);null==c&&(c=10);for(var e=this.wa(c),t=Math.pow(c,e),l=!1,h=0,m=0,n=0;n<a.length;++n){var u=f(a,n);0>u?"-"==a.charAt(n)&&0==this.na()&&(l=!0):(m=c*m+u,++h>=e&&(this.za(t),this.ya(m),m=h=0))}0<h&&(this.za(Math.pow(c,h)),this.ya(m));l&&b.q.B(this,this)};b.prototype.wa=function(a){return Math.floor(Math.LN2*this.k/Math.log(a))};b.prototype.na=function(){return 0>this.g?-1:0>=this.e||1==this.e&&0>=this[0]?0:1};b.prototype.za=function(a){this[this.e]=this.O(0,a-1,this,0,0,this.e);
++this.e;this.I()};b.prototype.ya=function(a){var b=0;if(0!=a){for(;this.e<=b;)this[this.e++]=0;for(this[b]+=a;this[b]>=this.C;)this[b]-=this.C,++b>=this.e&&(this[this.e++]=0),++this[b]}};b.prototype.kb=function(a){null==a&&(a=10);if(0==this.na()||2>a||36<a)return"0";var b=this.wa(a),b=Math.pow(a,b),e=n(b),f=c(),l=c(),h="";for(this.T(e,f,l);0<f.na();)h=(b+l.Da()).toString(a).substr(1)+h,f.T(e,f,l);return l.Da().toString(a)+h};b.prototype.Da=function(){if(0>this.g){if(1==this.e)return this[0]-this.C;
if(0==this.e)return-1}else{if(1==this.e)return this[0];if(0==this.e)return 0}return(this[1]&(1<<32-this.k)-1)<<this.k|this[0]};b.prototype.fa=function(a,b){for(var c=0,e=0,f=Math.min(a.e,this.e);c<f;)e+=this[c]+a[c],b[c++]=e&this.H,e>>=this.k;if(a.e<this.e){for(e+=a.g;c<this.e;)e+=this[c],b[c++]=e&this.H,e>>=this.k;e+=this.g}else{for(e+=this.g;c<a.e;)e+=a[c],b[c++]=e&this.H,e>>=this.k;e+=a.g}b.g=0>e?-1:0;0<e?b[c++]=e:-1>e&&(b[c++]=this.C+e);b.e=c;b.I()};var u={abs:function(b,c){var e=new a(b,c),f;
e.A()?f=e.o():f=e;N[W>>2]=f.n;N[W+4>>2]=f.p},Ba:function(){u.Ua||(u.Ua=!0,u.Oa=new b,u.Oa.r("4294967296",10),u.pa=new b,u.pa.r("18446744073709551616",10),u.Lb=new b,u.Mb=new b)},Hb:function(a,c){var e=new b;e.r(c.toString(),10);var f=new b;e.la(u.Oa,f);e=new b;e.r(a.toString(),10);var l=new b;e.fa(f,l);return l},stringify:function(c,e,f){c=(new a(c,e)).toString();f&&"-"==c[0]&&(u.Ba(),f=new b,f.r(c,10),c=new b,u.pa.fa(f,c),c=c.toString(10));return c},r:function(c,e,f,l,m){u.Ba();var h=new b;h.r(c,
e);c=new b;c.r(f,10);f=new b;f.r(l,10);m&&0>h.M(b.q)&&(l=new b,h.fa(u.pa,l),h=l);l=!1;0>h.M(c)?(h=c,l=!0):0<h.M(f)&&(h=f,l=!0);h=a.r(h.toString());N[W>>2]=h.n;N[W+4>>2]=h.p;if(l)throw"range error";}};return u})();
if(V)if("function"===typeof d.locateFile?V=d.locateFile(V):d.memoryInitializerPrefixURL&&(V=d.memoryInitializerPrefixURL+V),ba||da){var mb=d.readBinary(V);P.set(mb,Ja)}else{Ya();var nb=function(a){a.byteLength&&(a=new Uint8Array(a));P.set(a,Ja);Za()},Z=d.memoryInitializerRequest;Z?Z.response?setTimeout(function(){nb(Z.response)},0):Z.addEventListener("load",function(){200!==Z.status&&0!==Z.status&&console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+Z.status);
Z.response&&"object"===typeof Z.response&&Z.response.byteLength||console.warn("a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): "+Z.response);nb(Z.response)}):Browser.xb(V,nb,function(){throw"could not load memory initializer "+V;})}function y(a){this.name="ExitStatus";this.message="Program terminated with exit("+a+")";this.status=a}y.prototype=Error();y.prototype.constructor=y;var ob,pb=null,U=function qb(){d.calledRun||rb();d.calledRun||(U=qb)};
d.callMain=d.yb=function(a){function b(){for(var a=0;3>a;a++)e.push(0)}A(0==T,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");A(0==Oa.length,"cannot call main when preRun functions remain to be called");a=a||[];Ta||(Ta=!0,S(Pa));var c=a.length+1,e=[O(Wa(d.thisProgram),"i8",0)];b();for(var f=0;f<c-1;f+=1)e.push(O(Wa(a[f]),"i8",0)),b();e.push(0);e=O(e,"i32",0);ob=C;try{var n=d._main(c,e,0);sb(n,!0)}catch(l){if(!(l instanceof y))if("SimulateInfiniteLoop"==l)d.noExitRuntime=
!0;else throw l&&"object"===typeof l&&l.stack&&d.V("exception thrown: "+[l,l.stack]),l;}finally{}};
function rb(a){function b(){if(!d.calledRun&&(d.calledRun=!0,!I)){Ta||(Ta=!0,S(Pa));S(Qa);aa&&null!==pb&&d.V("pre-main prep time: "+(Date.now()-pb)+" ms");if(d.onRuntimeInitialized)d.onRuntimeInitialized();d._main&&tb&&d.callMain(a);if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)Va(d.postRun.shift());S(Sa)}}a=a||d.arguments;null===pb&&(pb=Date.now());if(!(0<T)){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)Ua(d.preRun.shift());
S(Oa);0<T||d.calledRun||(d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1);b()},1)):b())}}d.run=d.Kb=rb;function sb(a,b){if(!b||!d.noExitRuntime){if(!d.noExitRuntime&&(I=!0,C=ob,S(Ra),d.onExit))d.onExit(a);ba?(process.stdout.once("drain",function(){process.exit(a)}),console.log(" "),setTimeout(function(){process.exit(a)},500)):da&&"function"===typeof quit&&quit(a);throw new y(a);}}d.exit=d.Ab=sb;var ub=[];
function H(a){void 0!==a?(d.print(a),d.V(a),a=JSON.stringify(a)):a="";I=!0;var b="abort("+a+") at "+Ea()+"\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";ub.forEach(function(c){b=c(b,a)});throw b;}d.abort=d.abort=H;if(d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();var tb=!0;d.noInitialRun&&(tb=!1);rb();

return Module;
});
(function (root, factory) {
	if (typeof process === "object" && typeof process.stdout === "undefined") {
		process.stderr = process.stdout = { write: function() { } };
	}
	if (typeof define === "function" && define.amd) {
		define(["exports", "libsodium"], factory);
	} else if (typeof exports !== "undefined") {
		factory(exports, require("libsodium"));
	} else {
		var cb = root.sodium && root.sodium.onload;
		factory((root.sodium = {}), root.libsodium);
		if (typeof cb === "function") {
			cb(root.sodium);
		}
	}
}(this, function (exports, libsodium) {
	"use strict";
	Object.defineProperty(exports, '__esModule', { value: true });

	var output_format = "uint8array";

	libsodium._sodium_init();

	// List of functions and constants defined in the wrapped libsodium
	function symbols() {
		return Object.keys(exports).sort();
	}

	function memzero(bytes) {
		if (! bytes instanceof Uint8Array) {
			throw new TypeError("Only Uint8Array instances can be wiped");
		}
		for (var i = 0 | 0, j = bytes.length; i < j; i++) {
			bytes[i] = 0;
		}
	}

	function memcmp(b1, b2) {
		if (!(b1 instanceof Uint8Array && b2 instanceof Uint8Array)) {
			throw new TypeError("Only Uint8Array instances can be compared");
		}
		if (b1.length !== b2.length) {
			throw new TypeError("Only instances of identical length can be compared");
		}
		for (var d = 0 | 0, i = 0 | 0, j = b1.length; i < j; i++) {
			d |= b1[i] ^ b2[i];
		}
		return d === 0;
	}

	//---------------------------------------------------------------------------
	// Codecs

	function from_string(str) {
		if (typeof TextEncoder === "function") {
			return new TextEncoder("utf-8").encode(str);
		}
		str = unescape(encodeURIComponent(str));
		var bytes = new Uint8Array(str.length);
		for (var i = 0; i < str.length; i++) {
			bytes[i] = str.charCodeAt(i);
		}
		return bytes;
	}

	function from_hex(str) {
		if (!is_hex(str)) throw new TypeError("The provided string doesn't look like hex data");
		var result = new Uint8Array(str.length / 2);
		for (var i = 0; i < str.length; i += 2) {
			result[i >>> 1] = parseInt(str.substr(i, 2), 16);
		}
		return result;
	}

	function to_hex(bytes) {
		var str = "", b, c, x;
		for (var i = 0; i < bytes.length; i++) {
			c = bytes[i] & 0xf;
			b = bytes[i] >>> 4;
			x = (87 + c + (((c - 10) >> 8) & ~38)) << 8 |
			    (87 + b + (((b - 10) >> 8) & ~38));
			str += String.fromCharCode(x & 0xff) + String.fromCharCode(x >>> 8);
		}
		return str;
	}

	function is_hex(str) {
		return (typeof str === "string" && /^[0-9a-f]+$/i.test(str) && str.length % 2 === 0);
	}

	function from_base64(sBase64, nBlocksSize) {
		function _b64ToUint6(nChr) {
			return nChr > 64 && nChr < 91 ?
				nChr - 65 : nChr > 96 && nChr < 123 ?
				nChr - 71 : nChr > 47 && nChr < 58 ?
				nChr + 4 : nChr === 43 ?
				62 : nChr === 47 ?
				63 :
				0;
		}
		var
			sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, ""),
			nInLen = sB64Enc.length,
			nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2,
			taBytes = new Uint8Array(nOutLen);
		for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
			nMod4 = nInIdx & 3;
			nUint24 |= _b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
			if (nMod4 === 3 || nInLen - nInIdx === 1) {
				for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
					taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
				}
				nUint24 = 0;
			}
		}
		return taBytes;
	}

	function to_base64(aBytes, noNewLine) {
		function _uint6ToB64(nUint6) {
			return nUint6 < 26 ?
				nUint6 + 65 : nUint6 < 52 ?
				nUint6 + 71 : nUint6 < 62 ?
				nUint6 - 4 : nUint6 === 62 ?
				43 : nUint6 === 63 ?
				47 :
				65;
		}
		if (typeof aBytes === "string") {
			throw new Exception("input has to be an array");
		}
		var nMod3 = 2,
			sB64Enc = "";
		for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {
			nMod3 = nIdx % 3;
			if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0 && !noNewLine) {
				sB64Enc += "\r\n";
			}
			nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);
			if (nMod3 === 2 || aBytes.length - nIdx === 1) {
				sB64Enc += String.fromCharCode(_uint6ToB64(nUint24 >>> 18 & 63), _uint6ToB64(nUint24 >>> 12 & 63), _uint6ToB64(nUint24 >>> 6 & 63), _uint6ToB64(nUint24 & 63));
				nUint24 = 0;
			}
		}
		return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3) + (nMod3 === 2 ? "" : nMod3 === 1 ? "=" : "==");
	}

	function output_formats() {
		return ["uint8array", "text", "hex", "base64"];
	}

	function _format_output(output, optionalOutputFormat) {
		var selectedOutputFormat = optionalOutputFormat || output_format;
		if (!_is_output_format(selectedOutputFormat)) throw new Error(selectedOutputFormat + " output format is not available");
		if (output instanceof AllocatedBuf) {
			if (selectedOutputFormat === "uint8array") return output.to_Uint8Array();
			else if (selectedOutputFormat === "text") return libsodium.Pointer_stringify(output.address, output.length);
			else if (selectedOutputFormat === "hex") return to_hex(output.to_Uint8Array());
			else if (selectedOutputFormat === "base64") return to_base64(output.to_Uint8Array());
			else throw new Error("What is output format \"" + selectedOutputFormat + "\"?");
		} else if (typeof output === "object") { //Composed output. Example : key pairs
			var props = Object.keys(output);
			var formattedOutput = {};
			for (var i = 0; i < props.length; i++) {
				formattedOutput[props[i]] = _format_output(output[props[i]], selectedOutputFormat);
			}
			return formattedOutput;
		} else if (typeof output === "string") {
			return output;
		} else {
			throw new TypeError("Cannot format output");
		}
	}

	function _is_output_format(format) {
		var formats = output_formats();
		for (var i = 0; i < formats.length; i++) {
			if (formats[i] === format) return true;
		}
		return false;
	}

	function _check_output_format(format) {
		if (!format) {
			return;
		} else if (typeof format !== "string") {
			throw new TypeError("When defined, the output format must be a string");
		} else if (!_is_output_format(format)) {
			throw new Error(format + " is not a supported output format");
		}
	}

	//---------------------------------------------------------------------------
	// Memory management

	// AllocatedBuf: address allocated using _malloc() + length
	function AllocatedBuf(length) {
		this.length = length;
		this.address = _malloc(length);
	}

	// Copy the content of a AllocatedBuf (_malloc()'d memory) into a Uint8Array
	AllocatedBuf.prototype.to_Uint8Array = function () {
		var result = new Uint8Array(this.length);
		result.set(libsodium.HEAPU8.subarray(this.address, this.address + this.length));
		return result;
	};

	// _malloc() a region and initialize it with the content of a Uint8Array
	function _to_allocated_buf_address(bytes) {
		var address = _malloc(bytes.length);
		libsodium.HEAPU8.set(bytes, address);
		return address;
	}

	function _malloc(length) {
		var result = libsodium._malloc(length);
		if (result === 0) {
			throw {
				message: "_malloc() failed",
				length: length
			};
		}
		return result;
	}

	function _free(address) {
		libsodium._free(address);
	}

	function _free_all(addresses) {
		for (var i = 0; i < addresses.length; i++) {
			_free(addresses[i]);
		}
	}

	function _free_and_throw_error(address_pool, err) {
		_free_all(address_pool);
		throw new Error(err);
	}

	function _free_and_throw_type_error(address_pool, err) {
		_free_all(address_pool);
		throw new TypeError(err);
	}

	function _require_defined(address_pool, varValue, varName) {
		if (varValue == undefined) {
			_free_and_throw_type_error(address_pool, varName + " cannot be null or undefined");
		}
	}

	function _any_to_Uint8Array(address_pool, varValue, varName) {
		_require_defined(address_pool, varValue, varName);
		if (varValue instanceof Uint8Array) {
			return varValue;
		} else if (typeof varValue === "string") {
			return from_string(varValue);
		}
		_free_and_throw_type_error(address_pool, "unsupported input type for " + varName);
	}

	
	function crypto_aead_chacha20poly1305_decrypt(secret_nonce, ciphertext, additional_data, public_nonce, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: secret_nonce (unsized_buf_optional)
		
		var secret_nonce_address = null, secret_nonce_length = 0;
		if (secret_nonce != undefined) {
			secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
			secret_nonce_address = _to_allocated_buf_address(secret_nonce);
			secret_nonce_length = secret_nonce.length;
			address_pool.push(secret_nonce_address);
		}
		
		// ---------- input: ciphertext (unsized_buf)
		
		ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
		var ciphertext_address = _to_allocated_buf_address(ciphertext),
		    ciphertext_length = ciphertext.length;
		address_pool.push(ciphertext_address);
		
		// ---------- input: additional_data (unsized_buf_optional)
		
		var additional_data_address = null, additional_data_length = 0;
		if (additional_data != undefined) {
			additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
			additional_data_address = _to_allocated_buf_address(additional_data);
			additional_data_length = additional_data.length;
			address_pool.push(additional_data_address);
		}
		
		// ---------- input: public_nonce (buf)
		
		public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
		var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_npubbytes()) | 0;
		if (public_nonce.length !== public_nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid public_nonce length");
		}
		public_nonce_address = _to_allocated_buf_address(public_nonce);
		address_pool.push(public_nonce_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output message (buf)
		
		var message_length = (ciphertext_length - libsodium._crypto_aead_chacha20poly1305_abytes()) | 0,
		    message = new AllocatedBuf(message_length),
		    message_address = message.address;
		
		address_pool.push(message_address);
		
		if ((libsodium._crypto_aead_chacha20poly1305_decrypt(message_address, null, secret_nonce_address, ciphertext_address, ciphertext_length, 0, additional_data_address, additional_data_length, 0, public_nonce_address, key_address)) === 0) {
			var ret = _format_output(message, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_aead_chacha20poly1305_encrypt(message, additional_data, secret_nonce, public_nonce, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: additional_data (unsized_buf_optional)
		
		var additional_data_address = null, additional_data_length = 0;
		if (additional_data != undefined) {
			additional_data = _any_to_Uint8Array(address_pool, additional_data, "additional_data");
			additional_data_address = _to_allocated_buf_address(additional_data);
			additional_data_length = additional_data.length;
			address_pool.push(additional_data_address);
		}
		
		// ---------- input: secret_nonce (unsized_buf_optional)
		
		var secret_nonce_address = null, secret_nonce_length = 0;
		if (secret_nonce != undefined) {
			secret_nonce = _any_to_Uint8Array(address_pool, secret_nonce, "secret_nonce");
			secret_nonce_address = _to_allocated_buf_address(secret_nonce);
			secret_nonce_length = secret_nonce.length;
			address_pool.push(secret_nonce_address);
		}
		
		// ---------- input: public_nonce (buf)
		
		public_nonce = _any_to_Uint8Array(address_pool, public_nonce, "public_nonce");
		var public_nonce_address, public_nonce_length = (libsodium._crypto_aead_chacha20poly1305_npubbytes()) | 0;
		if (public_nonce.length !== public_nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid public_nonce length");
		}
		public_nonce_address = _to_allocated_buf_address(public_nonce);
		address_pool.push(public_nonce_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_aead_chacha20poly1305_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output ciphertext (buf)
		
		var ciphertext_length = (message_length + libsodium._crypto_aead_chacha20poly1305_abytes()) | 0,
		    ciphertext = new AllocatedBuf(ciphertext_length),
		    ciphertext_address = ciphertext.address;
		
		address_pool.push(ciphertext_address);
		
		if ((libsodium._crypto_aead_chacha20poly1305_encrypt(ciphertext_address, null, message_address, message_length, 0, additional_data_address, additional_data_length, 0, secret_nonce_address, public_nonce_address, key_address)) === 0) {
			var ret = _format_output(ciphertext, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_auth(message, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_auth_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output tag (buf)
		
		var tag_length = (libsodium._crypto_auth_bytes()) | 0,
		    tag = new AllocatedBuf(tag_length),
		    tag_address = tag.address;
		
		address_pool.push(tag_address);
		
		if ((libsodium._crypto_auth(tag_address, message_address, message_length, 0, key_address) | 0) === 0) {
			var ret = _format_output(tag, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_auth_hmacsha256(message, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_auth_hmacsha256_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output hash (buf)
		
		var hash_length = (libsodium._crypto_auth_hmacsha256_bytes()) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_auth_hmacsha256(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
			var ret = _format_output(hash, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_auth_verify(tag, message, key) {
		var address_pool = [];

		// ---------- input: tag (buf)
		
		tag = _any_to_Uint8Array(address_pool, tag, "tag");
		var tag_address, tag_length = (libsodium._crypto_auth_hmacsha256_bytes()) | 0;
		if (tag.length !== tag_length) {
			_free_and_throw_type_error(address_pool, "invalid tag length");
		}
		tag_address = _to_allocated_buf_address(tag);
		address_pool.push(tag_address);
		
		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_auth_hmacsha256_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		var result = libsodium._crypto_auth_hmacsha256_verify(tag_address, message_address, message_length, 0, key_address) | 0;
		var ret = (result === 0);
		_free_all(address_pool);
		return ret;
		
	}

	function crypto_auth_hmacsha512(message, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_auth_hmacsha512_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output hash (buf)
		
		var hash_length = (libsodium._crypto_auth_hmacsha512_bytes()) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_auth_hmacsha512(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
			var ret = _format_output(hash, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_auth_verify(tag, message, key) {
		var address_pool = [];

		// ---------- input: tag (buf)
		
		tag = _any_to_Uint8Array(address_pool, tag, "tag");
		var tag_address, tag_length = (libsodium._crypto_auth_hmacsha512_bytes()) | 0;
		if (tag.length !== tag_length) {
			_free_and_throw_type_error(address_pool, "invalid tag length");
		}
		tag_address = _to_allocated_buf_address(tag);
		address_pool.push(tag_address);
		
		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_auth_hmacsha512_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		var result = libsodium._crypto_auth_hmacsha512_verify(tag_address, message_address, message_length, 0, key_address) | 0;
		var ret = (result === 0);
		_free_all(address_pool);
		return ret;
		
	}

	function crypto_auth_verify(tag, message, key) {
		var address_pool = [];

		// ---------- input: tag (buf)
		
		tag = _any_to_Uint8Array(address_pool, tag, "tag");
		var tag_address, tag_length = (libsodium._crypto_auth_bytes()) | 0;
		if (tag.length !== tag_length) {
			_free_and_throw_type_error(address_pool, "invalid tag length");
		}
		tag_address = _to_allocated_buf_address(tag);
		address_pool.push(tag_address);
		
		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_auth_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		var result = libsodium._crypto_auth_verify(tag_address, message_address, message_length, 0, key_address) | 0;
		var ret = (result === 0);
		_free_all(address_pool);
		return ret;
		
	}

	function crypto_box_detached(message, nonce, publicKey, secretKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: nonce (buf)
		
		nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
		var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
		if (nonce.length !== nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid nonce length");
		}
		nonce_address = _to_allocated_buf_address(nonce);
		address_pool.push(nonce_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		// ---------- input: secretKey (buf)
		
		secretKey = _any_to_Uint8Array(address_pool, secretKey, "secretKey");
		var secretKey_address, secretKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
		if (secretKey.length !== secretKey_length) {
			_free_and_throw_type_error(address_pool, "invalid secretKey length");
		}
		secretKey_address = _to_allocated_buf_address(secretKey);
		address_pool.push(secretKey_address);
		
		// ---------- output ciphertext (buf)
		
		var ciphertext_length = (message_length) | 0,
		    ciphertext = new AllocatedBuf(ciphertext_length),
		    ciphertext_address = ciphertext.address;
		
		address_pool.push(ciphertext_address);
		
		// ---------- output mac (buf)
		
		var mac_length = (libsodium._crypto_box_macbytes()) | 0,
		    mac = new AllocatedBuf(mac_length),
		    mac_address = mac.address;
		
		address_pool.push(mac_address);
		
		if ((libsodium._crypto_box_detached(ciphertext_address, mac_address, message_address, message_length, 0, nonce_address, publicKey_address, secretKey_address) | 0) === 0) {
			var ret = _format_output({ciphertext: ciphertext, mac: mac}, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_box_easy(message, nonce, publicKey, secretKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: nonce (buf)
		
		nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
		var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
		if (nonce.length !== nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid nonce length");
		}
		nonce_address = _to_allocated_buf_address(nonce);
		address_pool.push(nonce_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		// ---------- input: secretKey (buf)
		
		secretKey = _any_to_Uint8Array(address_pool, secretKey, "secretKey");
		var secretKey_address, secretKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
		if (secretKey.length !== secretKey_length) {
			_free_and_throw_type_error(address_pool, "invalid secretKey length");
		}
		secretKey_address = _to_allocated_buf_address(secretKey);
		address_pool.push(secretKey_address);
		
		// ---------- output ciphertext (buf)
		
		var ciphertext_length = (message_length + libsodium._crypto_box_macbytes()) | 0,
		    ciphertext = new AllocatedBuf(ciphertext_length),
		    ciphertext_address = ciphertext.address;
		
		address_pool.push(ciphertext_address);
		
		if ((libsodium._crypto_box_easy(ciphertext_address, message_address, message_length, 0, nonce_address, publicKey_address, secretKey_address) | 0) === 0) {
			var ret = _format_output(ciphertext, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_box_keypair(outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- output publicKey (buf)
		
		var publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0,
		    publicKey = new AllocatedBuf(publicKey_length),
		    publicKey_address = publicKey.address;
		
		address_pool.push(publicKey_address);
		
		// ---------- output secretKey (buf)
		
		var secretKey_length = (libsodium._crypto_box_secretkeybytes()) | 0,
		    secretKey = new AllocatedBuf(secretKey_length),
		    secretKey_address = secretKey.address;
		
		address_pool.push(secretKey_address);
		
		if ((libsodium._crypto_box_keypair(publicKey_address, secretKey_address) | 0) === 0) {
			var ret = _format_output({publicKey: publicKey, privateKey: secretKey, keyType: "curve25519"}, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_box_open_detached(ciphertext, mac, nonce, publicKey, secretKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: ciphertext (unsized_buf)
		
		ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
		var ciphertext_address = _to_allocated_buf_address(ciphertext),
		    ciphertext_length = ciphertext.length;
		address_pool.push(ciphertext_address);
		
		// ---------- input: mac (buf)
		
		mac = _any_to_Uint8Array(address_pool, mac, "mac");
		var mac_address, mac_length = (libsodium._crypto_box_macbytes()) | 0;
		if (mac.length !== mac_length) {
			_free_and_throw_type_error(address_pool, "invalid mac length");
		}
		mac_address = _to_allocated_buf_address(mac);
		address_pool.push(mac_address);
		
		// ---------- input: nonce (buf)
		
		nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
		var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
		if (nonce.length !== nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid nonce length");
		}
		nonce_address = _to_allocated_buf_address(nonce);
		address_pool.push(nonce_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		// ---------- input: secretKey (buf)
		
		secretKey = _any_to_Uint8Array(address_pool, secretKey, "secretKey");
		var secretKey_address, secretKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
		if (secretKey.length !== secretKey_length) {
			_free_and_throw_type_error(address_pool, "invalid secretKey length");
		}
		secretKey_address = _to_allocated_buf_address(secretKey);
		address_pool.push(secretKey_address);
		
		// ---------- output plaintext (buf)
		
		var plaintext_length = (ciphertext_length) | 0,
		    plaintext = new AllocatedBuf(plaintext_length),
		    plaintext_address = plaintext.address;
		
		address_pool.push(plaintext_address);
		
		if ((libsodium._crypto_box_open_detached(plaintext_address, ciphertext_address, mac_address, ciphertext_length, 0, nonce_address, publicKey_address, secretKey_address) | 0) === 0) {
			var ret = _format_output(plaintext, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_box_open_easy(ciphertext, nonce, publicKey, secretKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: ciphertext (unsized_buf)
		
		ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
		var ciphertext_address = _to_allocated_buf_address(ciphertext),
		    ciphertext_length = ciphertext.length;
		address_pool.push(ciphertext_address);
		
		// ---------- input: nonce (buf)
		
		nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
		var nonce_address, nonce_length = (libsodium._crypto_box_noncebytes()) | 0;
		if (nonce.length !== nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid nonce length");
		}
		nonce_address = _to_allocated_buf_address(nonce);
		address_pool.push(nonce_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		// ---------- input: secretKey (buf)
		
		secretKey = _any_to_Uint8Array(address_pool, secretKey, "secretKey");
		var secretKey_address, secretKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
		if (secretKey.length !== secretKey_length) {
			_free_and_throw_type_error(address_pool, "invalid secretKey length");
		}
		secretKey_address = _to_allocated_buf_address(secretKey);
		address_pool.push(secretKey_address);
		
		// ---------- output plaintext (buf)
		
		var plaintext_length = (ciphertext_length - libsodium._crypto_box_macbytes()) | 0,
		    plaintext = new AllocatedBuf(plaintext_length),
		    plaintext_address = plaintext.address;
		
		address_pool.push(plaintext_address);
		
		if ((libsodium._crypto_box_open_easy(plaintext_address, ciphertext_address, ciphertext_length, 0, nonce_address, publicKey_address, secretKey_address) | 0) === 0) {
			var ret = _format_output(plaintext, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_box_seal(message, publicKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		// ---------- output ciphertext (buf)
		
		var ciphertext_length = (message_length + libsodium._crypto_box_sealbytes()) | 0,
		    ciphertext = new AllocatedBuf(ciphertext_length),
		    ciphertext_address = ciphertext.address;
		
		address_pool.push(ciphertext_address);
		
		if ((libsodium._crypto_box_seal(ciphertext_address, message_address, message_length, 0, publicKey_address) | 0) === 0) {
			var ret = _format_output(ciphertext, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_box_seal_open(ciphertext, publicKey, secretKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: ciphertext (unsized_buf)
		
		ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
		var ciphertext_address = _to_allocated_buf_address(ciphertext),
		    ciphertext_length = ciphertext.length;
		address_pool.push(ciphertext_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		// ---------- input: secretKey (buf)
		
		secretKey = _any_to_Uint8Array(address_pool, secretKey, "secretKey");
		var secretKey_address, secretKey_length = (libsodium._crypto_box_secretkeybytes()) | 0;
		if (secretKey.length !== secretKey_length) {
			_free_and_throw_type_error(address_pool, "invalid secretKey length");
		}
		secretKey_address = _to_allocated_buf_address(secretKey);
		address_pool.push(secretKey_address);
		
		// ---------- output plaintext (buf)
		
		var plaintext_length = (ciphertext_length - libsodium._crypto_box_sealbytes()) | 0,
		    plaintext = new AllocatedBuf(plaintext_length),
		    plaintext_address = plaintext.address;
		
		address_pool.push(plaintext_address);
		
		if ((libsodium._crypto_box_seal_open(plaintext_address, ciphertext_address, ciphertext_length, 0, publicKey_address, secretKey_address) | 0) === 0) {
			var ret = _format_output(plaintext, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_box_seed_keypair(seed, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: seed (buf)
		
		seed = _any_to_Uint8Array(address_pool, seed, "seed");
		var seed_address, seed_length = (libsodium._crypto_box_seedbytes()) | 0;
		if (seed.length !== seed_length) {
			_free_and_throw_type_error(address_pool, "invalid seed length");
		}
		seed_address = _to_allocated_buf_address(seed);
		address_pool.push(seed_address);
		
		// ---------- output publicKey (buf)
		
		var publicKey_length = (libsodium._crypto_box_publickeybytes()) | 0,
		    publicKey = new AllocatedBuf(publicKey_length),
		    publicKey_address = publicKey.address;
		
		address_pool.push(publicKey_address);
		
		// ---------- output privateKey (buf)
		
		var privateKey_length = (libsodium._crypto_box_secretkeybytes()) | 0,
		    privateKey = new AllocatedBuf(privateKey_length),
		    privateKey_address = privateKey.address;
		
		address_pool.push(privateKey_address);
		
		if ((libsodium._crypto_box_seed_keypair(publicKey_address, privateKey_address, seed_address) | 0) === 0) {
			var ret = _format_output({publicKey: publicKey, privateKey: privateKey}, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_generichash(hash_length, message, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: hash_length (uint)
		
		_require_defined(address_pool, hash_length, "hash_length");
		
		if (!(typeof hash_length === "number" && (hash_length | 0) === hash_length) && (hash_length | 0) > 0) {
			_free_and_throw_type_error(address_pool, "hash_length must be an unsigned integer");
		}
		
		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (unsized_buf_optional)
		
		var key_address = null, key_length = 0;
		if (key != undefined) {
			key = _any_to_Uint8Array(address_pool, key, "key");
			key_address = _to_allocated_buf_address(key);
			key_length = key.length;
			address_pool.push(key_address);
		}
		
		// ---------- output hash (buf)
		
		var hash_length = (hash_length) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_generichash(hash_address, hash_length, message_address, message_length, 0, key_address, key_length) | 0) === 0) {
			var ret = _format_output(hash, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_generichash_final(state_address, hash_length, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: state_address (generichash_state_address)
		
		_require_defined(address_pool, state_address, "state_address");
		
		// ---------- input: hash_length (uint)
		
		_require_defined(address_pool, hash_length, "hash_length");
		
		if (!(typeof hash_length === "number" && (hash_length | 0) === hash_length) && (hash_length | 0) > 0) {
			_free_and_throw_type_error(address_pool, "hash_length must be an unsigned integer");
		}
		
		// ---------- output hash (buf)
		
		var hash_length = (hash_length) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_generichash_final(state_address, hash_address, hash_length) | 0) === 0) {
			var ret = (libsodium._free(state_address), _format_output(hash, outputFormat));
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_generichash_init(key, hash_length, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: key (unsized_buf_optional)
		
		var key_address = null, key_length = 0;
		if (key != undefined) {
			key = _any_to_Uint8Array(address_pool, key, "key");
			key_address = _to_allocated_buf_address(key);
			key_length = key.length;
			address_pool.push(key_address);
		}
		
		// ---------- input: hash_length (uint)
		
		_require_defined(address_pool, hash_length, "hash_length");
		
		if (!(typeof hash_length === "number" && (hash_length | 0) === hash_length) && (hash_length | 0) > 0) {
			_free_and_throw_type_error(address_pool, "hash_length must be an unsigned integer");
		}
		
		// ---------- output state (generichash_state)
		
		var state_address = new AllocatedBuf(357).address;
		
		if ((libsodium._crypto_generichash_init(state_address, key_address, key_length, hash_length) | 0) === 0) {
			var ret = state_address;
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_generichash_update(state_address, message_chunk, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: state_address (generichash_state_address)
		
		_require_defined(address_pool, state_address, "state_address");
		
		// ---------- input: message_chunk (unsized_buf)
		
		message_chunk = _any_to_Uint8Array(address_pool, message_chunk, "message_chunk");
		var message_chunk_address = _to_allocated_buf_address(message_chunk),
		    message_chunk_length = message_chunk.length;
		address_pool.push(message_chunk_address);
		
		if ((libsodium._crypto_generichash_update(state_address, message_chunk_address, message_chunk_length, 0) | 0) === 0) {
			_free_all(address_pool);
			return;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_hash(message, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- output hash (buf)
		
		var hash_length = (libsodium._crypto_hash_bytes()) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_hash(hash_address, message_address, message_length, 0) | 0) === 0) {
			var ret = _format_output(hash, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_hash_sha256(message, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- output hash (buf)
		
		var hash_length = (libsodium._crypto_hash_sha256_bytes()) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_hash_sha256(hash_address, message_address, message_length, 0) | 0) === 0) {
			var ret = _format_output(hash, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_hash_sha512(message, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- output hash (buf)
		
		var hash_length = (libsodium._crypto_hash_sha512_bytes()) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_hash_sha512(hash_address, message_address, message_length, 0) | 0) === 0) {
			var ret = _format_output(hash, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_onetimeauth(message, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_onetimeauth_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output hash (buf)
		
		var hash_length = (libsodium._crypto_onetimeauth_bytes()) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_onetimeauth(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
			var ret = _format_output(hash, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_onetimeauth_verify(hash, message, key) {
		var address_pool = [];

		// ---------- input: hash (buf)
		
		hash = _any_to_Uint8Array(address_pool, hash, "hash");
		var hash_address, hash_length = (libsodium._crypto_onetimeauth_bytes()) | 0;
		if (hash.length !== hash_length) {
			_free_and_throw_type_error(address_pool, "invalid hash length");
		}
		hash_address = _to_allocated_buf_address(hash);
		address_pool.push(hash_address);
		
		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_onetimeauth_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		var result = libsodium._crypto_onetimeauth_verify(hash_address, message_address, message_length, 0, key_address) | 0;
		var ret = (result === 0);
		_free_all(address_pool);
		return ret;
		
	}

	function crypto_pwhash_scryptsalsa208sha256(password, salt, opsLimit, memLimit, keyLength, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: password (unsized_buf)
		
		password = _any_to_Uint8Array(address_pool, password, "password");
		var password_address = _to_allocated_buf_address(password),
		    password_length = password.length;
		address_pool.push(password_address);
		
		// ---------- input: salt (buf)
		
		salt = _any_to_Uint8Array(address_pool, salt, "salt");
		var salt_address, salt_length = (libsodium._crypto_pwhash_scryptsalsa208sha256_saltbytes()) | 0;
		if (salt.length !== salt_length) {
			_free_and_throw_type_error(address_pool, "invalid salt length");
		}
		salt_address = _to_allocated_buf_address(salt);
		address_pool.push(salt_address);
		
		// ---------- input: opsLimit (uint)
		
		_require_defined(address_pool, opsLimit, "opsLimit");
		
		if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) && (opsLimit | 0) > 0) {
			_free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
		}
		
		// ---------- input: memLimit (uint)
		
		_require_defined(address_pool, memLimit, "memLimit");
		
		if (!(typeof memLimit === "number" && (memLimit | 0) === memLimit) && (memLimit | 0) > 0) {
			_free_and_throw_type_error(address_pool, "memLimit must be an unsigned integer");
		}
		
		// ---------- input: keyLength (uint)
		
		_require_defined(address_pool, keyLength, "keyLength");
		
		if (!(typeof keyLength === "number" && (keyLength | 0) === keyLength) && (keyLength | 0) > 0) {
			_free_and_throw_type_error(address_pool, "keyLength must be an unsigned integer");
		}
		
		// ---------- output derivedKey (buf)
		
		var derivedKey_length = (keyLength) | 0,
		    derivedKey = new AllocatedBuf(derivedKey_length),
		    derivedKey_address = derivedKey.address;
		
		address_pool.push(derivedKey_address);
		
		if ((libsodium._crypto_pwhash_scryptsalsa208sha256(derivedKey_address, keyLength, 0, password_address, password_length, 0, salt_address, opsLimit, 0, memLimit) | 0) === 0) {
			var ret = _format_output(derivedKey, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_pwhash_scryptsalsa208sha256_ll(password, salt, opsLimit, r, p, keyLength, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: password (unsized_buf)
		
		password = _any_to_Uint8Array(address_pool, password, "password");
		var password_address = _to_allocated_buf_address(password),
		    password_length = password.length;
		address_pool.push(password_address);
		
		// ---------- input: salt (unsized_buf)
		
		salt = _any_to_Uint8Array(address_pool, salt, "salt");
		var salt_address = _to_allocated_buf_address(salt),
		    salt_length = salt.length;
		address_pool.push(salt_address);
		
		// ---------- input: opsLimit (uint)
		
		_require_defined(address_pool, opsLimit, "opsLimit");
		
		if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) && (opsLimit | 0) > 0) {
			_free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
		}
		
		// ---------- input: r (uint)
		
		_require_defined(address_pool, r, "r");
		
		if (!(typeof r === "number" && (r | 0) === r) && (r | 0) > 0) {
			_free_and_throw_type_error(address_pool, "r must be an unsigned integer");
		}
		
		// ---------- input: p (uint)
		
		_require_defined(address_pool, p, "p");
		
		if (!(typeof p === "number" && (p | 0) === p) && (p | 0) > 0) {
			_free_and_throw_type_error(address_pool, "p must be an unsigned integer");
		}
		
		// ---------- input: keyLength (uint)
		
		_require_defined(address_pool, keyLength, "keyLength");
		
		if (!(typeof keyLength === "number" && (keyLength | 0) === keyLength) && (keyLength | 0) > 0) {
			_free_and_throw_type_error(address_pool, "keyLength must be an unsigned integer");
		}
		
		// ---------- output derivedKey (buf)
		
		var derivedKey_length = (keyLength) | 0,
		    derivedKey = new AllocatedBuf(derivedKey_length),
		    derivedKey_address = derivedKey.address;
		
		address_pool.push(derivedKey_address);
		
		if ((libsodium._crypto_pwhash_scryptsalsa208sha256_ll(password_address, password_length, salt_address, salt_length, opsLimit, 0, r, p, derivedKey_address, keyLength) | 0) === 0) {
			var ret = _format_output(derivedKey, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_pwhash_scryptsalsa208sha256_str(password, opsLimit, memLimit, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: password (unsized_buf)
		
		password = _any_to_Uint8Array(address_pool, password, "password");
		var password_address = _to_allocated_buf_address(password),
		    password_length = password.length;
		address_pool.push(password_address);
		
		// ---------- input: opsLimit (uint)
		
		_require_defined(address_pool, opsLimit, "opsLimit");
		
		if (!(typeof opsLimit === "number" && (opsLimit | 0) === opsLimit) && (opsLimit | 0) > 0) {
			_free_and_throw_type_error(address_pool, "opsLimit must be an unsigned integer");
		}
		
		// ---------- input: memLimit (uint)
		
		_require_defined(address_pool, memLimit, "memLimit");
		
		if (!(typeof memLimit === "number" && (memLimit | 0) === memLimit) && (memLimit | 0) > 0) {
			_free_and_throw_type_error(address_pool, "memLimit must be an unsigned integer");
		}
		
		// ---------- output hashed_password (buf)
		
		var hashed_password_length = (libsodium._crypto_pwhash_scryptsalsa208sha256_strbytes()) | 0,
		    hashed_password = new AllocatedBuf(hashed_password_length),
		    hashed_password_address = hashed_password.address;
		
		address_pool.push(hashed_password_address);
		
		if ((libsodium._crypto_pwhash_scryptsalsa208sha256_str(hashed_password_address, password_address, password_length, 0, opsLimit, 0, memLimit) | 0) === 0) {
			var ret = libsodium.Pointer_stringify(hashed_password_address);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_pwhash_scryptsalsa208sha256_str_verify(hashed_password, password, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: hashed_password (string)
		
		hashed_password = from_string(hashed_password + "\0");
		var hashed_password_address = _to_allocated_buf_address(hashed_password),
		    hashed_password_length = hashed_password.length - 1;
		address_pool.push(hashed_password_address);
		
		// ---------- input: password (unsized_buf)
		
		password = _any_to_Uint8Array(address_pool, password, "password");
		var password_address = _to_allocated_buf_address(password),
		    password_length = password.length;
		address_pool.push(password_address);
		
		var result = libsodium._crypto_pwhash_scryptsalsa208sha256_str_verify(hashed_password_address, password_address, password_length, 0) | 0;
		var ret = (result === 0);
		_free_all(address_pool);
		return ret;
		
	}

	function crypto_scalarmult(privateKey, publicKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: privateKey (buf)
		
		privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
		var privateKey_address, privateKey_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0;
		if (privateKey.length !== privateKey_length) {
			_free_and_throw_type_error(address_pool, "invalid privateKey length");
		}
		privateKey_address = _to_allocated_buf_address(privateKey);
		address_pool.push(privateKey_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		// ---------- output sharedSecret (buf)
		
		var sharedSecret_length = (libsodium._crypto_scalarmult_bytes()) | 0,
		    sharedSecret = new AllocatedBuf(sharedSecret_length),
		    sharedSecret_address = sharedSecret.address;
		
		address_pool.push(sharedSecret_address);
		
		if ((libsodium._crypto_scalarmult(sharedSecret_address, privateKey_address, publicKey_address) | 0) === 0) {
			var ret = _format_output(sharedSecret, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_scalarmult_base(privateKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: privateKey (buf)
		
		privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
		var privateKey_address, privateKey_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0;
		if (privateKey.length !== privateKey_length) {
			_free_and_throw_type_error(address_pool, "invalid privateKey length");
		}
		privateKey_address = _to_allocated_buf_address(privateKey);
		address_pool.push(privateKey_address);
		
		// ---------- output publicKey (buf)
		
		var publicKey_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0,
		    publicKey = new AllocatedBuf(publicKey_length),
		    publicKey_address = publicKey.address;
		
		address_pool.push(publicKey_address);
		
		if ((libsodium._crypto_scalarmult_base(publicKey_address, privateKey_address) | 0) === 0) {
			var ret = _format_output(publicKey, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_secretbox_detached(message, nonce, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: nonce (buf)
		
		nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
		var nonce_address, nonce_length = (libsodium._crypto_secretbox_noncebytes()) | 0;
		if (nonce.length !== nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid nonce length");
		}
		nonce_address = _to_allocated_buf_address(nonce);
		address_pool.push(nonce_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_secretbox_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output cipher (buf)
		
		var cipher_length = (message_length) | 0,
		    cipher = new AllocatedBuf(cipher_length),
		    cipher_address = cipher.address;
		
		address_pool.push(cipher_address);
		
		// ---------- output mac (buf)
		
		var mac_length = (libsodium._crypto_secretbox_macbytes()) | 0,
		    mac = new AllocatedBuf(mac_length),
		    mac_address = mac.address;
		
		address_pool.push(mac_address);
		
		if ((libsodium._crypto_secretbox_detached(cipher_address, mac_address, message_address, message_length, 0, nonce_address, key_address) | 0) === 0) {
			var ret = _format_output({mac: mac, cipher: cipher}, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_secretbox_easy(message, nonce, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: nonce (buf)
		
		nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
		var nonce_address, nonce_length = (libsodium._crypto_secretbox_noncebytes()) | 0;
		if (nonce.length !== nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid nonce length");
		}
		nonce_address = _to_allocated_buf_address(nonce);
		address_pool.push(nonce_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_secretbox_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output cipher (buf)
		
		var cipher_length = (message_length + libsodium._crypto_secretbox_macbytes()) | 0,
		    cipher = new AllocatedBuf(cipher_length),
		    cipher_address = cipher.address;
		
		address_pool.push(cipher_address);
		
		if ((libsodium._crypto_secretbox_easy(cipher_address, message_address, message_length, 0, nonce_address, key_address) | 0) === 0) {
			var ret = _format_output(cipher, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_secretbox_open_detached(ciphertext, mac, nonce, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: ciphertext (unsized_buf)
		
		ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
		var ciphertext_address = _to_allocated_buf_address(ciphertext),
		    ciphertext_length = ciphertext.length;
		address_pool.push(ciphertext_address);
		
		// ---------- input: mac (buf)
		
		mac = _any_to_Uint8Array(address_pool, mac, "mac");
		var mac_address, mac_length = (libsodium._crypto_secretbox_macbytes()) | 0;
		if (mac.length !== mac_length) {
			_free_and_throw_type_error(address_pool, "invalid mac length");
		}
		mac_address = _to_allocated_buf_address(mac);
		address_pool.push(mac_address);
		
		// ---------- input: nonce (buf)
		
		nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
		var nonce_address, nonce_length = (libsodium._crypto_secretbox_noncebytes()) | 0;
		if (nonce.length !== nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid nonce length");
		}
		nonce_address = _to_allocated_buf_address(nonce);
		address_pool.push(nonce_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_secretbox_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output message (buf)
		
		var message_length = (ciphertext_length) | 0,
		    message = new AllocatedBuf(message_length),
		    message_address = message.address;
		
		address_pool.push(message_address);
		
		if ((libsodium._crypto_secretbox_open_detached(message_address, ciphertext_address, mac_address, ciphertext_length, 0, nonce_address, key_address) | 0) === 0) {
			var ret = _format_output(message, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_secretbox_open_easy(ciphertext, nonce, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: ciphertext (unsized_buf)
		
		ciphertext = _any_to_Uint8Array(address_pool, ciphertext, "ciphertext");
		var ciphertext_address = _to_allocated_buf_address(ciphertext),
		    ciphertext_length = ciphertext.length;
		address_pool.push(ciphertext_address);
		
		// ---------- input: nonce (buf)
		
		nonce = _any_to_Uint8Array(address_pool, nonce, "nonce");
		var nonce_address, nonce_length = (libsodium._crypto_secretbox_noncebytes()) | 0;
		if (nonce.length !== nonce_length) {
			_free_and_throw_type_error(address_pool, "invalid nonce length");
		}
		nonce_address = _to_allocated_buf_address(nonce);
		address_pool.push(nonce_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_secretbox_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output message (buf)
		
		var message_length = (ciphertext_length - libsodium._crypto_secretbox_macbytes()) | 0,
		    message = new AllocatedBuf(message_length),
		    message_address = message.address;
		
		address_pool.push(message_address);
		
		if ((libsodium._crypto_secretbox_open_easy(message_address, ciphertext_address, ciphertext_length, 0, nonce_address, key_address) | 0) === 0) {
			var ret = _format_output(message, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_shorthash(message, key, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: key (buf)
		
		key = _any_to_Uint8Array(address_pool, key, "key");
		var key_address, key_length = (libsodium._crypto_shorthash_keybytes()) | 0;
		if (key.length !== key_length) {
			_free_and_throw_type_error(address_pool, "invalid key length");
		}
		key_address = _to_allocated_buf_address(key);
		address_pool.push(key_address);
		
		// ---------- output hash (buf)
		
		var hash_length = (libsodium._crypto_shorthash_bytes()) | 0,
		    hash = new AllocatedBuf(hash_length),
		    hash_address = hash.address;
		
		address_pool.push(hash_address);
		
		if ((libsodium._crypto_shorthash(hash_address, message_address, message_length, 0, key_address) | 0) === 0) {
			var ret = _format_output(hash, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign(message, privateKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: privateKey (buf)
		
		privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
		var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
		if (privateKey.length !== privateKey_length) {
			_free_and_throw_type_error(address_pool, "invalid privateKey length");
		}
		privateKey_address = _to_allocated_buf_address(privateKey);
		address_pool.push(privateKey_address);
		
		// ---------- output signature (buf)
		
		var signature_length = (message.length + libsodium._crypto_sign_bytes()) | 0,
		    signature = new AllocatedBuf(signature_length),
		    signature_address = signature.address;
		
		address_pool.push(signature_address);
		
		if ((libsodium._crypto_sign(signature_address, null, message_address, message_length, 0, privateKey_address) | 0) === 0) {
			var ret = _format_output(signature, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_detached(message, privateKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: privateKey (buf)
		
		privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
		var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
		if (privateKey.length !== privateKey_length) {
			_free_and_throw_type_error(address_pool, "invalid privateKey length");
		}
		privateKey_address = _to_allocated_buf_address(privateKey);
		address_pool.push(privateKey_address);
		
		// ---------- output signature (buf)
		
		var signature_length = (libsodium._crypto_sign_bytes()) | 0,
		    signature = new AllocatedBuf(signature_length),
		    signature_address = signature.address;
		
		address_pool.push(signature_address);
		
		if ((libsodium._crypto_sign_detached(signature_address, null, message_address, message_length, 0, privateKey_address) | 0) === 0) {
			var ret = _format_output(signature, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_ed25519_pk_to_curve25519(edPk, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: edPk (buf)
		
		edPk = _any_to_Uint8Array(address_pool, edPk, "edPk");
		var edPk_address, edPk_length = (libsodium._crypto_sign_publickeybytes()) | 0;
		if (edPk.length !== edPk_length) {
			_free_and_throw_type_error(address_pool, "invalid edPk length");
		}
		edPk_address = _to_allocated_buf_address(edPk);
		address_pool.push(edPk_address);
		
		// ---------- output cPk (buf)
		
		var cPk_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0,
		    cPk = new AllocatedBuf(cPk_length),
		    cPk_address = cPk.address;
		
		address_pool.push(cPk_address);
		
		if ((libsodium._crypto_sign_ed25519_pk_to_curve25519(cPk_address, edPk_address) | 0) === 0) {
			var ret = _format_output(cPk, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_ed25519_sk_to_curve25519(edSk, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: edSk (buf)
		
		edSk = _any_to_Uint8Array(address_pool, edSk, "edSk");
		var edSk_address, edSk_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
		if (edSk.length !== edSk_length) {
			_free_and_throw_type_error(address_pool, "invalid edSk length");
		}
		edSk_address = _to_allocated_buf_address(edSk);
		address_pool.push(edSk_address);
		
		// ---------- output cSk (buf)
		
		var cSk_length = (libsodium._crypto_scalarmult_scalarbytes()) | 0,
		    cSk = new AllocatedBuf(cSk_length),
		    cSk_address = cSk.address;
		
		address_pool.push(cSk_address);
		
		if ((libsodium._crypto_sign_ed25519_sk_to_curve25519(cSk_address, edSk_address) | 0) === 0) {
			var ret = _format_output(cSk, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_ed25519_sk_to_pk(privateKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: privateKey (buf)
		
		privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
		var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
		if (privateKey.length !== privateKey_length) {
			_free_and_throw_type_error(address_pool, "invalid privateKey length");
		}
		privateKey_address = _to_allocated_buf_address(privateKey);
		address_pool.push(privateKey_address);
		
		// ---------- output publicKey (buf)
		
		var publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0,
		    publicKey = new AllocatedBuf(publicKey_length),
		    publicKey_address = publicKey.address;
		
		address_pool.push(publicKey_address);
		
		if ((libsodium._crypto_sign_ed25519_sk_to_pk(publicKey_address, privateKey_address) | 0) === 0) {
			var ret = _format_output(publicKey, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_ed25519_sk_to_seed(privateKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: privateKey (buf)
		
		privateKey = _any_to_Uint8Array(address_pool, privateKey, "privateKey");
		var privateKey_address, privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0;
		if (privateKey.length !== privateKey_length) {
			_free_and_throw_type_error(address_pool, "invalid privateKey length");
		}
		privateKey_address = _to_allocated_buf_address(privateKey);
		address_pool.push(privateKey_address);
		
		// ---------- output seed (buf)
		
		var seed_length = (libsodium._crypto_sign_seedbytes()) | 0,
		    seed = new AllocatedBuf(seed_length),
		    seed_address = seed.address;
		
		address_pool.push(seed_address);
		
		if ((libsodium._crypto_sign_ed25519_sk_to_seed(seed_address, privateKey_address) | 0) === 0) {
			var ret = _format_output(seed, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_keypair(outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- output publicKey (buf)
		
		var publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0,
		    publicKey = new AllocatedBuf(publicKey_length),
		    publicKey_address = publicKey.address;
		
		address_pool.push(publicKey_address);
		
		// ---------- output privateKey (buf)
		
		var privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0,
		    privateKey = new AllocatedBuf(privateKey_length),
		    privateKey_address = privateKey.address;
		
		address_pool.push(privateKey_address);
		
		if ((libsodium._crypto_sign_keypair(publicKey_address, privateKey_address) | 0) === 0) {
			var ret = _format_output({publicKey: publicKey, privateKey: privateKey, keyType: 'ed25519'}, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_open(signedMessage, publicKey, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: signedMessage (unsized_buf)
		
		signedMessage = _any_to_Uint8Array(address_pool, signedMessage, "signedMessage");
		var signedMessage_address = _to_allocated_buf_address(signedMessage),
		    signedMessage_length = signedMessage.length;
		address_pool.push(signedMessage_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		// ---------- output message (buf)
		
		var message_length = (signedMessage_length - libsodium._crypto_sign_bytes()) | 0,
		    message = new AllocatedBuf(message_length),
		    message_address = message.address;
		
		address_pool.push(message_address);
		
		if ((libsodium._crypto_sign_open(message_address, null, signedMessage_address, signedMessage_length, 0, publicKey_address) | 0) === 0) {
			var ret = _format_output(message, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_seed_keypair(seed, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: seed (buf)
		
		seed = _any_to_Uint8Array(address_pool, seed, "seed");
		var seed_address, seed_length = (libsodium._crypto_sign_seedbytes()) | 0;
		if (seed.length !== seed_length) {
			_free_and_throw_type_error(address_pool, "invalid seed length");
		}
		seed_address = _to_allocated_buf_address(seed);
		address_pool.push(seed_address);
		
		// ---------- output publicKey (buf)
		
		var publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0,
		    publicKey = new AllocatedBuf(publicKey_length),
		    publicKey_address = publicKey.address;
		
		address_pool.push(publicKey_address);
		
		// ---------- output privateKey (buf)
		
		var privateKey_length = (libsodium._crypto_sign_secretkeybytes()) | 0,
		    privateKey = new AllocatedBuf(privateKey_length),
		    privateKey_address = privateKey.address;
		
		address_pool.push(privateKey_address);
		
		if ((libsodium._crypto_sign_seed_keypair(publicKey_address, privateKey_address, seed_address) | 0) === 0) {
			var ret = _format_output({publicKey: publicKey, privateKey: privateKey, keyType: "ed25519"}, outputFormat);
			_free_all(address_pool);
			return ret;
		}
		_free_and_throw_error(address_pool);
		
	}

	function crypto_sign_verify_detached(signature, message, publicKey) {
		var address_pool = [];

		// ---------- input: signature (buf)
		
		signature = _any_to_Uint8Array(address_pool, signature, "signature");
		var signature_address, signature_length = (libsodium._crypto_sign_bytes()) | 0;
		if (signature.length !== signature_length) {
			_free_and_throw_type_error(address_pool, "invalid signature length");
		}
		signature_address = _to_allocated_buf_address(signature);
		address_pool.push(signature_address);
		
		// ---------- input: message (unsized_buf)
		
		message = _any_to_Uint8Array(address_pool, message, "message");
		var message_address = _to_allocated_buf_address(message),
		    message_length = message.length;
		address_pool.push(message_address);
		
		// ---------- input: publicKey (buf)
		
		publicKey = _any_to_Uint8Array(address_pool, publicKey, "publicKey");
		var publicKey_address, publicKey_length = (libsodium._crypto_sign_publickeybytes()) | 0;
		if (publicKey.length !== publicKey_length) {
			_free_and_throw_type_error(address_pool, "invalid publicKey length");
		}
		publicKey_address = _to_allocated_buf_address(publicKey);
		address_pool.push(publicKey_address);
		
		var verificationResult = libsodium._crypto_sign_verify_detached(signature_address, message_address, message_length, 0, publicKey_address) | 0;
		var ret = (verificationResult === 0);
		_free_all(address_pool);
		return ret;
		
	}

	function randombytes_buf(length, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: length (uint)
		
		_require_defined(address_pool, length, "length");
		
		if (!(typeof length === "number" && (length | 0) === length) && (length | 0) > 0) {
			_free_and_throw_type_error(address_pool, "length must be an unsigned integer");
		}
		
		// ---------- output output (buf)
		
		var output_length = (length) | 0,
		    output = new AllocatedBuf(output_length),
		    output_address = output.address;
		
		address_pool.push(output_address);
		
		libsodium._randombytes_buf(output_address, length);
		var ret = (_format_output(output, outputFormat));
		_free_all(address_pool);
		return ret;
		
	}

	function randombytes_close(outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		libsodium._randombytes_close();
		
	}

	function randombytes_random(outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		var random_value = libsodium._randombytes_random() >>> 0;
		var ret = (random_value);
		_free_all(address_pool);
		return ret;
		
	}

	function randombytes_set_implementation(implementation, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: implementation (randombytes_implementation)
		
		var implementation_address = libsodium._malloc(6 * 4);
		for (var i = 0; i < 6; i++) {
			libsodium.setValue(implementation_address + i * 4,
			    libsodium.Runtime.addFunction(implementation
			    [["implementation_name", "random", "stir", "uniform", "buf", "close"][i]]),
			    "i32");
		}
		
		if ((libsodium._randombytes_set_implementation(implementation_address) | 0) === 0) {
			_free_all(address_pool);
			return;
		}
		_free_and_throw_error(address_pool);
		
	}

	function randombytes_stir(outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		libsodium._randombytes_stir();
		
	}

	function randombytes_uniform(upper_bound, outputFormat) {
		var address_pool = [];
		_check_output_format(outputFormat);

		// ---------- input: upper_bound (uint)
		
		_require_defined(address_pool, upper_bound, "upper_bound");
		
		if (!(typeof upper_bound === "number" && (upper_bound | 0) === upper_bound) && (upper_bound | 0) > 0) {
			_free_and_throw_type_error(address_pool, "upper_bound must be an unsigned integer");
		}
		
		var random_value = libsodium._randombytes_uniform(upper_bound) >>> 0;
		var ret = (random_value);
		_free_all(address_pool);
		return ret;
		
	}

	function sodium_version_string() {
		var address_pool = [];

		var version = libsodium._sodium_version_string();
		var ret = (libsodium.Pointer_stringify(version));
		_free_all(address_pool);
		return ret;
		
	}


	exports.from_base64 = from_base64;
	exports.from_hex = from_hex;
	exports.from_string = from_string;
	exports.libsodium = libsodium;
	exports.memcmp = memcmp;
	exports.memzero = memzero;
	exports.output_formats = output_formats;
	exports.symbols = symbols;
	exports.to_base64 = to_base64;
	exports.to_hex = to_hex;

	
	var exported_functions = ["crypto_aead_chacha20poly1305_decrypt", "crypto_aead_chacha20poly1305_encrypt", "crypto_auth", "crypto_auth_hmacsha256", "crypto_auth_hmacsha512", "crypto_auth_verify", "crypto_auth_verify", "crypto_auth_verify", "crypto_box_detached", "crypto_box_easy", "crypto_box_keypair", "crypto_box_open_detached", "crypto_box_open_easy", "crypto_box_seal", "crypto_box_seal_open", "crypto_box_seed_keypair", "crypto_generichash", "crypto_generichash_final", "crypto_generichash_init", "crypto_generichash_update", "crypto_hash", "crypto_hash_sha256", "crypto_hash_sha512", "crypto_onetimeauth", "crypto_onetimeauth_verify", "crypto_pwhash_scryptsalsa208sha256", "crypto_pwhash_scryptsalsa208sha256_ll", "crypto_pwhash_scryptsalsa208sha256_str", "crypto_pwhash_scryptsalsa208sha256_str_verify", "crypto_scalarmult", "crypto_scalarmult_base", "crypto_secretbox_detached", "crypto_secretbox_easy", "crypto_secretbox_open_detached", "crypto_secretbox_open_easy", "crypto_shorthash", "crypto_sign", "crypto_sign_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "crypto_sign_ed25519_sk_to_seed", "crypto_sign_keypair", "crypto_sign_open", "crypto_sign_seed_keypair", "crypto_sign_verify_detached", "randombytes_buf", "randombytes_close", "randombytes_random", "randombytes_set_implementation", "randombytes_stir", "randombytes_uniform", "sodium_version_string"],
		functions = [crypto_aead_chacha20poly1305_decrypt, crypto_aead_chacha20poly1305_encrypt, crypto_auth, crypto_auth_hmacsha256, crypto_auth_hmacsha512, crypto_auth_verify, crypto_auth_verify, crypto_auth_verify, crypto_box_detached, crypto_box_easy, crypto_box_keypair, crypto_box_open_detached, crypto_box_open_easy, crypto_box_seal, crypto_box_seal_open, crypto_box_seed_keypair, crypto_generichash, crypto_generichash_final, crypto_generichash_init, crypto_generichash_update, crypto_hash, crypto_hash_sha256, crypto_hash_sha512, crypto_onetimeauth, crypto_onetimeauth_verify, crypto_pwhash_scryptsalsa208sha256, crypto_pwhash_scryptsalsa208sha256_ll, crypto_pwhash_scryptsalsa208sha256_str, crypto_pwhash_scryptsalsa208sha256_str_verify, crypto_scalarmult, crypto_scalarmult_base, crypto_secretbox_detached, crypto_secretbox_easy, crypto_secretbox_open_detached, crypto_secretbox_open_easy, crypto_shorthash, crypto_sign, crypto_sign_detached, crypto_sign_ed25519_pk_to_curve25519, crypto_sign_ed25519_sk_to_curve25519, crypto_sign_ed25519_sk_to_pk, crypto_sign_ed25519_sk_to_seed, crypto_sign_keypair, crypto_sign_open, crypto_sign_seed_keypair, crypto_sign_verify_detached, randombytes_buf, randombytes_close, randombytes_random, randombytes_set_implementation, randombytes_stir, randombytes_uniform, sodium_version_string];
	for (var i = 0; i < functions.length; i++) {
		if (typeof libsodium["_" + exported_functions[i]] === "function") {
			exports[exported_functions[i]] = functions[i];
		}
	}
	var constants = ["SODIUM_LIBRARY_VERSION_MAJOR", "SODIUM_LIBRARY_VERSION_MINOR", "crypto_aead_chacha20poly1305_ABYTES", "crypto_aead_chacha20poly1305_KEYBYTES", "crypto_aead_chacha20poly1305_NPUBBYTES", "crypto_aead_chacha20poly1305_NSECBYTES", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_NONCEBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SEALBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_SEEDBYTES", "crypto_generichash_BYTES", "crypto_generichash_BYTES_MAX", "crypto_generichash_BYTES_MIN", "crypto_generichash_KEYBYTES", "crypto_generichash_KEYBYTES_MAX", "crypto_generichash_KEYBYTES_MIN", "crypto_hash_BYTES", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_SALTBYTES", "crypto_pwhash_scryptsalsa208sha256_STRBYTES", "crypto_pwhash_scryptsalsa208sha256_STR_VERIFY", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox_NONCEBYTES", "crypto_shorthash_BYTES", "crypto_shorthash_KEYBYTES", "crypto_sign_BYTES", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES"];
	for (var i = 0; i < constants.length; i++) {
		var raw = libsodium["_" + constants[i].toLowerCase()];
		if (typeof raw === "function") exports[constants[i]] = raw()|0;
	}
	var constants_str = ["SODIUM_VERSION_STRING", "crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];
	for (var i = 0; i < constants_str.length; i++) {
		var raw = libsodium["_" + constants_str[i].toLowerCase()];
		if (typeof raw === "function") exports[constants_str[i]] = libsodium.Pointer_stringify(raw());
	}

	return exports;
}));
