(function(){function a(b,c,d){if(b===c)return 0!==b||1/b==1/c;if(null==b||null==c)return b===c;b._chain&&(b=b._wrapped);c._chain&&(c=c._wrapped);if(b.isEqual&&t.isFunction(b.isEqual))return b.isEqual(c);if(c.isEqual&&t.isFunction(c.isEqual))return c.isEqual(b);var f=j.call(b);if(f!=j.call(c))return!1;switch(f){case "[object String]":return b==String(c);case "[object Number]":return b!=+b?c!=+c:0==b?1/b==1/c:b==+c;case "[object Date]":case "[object Boolean]":return+b==+c;case "[object RegExp]":return b.source==
c.source&&b.global==c.global&&b.multiline==c.multiline&&b.ignoreCase==c.ignoreCase}if("object"!=typeof b||"object"!=typeof c)return!1;for(var e=d.length;e--;)if(d[e]==b)return!0;d.push(b);var e=0,g=!0;if("[object Array]"==f){if(e=b.length,g=e==c.length)for(;e--&&(g=e in b==e in c&&a(b[e],c[e],d)););}else{if("constructor"in b!="constructor"in c||b.constructor!=c.constructor)return!1;for(var h in b)if(t.has(b,h)&&(e++,!(g=t.has(c,h)&&a(b[h],c[h],d))))break;if(g){for(h in c)if(t.has(c,h)&&!e--)break;
g=!e}}d.pop();return g}var b=this,c=b._,d={},f=Array.prototype,e=Object.prototype,g=f.slice,h=f.unshift,j=e.toString,k=e.hasOwnProperty,m=f.forEach,n=f.map,p=f.reduce,q=f.reduceRight,r=f.filter,s=f.every,w=f.some,u=f.indexOf,A=f.lastIndexOf,e=Array.isArray,x=Object.keys,v=Function.prototype.bind,t=function(a){return new I(a)};"undefined"!==typeof exports?("undefined"!==typeof module&&module.exports&&(exports=module.exports=t),exports._=t):b._=t;t.VERSION="1.3.3";var C=t.each=t.forEach=function(a,
b,c){if(null!=a)if(m&&a.forEach===m)a.forEach(b,c);else if(a.length===+a.length)for(var f=0,e=a.length;f<e&&!(f in a&&b.call(c,a[f],f,a)===d);f++);else for(f in a)if(t.has(a,f)&&b.call(c,a[f],f,a)===d)break};t.map=t.collect=function(a,b,c){var d=[];if(null==a)return d;if(n&&a.map===n)return a.map(b,c);C(a,function(a,f,e){d[d.length]=b.call(c,a,f,e)});a.length===+a.length&&(d.length=a.length);return d};t.reduce=t.foldl=t.inject=function(a,b,c,d){var f=2<arguments.length;null==a&&(a=[]);if(p&&a.reduce===
p)return d&&(b=t.bind(b,d)),f?a.reduce(b,c):a.reduce(b);C(a,function(a,e,g){f?c=b.call(d,c,a,e,g):(c=a,f=!0)});if(!f)throw new TypeError("Reduce of empty array with no initial value");return c};t.reduceRight=t.foldr=function(a,b,c,d){var f=2<arguments.length;null==a&&(a=[]);if(q&&a.reduceRight===q)return d&&(b=t.bind(b,d)),f?a.reduceRight(b,c):a.reduceRight(b);var e=t.toArray(a).reverse();d&&!f&&(b=t.bind(b,d));return f?t.reduce(e,b,c,d):t.reduce(e,b)};t.find=t.detect=function(a,b,c){var d;z(a,function(a,
f,e){if(b.call(c,a,f,e))return d=a,!0});return d};t.filter=t.select=function(a,b,c){var d=[];if(null==a)return d;if(r&&a.filter===r)return a.filter(b,c);C(a,function(a,f,e){b.call(c,a,f,e)&&(d[d.length]=a)});return d};t.reject=function(a,b,c){var d=[];if(null==a)return d;C(a,function(a,f,e){b.call(c,a,f,e)||(d[d.length]=a)});return d};t.every=t.all=function(a,b,c){var f=!0;if(null==a)return f;if(s&&a.every===s)return a.every(b,c);C(a,function(a,e,g){if(!(f=f&&b.call(c,a,e,g)))return d});return!!f};
var z=t.some=t.any=function(a,b,c){b||(b=t.identity);var f=!1;if(null==a)return f;if(w&&a.some===w)return a.some(b,c);C(a,function(a,e,g){if(f||(f=b.call(c,a,e,g)))return d});return!!f};t.include=t.contains=function(a,b){var c=!1;return null==a?c:u&&a.indexOf===u?-1!=a.indexOf(b):c=z(a,function(a){return a===b})};t.invoke=function(a,b){var c=g.call(arguments,2);return t.map(a,function(a){return(t.isFunction(b)?b||a:a[b]).apply(a,c)})};t.pluck=function(a,b){return t.map(a,function(a){return a[b]})};
t.max=function(a,b,c){if(!b&&t.isArray(a)&&a[0]===+a[0])return Math.max.apply(Math,a);if(!b&&t.isEmpty(a))return-Infinity;var d={computed:-Infinity};C(a,function(a,f,e){f=b?b.call(c,a,f,e):a;f>=d.computed&&(d={value:a,computed:f})});return d.value};t.min=function(a,b,c){if(!b&&t.isArray(a)&&a[0]===+a[0])return Math.min.apply(Math,a);if(!b&&t.isEmpty(a))return Infinity;var d={computed:Infinity};C(a,function(a,f,e){f=b?b.call(c,a,f,e):a;f<d.computed&&(d={value:a,computed:f})});return d.value};t.shuffle=
function(a){var b=[],c;C(a,function(a,d){c=Math.floor(Math.random()*(d+1));b[d]=b[c];b[c]=a});return b};t.sortBy=function(a,b,c){var d=t.isFunction(b)?b:function(a){return a[b]};return t.pluck(t.map(a,function(a,b,f){return{value:a,criteria:d.call(c,a,b,f)}}).sort(function(a,b){var c=a.criteria,d=b.criteria;return void 0===c?1:void 0===d?-1:c<d?-1:c>d?1:0}),"value")};t.groupBy=function(a,b){var c={},d=t.isFunction(b)?b:function(a){return a[b]};C(a,function(a,b){var f=d(a,b);(c[f]||(c[f]=[])).push(a)});
return c};t.sortedIndex=function(a,b,c){c||(c=t.identity);for(var d=0,f=a.length;d<f;){var e=d+f>>1;c(a[e])<c(b)?d=e+1:f=e}return d};t.toArray=function(a){return!a?[]:t.isArray(a)||t.isArguments(a)?g.call(a):a.toArray&&t.isFunction(a.toArray)?a.toArray():t.values(a)};t.size=function(a){return t.isArray(a)?a.length:t.keys(a).length};t.first=t.head=t.take=function(a,b,c){return null!=b&&!c?g.call(a,0,b):a[0]};t.initial=function(a,b,c){return g.call(a,0,a.length-(null==b||c?1:b))};t.last=function(a,
b,c){return null!=b&&!c?g.call(a,Math.max(a.length-b,0)):a[a.length-1]};t.rest=t.tail=function(a,b,c){return g.call(a,null==b||c?1:b)};t.compact=function(a){return t.filter(a,function(a){return!!a})};t.flatten=function(a,b){return t.reduce(a,function(a,c){if(t.isArray(c))return a.concat(b?c:t.flatten(c));a[a.length]=c;return a},[])};t.without=function(a){return t.difference(a,g.call(arguments,1))};t.uniq=t.unique=function(a,b,c){c=c?t.map(a,c):a;var d=[];3>a.length&&(b=!0);t.reduce(c,function(c,f,
e){if(b?t.last(c)!==f||!c.length:!t.include(c,f))c.push(f),d.push(a[e]);return c},[]);return d};t.union=function(){return t.uniq(t.flatten(arguments,!0))};t.intersection=t.intersect=function(a){var b=g.call(arguments,1);return t.filter(t.uniq(a),function(a){return t.every(b,function(b){return 0<=t.indexOf(b,a)})})};t.difference=function(a){var b=t.flatten(g.call(arguments,1),!0);return t.filter(a,function(a){return!t.include(b,a)})};t.zip=function(){for(var a=g.call(arguments),b=t.max(t.pluck(a,"length")),
c=Array(b),d=0;d<b;d++)c[d]=t.pluck(a,""+d);return c};t.indexOf=function(a,b,c){if(null==a)return-1;var d;if(c)return c=t.sortedIndex(a,b),a[c]===b?c:-1;if(u&&a.indexOf===u)return a.indexOf(b);c=0;for(d=a.length;c<d;c++)if(c in a&&a[c]===b)return c;return-1};t.lastIndexOf=function(a,b){if(null==a)return-1;if(A&&a.lastIndexOf===A)return a.lastIndexOf(b);for(var c=a.length;c--;)if(c in a&&a[c]===b)return c;return-1};t.range=function(a,b,c){1>=arguments.length&&(b=a||0,a=0);c=arguments[2]||1;for(var d=
Math.max(Math.ceil((b-a)/c),0),f=0,e=Array(d);f<d;)e[f++]=a,a+=c;return e};var D=function(){};t.bind=function(a,b){var c,d;if(a.bind===v&&v)return v.apply(a,g.call(arguments,1));if(!t.isFunction(a))throw new TypeError;d=g.call(arguments,2);return c=function(){if(!(this instanceof c))return a.apply(b,d.concat(g.call(arguments)));D.prototype=a.prototype;var f=new D,e=a.apply(f,d.concat(g.call(arguments)));return Object(e)===e?e:f}};t.bindAll=function(a){var b=g.call(arguments,1);0==b.length&&(b=t.functions(a));
C(b,function(b){a[b]=t.bind(a[b],a)});return a};t.memoize=function(a,b){var c={};b||(b=t.identity);return function(){var d=b.apply(this,arguments);return t.has(c,d)?c[d]:c[d]=a.apply(this,arguments)}};t.delay=function(a,b){var c=g.call(arguments,2);return setTimeout(function(){return a.apply(null,c)},b)};t.defer=function(a){return t.delay.apply(t,[a,1].concat(g.call(arguments,1)))};t.throttle=function(a,b){var c,d,f,e,g,h,j=t.debounce(function(){g=e=!1},b);return function(){c=this;d=arguments;f||
(f=setTimeout(function(){f=null;g&&a.apply(c,d);j()},b));e?g=!0:h=a.apply(c,d);j();e=!0;return h}};t.debounce=function(a,b,c){var d;return function(){var f=this,e=arguments;c&&!d&&a.apply(f,e);clearTimeout(d);d=setTimeout(function(){d=null;c||a.apply(f,e)},b)}};t.once=function(a){var b=!1,c;return function(){if(b)return c;b=!0;return c=a.apply(this,arguments)}};t.wrap=function(a,b){return function(){var c=[a].concat(g.call(arguments,0));return b.apply(this,c)}};t.compose=function(){var a=arguments;
return function(){for(var b=arguments,c=a.length-1;0<=c;c--)b=[a[c].apply(this,b)];return b[0]}};t.after=function(a,b){return 0>=a?b():function(){if(1>--a)return b.apply(this,arguments)}};t.keys=x||function(a){if(a!==Object(a))throw new TypeError("Invalid object");var b=[],c;for(c in a)t.has(a,c)&&(b[b.length]=c);return b};t.values=function(a){return t.map(a,t.identity)};t.functions=t.methods=function(a){var b=[],c;for(c in a)t.isFunction(a[c])&&b.push(c);return b.sort()};t.extend=function(a){C(g.call(arguments,
1),function(b){for(var c in b)a[c]=b[c]});return a};t.pick=function(a){var b={};C(t.flatten(g.call(arguments,1)),function(c){c in a&&(b[c]=a[c])});return b};t.defaults=function(a){C(g.call(arguments,1),function(b){for(var c in b)null==a[c]&&(a[c]=b[c])});return a};t.clone=function(a){return!t.isObject(a)?a:t.isArray(a)?a.slice():t.extend({},a)};t.tap=function(a,b){b(a);return a};t.isEqual=function(b,c){return a(b,c,[])};t.isEmpty=function(a){if(null==a)return!0;if(t.isArray(a)||t.isString(a))return 0===
a.length;for(var b in a)if(t.has(a,b))return!1;return!0};t.isElement=function(a){return!!(a&&1==a.nodeType)};t.isArray=e||function(a){return"[object Array]"==j.call(a)};t.isObject=function(a){return a===Object(a)};t.isArguments=function(a){return"[object Arguments]"==j.call(a)};t.isArguments(arguments)||(t.isArguments=function(a){return!(!a||!t.has(a,"callee"))});t.isFunction=function(a){return"[object Function]"==j.call(a)};t.isString=function(a){return"[object String]"==j.call(a)};t.isNumber=function(a){return"[object Number]"==
j.call(a)};t.isFinite=function(a){return t.isNumber(a)&&isFinite(a)};t.isNaN=function(a){return a!==a};t.isBoolean=function(a){return!0===a||!1===a||"[object Boolean]"==j.call(a)};t.isDate=function(a){return"[object Date]"==j.call(a)};t.isRegExp=function(a){return"[object RegExp]"==j.call(a)};t.isNull=function(a){return null===a};t.isUndefined=function(a){return void 0===a};t.has=function(a,b){return k.call(a,b)};t.noConflict=function(){b._=c;return this};t.identity=function(a){return a};t.times=
function(a,b,c){for(var d=0;d<a;d++)b.call(c,d)};t.escape=function(a){return(""+a).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/\//g,"&#x2F;")};t.result=function(a,b){if(null==a)return null;var c=a[b];return t.isFunction(c)?c.call(a):c};t.mixin=function(a){C(t.functions(a),function(b){var c=t[b]=a[b];I.prototype[b]=function(){var a=g.call(arguments);h.call(a,this._wrapped);return L(c.apply(t,a),this._chain)}})};var E=0;t.uniqueId=
function(a){var b=E++;return a?a+b:b};t.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var H=/.^/,J={"\\":"\\","'":"'",r:"\r",n:"\n",t:"\t",u2028:"\u2028",u2029:"\u2029"},K;for(K in J)J[J[K]]=K;var G=/\\|'|\r|\n|\t|\u2028|\u2029/g,O=/\\(\\|'|r|n|t|u2028|u2029)/g,M=function(a){return a.replace(O,function(a,b){return J[b]})};t.template=function(a,b,c){c=t.defaults(c||{},t.templateSettings);a="__p+='"+a.replace(G,function(a){return"\\"+J[a]}).replace(c.escape||
H,function(a,b){return"'+\n_.escape("+M(b)+")+\n'"}).replace(c.interpolate||H,function(a,b){return"'+\n("+M(b)+")+\n'"}).replace(c.evaluate||H,function(a,b){return"';\n"+M(b)+"\n;__p+='"})+"';\n";c.variable||(a="with(obj||{}){\n"+a+"}\n");a="var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n"+a+"return __p;\n";var d=new Function(c.variable||"obj","_",a);if(b)return d(b,t);b=function(a){return d.call(this,a,t)};b.source="function("+(c.variable||"obj")+"){\n"+a+"}";return b};
t.chain=function(a){return t(a).chain()};var I=function(a){this._wrapped=a};t.prototype=I.prototype;var L=function(a,b){return b?t(a).chain():a};t.mixin(t);C("pop push reverse shift sort splice unshift".split(" "),function(a){var b=f[a];I.prototype[a]=function(){var c=this._wrapped;b.apply(c,arguments);var d=c.length;("shift"==a||"splice"==a)&&0===d&&delete c[0];return L(c,this._chain)}});C(["concat","join","slice"],function(a){var b=f[a];I.prototype[a]=function(){return L(b.apply(this._wrapped,arguments),
this._chain)}});I.prototype.chain=function(){this._chain=!0;return this};I.prototype.value=function(){return this._wrapped}}).call(this);var THREE=THREE||{REVISION:"52"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){a=String(a);var b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),e=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+e)},e);a=c+e;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.0010*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};
THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,f,e;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),f=6*a-d,a=c*(1-b),e=c*(1-b*f),b=c*(1-b*(1-f)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=e,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=e,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=e));return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&
255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,
a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,f=d[0],e=d[4],g=d[8],h=d[1],j=d[5],k=d[9],m=d[2],n=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-e,f)):(this.x=Math.atan2(n,j),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?
(this.y=Math.atan2(g,d),this.z=Math.atan2(h,j)):(this.y=Math.atan2(-m,f),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(n)),0.99999>Math.abs(n)?(this.y=Math.atan2(-m,d),this.z=Math.atan2(-e,j)):(this.y=0,this.z=Math.atan2(h,f))):"ZYX"===b?(this.y=Math.asin(-c(m)),0.99999>Math.abs(m)?(this.x=Math.atan2(n,d),this.z=Math.atan2(h,f)):(this.x=0,this.z=Math.atan2(-e,j))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-k,j),this.y=Math.atan2(-m,f)):(this.x=0,this.y=Math.atan2(g,d))):
"XZY"===b&&(this.z=Math.asin(-c(e)),0.99999>Math.abs(e)?(this.x=Math.atan2(n,j),this.y=Math.atan2(g,f)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,f=a.y*a.y,e=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-f+e),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-f-e)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*
(a.x*a.z+a.y*a.w),g-d-f+e),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+f-e)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-f+e),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+f-e)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-f+e),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-f-e)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+f-e),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-f-e),this.z=Math.asin(c(2*(a.x*a.y+
a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+f-e),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-f-e),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},
isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):
(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var f=a[0];d=a[4];var e=a[8],g=a[1],h=a[5],j=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(e-c)&&0.01>Math.abs(j-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(e+c)&&0.1>Math.abs(j+b)&&0.1>Math.abs(f+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;f=(f+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;e=(e+c)/4;j=(j+b)/4;f>h&&f>k?0.01>f?(b=0,d=c=0.707106781):(b=Math.sqrt(f),c=d/b,
d=e/b):h>k?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=j/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=e/d,c=j/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-j)*(b-j)+(e-c)*(e-c)+(g-d)*(g-d));0.0010>Math.abs(a)&&(a=1);this.x=(b-j)/a;this.y=(e-c)/a;this.z=(g-d)/a;this.w=Math.acos((f+h+k-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements;a=b[10]*b[5]-b[6]*b[9];var c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],f=-b[10]*b[4]+b[6]*b[8],e=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],j=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*f+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,m=this.elements;m[0]=b*a;m[1]=b*c;m[2]=b*d;m[3]=b*f;m[4]=b*e;m[5]=b*g;m[6]=b*h;m[7]=b*j;m[8]=b*k;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,f,e,g,h,j,k,m,n,p,q,r,s){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,f||0,void 0!==e?e:1,g||0,h||0,j||0,k||0,void 0!==m?m:1,n||0,p||0,q||0,r||0,void 0!==s?s:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,f,e,g,h,j,k,m,n,p,q,r,s){var w=this.elements;w[0]=a;w[4]=b;w[8]=c;w[12]=d;w[1]=f;w[5]=e;w[9]=g;w[13]=h;w[2]=j;w[6]=k;w[10]=m;w[14]=n;w[3]=p;w[7]=q;w[11]=r;w[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
f=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);f.cross(c,g).normalize();0===f.length()&&(g.x+=1E-4,f.cross(c,g).normalize());e.cross(g,f);d[0]=f.x;d[4]=e.x;d[8]=g.x;d[1]=f.y;d[5]=e.y;d[9]=g.y;d[2]=f.z;d[6]=e.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,f=this.elements,e=c[0],g=c[4],h=c[8],j=c[12],k=c[1],m=c[5],n=c[9],p=c[13],q=c[2],r=c[6],s=c[10],w=c[14],u=c[3],A=c[7],x=c[11],c=c[15],v=d[0],t=d[4],C=d[8],
z=d[12],D=d[1],E=d[5],H=d[9],J=d[13],K=d[2],G=d[6],O=d[10],M=d[14],I=d[3],L=d[7],N=d[11],d=d[15];f[0]=e*v+g*D+h*K+j*I;f[4]=e*t+g*E+h*G+j*L;f[8]=e*C+g*H+h*O+j*N;f[12]=e*z+g*J+h*M+j*d;f[1]=k*v+m*D+n*K+p*I;f[5]=k*t+m*E+n*G+p*L;f[9]=k*C+m*H+n*O+p*N;f[13]=k*z+m*J+n*M+p*d;f[2]=q*v+r*D+s*K+w*I;f[6]=q*t+r*E+s*G+w*L;f[10]=q*C+r*H+s*O+w*N;f[14]=q*z+r*J+s*M+w*d;f[3]=u*v+A*D+x*K+c*I;f[7]=u*t+A*E+x*G+c*L;f[11]=u*C+A*H+x*O+c*N;f[15]=u*z+A*J+x*M+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,f=a.z,e=1/(b[3]*c+b[7]*d+b[11]*f+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*f+b[12])*e;a.y=(b[1]*c+b[5]*d+b[9]*f+b[13])*e;a.z=(b[2]*c+b[6]*d+b[10]*f+b[14])*e;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w;a.x=b[0]*c+b[4]*d+b[8]*f+b[12]*e;a.y=b[1]*c+b[5]*d+b[9]*f+b[13]*e;a.z=b[2]*c+b[6]*d+b[10]*f+b[14]*e;a.w=b[3]*c+b[7]*d+b[11]*f+b[15]*e;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],
this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z;a.x=c*b[0]+d*b[4]+f*b[8];a.y=c*b[1]+d*b[5]+f*b[9];a.z=c*b[2]+d*b[6]+f*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],f=a[12],e=a[1],g=a[5],h=a[9],j=a[13],k=a[2],m=a[6],n=a[10],p=a[14],q=a[3],r=a[7],s=a[11],a=a[15];return f*h*m*q-d*j*m*q-f*g*n*q+c*j*n*q+d*g*p*q-c*h*p*q-f*h*k*r+d*j*k*r+f*e*n*r-b*j*n*r-d*e*p*r+b*h*p*r+f*g*k*s-c*j*k*s-f*e*m*s+b*j*m*s+c*e*p*s-b*g*p*s-d*g*k*a+c*h*k*a+d*e*m*a-b*h*m*a-c*e*n*a+b*g*n*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=
a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+
14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=
this.elements,c=a.elements,d=c[0],f=c[4],e=c[8],g=c[12],h=c[1],j=c[5],k=c[9],m=c[13],n=c[2],p=c[6],q=c[10],r=c[14],s=c[3],w=c[7],u=c[11],c=c[15];b[0]=k*r*w-m*q*w+m*p*u-j*r*u-k*p*c+j*q*c;b[4]=g*q*w-e*r*w-g*p*u+f*r*u+e*p*c-f*q*c;b[8]=e*m*w-g*k*w+g*j*u-f*m*u-e*j*c+f*k*c;b[12]=g*k*p-e*m*p-g*j*q+f*m*q+e*j*r-f*k*r;b[1]=m*q*s-k*r*s-m*n*u+h*r*u+k*n*c-h*q*c;b[5]=e*r*s-g*q*s+g*n*u-d*r*u-e*n*c+d*q*c;b[9]=g*k*s-e*m*s-g*h*u+d*m*u+e*h*c-d*k*c;b[13]=e*m*n-g*k*n+g*h*q-d*m*q-e*h*r+d*k*r;b[2]=j*r*s-m*p*s+m*n*w-h*r*
w-j*n*c+h*p*c;b[6]=g*p*s-f*r*s-g*n*w+d*r*w+f*n*c-d*p*c;b[10]=f*m*s-g*j*s+g*h*w-d*m*w-f*h*c+d*j*c;b[14]=g*j*n-f*m*n-g*h*p+d*m*p+f*h*r-d*j*r;b[3]=k*p*s-j*q*s-k*n*w+h*q*w+j*n*u-h*p*u;b[7]=f*q*s-e*p*s+e*n*w-d*q*w-f*n*u+d*p*u;b[11]=e*j*s-f*k*s-e*h*w+d*k*w+f*h*u-d*j*u;b[15]=f*k*n-e*j*n+e*h*p-d*k*p-f*h*q+d*j*q;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,f=a.y,e=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(f),f=Math.sin(f),j=Math.cos(e),e=
Math.sin(e);if(void 0===b||"XYZ"===b){var k=g*j,m=g*e,n=d*j,p=d*e;c[0]=h*j;c[4]=-h*e;c[8]=f;c[1]=m+n*f;c[5]=k-p*f;c[9]=-d*h;c[2]=p-k*f;c[6]=n+m*f;c[10]=g*h}else"YXZ"===b?(k=h*j,m=h*e,n=f*j,p=f*e,c[0]=k+p*d,c[4]=n*d-m,c[8]=g*f,c[1]=g*e,c[5]=g*j,c[9]=-d,c[2]=m*d-n,c[6]=p+k*d,c[10]=g*h):"ZXY"===b?(k=h*j,m=h*e,n=f*j,p=f*e,c[0]=k-p*d,c[4]=-g*e,c[8]=n+m*d,c[1]=m+n*d,c[5]=g*j,c[9]=p-k*d,c[2]=-g*f,c[6]=d,c[10]=g*h):"ZYX"===b?(k=g*j,m=g*e,n=d*j,p=d*e,c[0]=h*j,c[4]=n*f-m,c[8]=k*f+p,c[1]=h*e,c[5]=p*f+k,c[9]=
m*f-n,c[2]=-f,c[6]=d*h,c[10]=g*h):"YZX"===b?(k=g*h,m=g*f,n=d*h,p=d*f,c[0]=h*j,c[4]=p-k*e,c[8]=n*e+m,c[1]=e,c[5]=g*j,c[9]=-d*j,c[2]=-f*j,c[6]=m*e+n,c[10]=k-p*e):"XZY"===b&&(k=g*h,m=g*f,n=d*h,p=d*f,c[0]=h*j,c[4]=-e,c[8]=f*j,c[1]=k*e+p,c[5]=g*j,c[9]=m*e-n,c[2]=n*e-m,c[6]=d*j,c[10]=p*e+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w,g=c+c,h=d+d,j=f+f;a=c*g;var k=c*h,c=c*j,m=d*h,d=d*j,f=f*j,g=e*g,h=e*h,e=e*j;b[0]=1-(m+f);b[4]=k-e;b[8]=c+h;b[1]=k+e;b[5]=
1-(a+f);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+m);return this},compose:function(a,b,c){var d=this.elements,f=THREE.Matrix4.__m1,e=THREE.Matrix4.__m2;f.identity();f.setRotationFromQuaternion(b);e.makeScale(c.x,c.y,c.z);this.multiply(f,e);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,f=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;f.set(d[0],d[1],d[2]);e.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;
b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=f.length();c.y=e.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=
a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements;a=a.elements;var c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),f=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*f;b[5]=a[5]*f;b[6]=a[6]*f;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];
b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],f=b[6],e=b[7],g=b[8],h=b[9],j=b[10],k=b[11],m=Math.cos(a);a=Math.sin(a);b[4]=m*c+a*g;b[5]=m*d+a*h;b[6]=m*f+a*j;b[7]=m*e+a*k;b[8]=m*g-a*c;b[9]=m*h-a*d;b[10]=m*j-a*f;b[11]=m*k-a*e;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],f=b[2],e=b[3],g=b[8],h=b[9],j=b[10],k=b[11],m=Math.cos(a);a=Math.sin(a);b[0]=m*c-a*g;b[1]=m*d-a*h;b[2]=m*f-a*j;b[3]=m*e-a*k;b[8]=m*g+a*c;b[9]=m*h+a*d;b[10]=
m*j+a*f;b[11]=m*k+a*e;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],f=b[2],e=b[3],g=b[4],h=b[5],j=b[6],k=b[7],m=Math.cos(a);a=Math.sin(a);b[0]=m*c+a*g;b[1]=m*d+a*h;b[2]=m*f+a*j;b[3]=m*e+a*k;b[4]=m*g-a*c;b[5]=m*h-a*d;b[6]=m*j-a*f;b[7]=m*k-a*e;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,f=a.y,e=a.z,
g=Math.sqrt(d*d+f*f+e*e),d=d/g,f=f/g,e=e/g,g=d*d,h=f*f,j=e*e,k=Math.cos(b),m=Math.sin(b),n=1-k,p=d*f*n,q=d*e*n,n=f*e*n,d=d*m,r=f*m,m=e*m,e=g+(1-g)*k,g=p+m,f=q-r,p=p-m,h=h+(1-h)*k,m=n+d,q=q+r,n=n-d,j=j+(1-j)*k,k=c[0],d=c[1],r=c[2],s=c[3],w=c[4],u=c[5],A=c[6],x=c[7],v=c[8],t=c[9],C=c[10],z=c[11];c[0]=e*k+g*w+f*v;c[1]=e*d+g*u+f*t;c[2]=e*r+g*A+f*C;c[3]=e*s+g*x+f*z;c[4]=p*k+h*w+m*v;c[5]=p*d+h*u+m*t;c[6]=p*r+h*A+m*C;c[7]=p*s+h*x+m*z;c[8]=q*k+n*w+j*v;c[9]=q*d+n*u+j*t;c[10]=q*r+n*A+j*C;c[11]=q*s+n*x+j*z;
return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);
this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,e=a.x,g=a.y,h=a.z,j=f*e,k=f*g;this.set(j*e+c,j*g-d*h,j*h+d*g,0,j*g+d*h,k*g+c,k*h-d*e,0,j*h-d*g,k*h+d*e,f*h*h+c,0,0,0,0,1);return this},makeScale:function(a,
b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,f,e){var g=this.elements;g[0]=2*f/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*f/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(e+f)/(e-f);g[14]=-2*e*f/(e-f);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(a*Math.PI/360);var f=-a;return this.makeFrustum(f*b,a*b,f,a,c,d)},makeOrthographic:function(a,b,c,d,f,e){var g=this.elements,h=b-a,j=c-d,k=e-f;g[0]=2/
h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/j;g[9]=0;g[13]=-((c+d)/j);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((e+f)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],f=c[2],e=c[3],g=c[4],h=c[5],j=c[6],k=c[7],m=c[8],n=c[9],p=c[10],q=c[11],r=c[12],s=c[13],w=c[14],c=c[15];b[0].set(e-a,k-g,q-m,c-r);b[1].set(e+a,k+g,q+m,c+r);b[2].set(e+d,k+h,q+n,c+s);b[3].set(e-d,k-h,q-n,c-s);b[4].set(e-f,k-j,q-p,c-w);b[5].set(e+f,k+j,q+p,c+w);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};
THREE.Frustum.prototype.contains=function(a){var b=0,c=this.planes,b=a.matrixWorld,d=b.elements;a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis();for(var f=0;6>f;f++)if(b=c[f].x*d[12]+c[f].y*d[13]+c[f].z*d[14]+c[f].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,f){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=f||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,f=new a.Vector3,e=new a.Vector3,g=new a.Vector3,h=new a.Matrix4,j=function(a,b){return a.distance-b.distance},k=new a.Vector3,m=new a.Vector3,n=new a.Vector3,p=function(a,b,c){k.sub(c,a);var d=k.dot(b);a=m.add(a,n.copy(b).multiplyScalar(d));return c.distanceTo(a)},q=function(a,b,c,d){k.sub(d,b);m.sub(c,b);n.sub(a,
b);a=k.dot(k);b=k.dot(m);c=k.dot(n);var f=m.dot(m);d=m.dot(n);var e=1/(a*f-b*b),f=(f*c-b*d)*e;a=(a*d-b*c)*e;return 0<=f&&0<=a&&1>f+a},r=function(j,m,k){var n,r;if(j instanceof a.Particle){n=p(m.origin,m.direction,j.matrixWorld.getPosition());if(n>j.scale.x)return k;r={distance:n,point:j.position,face:null,object:j};k.push(r)}else if(j instanceof a.Mesh){var t=j.geometry.boundingSphere.radius*j.matrixWorld.getMaxScaleOnAxis();n=p(m.origin,m.direction,j.matrixWorld.getPosition());if(n>t)return k;var s,
z,D=j.geometry,E=D.vertices,H,J,K;H=j.geometry.materials;J=j.material instanceof a.MeshFaceMaterial;var G,O=m.precision;j.matrixRotationWorld.extractRotation(j.matrixWorld);b.copy(m.origin);h.getInverse(j.matrixWorld);c.copy(b);h.multiplyVector3(c);d.copy(m.direction);h.rotateAxis(d).normalize();t=0;for(s=D.faces.length;t<s;t++)if(r=D.faces[t],n=!0===J?H[r.materialIndex]:j.material,void 0!==n&&(K=n.side,f.sub(r.centroid,c),e=r.normal,n=d.dot(e),!(Math.abs(n)<O)&&(z=e.dot(f)/n,!(0>z)&&(K===a.DoubleSide||
(K===a.FrontSide?0>n:0<n)))))if(g.add(c,d.multiplyScalar(z)),r instanceof a.Face3)n=E[r.a],z=E[r.b],K=E[r.c],q(g,n,z,K)&&(z=j.matrixWorld.multiplyVector3(g.clone()),n=b.distanceTo(z),n<m.near||n>m.far||(r={distance:n,point:z,face:r,faceIndex:t,object:j},k.push(r)));else if(r instanceof a.Face4&&(n=E[r.a],z=E[r.b],K=E[r.c],G=E[r.d],q(g,n,z,G)||q(g,z,K,G)))z=j.matrixWorld.multiplyVector3(g.clone()),n=b.distanceTo(z),n<m.near||n>m.far||(r={distance:n,point:z,face:r,faceIndex:t,object:j},k.push(r))}},
s=function(a,b,c){a=a.getDescendants();for(var d=0,f=a.length;d<f;d++)r(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&s(a,this,c);r(a,this,c);c.sort(j);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,f=a.length;d<f;d++)r(a[d],this,c),!0===b&&s(a[d],this,c);c.sort(j);return c}})(THREE);
THREE.Rectangle=function(){function a(){e=d-b;g=f-c}var b=0,c=0,d=0,f=0,e=0,g=0,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return e};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(e,g,m,n){h=!1;b=e;c=g;d=m;f=n;a()};this.addPoint=function(e,g){!0===h?(h=!1,b=e,c=g,d=e,f=g):(b=b<e?b:e,c=c<g?c:g,d=d>e?d:e,f=f>
g?f:g);a()};this.add3Points=function(e,g,m,n,p,q){!0===h?(h=!1,b=e<m?e<p?e:p:m<p?m:p,c=g<n?g<q?g:q:n<q?n:q,d=e>m?e>p?e:p:m>p?m:p,f=g>n?g>q?g:q:n>q?n:q):(b=e<m?e<p?e<b?e:b:p<b?p:b:m<p?m<b?m:b:p<b?p:b,c=g<n?g<q?g<c?g:c:q<c?q:c:n<q?n<c?n:c:q<c?q:c,d=e>m?e>p?e>d?e:d:p>d?p:d:m>p?m>d?m:d:p>d?p:d,f=g>n?g>q?g>f?g:f:q>f?q:f:n>q?n>f?n:f:q>f?q:f);a()};this.addRectangle=function(e){!0===h?(h=!1,b=e.getLeft(),c=e.getTop(),d=e.getRight(),f=e.getBottom()):(b=b<e.getLeft()?b:e.getLeft(),c=c<e.getTop()?c:e.getTop(),
d=d>e.getRight()?d:e.getRight(),f=f>e.getBottom()?f:e.getBottom());a()};this.inflate=function(e){b-=e;c-=e;d+=e;f+=e;a()};this.minSelf=function(e){b=b>e.getLeft()?b:e.getLeft();c=c>e.getTop()?c:e.getTop();d=d<e.getRight()?d:e.getRight();f=f<e.getBottom()?f:e.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||f<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;f=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};
THREE.Object3D=function(){THREE.Object3DLibrary.push(this);this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=
this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},
getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var f=this.children[c];if(f.name===a||!0===b&&(f=f.getChildByName(a,b),void 0!==f))return f}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);
if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<
c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;
a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;return a},deallocate:function(){var a=THREE.Object3DLibrary.indexOf(this);-1!==a&&THREE.Object3DLibrary.splice(a,1)}};THREE.Object3D.__m1=new THREE.Matrix4;
THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Object3DLibrary=[];
THREE.Projector=function(){function a(){if(e===h){var a=new THREE.RenderableObject;g.push(a);h++;e++;return a}return g[e++]}function b(){if(k===n){var a=new THREE.RenderableVertex;m.push(a);n++;k++;return a}return m[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,f=a.z+a.w,e=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=f&&0<=e&&0<=g&&0<=h)return!0;if(0>f&&0>e||0>g&&0>h)return!1;0>f?c=Math.max(c,f/(f-e)):0>e&&(d=Math.min(d,f/(f-e)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var f,e,g=[],h=0,j,k,m=[],n=0,p,q,r=[],s=0,w,u=[],A=0,x,v,t=[],C=0,z,D,E=[],H=0,J={objects:[],sprites:[],lights:[],elements:[]},K=new THREE.Vector3,G=new THREE.Vector4,O=new THREE.Matrix4,M=new THREE.Matrix4,I=new THREE.Frustum,L=new THREE.Vector4,N=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);O.multiply(b.projectionMatrix,b.matrixWorldInverse);O.multiplyVector3(a);return a};this.unprojectVector=
function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);O.multiply(b.matrixWorld,b.projectionMatrixInverse);O.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,h,n,Q){var ga=h.near,S=h.far,ta=!1,oa,P,ha,Y,X,ka,aa,ea,Ia,Ra,Ka,Wa,qa,Xa,kb,Ta;D=v=w=q=0;J.elements.length=0;g.updateMatrixWorld();void 0===
h.parent&&h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);O.multiply(h.projectionMatrix,h.matrixWorldInverse);I.setFromMatrix(O);e=0;J.objects.length=0;J.sprites.length=0;J.lights.length=0;var gb=function(b){for(var c=0,d=b.children.length;c<d;c++){var e=b.children[c];if(!1!==e.visible){if(e instanceof THREE.Light)J.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line){if(!1===e.frustumCulled||!0===I.contains(e))f=a(),f.object=e,null!==e.renderDepth?f.z=e.renderDepth:
(K.copy(e.matrixWorld.getPosition()),O.multiplyVector3(K),f.z=K.z),J.objects.push(f)}else e instanceof THREE.Sprite||e instanceof THREE.Particle?(f=a(),f.object=e,null!==e.renderDepth?f.z=e.renderDepth:(K.copy(e.matrixWorld.getPosition()),O.multiplyVector3(K),f.z=K.z),J.sprites.push(f)):(f=a(),f.object=e,null!==e.renderDepth?f.z=e.renderDepth:(K.copy(e.matrixWorld.getPosition()),O.multiplyVector3(K),f.z=K.z),J.objects.push(f));gb(e)}}};gb(g);!0===n&&J.objects.sort(c);g=0;for(n=J.objects.length;g<
n;g++)if(ea=J.objects[g].object,Ia=ea.matrixWorld,k=0,ea instanceof THREE.Mesh){Ra=ea.geometry;Ka=ea.geometry.materials;ha=Ra.vertices;Wa=Ra.faces;Xa=Ra.faceVertexUvs;Ra=ea.matrixRotationWorld.extractRotation(Ia);kb=ea.material instanceof THREE.MeshFaceMaterial;oa=0;for(P=ha.length;oa<P;oa++)j=b(),j.positionWorld.copy(ha[oa]),Ia.multiplyVector3(j.positionWorld),j.positionScreen.copy(j.positionWorld),O.multiplyVector4(j.positionScreen),j.positionScreen.x/=j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,
j.visible=j.positionScreen.z>ga&&j.positionScreen.z<S;ha=0;for(oa=Wa.length;ha<oa;ha++)if(P=Wa[ha],Ta=!0===kb?Ka[P.materialIndex]:ea.material,void 0!==Ta){ka=Ta.side;if(P instanceof THREE.Face3)if(Y=m[P.a],X=m[P.b],aa=m[P.c],!0===Y.visible&&!0===X.visible&&!0===aa.visible)if(ta=0>(aa.positionScreen.x-Y.positionScreen.x)*(X.positionScreen.y-Y.positionScreen.y)-(aa.positionScreen.y-Y.positionScreen.y)*(X.positionScreen.x-Y.positionScreen.x),ka===THREE.DoubleSide||ta===(ka===THREE.FrontSide))q===s?(qa=
new THREE.RenderableFace3,r.push(qa),s++,q++,p=qa):p=r[q++],p.v1.copy(Y),p.v2.copy(X),p.v3.copy(aa);else continue;else continue;else if(P instanceof THREE.Face4)if(Y=m[P.a],X=m[P.b],aa=m[P.c],qa=m[P.d],!0===Y.visible&&!0===X.visible&&!0===aa.visible&&!0===qa.visible)if(ta=0>(qa.positionScreen.x-Y.positionScreen.x)*(X.positionScreen.y-Y.positionScreen.y)-(qa.positionScreen.y-Y.positionScreen.y)*(X.positionScreen.x-Y.positionScreen.x)||0>(X.positionScreen.x-aa.positionScreen.x)*(qa.positionScreen.y-
aa.positionScreen.y)-(X.positionScreen.y-aa.positionScreen.y)*(qa.positionScreen.x-aa.positionScreen.x),ka===THREE.DoubleSide||ta===(ka===THREE.FrontSide)){if(w===A){var rb=new THREE.RenderableFace4;u.push(rb);A++;w++;p=rb}else p=u[w++];p.v1.copy(Y);p.v2.copy(X);p.v3.copy(aa);p.v4.copy(qa)}else continue;else continue;p.normalWorld.copy(P.normal);!1===ta&&(ka===THREE.BackSide||ka===THREE.DoubleSide)&&p.normalWorld.negate();Ra.multiplyVector3(p.normalWorld);p.centroidWorld.copy(P.centroid);Ia.multiplyVector3(p.centroidWorld);
p.centroidScreen.copy(p.centroidWorld);O.multiplyVector3(p.centroidScreen);aa=P.vertexNormals;Y=0;for(X=aa.length;Y<X;Y++)qa=p.vertexNormalsWorld[Y],qa.copy(aa[Y]),!1===ta&&(ka===THREE.BackSide||ka===THREE.DoubleSide)&&qa.negate(),Ra.multiplyVector3(qa);p.vertexNormalsLength=aa.length;Y=0;for(X=Xa.length;Y<X;Y++)if(qa=Xa[Y][ha],void 0!==qa){ka=0;for(aa=qa.length;ka<aa;ka++)p.uvs[Y][ka]=qa[ka]}p.color=P.color;p.material=Ta;p.z=p.centroidScreen.z;J.elements.push(p)}}else if(ea instanceof THREE.Line){M.multiply(O,
Ia);ha=ea.geometry.vertices;Y=b();Y.positionScreen.copy(ha[0]);M.multiplyVector4(Y.positionScreen);Ia=ea.type===THREE.LinePieces?2:1;oa=1;for(P=ha.length;oa<P;oa++)Y=b(),Y.positionScreen.copy(ha[oa]),M.multiplyVector4(Y.positionScreen),0<(oa+1)%Ia||(X=m[k-2],L.copy(Y.positionScreen),N.copy(X.positionScreen),!0===d(L,N)&&(L.multiplyScalar(1/L.w),N.multiplyScalar(1/N.w),v===C?(Ka=new THREE.RenderableLine,t.push(Ka),C++,v++,x=Ka):x=t[v++],x.v1.positionScreen.copy(L),x.v2.positionScreen.copy(N),x.z=Math.max(L.z,
N.z),x.material=ea.material,J.elements.push(x)))}g=0;for(n=J.sprites.length;g<n;g++)ea=J.sprites[g].object,Ia=ea.matrixWorld,ea instanceof THREE.Particle&&(G.set(Ia.elements[12],Ia.elements[13],Ia.elements[14],1),O.multiplyVector4(G),G.z/=G.w,0<G.z&&1>G.z&&(D===H?(ga=new THREE.RenderableParticle,E.push(ga),H++,D++,z=ga):z=E[D++],z.object=ea,z.x=G.x/G.w,z.y=G.y/G.w,z.z=G.z,z.rotation=ea.rotation.z,z.scale.x=ea.scale.x*Math.abs(z.x-(G.x+h.projectionMatrix.elements[0])/(G.w+h.projectionMatrix.elements[12])),
z.scale.y=ea.scale.y*Math.abs(z.y-(G.y+h.projectionMatrix.elements[5])/(G.w+h.projectionMatrix.elements[13])),z.material=ea.material,J.elements.push(z)));!0===Q&&J.elements.sort(c);return J}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),f=Math.cos(a.z/2),e=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f-e*g*h):"YXZ"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*
h-e*g*f,this.w=c*d*f+e*g*h):"ZXY"===b?(this.x=e*d*f-c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f-e*g*h):"ZYX"===b?(this.x=e*d*f-c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h-e*g*f,this.w=c*d*f+e*g*h):"YZX"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h-e*g*f,this.w=c*d*f-e*g*h):"XZY"===b&&(this.x=e*d*f-c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f+e*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],f=b[1],e=b[5],g=b[9],h=b[2],j=b[6],b=b[10],k=c+e+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(j-g)*c,this.y=(d-h)*c,this.z=(f-a)*c):c>e&&c>b?(c=2*Math.sqrt(1+c-e-b),this.w=(j-g)/c,this.x=0.25*c,this.y=(a+f)/c,this.z=(d+h)/c):e>b?(c=2*Math.sqrt(1+e-c-b),this.w=(d-h)/c,this.x=(a+f)/c,this.y=0.25*c,this.z=(g+j)/c):(c=2*Math.sqrt(1+b-c-e),this.w=(f-a)/c,this.x=(d+h)/c,this.y=(g+j)/c,this.z=0.25*c);return this},
calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,f=a.z,
e=a.w,g=b.x,h=b.y,j=b.z,k=b.w;this.x=c*k+d*j-f*h+e*g;this.y=-c*j+d*k+f*g+e*h;this.z=c*h-d*g+f*k+e*j;this.w=-c*g-d*h-f*j+e*k;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,f=this.w,e=a.x,g=a.y,h=a.z;a=a.w;this.x=b*a+f*e+c*h-d*g;this.y=c*a+f*g+d*e-b*h;this.z=d*a+f*h+b*g-c*e;this.w=f*a-b*e-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,f=a.z,e=this.x,g=this.y,h=this.z,j=this.w,k=j*c+g*f-h*d,m=j*d+h*c-e*f,n=j*f+e*d-g*c,c=-e*c-g*d-h*f;b.x=k*j+c*-e+m*-h-
n*-g;b.y=m*j+c*-g+n*-e-k*-h;b.z=n*j+c*-h+k*-g-m*-e;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,f=this.z,e=this.w,g=e*a.w+c*a.x+d*a.y+f*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=e,this.x=c,this.y=d,this.z=f,this;var h=Math.acos(g),j=Math.sqrt(1-g*g);if(0.0010>Math.abs(j))return this.w=0.5*(e+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(f+this.z),this;g=Math.sin((1-b)*h)/j;h=Math.sin(b*h)/j;this.w=e*g+this.w*h;this.x=
c*g+this.x*h;this.y=d*g+this.y*h;this.z=f*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>f?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,f=-f):c.copy(b);if(1<=Math.abs(f))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;b=Math.acos(f);var e=Math.sqrt(1-f*f);if(0.0010>Math.abs(e))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;f=Math.sin((1-d)*b)/e;d=Math.sin(d*b)/e;c.w=a.w*f+c.w*d;c.x=a.x*f+c.x*d;c.y=a.y*f+c.y*d;c.z=a.z*f+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,f,e){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=e;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,f,e,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=
this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var f=this.faces[c];b.multiplyVector3(f.normal);for(var e=0,g=f.vertexNormals.length;e<g;e++)b.multiplyVector3(f.vertexNormals[e]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,
0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,f,e,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],d=this.vertices[c.a],f=this.vertices[c.b],e=this.vertices[c.c],g.sub(e,f),h.sub(d,f),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:
c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<
b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,f;c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];f.__originalFaceNormal?f.__originalFaceNormal.copy(f.normal):
f.__originalFaceNormal=f.normal.clone();f.__originalVertexNormals||(f.__originalVertexNormals=[]);a=0;for(b=f.vertexNormals.length;a<b;a++)f.__originalVertexNormals[a]?f.__originalVertexNormals[a].copy(f.vertexNormals[a]):f.__originalVertexNormals[a]=f.vertexNormals[a].clone()}var e=new THREE.Geometry;e.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,
h=this.morphNormals[a].vertexNormals,j,k;c=0;for(d=this.faces.length;c<d;c++)f=this.faces[c],j=new THREE.Vector3,k=f instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(j),h.push(k)}g=this.morphNormals[a];e.vertices=this.morphTargets[a].vertices;e.computeFaceNormals();e.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)f=this.faces[c],j=g.faceNormals[c],k=g.vertexNormals[c],
j.copy(f.normal),f instanceof THREE.Face3?(k.a.copy(f.vertexNormals[0]),k.b.copy(f.vertexNormals[1]),k.c.copy(f.vertexNormals[2])):(k.a.copy(f.vertexNormals[0]),k.b.copy(f.vertexNormals[1]),k.c.copy(f.vertexNormals[2]),k.d.copy(f.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)f=this.faces[c],f.normal=f.__originalFaceNormal,f.vertexNormals=f.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,f,e,D){h=a.vertices[b];j=a.vertices[c];k=a.vertices[d];m=g[f];n=g[e];p=g[D];q=j.x-
h.x;r=k.x-h.x;s=j.y-h.y;w=k.y-h.y;u=j.z-h.z;A=k.z-h.z;x=n.u-m.u;v=p.u-m.u;t=n.v-m.v;C=p.v-m.v;z=1/(x*C-v*t);J.set((C*q-t*r)*z,(C*s-t*w)*z,(C*u-t*A)*z);K.set((x*r-v*q)*z,(x*w-v*s)*z,(x*A-v*u)*z);E[b].addSelf(J);E[c].addSelf(J);E[d].addSelf(J);H[b].addSelf(K);H[c].addSelf(K);H[d].addSelf(K)}var b,c,d,f,e,g,h,j,k,m,n,p,q,r,s,w,u,A,x,v,t,C,z,D,E=[],H=[],J=new THREE.Vector3,K=new THREE.Vector3,G=new THREE.Vector3,O=new THREE.Vector3,M=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)E[b]=new THREE.Vector3,
H[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)e=this.faces[b],g=this.faceVertexUvs[0][b],e instanceof THREE.Face3?a(this,e.a,e.b,e.c,0,1,2):e instanceof THREE.Face4&&(a(this,e.a,e.b,e.d,0,1,3),a(this,e.b,e.c,e.d,1,2,3));var I=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){e=this.faces[b];for(d=0;d<e.vertexNormals.length;d++)M.copy(e.vertexNormals[d]),f=e[I[d]],D=E[f],G.copy(D),G.subSelf(M.multiplyScalar(M.dot(D))).normalize(),O.cross(e.vertexNormals[d],D),f=O.dot(H[f]),f=0>f?
-1:1,e.vertexTangents[d]=new THREE.Vector4(G.x,G.y,G.z,f)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,f=this.vertices.length;d<f;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z?b.z=a.z:a.z>c.z&&
(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,f=Math.pow(10,4),e,g,h,j;e=0;for(g=this.vertices.length;e<g;e++)d=this.vertices[e],d=[Math.round(d.x*f),Math.round(d.y*f),Math.round(d.z*f)].join("_"),
void 0===a[d]?(a[d]=e,b.push(this.vertices[e]),c[e]=b.length-1):c[e]=c[a[d]];e=0;for(g=this.faces.length;e<g;e++)if(a=this.faces[e],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(f=3;0<f;f--)if(d.indexOf(a["abcd"[f]])!==f){d.splice(f,1);this.faces[e]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(j=this.faceVertexUvs[d][e])&&
j.splice(f,1);this.faces[e].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};THREE.GeometryIdCount=0;THREE.GeometryLibrary=[];THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.attributes={};this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix4,b.extractRotation(a),b.multiplyVector3Array(c),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),
max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,f,e=0,g=a.length;e<g;e+=3)c=a[e],d=a[e+1],f=a[e+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),f<b.min.z?b.min.z=f:f>b.max.z&&(b.max.z=f);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var a=this.attributes.position.array;
if(a){for(var b,c=0,d,f,e=0,g=a.length;e<g;e+=3)b=a[e],d=a[e+1],f=a[e+2],b=b*b+d*d+f*f,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var f=this.offsets,e=this.attributes.index.array,
g=this.attributes.position.array,h=this.attributes.normal.array,j,k,m,n,p,q,r=new THREE.Vector3,s=new THREE.Vector3,w=new THREE.Vector3,u=new THREE.Vector3,A=new THREE.Vector3;c=0;for(d=f.length;c<d;++c){b=f[c].start;j=f[c].count;var x=f[c].index;a=b;for(b+=j;a<b;a+=3)j=x+e[a],k=x+e[a+1],m=x+e[a+2],n=g[3*j],p=g[3*j+1],q=g[3*j+2],r.set(n,p,q),n=g[3*k],p=g[3*k+1],q=g[3*k+2],s.set(n,p,q),n=g[3*m],p=g[3*m+1],q=g[3*m+2],w.set(n,p,q),u.sub(w,s),A.sub(r,s),u.crossSelf(A),h[3*j]+=u.x,h[3*j+1]+=u.y,h[3*j+
2]+=u.z,h[3*k]+=u.x,h[3*k+1]+=u.y,h[3*k+2]+=u.z,h[3*m]+=u.x,h[3*m+1]+=u.y,h[3*m+2]+=u.z}a=0;for(b=h.length;a<b;a+=3)n=h[a],p=h[a+1],q=h[a+2],c=1/Math.sqrt(n*n+p*p+q*q),h[a]*=c,h[a+1]*=c,h[a+2]*=c;this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a){ba.x=d[3*a];ba.y=d[3*a+1];ba.z=d[3*a+2];$.copy(ba);ga=j[a];N.copy(ga);N.subSelf(ba.multiplyScalar(ba.dot(ga))).normalize();T.cross($,ga);S=T.dot(k[a]);Q=0>S?-1:1;h[4*a]=N.x;h[4*a+1]=N.y;h[4*a+2]=N.z;h[4*a+3]=Q}if(void 0===this.attributes.index||
void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,f=this.attributes.uv.array,e=c.length/3;if(void 0===this.attributes.tangent){var g=4*e;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,
j=[],k=[],g=0;g<e;g++)j[g]=new THREE.Vector3,k[g]=new THREE.Vector3;var m,n,p,q,r,s,w,u,A,x,v,t,C,z,D,e=new THREE.Vector3,g=new THREE.Vector3,E,H,J,K,G,O,M,I=this.offsets;J=0;for(K=I.length;J<K;++J){H=I[J].start;G=I[J].count;var L=I[J].index;E=H;for(H+=G;E<H;E+=3)G=L+b[E],O=L+b[E+1],M=L+b[E+2],m=c[3*G],n=c[3*G+1],p=c[3*G+2],q=c[3*O],r=c[3*O+1],s=c[3*O+2],w=c[3*M],u=c[3*M+1],A=c[3*M+2],x=f[2*G],v=f[2*G+1],t=f[2*O],C=f[2*O+1],z=f[2*M],D=f[2*M+1],q-=m,m=w-m,r-=n,n=u-n,s-=p,p=A-p,t-=x,x=z-x,C-=v,v=D-
v,D=1/(t*v-x*C),e.set((v*q-C*m)*D,(v*r-C*n)*D,(v*s-C*p)*D),g.set((t*m-x*q)*D,(t*n-x*r)*D,(t*p-x*s)*D),j[G].addSelf(e),j[O].addSelf(e),j[M].addSelf(e),k[G].addSelf(g),k[O].addSelf(g),k[M].addSelf(g)}var N=new THREE.Vector3,T=new THREE.Vector3,ba=new THREE.Vector3,$=new THREE.Vector3,Q,ga,S;J=0;for(K=I.length;J<K;++J){H=I[J].start;G=I[J].count;L=I[J].index;E=H;for(H+=G;E<H;E+=3)G=L+b[E],O=L+b[E+1],M=L+b[E+2],a(G),a(O),a(M)}this.tangentsNeedUpdate=this.hasTangents=!0}}};
THREE.Spline=function(a){function b(a,b,c,d,f,e,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,e,g,h,j,k,m,n,p;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;e=Math.floor(f);g=f-e;c[0]=0===e?e:e-1;c[1]=e;c[2]=e>this.points.length-2?this.points.length-1:e+1;c[3]=e>this.points.length-3?this.points.length-1:
e+2;k=this.points[c[0]];m=this.points[c[1]];n=this.points[c[2]];p=this.points[c[3]];h=g*g;j=g*h;d.x=b(k.x,m.x,n.x,p.x,g,h,j);d.y=b(k.y,m.y,n.y,p.y,g,h,j);d.z=b(k.z,m.z,n.z,p.z,g,h,j);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,f=b=b=0,e=new THREE.Vector3,g=new THREE.Vector3,h=[],j=0;h[0]=0;a||(a=100);c=this.points.length*a;e.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),j+=g.distanceTo(e),e.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=f&&(h[b]=j,f=b);h[h.length]=j;return{chunks:h,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,f,e,g,h=[],j=new THREE.Vector3,m=this.getLength();h.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];g=Math.ceil(a*c/m.total);f=(b-1)/(this.points.length-1);e=b/(this.points.length-1);for(c=1;c<g-1;c++)d=f+c*(1/g)*(e-f),d=this.getPoint(d),
h.push(j.copy(d).clone());h.push(j.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};
THREE.OrthographicCamera=function(a,b,c,d,f,e){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==f?f:0.1;this.far=void 0!==e?e:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,e){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=e;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=
!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,f){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==f?f:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function f(a,f,e,h,j,k,w){var u=e.toLowerCase().endsWith(".dds"),A=b+"/"+e;if(u){var x=THREE.ImageUtils.loadCompressedTexture(A);a[f]=x}else x=document.createElement("canvas"),a[f]=new THREE.Texture(x);a[f].sourceFile=e;h&&(a[f].repeat.set(h[0],h[1]),1!==h[0]&&(a[f].wrapS=THREE.RepeatWrapping),1!==h[1]&&(a[f].wrapT=THREE.RepeatWrapping));j&&a[f].offset.set(j[0],j[1]);k&&(e={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping},void 0!==e[k[0]]&&(a[f].wrapS=e[k[0]]),void 0!==e[k[1]]&&(a[f].wrapT=e[k[1]]));w&&(a[f].anisotropy=w);if(!u){var v=a[f];a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);v.image.width=a;v.image.height=b;v.image.getContext("2d").drawImage(this,0,0,a,b)}else v.image=this;v.needsUpdate=!0};a.crossOrigin=g.crossOrigin;a.src=A}}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",
j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?h="MeshPhongMaterial":"basic"===k&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)j.transparent=a.transparent;void 0!==a.depthTest&&(j.depthTest=a.depthTest);void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite);void 0!==a.visible&&(j.visible=a.visible);void 0!==
a.flipSided&&(j.side=THREE.BackSide);void 0!==a.doubleSided&&(j.side=THREE.DoubleSide);void 0!==a.wireframe&&(j.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors));a.colorDiffuse?j.color=e(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor);a.colorSpecular&&(j.specular=e(a.colorSpecular));a.colorAmbient&&(j.ambient=e(a.colorAmbient));a.transparency&&(j.opacity=a.transparency);a.specularCoef&&(j.shininess=
a.specularCoef);a.mapDiffuse&&b&&f(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&f(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&f(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&f(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&f(j,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(j.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(h.uniforms),k.tNormal.value=j.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(k.tDiffuse.value=j.map,k.enableDiffuse.value=!0),j.specularMap&&(k.tSpecular.value=j.specularMap,k.enableSpecular.value=!0),j.lightMap&&(k.tAO.value=j.lightMap,
k.enableAO.value=!0),k.uDiffuseColor.value.setHex(j.color),k.uSpecularColor.value.setHex(j.specular),k.uAmbientColor.value.setHex(j.ambient),k.uShininess.value=j.shininess,void 0!==j.opacity&&(k.uOpacity.value=j.opacity),j=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:k,lights:!0,fog:!0})):j=new THREE[h](j);void 0!==a.DbgName&&(j.name=a.DbgName);return j}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.BinaryLoader.prototype.load=function(a,b,c,d){c=c?c:this.extractUrlBase(a);d=d?d:this.extractUrlBase(a);var f=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,f)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,f,e){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,f,d,e)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,f){var e=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;e.onreadystatechange=function(){if(4==e.readyState)if(200==e.status||0==e.status){var c=e.response;void 0===c&&(c=(new Uint8Array(e.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+e.status+"]");else 3==e.readyState?f&&(0==h&&(h=e.getResponseHeader("Content-Length")),f({total:h,loaded:e.responseText.length})):
2==e.readyState&&(h=e.getResponseHeader("Content-Length"))};e.open("GET",g,!0);e.responseType="arraybuffer";e.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var f=function(b){var c,f,j,k,m,n,p,q,r,s,w,u,A,x,v;function t(a){return a%4?4-a%4:0}function C(a,b){return(new Uint8Array(a,b,1))[0]}function z(a,b){return(new Uint32Array(a,b,1))[0]}function D(b,c){var d,f,e,g,h,j,m,k,u=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){f=u[3*d];e=u[3*d+1];g=u[3*d+2];h=L[2*f];f=L[2*f+1];j=L[2*e];m=L[2*e+1];e=L[2*g];k=L[2*g+1];g=O.faceVertexUvs[0];var n=[];n.push(new THREE.UV(h,f));n.push(new THREE.UV(j,m));n.push(new THREE.UV(e,
k));g.push(n)}}function E(b,c){var d,f,e,g,h,j,m,k,u,n,p=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){f=p[4*d];e=p[4*d+1];g=p[4*d+2];h=p[4*d+3];j=L[2*f];f=L[2*f+1];m=L[2*e];u=L[2*e+1];k=L[2*g];n=L[2*g+1];g=L[2*h];e=L[2*h+1];h=O.faceVertexUvs[0];var q=[];q.push(new THREE.UV(j,f));q.push(new THREE.UV(m,u));q.push(new THREE.UV(k,n));q.push(new THREE.UV(g,e));h.push(q)}}function H(b,c,d){var f,e,g,h;c=new Uint32Array(a,c,3*b);var j=new Uint16Array(a,d,b);for(d=0;d<b;d++)f=c[3*d],e=c[3*d+1],g=c[3*d+2],h=
j[d],O.faces.push(new THREE.Face3(f,e,g,null,null,h))}function J(b,c,d){var f,e,g,h,j;c=new Uint32Array(a,c,4*b);var m=new Uint16Array(a,d,b);for(d=0;d<b;d++)f=c[4*d],e=c[4*d+1],g=c[4*d+2],h=c[4*d+3],j=m[d],O.faces.push(new THREE.Face4(f,e,g,h,null,null,j))}function K(b,c,d,f){var e,g,h,j,m,k,u;c=new Uint32Array(a,c,3*b);d=new Uint32Array(a,d,3*b);var n=new Uint16Array(a,f,b);for(f=0;f<b;f++){e=c[3*f];g=c[3*f+1];h=c[3*f+2];m=d[3*f];k=d[3*f+1];u=d[3*f+2];j=n[f];var p=I[3*k],q=I[3*k+1];k=I[3*k+2];var t=
I[3*u],r=I[3*u+1];u=I[3*u+2];O.faces.push(new THREE.Face3(e,g,h,[new THREE.Vector3(I[3*m],I[3*m+1],I[3*m+2]),new THREE.Vector3(p,q,k),new THREE.Vector3(t,r,u)],null,j))}}function G(b,c,d,f){var e,g,h,j,m,k,u,n,p;c=new Uint32Array(a,c,4*b);d=new Uint32Array(a,d,4*b);var q=new Uint16Array(a,f,b);for(f=0;f<b;f++){e=c[4*f];g=c[4*f+1];h=c[4*f+2];j=c[4*f+3];k=d[4*f];u=d[4*f+1];n=d[4*f+2];p=d[4*f+3];m=q[f];var t=I[3*u],r=I[3*u+1];u=I[3*u+2];var v=I[3*n],s=I[3*n+1];n=I[3*n+2];var x=I[3*p],A=I[3*p+1];p=I[3*
p+2];O.faces.push(new THREE.Face4(e,g,h,j,[new THREE.Vector3(I[3*k],I[3*k+1],I[3*k+2]),new THREE.Vector3(t,r,u),new THREE.Vector3(v,s,n),new THREE.Vector3(x,A,p)],null,m))}}var O=this,M=0,I=[],L=[],N,T,ba;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(O,d,b);v=a;T=M;b=new Uint8Array(v,T,12);s="";for(A=0;12>A;A++)s+=String.fromCharCode(b[T+A]);c=C(v,T+12);C(v,T+13);C(v,T+14);C(v,T+15);f=C(v,T+16);j=C(v,T+17);k=C(v,T+18);m=C(v,T+19);n=z(v,T+20);p=z(v,T+20+4);q=z(v,T+20+8);r=z(v,T+20+
12);s=z(v,T+20+16);w=z(v,T+20+20);u=z(v,T+20+24);A=z(v,T+20+28);b=z(v,T+20+32);x=z(v,T+20+36);v=z(v,T+20+40);M+=c;T=3*f+m;ba=4*f+m;N=r*T;c=s*(T+3*j);f=w*(T+3*k);m=u*(T+3*j+3*k);T=A*ba;j=b*(ba+4*j);k=x*(ba+4*k);ba=M;var M=new Float32Array(a,M,3*n),$,Q,ga,S;for($=0;$<n;$++)Q=M[3*$],ga=M[3*$+1],S=M[3*$+2],O.vertices.push(new THREE.Vector3(Q,ga,S));n=M=ba+3*n*Float32Array.BYTES_PER_ELEMENT;if(p){M=new Int8Array(a,M,3*p);for(ba=0;ba<p;ba++)$=M[3*ba],Q=M[3*ba+1],ga=M[3*ba+2],I.push($/127,Q/127,ga/127)}M=
n+3*p*Int8Array.BYTES_PER_ELEMENT;p=M+=t(3*p);if(q){M=new Float32Array(a,M,2*q);for(n=0;n<q;n++)ba=M[2*n],$=M[2*n+1],L.push(ba,$)}q=M=p+2*q*Float32Array.BYTES_PER_ELEMENT;N=q+N+t(2*r);p=N+c+t(2*s);c=p+f+t(2*w);f=c+m+t(2*u);T=f+T+t(2*A);m=T+j+t(2*b);j=m+k+t(2*x);w&&(k=p+3*w*Uint32Array.BYTES_PER_ELEMENT,H(w,p,k+3*w*Uint32Array.BYTES_PER_ELEMENT),D(w,k));u&&(w=c+3*u*Uint32Array.BYTES_PER_ELEMENT,k=w+3*u*Uint32Array.BYTES_PER_ELEMENT,K(u,c,w,k+3*u*Uint32Array.BYTES_PER_ELEMENT),D(u,k));x&&(u=m+4*x*Uint32Array.BYTES_PER_ELEMENT,
J(x,m,u+4*x*Uint32Array.BYTES_PER_ELEMENT),E(x,u));v&&(x=j+4*v*Uint32Array.BYTES_PER_ELEMENT,u=x+4*v*Uint32Array.BYTES_PER_ELEMENT,G(v,j,x,u+4*v*Uint32Array.BYTES_PER_ELEMENT),E(v,u));r&&H(r,q,q+3*r*Uint32Array.BYTES_PER_ELEMENT);s&&(r=N+3*s*Uint32Array.BYTES_PER_ELEMENT,K(s,N,r,r+3*s*Uint32Array.BYTES_PER_ELEMENT));A&&J(A,f,f+4*A*Uint32Array.BYTES_PER_ELEMENT);b&&(s=T+4*b*Uint32Array.BYTES_PER_ELEMENT,G(b,T,s,s+4*b*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals();
THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};f.prototype=Object.create(THREE.Geometry.prototype);b(new f(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,f){var e=new XMLHttpRequest,g=0;e.onreadystatechange=function(){if(e.readyState===e.DONE)if(200===e.status||0===e.status){if(e.responseText){var h=JSON.parse(e.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+e.status+"]");else e.readyState===e.LOADING?f&&(0===g&&(g=e.getResponseHeader("Content-Length")),
f({total:g,loaded:e.responseText.length})):e.readyState===e.HEADERS_RECEIVED&&(g=e.getResponseHeader("Content-Length"))};e.open("GET",b,!0);e.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,f=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);var e,g,h,j,k,m,n,p,q,r,s,w,u,A,x=a.faces;q=a.vertices;var v=a.normals,t=a.colors,C=0;for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&C++;for(e=0;e<C;e++)d.faceUvs[e]=[],d.faceVertexUvs[e]=[];c=0;for(j=q.length;c<j;)k=new THREE.Vector3,k.x=q[c++]*f,k.y=q[c++]*f,k.z=q[c++]*f,d.vertices.push(k);c=0;for(j=x.length;c<j;){q=x[c++];k=q&1;h=q&2;e=q&4;g=q&8;n=q&16;
m=q&32;r=q&64;q&=128;k?(s=new THREE.Face4,s.a=x[c++],s.b=x[c++],s.c=x[c++],s.d=x[c++],k=4):(s=new THREE.Face3,s.a=x[c++],s.b=x[c++],s.c=x[c++],k=3);h&&(h=x[c++],s.materialIndex=h);h=d.faces.length;if(e)for(e=0;e<C;e++)w=a.uvs[e],p=x[c++],A=w[2*p],p=w[2*p+1],d.faceUvs[e][h]=new THREE.UV(A,p);if(g)for(e=0;e<C;e++){w=a.uvs[e];u=[];for(g=0;g<k;g++)p=x[c++],A=w[2*p],p=w[2*p+1],u[g]=new THREE.UV(A,p);d.faceVertexUvs[e][h]=u}n&&(n=3*x[c++],g=new THREE.Vector3,g.x=v[n++],g.y=v[n++],g.z=v[n],s.normal=g);if(m)for(e=
0;e<k;e++)n=3*x[c++],g=new THREE.Vector3,g.x=v[n++],g.y=v[n++],g.z=v[n],s.vertexNormals.push(g);r&&(m=x[c++],m=new THREE.Color(t[m]),s.color=m);if(q)for(e=0;e<k;e++)m=x[c++],m=new THREE.Color(t[m]),s.vertexColors.push(m);d.faces.push(s)}if(a.skinWeights){c=0;for(j=a.skinWeights.length;c<j;c+=2)x=a.skinWeights[c],v=a.skinWeights[c+1],d.skinWeights.push(new THREE.Vector4(x,v,0,0))}if(a.skinIndices){c=0;for(j=a.skinIndices.length;c<j;c+=2)x=a.skinIndices[c],v=a.skinIndices[c+1],d.skinIndices.push(new THREE.Vector4(x,
v,0,0))}d.bones=a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){c=0;for(j=a.morphTargets.length;c<j;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];t=d.morphTargets[c].vertices;C=a.morphTargets[c].vertices;x=0;for(v=C.length;x<v;x+=3)q=new THREE.Vector3,q.x=C[x]*f,q.y=C[x+1]*f,q.z=C[x+2]*f,t.push(q)}}if(void 0!==a.morphColors){c=0;for(j=a.morphColors.length;c<j;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=
[];v=d.morphColors[c].colors;t=a.morphColors[c].colors;f=0;for(x=t.length;f<x;f+=3)C=new THREE.Color(16755200),C.setRGB(t[f],t[f+1],t[f+2]),v.push(C)}}d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};
THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};
THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(null===b.path){var d=a.split("/");d.pop();b.path=1>d.length?".":d.join("/")}d=new XMLHttpRequest;d.addEventListener("load",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),f):b.dispatchEvent({type:"error",message:"Invalid file ["+a+"]"})},!1);d.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,
!0);d.send(null);var f=new THREE.LoadingMonitor;f.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})});f.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,f=void 0!==a.scale?1/a.scale:1;if(a.materials){d.materials=[];for(var e=0;e<a.materials.length;++e){var g=a.materials[e],h=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},j=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},k=function(a,d,f,e,g,m){a[d]=new THREE.Texture;a[d].sourceFile=
f;e&&(a[d].repeat.set(e[0],e[1]),1!==e[0]&&(a[d].wrapS=THREE.RepeatWrapping),1!==e[1]&&(a[d].wrapT=THREE.RepeatWrapping));g&&a[d].offset.set(g[0],g[1]);m&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==e[m[0]]&&(a[d].wrapS=e[m[0]]),void 0!==e[m[1]]&&(a[d].wrapT=e[m[1]]));var k=a[d];a=new THREE.ImageLoader;a.addEventListener("load",function(a){a=a.content;if(!h(a.width)||!h(a.height)){var b=j(a.width),c=j(a.height);k.image=document.createElement("canvas");k.image.width=
b;k.image.height=c;k.image.getContext("2d").drawImage(a,0,0,b,c)}else k.image=a;k.needsUpdate=!0});a.crossOrigin=c.crossOrigin;a.load(c.path+"/"+f);b&&b.add(a)},m=function(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]},n="MeshLambertMaterial",p={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(g.shading){var q=g.shading.toLowerCase();"phong"===q?n="MeshPhongMaterial":"basic"===q&&(n="MeshBasicMaterial")}void 0!==g.blending&&void 0!==THREE[g.blending]&&
(p.blending=THREE[g.blending]);if(void 0!==g.transparent||1>g.opacity)p.transparent=g.transparent;void 0!==g.depthTest&&(p.depthTest=g.depthTest);void 0!==g.depthWrite&&(p.depthWrite=g.depthWrite);void 0!==g.vertexColors&&("face"==g.vertexColors?p.vertexColors=THREE.FaceColors:g.vertexColors&&(p.vertexColors=THREE.VertexColors));g.colorDiffuse?p.color=m(g.colorDiffuse):g.DbgColor&&(p.color=g.DbgColor);g.colorSpecular&&(p.specular=m(g.colorSpecular));g.colorAmbient&&(p.ambient=m(g.colorAmbient));g.transparency&&
(p.opacity=g.transparency);g.specularCoef&&(p.shininess=g.specularCoef);void 0!==g.visible&&(p.visible=g.visible);void 0!==g.flipSided&&(p.side=THREE.BackSide);void 0!==g.doubleSided&&(p.side=THREE.DoubleSide);void 0!==g.wireframe&&(p.wireframe=g.wireframe);g.mapDiffuse&&k(p,"map",g.mapDiffuse,g.mapDiffuseRepeat,g.mapDiffuseOffset,g.mapDiffuseWrap);g.mapLight&&k(p,"lightMap",g.mapLight,g.mapLightRepeat,g.mapLightOffset,g.mapLightWrap);g.mapBump&&k(p,"bumpMap",g.mapBump,g.mapBumpRepeat,g.mapBumpOffset,
g.mapBumpWrap);g.mapNormal&&k(p,"normalMap",g.mapNormal,g.mapNormalRepeat,g.mapNormalOffset,g.mapNormalWrap);g.mapSpecular&&k(p,"specularMap",g.mapSpecular,g.mapSpecularRepeat,g.mapSpecularOffset,g.mapSpecularWrap);g.mapNormal?(k=THREE.ShaderUtils.lib.normal,m=THREE.UniformsUtils.clone(k.uniforms),m.tNormal.value=p.normalMap,g.mapNormalFactor&&m.uNormalScale.value.set(g.mapNormalFactor,g.mapNormalFactor),p.map&&(m.tDiffuse.value=p.map,m.enableDiffuse.value=!0),p.specularMap&&(m.tSpecular.value=p.specularMap,
m.enableSpecular.value=!0),p.lightMap&&(m.tAO.value=p.lightMap,m.enableAO.value=!0),m.uDiffuseColor.value.setHex(p.color),m.uSpecularColor.value.setHex(p.specular),m.uAmbientColor.value.setHex(p.ambient),m.uShininess.value=p.shininess,void 0!==p.opacity&&(m.uOpacity.value=p.opacity),p=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:m,lights:!0,fog:!0})):p=new THREE[n](p);void 0!==g.DbgName&&(p.name=g.DbgName);d.materials[e]=p}}var g=a.faces,r=a.vertices,
p=a.normals,k=a.colors,m=0;if(a.uvs)for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&m++;for(e=0;e<m;e++)d.faceUvs[e]=[],d.faceVertexUvs[e]=[];n=0;for(q=r.length;n<q;){var s=new THREE.Vector3;s.x=r[n++]*f;s.y=r[n++]*f;s.z=r[n++]*f;d.vertices.push(s)}n=0;for(q=g.length;n<q;){var w=g[n++],u=w&2,e=w&4,A=w&8,x=w&16,r=w&32,v=w&64,s=w&128;if(w&1){w=new THREE.Face4;w.a=g[n++];w.b=g[n++];w.c=g[n++];w.d=g[n++];var t=4}else w=new THREE.Face3,w.a=g[n++],w.b=g[n++],w.c=g[n++],t=3;u&&(u=g[n++],w.materialIndex=u);var C=
d.faces.length;if(e)for(e=0;e<m;e++){var z=a.uvs[e],u=g[n++],D=z[2*u],u=z[2*u+1];d.faceUvs[e][C]=new THREE.UV(D,u)}if(A)for(e=0;e<m;e++){for(var z=a.uvs[e],A=[],E=0;E<t;E++)u=g[n++],D=z[2*u],u=z[2*u+1],A[E]=new THREE.UV(D,u);d.faceVertexUvs[e][C]=A}x&&(x=3*g[n++],u=new THREE.Vector3,u.x=p[x++],u.y=p[x++],u.z=p[x],w.normal=u);if(r)for(e=0;e<t;e++)x=3*g[n++],u=new THREE.Vector3,u.x=p[x++],u.y=p[x++],u.z=p[x],w.vertexNormals.push(u);v&&(r=g[n++],w.color=new THREE.Color(k[r]));if(s)for(e=0;e<t;e++)r=
g[n++],w.vertexColors.push(new THREE.Color(k[r]));d.faces.push(w)}if(a.skinWeights){e=0;for(g=a.skinWeights.length;e<g;e+=2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[e],a.skinWeights[e+1],0,0))}if(a.skinIndices){e=0;for(g=a.skinIndices.length;e<g;e+=2)p=0,d.skinIndices.push(new THREE.Vector4(a.skinIndices[e],a.skinIndices[e+1],p,0))}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){e=0;for(g=a.morphTargets.length;e<g;e++){d.morphTargets[e]={};d.morphTargets[e].name=a.morphTargets[e].name;
d.morphTargets[e].vertices=[];p=d.morphTargets[e].vertices;k=a.morphTargets[e].vertices;u=0;for(m=k.length;u<m;u+=3)s=new THREE.Vector3,s.x=k[u]*f,s.y=k[u+1]*f,s.z=k[u+2]*f,p.push(s)}}if(a.morphColors){e=0;for(g=a.morphColors.length;e<g;e++){d.morphColors[e]={};d.morphColors[e].name=a.morphColors[e].name;d.morphColors[e].colors=[];f=d.morphColors[e].colors;k=a.morphColors[e].colors;p=0;for(m=k.length;p<m;p+=3)n=new THREE.Color(16755200),n.setRGB(k[p],k[p+1],k[p+2]),f.push(n)}}d.computeCentroids();
d.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var f=JSON.parse(d.responseText);c.parse(f,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:k+"/"+a}function f(a,b){for(var c in b)if(void 0===L.objects[c]){var d=b[c],e=null;if(void 0!==d.geometry){if(D=L.geometries[d.geometry])e=!1,E=L.materials[d.materials[0]],(e=E instanceof THREE.ShaderMaterial)&&D.computeTangents(),A=d.position,x=d.rotation,v=d.quaternion,t=d.scale,w=d.matrix,v=0,0===d.materials.length&&(E=new THREE.MeshFaceMaterial),1<d.materials.length&&(E=new THREE.MeshFaceMaterial),d.morph?
(e=new THREE.MorphAnimMesh(D,E),void 0!==d.duration&&(e.duration=d.duration),void 0!==d.time&&(e.time=d.time),void 0!==d.mirroredLoop&&(e.mirroredLoop=d.mirroredLoop),E.morphNormals&&D.computeMorphNormals()):e=new THREE.Mesh(D,E),e.name=c,w?(e.matrixAutoUpdate=!1,e.matrix.set(w[0],w[1],w[2],w[3],w[4],w[5],w[6],w[7],w[8],w[9],w[10],w[11],w[12],w[13],w[14],w[15])):(e.position.set(A[0],A[1],A[2]),v?(e.quaternion.set(v[0],v[1],v[2],v[3]),e.useQuaternion=!0):e.rotation.set(x[0],x[1],x[2]),e.scale.set(t[0],
t[1],t[2])),e.visible=d.visible,e.castShadow=d.castShadow,e.receiveShadow=d.receiveShadow,a.add(e),L.objects[c]=e}else A=d.position,x=d.rotation,v=d.quaternion,t=d.scale,v=0,e=new THREE.Object3D,e.name=c,e.position.set(A[0],A[1],A[2]),v?(e.quaternion.set(v[0],v[1],v[2],v[3]),e.useQuaternion=!0):e.rotation.set(x[0],x[1],x[2]),e.scale.set(t[0],t[1],t[2]),e.visible=void 0!==d.visible?d.visible:!1,a.add(e),L.objects[c]=e,L.empties[c]=e;if(e){if(void 0!==d.properties)for(var g in d.properties)e.properties[g]=
d.properties[g];void 0!==d.children&&f(e,d.children)}}}function e(a){return function(b){L.geometries[a]=b;f(L.scene,N.objects);G-=1;j.onLoadComplete();h()}}function g(a){return function(b){L.geometries[a]=b}}function h(){j.callbackProgress({totalModels:M,totalTextures:I,loadedModels:M-G,loadedTextures:I-O},L);j.onLoadProgress();0===G&&0===O&&b(L)}var j=this,k=THREE.Loader.prototype.extractUrlBase(c),m,n,p,q,r,s,w,u,A,x,v,t,C,z,D,E,H,J,K,G,O,M,I,L,N=a;for(C in this.geometryHandlerMap)this.geometryHandlerMap[C].loaderObject=
new this.geometryHandlerMap[C].loaderClass;O=G=0;L={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(N.transform&&(a=N.transform.position,c=N.transform.rotation,C=N.transform.scale,a&&L.scene.position.set(a[0],a[1],a[2]),c&&L.scene.rotation.set(c[0],c[1],c[2]),C&&L.scene.scale.set(C[0],C[1],C[2]),a||c||C))L.scene.updateMatrix(),L.scene.updateMatrixWorld();a=function(a){return function(){O-=a;h();j.onLoadComplete()}};for(q in N.cameras)C=
N.cameras[q],"perspective"===C.type?H=new THREE.PerspectiveCamera(C.fov,C.aspect,C.near,C.far):"ortho"===C.type&&(H=new THREE.OrthographicCamera(C.left,C.right,C.top,C.bottom,C.near,C.far)),A=C.position,c=C.target,C=C.up,H.position.set(A[0],A[1],A[2]),H.target=new THREE.Vector3(c[0],c[1],c[2]),C&&H.up.set(C[0],C[1],C[2]),L.cameras[q]=H;for(p in N.lights)c=N.lights[p],q=void 0!==c.color?c.color:16777215,H=void 0!==c.intensity?c.intensity:1,"directional"===c.type?(A=c.direction,u=new THREE.DirectionalLight(q,
H),u.position.set(A[0],A[1],A[2]),u.position.normalize()):"point"===c.type?(A=c.position,u=c.distance,u=new THREE.PointLight(q,H,u),u.position.set(A[0],A[1],A[2])):"ambient"===c.type&&(u=new THREE.AmbientLight(q)),L.scene.add(u),L.lights[p]=u;for(r in N.fogs)p=N.fogs[r],"linear"===p.type?J=new THREE.Fog(0,p.near,p.far):"exp2"===p.type&&(J=new THREE.FogExp2(0,p.density)),C=p.color,J.color.setRGB(C[0],C[1],C[2]),L.fogs[r]=J;L.cameras&&N.defaults.camera&&(L.currentCamera=L.cameras[N.defaults.camera]);
L.fogs&&N.defaults.fog&&(L.scene.fog=L.fogs[N.defaults.fog]);C=N.defaults.bgcolor;L.bgColor=new THREE.Color;L.bgColor.setRGB(C[0],C[1],C[2]);L.bgColorAlpha=N.defaults.bgalpha;for(m in N.geometries)r=N.geometries[m],r.type in this.geometryHandlerMap&&(G+=1,j.onLoadStart());M=G;for(m in N.geometries)if(r=N.geometries[m],"cube"===r.type)D=new THREE.CubeGeometry(r.width,r.height,r.depth,r.segmentsWidth,r.segmentsHeight,r.segmentsDepth,null,r.flipped,r.sides),L.geometries[m]=D;else if("plane"===r.type)D=
new THREE.PlaneGeometry(r.width,r.height,r.segmentsWidth,r.segmentsHeight),L.geometries[m]=D;else if("sphere"===r.type)D=new THREE.SphereGeometry(r.radius,r.segmentsWidth,r.segmentsHeight),L.geometries[m]=D;else if("cylinder"===r.type)D=new THREE.CylinderGeometry(r.topRad,r.botRad,r.height,r.radSegs,r.heightSegs),L.geometries[m]=D;else if("torus"===r.type)D=new THREE.TorusGeometry(r.radius,r.tube,r.segmentsR,r.segmentsT),L.geometries[m]=D;else if("icosahedron"===r.type)D=new THREE.IcosahedronGeometry(r.radius,
r.subdivisions),L.geometries[m]=D;else if(r.type in this.geometryHandlerMap){J={};for(K in r)"type"!==K&&"url"!==K&&(J[K]=r[K]);this.geometryHandlerMap[r.type].loaderObject.load(d(r.url,N.urlBaseType),e(m),J)}else"embedded"===r.type&&(r=N.embeds[r.id],r.metadata=N.metadata,r&&this.geometryHandlerMap.ascii.loaderObject.createModel(r,g(m),""));for(s in N.textures)if(m=N.textures[s],m.url instanceof Array){O+=m.url.length;for(K=0;K<m.url.length;K++)j.onLoadStart()}else O+=1,j.onLoadStart();I=O;for(s in N.textures){m=
N.textures[s];void 0!==m.mapping&&void 0!==THREE[m.mapping]&&(m.mapping=new THREE[m.mapping]);if(m.url instanceof Array){r=m.url.length;J=[];for(K=0;K<r;K++)J[K]=d(m.url[K],N.urlBaseType);K=(K=J[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(J,m.mapping,a(r)):THREE.ImageUtils.loadTextureCube(J,m.mapping,a(r))}else K=m.url.toLowerCase().endsWith(".dds"),r=d(m.url,N.urlBaseType),J=a(1),K=K?THREE.ImageUtils.loadCompressedTexture(r,m.mapping,J):THREE.ImageUtils.loadTexture(r,m.mapping,
J),void 0!==THREE[m.minFilter]&&(K.minFilter=THREE[m.minFilter]),void 0!==THREE[m.magFilter]&&(K.magFilter=THREE[m.magFilter]),m.anisotropy&&(K.anisotropy=m.anisotropy),m.repeat&&(K.repeat.set(m.repeat[0],m.repeat[1]),1!==m.repeat[0]&&(K.wrapS=THREE.RepeatWrapping),1!==m.repeat[1]&&(K.wrapT=THREE.RepeatWrapping)),m.offset&&K.offset.set(m.offset[0],m.offset[1]),m.wrap&&(r={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==r[m.wrap[0]]&&(K.wrapS=r[m.wrap[0]]),void 0!==r[m.wrap[1]]&&
(K.wrapT=r[m.wrap[1]]));L.textures[s]=K}for(n in N.materials){w=N.materials[n];for(z in w.parameters)"envMap"===z||"map"===z||"lightMap"===z||"bumpMap"===z?w.parameters[z]=L.textures[w.parameters[z]]:"shading"===z?w.parameters[z]="flat"===w.parameters[z]?THREE.FlatShading:THREE.SmoothShading:"side"===z?w.parameters[z]="double"==w.parameters[z]?THREE.DoubleSide:"back"==w.parameters[z]?THREE.BackSide:THREE.FrontSide:"blending"===z?w.parameters[z]=w.parameters[z]in THREE?THREE[w.parameters[z]]:THREE.NormalBlending:
"combine"===z?w.parameters[z]="MixOperation"==w.parameters[z]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===z?"face"==w.parameters[z]?w.parameters[z]=THREE.FaceColors:w.parameters[z]&&(w.parameters[z]=THREE.VertexColors):"wrapRGB"===z&&(s=w.parameters[z],w.parameters[z]=new THREE.Vector3(s[0],s[1],s[2]));void 0!==w.parameters.opacity&&1>w.parameters.opacity&&(w.parameters.transparent=!0);w.parameters.normalMap?(s=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(s.uniforms),m=
w.parameters.color,K=w.parameters.specular,r=w.parameters.ambient,J=w.parameters.shininess,a.tNormal.value=L.textures[w.parameters.normalMap],w.parameters.normalScale&&a.uNormalScale.value.set(w.parameters.normalScale[0],w.parameters.normalScale[1]),w.parameters.map&&(a.tDiffuse.value=w.parameters.map,a.enableDiffuse.value=!0),w.parameters.envMap&&(a.tCube.value=w.parameters.envMap,a.enableReflection.value=!0,a.uReflectivity.value=w.parameters.reflectivity),w.parameters.lightMap&&(a.tAO.value=w.parameters.lightMap,
a.enableAO.value=!0),w.parameters.specularMap&&(a.tSpecular.value=L.textures[w.parameters.specularMap],a.enableSpecular.value=!0),w.parameters.displacementMap&&(a.tDisplacement.value=L.textures[w.parameters.displacementMap],a.enableDisplacement.value=!0,a.uDisplacementBias.value=w.parameters.displacementBias,a.uDisplacementScale.value=w.parameters.displacementScale),a.uDiffuseColor.value.setHex(m),a.uSpecularColor.value.setHex(K),a.uAmbientColor.value.setHex(r),a.uShininess.value=J,w.parameters.opacity&&
(a.uOpacity.value=w.parameters.opacity),E=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:a,lights:!0,fog:!0})):E=new THREE[w.type](w.parameters);L.materials[n]=E}f(L.scene,N.objects);j.callbackSync(L);h()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){THREE.MaterialLibrary.push(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&"number"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.deallocate=function(){var a=THREE.MaterialLibrary.indexOf(this);-1!==a&&THREE.MaterialLibrary.splice(a,1)};THREE.MaterialIdCount=0;THREE.MaterialLibrary=[];THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};
THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=
this.morphNormals;return a};
THREE.Texture=function(a,b,c,d,f,e,g,h,j){THREE.TextureLibrary.push(this);this.id=THREE.TextureIdCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f?f:THREE.LinearFilter;this.minFilter=void 0!==e?e:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=
new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a},deallocate:function(){var a=THREE.TextureLibrary.indexOf(this);
-1!==a&&THREE.TextureLibrary.splice(a,1)}};THREE.TextureIdCount=0;THREE.TextureLibrary=[];THREE.CompressedTexture=function(a,b,c,d,f,e,g,h,j,k){THREE.Texture.call(this,null,e,g,h,j,k,d,f);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,f,e,g,h,j,k){THREE.Texture.call(this,null,e,g,h,j,k,d,f);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};
THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,f,e;if(void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,f=c.rotq,e=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),b.useQuaternion=!0,void 0!==e?b.scale.set(e[0],e[1],e[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;a=0;for(var b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,f=0,e=a.morphTargets.length;f<e;f++){var g=a.morphTargets[f].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];f<h.start&&(h.start=f);f>h.end&&(h.end=f);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?
a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite({}));a.color.copy(this.color);a.map=this.map;a.blending=this.blending;a.useScreenCoordinates=this.useScreenCoordinates;a.mergeWith3D=this.mergeWith3D;a.affectedByDistance=this.affectedByDistance;a.scaleByViewport=this.scaleByViewport;a.alignment=this.alignment;a.rotation3d.copy(this.rotation3d);a.rotation=this.rotation;a.opacity=this.opacity;a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);THREE.Object3D.prototype.clone.call(this,
a);return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);
THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.CanvasRenderer=function(a){function b(a){A!==a&&(A=s.globalAlpha=a)}function c(a){x!==a&&(a===THREE.NormalBlending?s.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?s.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(s.globalCompositeOperation="darker"),x=a)}function d(a){v!==a&&(v=s.strokeStyle=a)}function f(a){t!==a&&(t=s.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);a=a||{};var e=this,g,h,j,k=new THREE.Projector,m=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),n,p,q,r,s=m.getContext("2d"),w=new THREE.Color(0),u=0,A=1,x=0,v=null,t=null,C=null,z=null,D=null,E,H,J,K,G=new THREE.RenderableVertex,O=new THREE.RenderableVertex,M,I,L,N,T,ba,$,Q,ga,S,ta,oa,P=new THREE.Color,ha=new THREE.Color,Y=new THREE.Color,X=new THREE.Color,ka=new THREE.Color,aa=new THREE.Color,ea=new THREE.Color,Ia={},Ra={},Ka,Wa,qa,Xa,kb,Ta,gb,rb,Rb,fb,bb=new THREE.Rectangle,La=new THREE.Rectangle,za=new THREE.Rectangle,xb=!1,Fa=new THREE.Color,sb=new THREE.Color,
hb=new THREE.Color,ua=new THREE.Vector3,ib,ab,Ya,Ga,yb,l;a=16;ib=document.createElement("canvas");ib.width=ib.height=2;ab=ib.getContext("2d");ab.fillStyle="rgba(0,0,0,1)";ab.fillRect(0,0,2,2);Ya=ab.getImageData(0,0,2,2);Ga=Ya.data;yb=document.createElement("canvas");yb.width=yb.height=a;l=yb.getContext("2d");l.translate(-a/2,-a/2);l.scale(a,a);a--;this.domElement=m;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){n=a;p=b;q=Math.floor(n/
2);r=Math.floor(p/2);m.width=n;m.height=p;bb.set(-q,-r,q,r);La.set(-q,-r,q,r);A=1;x=0;D=z=C=t=v=null};this.setClearColor=function(a,b){w.copy(a);u=void 0!==b?b:1;La.set(-q,-r,q,r)};this.setClearColorHex=function(a,b){w.setHex(a);u=void 0!==b?b:1;La.set(-q,-r,q,r)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){s.setTransform(1,0,0,-1,q,r);!1===La.isEmpty()&&(La.minSelf(bb),La.inflate(2),1>u&&s.clearRect(Math.floor(La.getX()),Math.floor(La.getY()),Math.floor(La.getWidth()),Math.floor(La.getHeight())),
0<u&&(c(THREE.NormalBlending),b(1),f("rgba("+Math.floor(255*w.r)+","+Math.floor(255*w.g)+","+Math.floor(255*w.b)+","+u+")"),s.fillRect(Math.floor(La.getX()),Math.floor(La.getY()),Math.floor(La.getWidth()),Math.floor(La.getHeight()))),La.empty())};this.render=function(a,m){function u(a,b,c){for(var d=0,f=j.length;d<f;d++){var e=j[d],g=e.color;if(e instanceof THREE.DirectionalLight){var h=e.matrixWorld.getPosition().normalize(),l=b.dot(h);0>=l||(l*=e.intensity,c.r+=g.r*l,c.g+=g.g*l,c.b+=g.b*l)}else e instanceof
THREE.PointLight&&(h=e.matrixWorld.getPosition(),l=b.dot(ua.sub(h,a).normalize()),0>=l||(l*=0==e.distance?1:1-Math.min(a.distanceTo(h)/e.distance,1),0!=l&&(l*=e.intensity,c.r+=g.r*l,c.g+=g.g*l,c.b+=g.b*l)))}}function n(a,d,f,g,h,l,j,k){e.info.render.vertices+=3;e.info.render.faces++;b(k.opacity);c(k.blending);M=a.positionScreen.x;I=a.positionScreen.y;L=d.positionScreen.x;N=d.positionScreen.y;T=f.positionScreen.x;ba=f.positionScreen.y;p(M,I,L,N,T,ba);(k instanceof THREE.MeshLambertMaterial||k instanceof
THREE.MeshPhongMaterial)&&null===k.map&&null===k.map?(aa.copy(k.color),ea.copy(k.emissive),k.vertexColors===THREE.FaceColors&&(aa.r*=j.color.r,aa.g*=j.color.g,aa.b*=j.color.b),!0===xb?!1===k.wireframe&&k.shading==THREE.SmoothShading&&3==j.vertexNormalsLength?(ha.r=Y.r=X.r=Fa.r,ha.g=Y.g=X.g=Fa.g,ha.b=Y.b=X.b=Fa.b,u(j.v1.positionWorld,j.vertexNormalsWorld[0],ha),u(j.v2.positionWorld,j.vertexNormalsWorld[1],Y),u(j.v3.positionWorld,j.vertexNormalsWorld[2],X),ha.r=ha.r*aa.r+ea.r,ha.g=ha.g*aa.g+ea.g,ha.b=
ha.b*aa.b+ea.b,Y.r=Y.r*aa.r+ea.r,Y.g=Y.g*aa.g+ea.g,Y.b=Y.b*aa.b+ea.b,X.r=X.r*aa.r+ea.r,X.g=X.g*aa.g+ea.g,X.b=X.b*aa.b+ea.b,ka.r=0.5*(Y.r+X.r),ka.g=0.5*(Y.g+X.g),ka.b=0.5*(Y.b+X.b),qa=Fc(ha,Y,X,ka),A(M,I,L,N,T,ba,0,0,1,0,0,1,qa)):(P.r=Fa.r,P.g=Fa.g,P.b=Fa.b,u(j.centroidWorld,j.normalWorld,P),P.r=P.r*aa.r+ea.r,P.g=P.g*aa.g+ea.g,P.b=P.b*aa.b+ea.b,!0===k.wireframe?v(P,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):x(P)):!0===k.wireframe?v(k.color,k.wireframeLinewidth,k.wireframeLinecap,
k.wireframeLinejoin):x(k.color)):k instanceof THREE.MeshBasicMaterial||k instanceof THREE.MeshLambertMaterial||k instanceof THREE.MeshPhongMaterial?null!==k.map?k.map.mapping instanceof THREE.UVMapping&&(Xa=j.uvs[0],Ab(M,I,L,N,T,ba,Xa[g].u,Xa[g].v,Xa[h].u,Xa[h].v,Xa[l].u,Xa[l].v,k.map)):null!==k.envMap?k.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=m.matrixWorldInverse,ua.copy(j.vertexNormalsWorld[g]),kb=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*a.elements[8])+0.5,Ta=0.5*(ua.x*
a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,ua.copy(j.vertexNormalsWorld[h]),gb=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*a.elements[8])+0.5,rb=0.5*(ua.x*a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,ua.copy(j.vertexNormalsWorld[l]),Rb=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*a.elements[8])+0.5,fb=0.5*(ua.x*a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,Ab(M,I,L,N,T,ba,kb,Ta,gb,rb,Rb,fb,k.envMap)):(P.copy(k.color),k.vertexColors===THREE.FaceColors&&(P.r*=
j.color.r,P.g*=j.color.g,P.b*=j.color.b),!0===k.wireframe?v(P,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):x(P)):k instanceof THREE.MeshDepthMaterial?(Ka=m.near,Wa=m.far,ha.r=ha.g=ha.b=1-hc(a.positionScreen.z,Ka,Wa),Y.r=Y.g=Y.b=1-hc(d.positionScreen.z,Ka,Wa),X.r=X.g=X.b=1-hc(f.positionScreen.z,Ka,Wa),ka.r=0.5*(Y.r+X.r),ka.g=0.5*(Y.g+X.g),ka.b=0.5*(Y.b+X.b),qa=Fc(ha,Y,X,ka),A(M,I,L,N,T,ba,0,0,1,0,0,1,qa)):k instanceof THREE.MeshNormalMaterial&&(P.r=w(j.normalWorld.x),P.g=w(j.normalWorld.y),
P.b=w(j.normalWorld.z),!0===k.wireframe?v(P,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):x(P))}function p(a,b,c,d,f,e){s.beginPath();s.moveTo(a,b);s.lineTo(c,d);s.lineTo(f,e);s.closePath()}function t(a,b,c,d,f,e,g,h){s.beginPath();s.moveTo(a,b);s.lineTo(c,d);s.lineTo(f,e);s.lineTo(g,h);s.closePath()}function v(a,b,c,f){C!==b&&(C=s.lineWidth=b);z!==c&&(z=s.lineCap=c);D!==f&&(D=s.lineJoin=f);d(a.getContextStyle());s.stroke();za.inflate(2*b)}function x(a){f(a.getContextStyle());s.fill()}
function Ab(a,b,c,d,e,g,h,l,j,k,m,u,n){if(!(n instanceof THREE.DataTexture||void 0===n.image||0==n.image.width)){if(!0===n.needsUpdate){var p=n.wrapS==THREE.RepeatWrapping,Ab=n.wrapT==THREE.RepeatWrapping;Ia[n.id]=s.createPattern(n.image,!0===p&&!0===Ab?"repeat":!0===p&&!1===Ab?"repeat-x":!1===p&&!0===Ab?"repeat-y":"no-repeat");n.needsUpdate=!1}void 0===Ia[n.id]?f("rgba(0,0,0,1)"):f(Ia[n.id]);var p=n.offset.x/n.repeat.x,Ab=n.offset.y/n.repeat.y,q=n.image.width*n.repeat.x,t=n.image.height*n.repeat.y;
h=(h+p)*q;l=(1-l+Ab)*t;c-=a;d-=b;e-=a;g-=b;j=(j+p)*q-h;k=(1-k+Ab)*t-l;m=(m+p)*q-h;u=(1-u+Ab)*t-l;p=j*u-m*k;0===p?(void 0===Ra[n.id]&&(b=document.createElement("canvas"),b.width=n.image.width,b.height=n.image.height,b=b.getContext("2d"),b.drawImage(n.image,0,0),Ra[n.id]=b.getImageData(0,0,n.image.width,n.image.height).data),b=Ra[n.id],h=4*(Math.floor(h)+Math.floor(l)*n.image.width),P.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),x(P)):(p=1/p,n=(u*c-k*e)*p,k=(u*d-k*g)*p,c=(j*e-m*c)*p,d=(j*g-m*d)*p,a=a-n*h-
c*l,h=b-k*h-d*l,s.save(),s.transform(n,k,c,d,a,h),s.fill(),s.restore())}}function A(a,b,c,d,f,e,g,h,l,j,k,m,u){var n,p;n=u.width-1;p=u.height-1;g*=n;h*=p;c-=a;d-=b;f-=a;e-=b;l=l*n-g;j=j*p-h;k=k*n-g;m=m*p-h;p=1/(l*m-k*j);n=(m*c-j*f)*p;j=(m*d-j*e)*p;c=(l*f-k*c)*p;d=(l*e-k*d)*p;a=a-n*g-c*h;b=b-j*g-d*h;s.save();s.transform(n,j,c,d,a,b);s.clip();s.drawImage(u,0,0);s.restore()}function Fc(a,b,c,d){Ga[0]=255*a.r|0;Ga[1]=255*a.g|0;Ga[2]=255*a.b|0;Ga[4]=255*b.r|0;Ga[5]=255*b.g|0;Ga[6]=255*b.b|0;Ga[8]=255*
c.r|0;Ga[9]=255*c.g|0;Ga[10]=255*c.b|0;Ga[12]=255*d.r|0;Ga[13]=255*d.g|0;Ga[14]=255*d.b|0;ab.putImageData(Ya,0,0);l.drawImage(ib,0,0);return yb}function hc(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function w(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Yb(a,b){var c=b.x-a.x,d=b.y-a.y,f=c*c+d*d;0!==f&&(f=1/Math.sqrt(f),c*=f,d*=f,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===m instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{var Zb,Hc,la,ca;
!0===this.autoClear?this.clear():s.setTransform(1,0,0,-1,q,r);e.info.render.vertices=0;e.info.render.faces=0;g=k.projectScene(a,m,this.sortObjects,this.sortElements);h=g.elements;j=g.lights;xb=0<j.length;if(!0===xb){Fa.setRGB(0,0,0);sb.setRGB(0,0,0);hb.setRGB(0,0,0);Zb=0;for(Hc=j.length;Zb<Hc;Zb++){ca=j[Zb];var ma=ca.color;ca instanceof THREE.AmbientLight?(Fa.r+=ma.r,Fa.g+=ma.g,Fa.b+=ma.b):ca instanceof THREE.DirectionalLight?(sb.r+=ma.r,sb.g+=ma.g,sb.b+=ma.b):ca instanceof THREE.PointLight&&(hb.r+=
ma.r,hb.g+=ma.g,hb.b+=ma.b)}}Zb=0;for(Hc=h.length;Zb<Hc;Zb++)if(la=h[Zb],ca=la.material,!(void 0===ca||!1===ca.visible)){za.empty();if(la instanceof THREE.RenderableParticle){E=la;E.x*=q;E.y*=r;var ma=E,Za=la;b(ca.opacity);c(ca.blending);var tb=void 0,ub=void 0,lb=void 0,mb=void 0,mc=la=void 0,Wc=void 0;ca instanceof THREE.ParticleBasicMaterial?null===ca.map?(lb=Za.object.scale.x,mb=Za.object.scale.y,lb*=Za.scale.x*q,mb*=Za.scale.y*r,za.set(ma.x-lb,ma.y-mb,ma.x+lb,ma.y+mb),!1!==bb.intersects(za)&&
(f(ca.color.getContextStyle()),s.save(),s.translate(ma.x,ma.y),s.rotate(-Za.rotation),s.scale(lb,mb),s.fillRect(-1,-1,2,2),s.restore())):(la=ca.map.image,mc=la.width>>1,Wc=la.height>>1,lb=Za.scale.x*q,mb=Za.scale.y*r,tb=lb*mc,ub=mb*Wc,za.set(ma.x-tb,ma.y-ub,ma.x+tb,ma.y+ub),!1!==bb.intersects(za)&&(s.save(),s.translate(ma.x,ma.y),s.rotate(-Za.rotation),s.scale(lb,-mb),s.translate(-mc,-Wc),s.drawImage(la,0,0),s.restore())):ca instanceof THREE.ParticleCanvasMaterial&&(tb=Za.scale.x*q,ub=Za.scale.y*
r,za.set(ma.x-tb,ma.y-ub,ma.x+tb,ma.y+ub),!1!==bb.intersects(za)&&(d(ca.color.getContextStyle()),f(ca.color.getContextStyle()),s.save(),s.translate(ma.x,ma.y),s.rotate(-Za.rotation),s.scale(tb,ub),ca.program(s),s.restore()))}else la instanceof THREE.RenderableLine?(E=la.v1,H=la.v2,E.positionScreen.x*=q,E.positionScreen.y*=r,H.positionScreen.x*=q,H.positionScreen.y*=r,za.addPoint(E.positionScreen.x,E.positionScreen.y),za.addPoint(H.positionScreen.x,H.positionScreen.y),!0===bb.intersects(za)&&(ma=E,
Za=H,b(ca.opacity),c(ca.blending),s.beginPath(),s.moveTo(ma.positionScreen.x,ma.positionScreen.y),s.lineTo(Za.positionScreen.x,Za.positionScreen.y),ca instanceof THREE.LineBasicMaterial&&(ma=ca.linewidth,C!==ma&&(C=s.lineWidth=ma),ma=ca.linecap,z!==ma&&(z=s.lineCap=ma),ma=ca.linejoin,D!==ma&&(D=s.lineJoin=ma),d(ca.color.getContextStyle()),s.stroke(),za.inflate(2*ca.linewidth)))):la instanceof THREE.RenderableFace3?(E=la.v1,H=la.v2,J=la.v3,E.positionScreen.x*=q,E.positionScreen.y*=r,H.positionScreen.x*=
q,H.positionScreen.y*=r,J.positionScreen.x*=q,J.positionScreen.y*=r,!0===ca.overdraw&&(Yb(E.positionScreen,H.positionScreen),Yb(H.positionScreen,J.positionScreen),Yb(J.positionScreen,E.positionScreen)),za.add3Points(E.positionScreen.x,E.positionScreen.y,H.positionScreen.x,H.positionScreen.y,J.positionScreen.x,J.positionScreen.y),!0===bb.intersects(za)&&n(E,H,J,0,1,2,la,ca,a)):la instanceof THREE.RenderableFace4&&(E=la.v1,H=la.v2,J=la.v3,K=la.v4,E.positionScreen.x*=q,E.positionScreen.y*=r,H.positionScreen.x*=
q,H.positionScreen.y*=r,J.positionScreen.x*=q,J.positionScreen.y*=r,K.positionScreen.x*=q,K.positionScreen.y*=r,G.positionScreen.copy(H.positionScreen),O.positionScreen.copy(K.positionScreen),!0===ca.overdraw&&(Yb(E.positionScreen,H.positionScreen),Yb(H.positionScreen,K.positionScreen),Yb(K.positionScreen,E.positionScreen),Yb(J.positionScreen,G.positionScreen),Yb(J.positionScreen,O.positionScreen)),za.addPoint(E.positionScreen.x,E.positionScreen.y),za.addPoint(H.positionScreen.x,H.positionScreen.y),
za.addPoint(J.positionScreen.x,J.positionScreen.y),za.addPoint(K.positionScreen.x,K.positionScreen.y),!0===bb.intersects(za)&&(ma=E,Za=H,tb=J,ub=K,lb=G,mb=O,mc=a,e.info.render.vertices+=4,e.info.render.faces++,b(ca.opacity),c(ca.blending),void 0!==ca.map&&null!==ca.map||void 0!==ca.envMap&&null!==ca.envMap?(n(ma,Za,ub,0,1,3,la,ca,mc),n(lb,tb,mb,1,2,3,la,ca,mc)):(M=ma.positionScreen.x,I=ma.positionScreen.y,L=Za.positionScreen.x,N=Za.positionScreen.y,T=tb.positionScreen.x,ba=tb.positionScreen.y,$=ub.positionScreen.x,
Q=ub.positionScreen.y,ga=lb.positionScreen.x,S=lb.positionScreen.y,ta=mb.positionScreen.x,oa=mb.positionScreen.y,ca instanceof THREE.MeshLambertMaterial||ca instanceof THREE.MeshPhongMaterial?(aa.copy(ca.color),ea.copy(ca.emissive),ca.vertexColors===THREE.FaceColors&&(aa.r*=la.color.r,aa.g*=la.color.g,aa.b*=la.color.b),!0===xb?!1===ca.wireframe&&ca.shading==THREE.SmoothShading&&4==la.vertexNormalsLength?(ha.r=Y.r=X.r=ka.r=Fa.r,ha.g=Y.g=X.g=ka.g=Fa.g,ha.b=Y.b=X.b=ka.b=Fa.b,u(la.v1.positionWorld,la.vertexNormalsWorld[0],
ha),u(la.v2.positionWorld,la.vertexNormalsWorld[1],Y),u(la.v4.positionWorld,la.vertexNormalsWorld[3],X),u(la.v3.positionWorld,la.vertexNormalsWorld[2],ka),ha.r=ha.r*aa.r+ea.r,ha.g=ha.g*aa.g+ea.g,ha.b=ha.b*aa.b+ea.b,Y.r=Y.r*aa.r+ea.r,Y.g=Y.g*aa.g+ea.g,Y.b=Y.b*aa.b+ea.b,X.r=X.r*aa.r+ea.r,X.g=X.g*aa.g+ea.g,X.b=X.b*aa.b+ea.b,ka.r=ka.r*aa.r+ea.r,ka.g=ka.g*aa.g+ea.g,ka.b=ka.b*aa.b+ea.b,qa=Fc(ha,Y,X,ka),p(M,I,L,N,$,Q),A(M,I,L,N,$,Q,0,0,1,0,0,1,qa),p(ga,S,T,ba,ta,oa),A(ga,S,T,ba,ta,oa,1,0,1,1,0,1,qa)):(P.r=
Fa.r,P.g=Fa.g,P.b=Fa.b,u(la.centroidWorld,la.normalWorld,P),P.r=P.r*aa.r+ea.r,P.g=P.g*aa.g+ea.g,P.b=P.b*aa.b+ea.b,t(M,I,L,N,T,ba,$,Q),!0===ca.wireframe?v(P,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):x(P)):(P.r=aa.r+ea.r,P.g=aa.g+ea.g,P.b=aa.b+ea.b,t(M,I,L,N,T,ba,$,Q),!0===ca.wireframe?v(P,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):x(P))):ca instanceof THREE.MeshBasicMaterial?(P.copy(ca.color),ca.vertexColors===THREE.FaceColors&&(P.r*=la.color.r,P.g*=la.color.g,
P.b*=la.color.b),t(M,I,L,N,T,ba,$,Q),!0===ca.wireframe?v(P,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):x(P)):ca instanceof THREE.MeshNormalMaterial?(P.r=w(la.normalWorld.x),P.g=w(la.normalWorld.y),P.b=w(la.normalWorld.z),t(M,I,L,N,T,ba,$,Q),!0===ca.wireframe?v(P,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):x(P)):ca instanceof THREE.MeshDepthMaterial&&(Ka=m.near,Wa=m.far,ha.r=ha.g=ha.b=1-hc(ma.positionScreen.z,Ka,Wa),Y.r=Y.g=Y.b=1-hc(Za.positionScreen.z,Ka,Wa),
X.r=X.g=X.b=1-hc(ub.positionScreen.z,Ka,Wa),ka.r=ka.g=ka.b=1-hc(tb.positionScreen.z,Ka,Wa),qa=Fc(ha,Y,X,ka),p(M,I,L,N,$,Q),A(M,I,L,N,$,Q,0,0,1,0,0,1,qa),p(ga,S,T,ba,ta,oa),A(ga,S,T,ba,ta,oa,1,0,1,1,0,1,qa)))));La.addRectangle(za)}s.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 mPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)f[c]=d[c];return f},clone:function(a){var b,c,d,f={};for(b in a)for(c in f[b]={},a[b])d=a[b][c],f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",
THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var f in d.attributes){var e=d.attributes[f];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var g=1;"v2"===e.type?g=2:"v3"===e.type?g=3:"v4"===e.type?g=4:"c"===e.type&&(g=3);e.size=g;e.array=new Float32Array(c*g);e.buffer=l.createBuffer();e.buffer.belongsToAttribute=f;e.needsUpdate=!0}a.__webglCustomAttributesList.push(e)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function e(a){var b,
c,d;for(b in a.attributes)d="index"===b?l.ELEMENT_ARRAY_BUFFER:l.ARRAY_BUFFER,c=a.attributes[b],c.buffer=l.createBuffer(),l.bindBuffer(d,c.buffer),l.bufferData(d,c.array,l.STATIC_DRAW)}function g(a,b,c){var d,f,e,g,h=a.vertices;g=h.length;var j=a.colors,k=j.length,m=a.__vertexArray,u=a.__colorArray,n=a.__sortArray,p=a.verticesNeedUpdate,q=a.colorsNeedUpdate,t=a.__webglCustomAttributesList;if(c.sortParticles){ib.copy(ua);ib.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)f=h[d],ab.copy(f),ib.multiplyVector3(ab),
n[d]=[ab.z,d];n.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)f=h[n[d][1]],e=3*d,m[e]=f.x,m[e+1]=f.y,m[e+2]=f.z;for(d=0;d<k;d++)e=3*d,f=j[n[d][1]],u[e]=f.r,u[e+1]=f.g,u[e+2]=f.b;if(t){j=0;for(k=t.length;j<k;j++)if(h=t[j],void 0===h.boundTo||"vertices"===h.boundTo)if(e=0,f=h.value.length,1===h.size)for(d=0;d<f;d++)g=n[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<f;d++)g=n[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,e+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<f;d++)g=
n[d][1],g=h.value[g],h.array[e]=g.r,h.array[e+1]=g.g,h.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=n[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,e+=3;else if(4===h.size)for(d=0;d<f;d++)g=n[d][1],g=h.value[g],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,h.array[e+3]=g.w,e+=4}}else{if(p)for(d=0;d<g;d++)f=h[d],e=3*d,m[e]=f.x,m[e+1]=f.y,m[e+2]=f.z;if(q)for(d=0;d<k;d++)f=j[d],e=3*d,u[e]=f.r,u[e+1]=f.g,u[e+2]=f.b;if(t){j=0;for(k=t.length;j<k;j++)if(h=t[j],h.needsUpdate&&(void 0===
h.boundTo||"vertices"===h.boundTo))if(f=h.value.length,e=0,1===h.size)for(d=0;d<f;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,e+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.r,h.array[e+1]=g.g,h.array[e+2]=g.b,e+=3;else for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,e+=3;else if(4===h.size)for(d=0;d<f;d++)g=h.value[d],h.array[e]=g.x,h.array[e+1]=g.y,h.array[e+2]=g.z,h.array[e+
3]=g.w,e+=4}}if(p||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,m,b);if(q||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,u,b);if(t){j=0;for(k=t.length;j<k;j++)if(h=t[j],h.needsUpdate||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b)}}function h(a,b,c){var d=a.attributes,f=d.index,e=d.position,g=d.normal,h=d.uv,j=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==
f&&(l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.buffer),l.bufferData(l.ELEMENT_ARRAY_BUFFER,f.array,b));a.verticesNeedUpdate&&void 0!==e&&(l.bindBuffer(l.ARRAY_BUFFER,e.buffer),l.bufferData(l.ARRAY_BUFFER,e.array,b));a.normalsNeedUpdate&&void 0!==g&&(l.bindBuffer(l.ARRAY_BUFFER,g.buffer),l.bufferData(l.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==j&&(l.bindBuffer(l.ARRAY_BUFFER,j.buffer),
l.bufferData(l.ARRAY_BUFFER,j.array,b));a.tangentsNeedUpdate&&void 0!==d&&(l.bindBuffer(l.ARRAY_BUFFER,d.buffer),l.bufferData(l.ARRAY_BUFFER,d.array,b));if(c)for(var k in a.attributes)delete a.attributes[k].array}function j(a,b){return b.z-a.z}function k(a,b){return b[1]-a[1]}function m(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)ka=P=null,Y=X=Ra=Ia=Ta=kb=Ka=-1,Ga=!0,a[d].render(b,c,Fa,sb),ka=P=null,Y=X=Ra=Ia=Ta=kb=Ka=-1,Ga=!0}function n(a,b,c,d,f,e,g,h){var j,l,k,m;b?(l=a.length-1,m=b=-1):
(l=0,b=a.length,m=1);for(var u=l;u!==b;u+=m)if(j=a[u],j.render){l=j.object;k=j.buffer;if(h)j=h;else{j=j[c];if(!j)continue;g&&S.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst);S.setDepthTest(j.depthTest);S.setDepthWrite(j.depthWrite);z(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}S.setMaterialFaces(j);k instanceof THREE.BufferGeometry?S.renderBufferDirect(d,f,e,j,k,l):S.renderBuffer(d,f,e,j,k,l)}}function p(a,b,c,d,f,e,g){for(var h,j,l=0,k=a.length;l<k;l++)if(h=a[l],j=
h.object,j.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&S.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);S.setDepthTest(h.depthTest);S.setDepthWrite(h.depthWrite);z(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}S.renderImmediateObject(c,d,f,h,j)}}function q(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function r(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function s(a){for(var b in a.attributes)a.attributes[b].needsUpdate=
!1}function w(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function u(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function A(a,b,c,d,f){ea=0;d.needsUpdate&&(d.program&&S.deallocateMaterial(d),S.initMaterial(d,b,c,f),d.needsUpdate=!1);d.morphTargets&&!f.__webglMorphTargetInfluences&&(f.__webglMorphTargetInfluences=new Float32Array(S.maxMorphTargets));var e=!1,g=d.program,h=g.uniforms,j=d.uniforms;g!==P&&(l.useProgram(g),P=g,e=!0);d.id!==Y&&(Y=d.id,e=!0);if(e||a!==
ka)l.uniformMatrix4fv(h.projectionMatrix,!1,a._projectionMatrixArray),a!==ka&&(ka=a);if(d.skinning)if(lc&&f.useVertexTexture){if(null!==h.boneTexture){var k=x();l.uniform1i(h.boneTexture,k);S.setTexture(f.boneTexture,k)}}else null!==h.boneGlobalMatrices&&l.uniformMatrix4fv(h.boneGlobalMatrices,!1,f.boneMatrices);if(e){c&&d.fog&&(j.fogColor.value=c.color,c instanceof THREE.Fog?(j.fogNear.value=c.near,j.fogFar.value=c.far):c instanceof THREE.FogExp2&&(j.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||
d instanceof THREE.MeshLambertMaterial||d.lights){if(Ga){var m=0,u=0,n=0,p,q,r,v,s=yb,A=s.directional.colors,w=s.directional.positions,z=s.point.colors,D=s.point.positions,E=s.point.distances,J=s.spot.colors,K=s.spot.positions,L=s.spot.distances,I=s.spot.directions,M=s.spot.angles,N=s.spot.exponents,Q=s.hemi.skyColors,X=s.hemi.groundColors,aa=s.hemi.positions,ha=0,T=0,ga=0,ba=0;c=p=r=r=q=0;for(e=b.length;c<e;c++)k=b[c],!k.onlyShadow&&k.visible&&(p=k.color,v=k.intensity,q=k.distance,k instanceof THREE.AmbientLight?
S.gammaInput?(m+=p.r*p.r,u+=p.g*p.g,n+=p.b*p.b):(m+=p.r,u+=p.g,n+=p.b):k instanceof THREE.DirectionalLight?(q=3*ha,S.gammaInput?t(A,q,p,v*v):C(A,q,p,v),Ya.copy(k.matrixWorld.getPosition()),Ya.subSelf(k.target.matrixWorld.getPosition()),Ya.normalize(),w[q]=Ya.x,w[q+1]=Ya.y,w[q+2]=Ya.z,ha+=1):k instanceof THREE.PointLight?(r=3*T,S.gammaInput?t(z,r,p,v*v):C(z,r,p,v),v=k.matrixWorld.getPosition(),D[r]=v.x,D[r+1]=v.y,D[r+2]=v.z,E[T]=q,T+=1):k instanceof THREE.SpotLight?(r=3*ga,S.gammaInput?t(J,r,p,v*v):
C(J,r,p,v),v=k.matrixWorld.getPosition(),K[r]=v.x,K[r+1]=v.y,K[r+2]=v.z,L[ga]=q,Ya.copy(v),Ya.subSelf(k.target.matrixWorld.getPosition()),Ya.normalize(),I[r]=Ya.x,I[r+1]=Ya.y,I[r+2]=Ya.z,M[ga]=Math.cos(k.angle),N[ga]=k.exponent,ga+=1):k instanceof THREE.HemisphereLight&&(q=k.color,r=k.groundColor,p=3*ba,S.gammaInput?(v*=v,t(Q,p,q,v),t(X,p,r,v)):(C(Q,p,q,v),C(X,p,r,v)),v=k.matrixWorld.getPosition(),aa[p]=v.x,aa[p+1]=v.y,aa[p+2]=v.z,ba+=1));c=3*ha;for(e=A.length;c<e;c++)A[c]=0;c=3*T;for(e=z.length;c<
e;c++)z[c]=0;c=3*ga;for(e=J.length;c<e;c++)J[c]=0;c=3*ba;for(e=Q.length;c<e;c++)Q[c]=0;c=3*ba;for(e=X.length;c<e;c++)X[c]=0;s.directional.length=ha;s.point.length=T;s.spot.length=ga;s.hemi.length=ba;s.ambient[0]=m;s.ambient[1]=u;s.ambient[2]=n;Ga=!1}c=yb;j.ambientLightColor.value=c.ambient;j.directionalLightColor.value=c.directional.colors;j.directionalLightDirection.value=c.directional.positions;j.pointLightColor.value=c.point.colors;j.pointLightPosition.value=c.point.positions;j.pointLightDistance.value=
c.point.distances;j.spotLightColor.value=c.spot.colors;j.spotLightPosition.value=c.spot.positions;j.spotLightDistance.value=c.spot.distances;j.spotLightDirection.value=c.spot.directions;j.spotLightAngle.value=c.spot.angles;j.spotLightExponent.value=c.spot.exponents;j.hemisphereLightSkyColor.value=c.hemi.skyColors;j.hemisphereLightGroundColor.value=c.hemi.groundColors;j.hemisphereLightPosition.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof
THREE.MeshPhongMaterial){j.opacity.value=d.opacity;S.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;d.bumpMap&&(j.bumpMap.value=d.bumpMap,j.bumpScale.value=d.bumpScale);d.normalMap&&(j.normalMap.value=d.normalMap,j.normalScale.value.copy(d.normalScale));var $;d.map?$=d.map:d.specularMap?$=d.specularMap:d.normalMap?$=d.normalMap:d.bumpMap&&($=d.bumpMap);void 0!==$&&(c=$.offset,$=$.repeat,
j.offsetRepeat.value.set(c.x,c.y,$.x,$.y));j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(j.psColor.value=d.color,j.opacity.value=d.opacity,
j.size.value=d.size,j.scale.value=O.height/2,j.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(j.shininess.value=d.shininess,S.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive),j.specular.value.copyGammaToLinear(d.specular)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive,j.specular.value=d.specular),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(S.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),
j.emissive.value.copyGammaToLinear(d.emissive)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(j.mNear.value=a.near,j.mFar.value=a.far,j.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(j.opacity.value=d.opacity);if(f.receiveShadow&&!d._shadowPass&&j.shadowMatrix){c=$=0;for(e=b.length;c<e;c++)if(k=b[c],k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade))j.shadowMap.value[$]=
k.shadowMap,j.shadowMapSize.value[$]=k.shadowMapSize,j.shadowMatrix.value[$]=k.shadowMatrix,j.shadowDarkness.value[$]=k.shadowDarkness,j.shadowBias.value[$]=k.shadowBias,$++}b=d.uniformsList;j=0;for($=b.length;j<$;j++)if(e=g.uniforms[b[j][1]])if(c=b[j][0],m=c.type,k=c.value,"i"===m)l.uniform1i(e,k);else if("f"===m)l.uniform1f(e,k);else if("v2"===m)l.uniform2f(e,k.x,k.y);else if("v3"===m)l.uniform3f(e,k.x,k.y,k.z);else if("v4"===m)l.uniform4f(e,k.x,k.y,k.z,k.w);else if("c"===m)l.uniform3f(e,k.r,k.g,
k.b);else if("iv1"===m)l.uniform1iv(e,k);else if("iv"===m)l.uniform3iv(e,k);else if("fv1"===m)l.uniform1fv(e,k);else if("fv"===m)l.uniform3fv(e,k);else if("v2v"===m){void 0===c._array&&(c._array=new Float32Array(2*k.length));m=0;for(u=k.length;m<u;m++)n=2*m,c._array[n]=k[m].x,c._array[n+1]=k[m].y;l.uniform2fv(e,c._array)}else if("v3v"===m){void 0===c._array&&(c._array=new Float32Array(3*k.length));m=0;for(u=k.length;m<u;m++)n=3*m,c._array[n]=k[m].x,c._array[n+1]=k[m].y,c._array[n+2]=k[m].z;l.uniform3fv(e,
c._array)}else if("v4v"===m){void 0===c._array&&(c._array=new Float32Array(4*k.length));m=0;for(u=k.length;m<u;m++)n=4*m,c._array[n]=k[m].x,c._array[n+1]=k[m].y,c._array[n+2]=k[m].z,c._array[n+3]=k[m].w;l.uniform4fv(e,c._array)}else if("m4"===m)void 0===c._array&&(c._array=new Float32Array(16)),k.flattenToArray(c._array),l.uniformMatrix4fv(e,!1,c._array);else if("m4v"===m){void 0===c._array&&(c._array=new Float32Array(16*k.length));m=0;for(u=k.length;m<u;m++)k[m].flattenToArrayOffset(c._array,16*
m);l.uniformMatrix4fv(e,!1,c._array)}else if("t"===m){if(n=k,k=x(),l.uniform1i(e,k),n)if(n.image instanceof Array&&6===n.image.length){if(c=n,e=k,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=l.createTexture());l.activeTexture(l.TEXTURE0+e);l.bindTexture(l.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,c.flipY);e=c instanceof THREE.CompressedTexture;k=[];for(m=0;6>m;m++)S.autoScaleCubemaps&&!e?(u=k,n=m,s=c.image[m],w=
Vc,s.width<=w&&s.height<=w||(z=Math.max(s.width,s.height),A=Math.floor(s.width*w/z),w=Math.floor(s.height*w/z),z=document.createElement("canvas"),z.width=A,z.height=w,z.getContext("2d").drawImage(s,0,0,s.width,s.height,0,0,A,w),s=z),u[n]=s):k[m]=c.image[m];m=k[0];u=0===(m.width&m.width-1)&&0===(m.height&m.height-1);n=G(c.format);s=G(c.type);H(l.TEXTURE_CUBE_MAP,c,u);for(m=0;6>m;m++)if(e){w=k[m].mipmaps;z=0;for(D=w.length;z<D;z++)A=w[z],l.compressedTexImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+m,z,n,A.width,
A.height,0,A.data)}else l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,n,n,s,k[m]);c.generateMipmaps&&u&&l.generateMipmap(l.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else l.activeTexture(l.TEXTURE0+e),l.bindTexture(l.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else n instanceof THREE.WebGLRenderTargetCube?(c=n,l.activeTexture(l.TEXTURE0+k),l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture)):S.setTexture(n,k)}else if("tv"===m){void 0===c._array&&(c._array=[]);m=0;for(u=c.value.length;m<
u;m++)c._array[m]=x();l.uniform1iv(e,c._array);m=0;for(u=c.value.length;m<u;m++)n=c.value[m],k=c._array[m],n&&S.setTexture(n,k)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),l.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&l.uniformMatrix4fv(h.viewMatrix,!1,a._viewMatrixArray)}l.uniformMatrix4fv(h.modelViewMatrix,
!1,f._modelViewMatrix.elements);h.normalMatrix&&l.uniformMatrix3fv(h.normalMatrix,!1,f._normalMatrix.elements);null!==h.modelMatrix&&l.uniformMatrix4fv(h.modelMatrix,!1,f.matrixWorld.elements);return g}function x(){var a=ea;a>=tc&&console.warn("Trying to use "+a+" texture units while this GPU supports only "+tc);ea+=1;return a}function v(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function t(a,b,c,
d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function C(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function z(a,b,c){gb!==a&&(a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL),gb=a);if(a&&(rb!==b||Rb!==c))l.polygonOffset(b,c),rb=b,Rb=c}function D(a){a=a.split("\n");for(var b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function E(a,b){var c;"fragment"===a?c=l.createShader(l.FRAGMENT_SHADER):"vertex"===a&&(c=l.createShader(l.VERTEX_SHADER));l.shaderSource(c,
b);l.compileShader(c);return!l.getShaderParameter(c,l.COMPILE_STATUS)?(console.error(l.getShaderInfoLog(c)),console.error(D(b)),null):c}function H(a,b,c){c?(l.texParameteri(a,l.TEXTURE_WRAP_S,G(b.wrapS)),l.texParameteri(a,l.TEXTURE_WRAP_T,G(b.wrapT)),l.texParameteri(a,l.TEXTURE_MAG_FILTER,G(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,G(b.minFilter))):(l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_MAG_FILTER,
K(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,K(b.minFilter)));if(Sb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))l.texParameterf(a,Sb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Gc)),b.__oldAnisotropy=b.anisotropy}function J(a,b){l.bindRenderbuffer(l.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a)):b.depthBuffer&&
b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_STENCIL,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)):l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,b.width,b.height)}function K(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?l.NEAREST:l.LINEAR}function G(a){if(a===THREE.RepeatWrapping)return l.REPEAT;if(a===THREE.ClampToEdgeWrapping)return l.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return l.MIRRORED_REPEAT;
if(a===THREE.NearestFilter)return l.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return l.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return l.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return l.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return l.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return l.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return l.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return l.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return l.UNSIGNED_SHORT_5_5_5_1;
if(a===THREE.UnsignedShort565Type)return l.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return l.BYTE;if(a===THREE.ShortType)return l.SHORT;if(a===THREE.UnsignedShortType)return l.UNSIGNED_SHORT;if(a===THREE.IntType)return l.INT;if(a===THREE.UnsignedIntType)return l.UNSIGNED_INT;if(a===THREE.FloatType)return l.FLOAT;if(a===THREE.AlphaFormat)return l.ALPHA;if(a===THREE.RGBFormat)return l.RGB;if(a===THREE.RGBAFormat)return l.RGBA;if(a===THREE.LuminanceFormat)return l.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return l.LUMINANCE_ALPHA;
if(a===THREE.AddEquation)return l.FUNC_ADD;if(a===THREE.SubtractEquation)return l.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return l.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return l.ZERO;if(a===THREE.OneFactor)return l.ONE;if(a===THREE.SrcColorFactor)return l.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return l.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return l.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return l.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return l.DST_ALPHA;
if(a===THREE.OneMinusDstAlphaFactor)return l.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return l.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return l.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return l.SRC_ALPHA_SATURATE;if(void 0!==zb){if(a===THREE.RGB_S3TC_DXT1_Format)return zb.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return zb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return zb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return zb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}
console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var O=void 0!==a.canvas?a.canvas:document.createElement("canvas"),M=void 0!==a.precision?a.precision:"highp",I=void 0!==a.alpha?a.alpha:!0,L=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,N=void 0!==a.antialias?a.antialias:!1,T=void 0!==a.stencil?a.stencil:!0,ba=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,$=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),Q=void 0!==a.clearAlpha?a.clearAlpha:0,ga=
void 0!==a.maxLights?a.maxLights:4;this.domElement=O;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=
[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var S=this,ta=[],oa=0,P=null,ha=null,Y=-1,X=null,ka=null,aa=0,ea=0,Ia=-1,Ra=-1,Ka=-1,Wa=-1,qa=-1,Xa=-1,kb=-1,Ta=-1,gb=null,rb=null,Rb=null,fb=null,bb=0,La=0,za=0,xb=0,Fa=0,sb=0,hb=new THREE.Frustum,ua=new THREE.Matrix4,ib=new THREE.Matrix4,ab=new THREE.Vector4,Ya=new THREE.Vector3,Ga=!0,yb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],
positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},l,Sb,zb;try{if(!(l=O.getContext("experimental-webgl",{alpha:I,premultipliedAlpha:L,antialias:N,stencil:T,preserveDrawingBuffer:ba})))throw"Error creating WebGL context.";}catch(Uc){console.error(Uc)}a=l.getExtension("OES_texture_float");I=l.getExtension("OES_standard_derivatives");Sb=l.getExtension("EXT_texture_filter_anisotropic")||
l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");zb=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");I||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Sb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");zb||
console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");l.clearColor(0,0,0,1);l.clearDepth(1);l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.clearColor($.r,$.g,$.b,Q);this.context=l;var tc=l.getParameter(l.MAX_TEXTURE_IMAGE_UNITS),I=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS);l.getParameter(l.MAX_TEXTURE_SIZE);
var Vc=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE),Gc=Sb?l.getParameter(Sb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,kc=0<I,lc=kc&&a;zb&&l.getParameter(l.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return l};this.supportsVertexTextures=function(){return kc};this.getMaxAnisotropy=function(){return Gc};this.setSize=function(a,b){O.width=a;O.height=b;this.setViewport(0,0,O.width,O.height)};this.setViewport=function(a,b,c,d){bb=void 0!==a?a:0;La=void 0!==b?b:0;za=void 0!==c?c:O.width;xb=void 0!==d?
d:O.height;l.viewport(bb,La,za,xb)};this.setScissor=function(a,b,c,d){l.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};this.setClearColorHex=function(a,b){$.setHex(a);Q=b;l.clearColor($.r,$.g,$.b,Q)};this.setClearColor=function(a,b){$.copy(a);Q=b;l.clearColor($.r,$.g,$.b,Q)};this.getClearColor=function(){return $};this.getClearAlpha=function(){return Q};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=l.COLOR_BUFFER_BIT;if(void 0===
b||b)d|=l.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=l.STENCIL_BUFFER_BIT;l.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._modelMatrixArray,
a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];l.deleteBuffer(c.__webglVertexBuffer);l.deleteBuffer(c.__webglNormalBuffer);l.deleteBuffer(c.__webglTangentBuffer);l.deleteBuffer(c.__webglColorBuffer);l.deleteBuffer(c.__webglUVBuffer);l.deleteBuffer(c.__webglUV2Buffer);l.deleteBuffer(c.__webglSkinIndicesBuffer);l.deleteBuffer(c.__webglSkinWeightsBuffer);l.deleteBuffer(c.__webglFaceBuffer);l.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=
0;for(e=c.numMorphTargets;d<e;d++)l.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)l.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)l.deleteBuffer(c.__webglCustomAttributesList[d].buffer);S.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--):a instanceof
THREE.Line?(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,l.deleteTexture(a.__webglTexture),S.info.memory.textures--)};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(l.deleteTexture(a.__webglTexture),
a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)l.deleteFramebuffer(a.__webglFramebuffer[b]),l.deleteRenderbuffer(a.__webglRenderbuffer[b]);else l.deleteFramebuffer(a.__webglFramebuffer),l.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=!1;a=0;for(c=ta.length;a<c;a++)if(d=ta[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=[];a=0;for(c=ta.length;a<c;a++)d=ta[a],d.program!==b&&e.push(d);
ta=e;l.deleteProgram(b);S.info.memory.programs--}}};this.updateShadowMap=function(a,b){P=null;Y=X=Ta=kb=Ka=-1;Ga=!0;Ra=Ia=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=l.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=l.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=l.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=l.createBuffer());
a.hasPositions&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,a.positionArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.position),l.vertexAttribPointer(b.attributes.position,3,l.FLOAT,!1,0,0));if(a.hasNormals){l.bindBuffer(l.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,j,k,m,u,n,p,q=3*a.count;for(p=0;p<q;p+=9)n=a.normalArray,d=n[p],e=n[p+1],f=n[p+2],g=n[p+3],j=n[p+4],m=n[p+5],h=n[p+6],k=n[p+7],u=n[p+8],d=(d+g+h)/
3,e=(e+j+k)/3,f=(f+m+u)/3,n[p]=d,n[p+1]=e,n[p+2]=f,n[p+3]=d,n[p+4]=e,n[p+5]=f,n[p+6]=d,n[p+7]=e,n[p+8]=f}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.normal);l.vertexAttribPointer(b.attributes.normal,3,l.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglUvBuffer),l.bufferData(l.ARRAY_BUFFER,a.uvArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.uv),l.vertexAttribPointer(b.attributes.uv,2,l.FLOAT,!1,0,0));a.hasColors&&
c.vertexColors!==THREE.NoColors&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,a.colorArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.color),l.vertexAttribPointer(b.attributes.color,3,l.FLOAT,!1,0,0));l.drawArrays(l.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=A(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==X&&(X=d,b=!0),f instanceof THREE.Mesh){f=e.offsets;1<f.length&&
(b=!0);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var h=e.attributes.position,j=h.itemSize;l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,4*g*j);h=e.attributes.normal;0<=a.normal&&h&&(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.normal,j,l.FLOAT,!1,0,4*g*j));h=e.attributes.uv;0<=a.uv&&h&&(h.buffer?(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.uv,j,l.FLOAT,!1,0,4*g*j),l.enableVertexAttribArray(a.uv)):
l.disableVertexAttribArray(a.uv));j=e.attributes.color;if(0<=a.color&&j){var k=j.itemSize;l.bindBuffer(l.ARRAY_BUFFER,j.buffer);l.vertexAttribPointer(a.color,k,l.FLOAT,!1,0,4*g*k)}h=e.attributes.tangent;0<=a.tangent&&h&&(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.tangent,j,l.FLOAT,!1,0,4*g*j));l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}l.drawElements(l.TRIANGLES,f[d].count,l.UNSIGNED_SHORT,2*f[d].start);S.info.render.calls++;S.info.render.vertices+=
f[d].count;S.info.render.faces+=f[d].count/3}}else f instanceof THREE.ParticleSystem&&b&&(h=e.attributes.position,j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,0),j=e.attributes.color,0<=a.color&&j&&(k=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),l.vertexAttribPointer(a.color,k,l.FLOAT,!1,0,0)),l.drawArrays(l.POINTS,0,h.numItems/3),S.info.render.calls++,S.info.render.points+=h.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,
h;c=A(a,b,c,d,f);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==X&&(X=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0)):0<=c.position&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),
l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var j=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;j<d.numSupportedMorphTargets&&j<h.length;)l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[j]]),l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[j]]),l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[h[j]],
j++}else{h=[];g=f.morphTargetInfluences;var m,u=g.length;for(m=0;m<u;m++)j=g[m],0<j&&h.push([m,j]);h.length>d.numSupportedMorphTargets?(h.sort(k),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(k):0===h.length&&h.push([0,0]);for(j=0;j<d.numSupportedMorphTargets;)h[j]?(m=h[j][0],l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[m]),l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[m]),
l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[m]):(l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[j]=0),j++}null!==d.program.uniforms.morphTargetInfluences&&l.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=
e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(l.bindBuffer(l.ARRAY_BUFFER,c.buffer),l.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,l.FLOAT,!1,0,0))}0<=b.color&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglColorBuffer),l.vertexAttribPointer(b.color,3,l.FLOAT,!1,0,0));0<=b.normal&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglNormalBuffer),l.vertexAttribPointer(b.normal,3,l.FLOAT,!1,0,0));0<=b.tangent&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglTangentBuffer),l.vertexAttribPointer(b.tangent,
4,l.FLOAT,!1,0,0));0<=b.uv&&(e.__webglUVBuffer?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUVBuffer),l.vertexAttribPointer(b.uv,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv)):l.disableVertexAttribArray(b.uv));0<=b.uv2&&(e.__webglUV2Buffer?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUV2Buffer),l.vertexAttribPointer(b.uv2,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv2)):l.disableVertexAttribArray(b.uv2));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),
l.vertexAttribPointer(b.skinIndex,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),l.vertexAttribPointer(b.skinWeight,4,l.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==fb&&(l.lineWidth(d),fb=d),a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),l.drawElements(l.LINES,e.__webglLineCount,l.UNSIGNED_SHORT,0)):(a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),l.drawElements(l.TRIANGLES,e.__webglFaceCount,l.UNSIGNED_SHORT,0)),
S.info.render.calls++,S.info.render.vertices+=e.__webglFaceCount,S.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?l.LINE_STRIP:l.LINES,d=d.linewidth,d!==fb&&(l.lineWidth(d),fb=d),l.drawArrays(f,0,e.__webglLineCount),S.info.render.calls++):f instanceof THREE.ParticleSystem?(l.drawArrays(l.POINTS,0,e.__webglParticleCount),S.info.render.calls++,S.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(l.drawArrays(l.TRIANGLE_STRIP,0,e.__webglVertexCount),
S.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,k=a.__lights,u=a.fog;Y=-1;Ga=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);
b.projectionMatrix.flattenToArray(b._projectionMatrixArray);ua.multiply(b.projectionMatrix,b.matrixWorldInverse);hb.setFromMatrix(ua);this.autoUpdateObjects&&this.initWebGLObjects(a);m(this.renderPluginsPre,a,b);S.info.render.calls=0;S.info.render.vertices=0;S.info.render.faces=0;S.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,
g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||hb.contains(g))){v(g,b);var q=f,t=q.object,r=q.buffer,s=void 0,s=s=void 0,s=t.material;s instanceof THREE.MeshFaceMaterial?(s=r.materialIndex,0<=s&&(s=t.geometry.materials[s],s.transparent?(q.transparent=s,q.opaque=null):(q.opaque=s,q.transparent=null))):s&&(s.transparent?(q.transparent=s,q.opaque=null):(q.opaque=s,q.transparent=null));f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:
(ab.copy(g.matrixWorld.getPosition()),ua.multiplyVector3(ab),f.z=ab.z))}this.sortObjects&&h.sort(j);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(v(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),z(d.polygonOffset,d.polygonOffsetFactor,
d.polygonOffsetUnits),n(a.__webglObjects,!1,"",b,k,u,!0,d),p(a.__webglObjectsImmediate,"",b,k,u,!1,d)):(this.setBlending(THREE.NormalBlending),n(a.__webglObjects,!0,"opaque",b,k,u,!1),p(a.__webglObjectsImmediate,"opaque",b,k,u,!1),n(a.__webglObjects,!1,"transparent",b,k,u,!0),p(a.__webglObjectsImmediate,"transparent",b,k,u,!0));m(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(l.bindTexture(l.TEXTURE_CUBE_MAP,
c.__webglTexture),l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)):(l.bindTexture(l.TEXTURE_2D,c.__webglTexture),l.generateMipmap(l.TEXTURE_2D),l.bindTexture(l.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=A(a,b,c,d,e);X=-1;S.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,l,hb):e.render(function(a){S.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||
(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var j=a.__objectsAdded[0],k=a,m=void 0,n=void 0,p=void 0;if(!j.__webglInit)if(j.__webglInit=!0,j._modelViewMatrix=new THREE.Matrix4,j._normalMatrix=new THREE.Matrix3,j instanceof THREE.Mesh)if(n=j.geometry,n instanceof THREE.Geometry){if(void 0===n.geometryGroups){var t=n,v=void 0,x=void 0,A=void 0,z=void 0,C=void 0,D=void 0,E=void 0,G={},H=t.morphTargets.length,J=t.morphNormals.length;
t.geometryGroups={};v=0;for(x=t.faces.length;v<x;v++)A=t.faces[v],z=A.materialIndex,D=void 0!==z?z:-1,void 0===G[D]&&(G[D]={hash:D,counter:0}),E=G[D].hash+"_"+G[D].counter,void 0===t.geometryGroups[E]&&(t.geometryGroups[E]={faces3:[],faces4:[],materialIndex:z,vertices:0,numMorphTargets:H,numMorphNormals:J}),C=A instanceof THREE.Face3?3:4,65535<t.geometryGroups[E].vertices+C&&(G[D].counter+=1,E=G[D].hash+"_"+G[D].counter,void 0===t.geometryGroups[E]&&(t.geometryGroups[E]={faces3:[],faces4:[],materialIndex:z,
vertices:0,numMorphTargets:H,numMorphNormals:J})),A instanceof THREE.Face3?t.geometryGroups[E].faces3.push(v):t.geometryGroups[E].faces4.push(v),t.geometryGroups[E].vertices+=C;t.geometryGroupsList=[];var K=void 0;for(K in t.geometryGroups)t.geometryGroups[K].id=aa++,t.geometryGroupsList.push(t.geometryGroups[K])}for(m in n.geometryGroups)if(p=n.geometryGroups[m],!p.__webglVertexBuffer){var I=p;I.__webglVertexBuffer=l.createBuffer();I.__webglNormalBuffer=l.createBuffer();I.__webglTangentBuffer=l.createBuffer();
I.__webglColorBuffer=l.createBuffer();I.__webglUVBuffer=l.createBuffer();I.__webglUV2Buffer=l.createBuffer();I.__webglSkinIndicesBuffer=l.createBuffer();I.__webglSkinWeightsBuffer=l.createBuffer();I.__webglFaceBuffer=l.createBuffer();I.__webglLineBuffer=l.createBuffer();var L=void 0,M=void 0;if(I.numMorphTargets){I.__webglMorphTargetsBuffers=[];L=0;for(M=I.numMorphTargets;L<M;L++)I.__webglMorphTargetsBuffers.push(l.createBuffer())}if(I.numMorphNormals){I.__webglMorphNormalsBuffers=[];L=0;for(M=I.numMorphNormals;L<
M;L++)I.__webglMorphNormalsBuffers.push(l.createBuffer())}S.info.memory.geometries++;var P=p,O=j,N=O.geometry,Q=P.faces3,Y=P.faces4,X=3*Q.length+4*Y.length,ha=1*Q.length+2*Y.length,ea=3*Q.length+4*Y.length,T=c(O,P),$=f(T),ga=d(T),ka=T.vertexColors?T.vertexColors:!1;P.__vertexArray=new Float32Array(3*X);ga&&(P.__normalArray=new Float32Array(3*X));N.hasTangents&&(P.__tangentArray=new Float32Array(4*X));ka&&(P.__colorArray=new Float32Array(3*X));if($){if(0<N.faceUvs.length||0<N.faceVertexUvs.length)P.__uvArray=
new Float32Array(2*X);if(1<N.faceUvs.length||1<N.faceVertexUvs.length)P.__uv2Array=new Float32Array(2*X)}O.geometry.skinWeights.length&&O.geometry.skinIndices.length&&(P.__skinIndexArray=new Float32Array(4*X),P.__skinWeightArray=new Float32Array(4*X));P.__faceArray=new Uint16Array(3*ha);P.__lineArray=new Uint16Array(2*ea);var ba=void 0,ta=void 0;if(P.numMorphTargets){P.__morphTargetsArrays=[];ba=0;for(ta=P.numMorphTargets;ba<ta;ba++)P.__morphTargetsArrays.push(new Float32Array(3*X))}if(P.numMorphNormals){P.__morphNormalsArrays=
[];ba=0;for(ta=P.numMorphNormals;ba<ta;ba++)P.__morphNormalsArrays.push(new Float32Array(3*X))}P.__webglFaceCount=3*ha;P.__webglLineCount=2*ea;if(T.attributes){void 0===P.__webglCustomAttributesList&&(P.__webglCustomAttributesList=[]);var Ia=void 0;for(Ia in T.attributes){var qa=T.attributes[Ia],oa={},Ra;for(Ra in qa)oa[Ra]=qa[Ra];if(!oa.__webglInitialized||oa.createUniqueBuffers){oa.__webglInitialized=!0;var ua=1;"v2"===oa.type?ua=2:"v3"===oa.type?ua=3:"v4"===oa.type?ua=4:"c"===oa.type&&(ua=3);oa.size=
ua;oa.array=new Float32Array(X*ua);oa.buffer=l.createBuffer();oa.buffer.belongsToAttribute=Ia;qa.needsUpdate=!0;oa.__original=qa}P.__webglCustomAttributesList.push(oa)}}P.__inittedArrays=!0;n.verticesNeedUpdate=!0;n.morphTargetsNeedUpdate=!0;n.elementsNeedUpdate=!0;n.uvsNeedUpdate=!0;n.normalsNeedUpdate=!0;n.tangentsNeedUpdate=!0;n.colorsNeedUpdate=!0}}else n instanceof THREE.BufferGeometry&&e(n);else if(j instanceof THREE.Ribbon){if(n=j.geometry,!n.__webglVertexBuffer){var Ka=n;Ka.__webglVertexBuffer=
l.createBuffer();Ka.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var za=n,Fa=za.vertices.length;za.__vertexArray=new Float32Array(3*Fa);za.__colorArray=new Float32Array(3*Fa);za.__webglVertexCount=Fa;n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}}else if(j instanceof THREE.Line){if(n=j.geometry,!n.__webglVertexBuffer){var La=n;La.__webglVertexBuffer=l.createBuffer();La.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var Ga=n,Wa=j,Xa=Ga.vertices.length;Ga.__vertexArray=
new Float32Array(3*Xa);Ga.__colorArray=new Float32Array(3*Xa);Ga.__webglLineCount=Xa;b(Ga,Wa);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}}else if(j instanceof THREE.ParticleSystem&&(n=j.geometry,!n.__webglVertexBuffer))if(n instanceof THREE.Geometry){var Ya=n;Ya.__webglVertexBuffer=l.createBuffer();Ya.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var Ta=n,kb=j,bb=Ta.vertices.length;Ta.__vertexArray=new Float32Array(3*bb);Ta.__colorArray=new Float32Array(3*bb);Ta.__sortArray=[];
Ta.__webglParticleCount=bb;b(Ta,kb);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}else n instanceof THREE.BufferGeometry&&e(n);if(!j.__webglActive){if(j instanceof THREE.Mesh)if(n=j.geometry,n instanceof THREE.BufferGeometry)q(k.__webglObjects,n,j);else for(m in n.geometryGroups)p=n.geometryGroups[m],q(k.__webglObjects,p,j);else j instanceof THREE.Ribbon||j instanceof THREE.Line||j instanceof THREE.ParticleSystem?(n=j.geometry,q(k.__webglObjects,n,j)):j instanceof THREE.ImmediateRenderObject||j.immediateRenderCallback?
k.__webglObjectsImmediate.push({object:j,opaque:null,transparent:null}):j instanceof THREE.Sprite?k.__webglSprites.push(j):j instanceof THREE.LensFlare&&k.__webglFlares.push(j);j.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var nb=a.__objectsRemoved[0],ab=a;nb instanceof THREE.Mesh||nb instanceof THREE.ParticleSystem||nb instanceof THREE.Ribbon||nb instanceof THREE.Line?w(ab.__webglObjects,nb):nb instanceof THREE.Sprite?u(ab.__webglSprites,nb):nb instanceof THREE.LensFlare?
u(ab.__webglFlares,nb):(nb instanceof THREE.ImmediateRenderObject||nb.immediateRenderCallback)&&w(ab.__webglObjectsImmediate,nb);nb.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var hb=0,sb=a.__webglObjects.length;hb<sb;hb++){var vb=a.__webglObjects[hb].object,ia=vb.geometry,ib=void 0,gb=void 0,cb=void 0;if(vb instanceof THREE.Mesh)if(ia instanceof THREE.BufferGeometry)(ia.verticesNeedUpdate||ia.elementsNeedUpdate||ia.uvsNeedUpdate||ia.normalsNeedUpdate||ia.colorsNeedUpdate||ia.tangentsNeedUpdate)&&
h(ia,l.DYNAMIC_DRAW,!ia.dynamic),ia.verticesNeedUpdate=!1,ia.elementsNeedUpdate=!1,ia.uvsNeedUpdate=!1,ia.normalsNeedUpdate=!1,ia.colorsNeedUpdate=!1,ia.tangentsNeedUpdate=!1;else{for(var rb=0,xb=ia.geometryGroupsList.length;rb<xb;rb++)if(ib=ia.geometryGroupsList[rb],cb=c(vb,ib),gb=cb.attributes&&r(cb),ia.verticesNeedUpdate||ia.morphTargetsNeedUpdate||ia.elementsNeedUpdate||ia.uvsNeedUpdate||ia.normalsNeedUpdate||ia.colorsNeedUpdate||ia.tangentsNeedUpdate||gb){var pa=ib,yb=vb,ob=l.DYNAMIC_DRAW,zb=
!ia.dynamic,fb=cb;if(pa.__inittedArrays){var Sb=d(fb),Rb=fb.vertexColors?fb.vertexColors:!1,kc=f(fb),Ic=Sb===THREE.SmoothShading,F=void 0,Z=void 0,$b=void 0,R=void 0,nc=void 0,ac=void 0,wb=void 0,Jc=void 0,Tb=void 0,oc=void 0,pc=void 0,U=void 0,V=void 0,W=void 0,na=void 0,Bb=void 0,Cb=void 0,Db=void 0,uc=void 0,Eb=void 0,Fb=void 0,Gb=void 0,vc=void 0,Hb=void 0,Ib=void 0,Jb=void 0,wc=void 0,Kb=void 0,Lb=void 0,Mb=void 0,xc=void 0,Nb=void 0,Ob=void 0,Pb=void 0,yc=void 0,va=void 0,lc=void 0,bc=void 0,
qc=void 0,rc=void 0,Oa=void 0,tc=void 0,Ma=void 0,Na=void 0,cc=void 0,Ub=void 0,Ea=0,Ja=0,Vb=0,Wb=0,pb=0,Ua=0,xa=0,$a=0,Ha=0,fa=0,ja=0,B=0,wa=void 0,Pa=pa.__vertexArray,zc=pa.__uvArray,Ac=pa.__uv2Array,qb=pa.__normalArray,Aa=pa.__tangentArray,Qa=pa.__colorArray,Ba=pa.__skinIndexArray,Ca=pa.__skinWeightArray,Xc=pa.__morphTargetsArrays,Yc=pa.__morphNormalsArrays,Zc=pa.__webglCustomAttributesList,y=void 0,Qb=pa.__faceArray,jb=pa.__lineArray,db=yb.geometry,Gc=db.elementsNeedUpdate,dd=db.uvsNeedUpdate,
Uc=db.normalsNeedUpdate,Vc=db.tangentsNeedUpdate,kd=db.colorsNeedUpdate,ld=db.morphTargetsNeedUpdate,ic=db.vertices,ra=pa.faces3,sa=pa.faces4,Va=db.faces,$c=db.faceVertexUvs[0],ad=db.faceVertexUvs[1],jc=db.skinIndices,dc=db.skinWeights,ec=db.morphTargets,Kc=db.morphNormals;if(db.verticesNeedUpdate){F=0;for(Z=ra.length;F<Z;F++)R=Va[ra[F]],U=ic[R.a],V=ic[R.b],W=ic[R.c],Pa[Ja]=U.x,Pa[Ja+1]=U.y,Pa[Ja+2]=U.z,Pa[Ja+3]=V.x,Pa[Ja+4]=V.y,Pa[Ja+5]=V.z,Pa[Ja+6]=W.x,Pa[Ja+7]=W.y,Pa[Ja+8]=W.z,Ja+=9;F=0;for(Z=
sa.length;F<Z;F++)R=Va[sa[F]],U=ic[R.a],V=ic[R.b],W=ic[R.c],na=ic[R.d],Pa[Ja]=U.x,Pa[Ja+1]=U.y,Pa[Ja+2]=U.z,Pa[Ja+3]=V.x,Pa[Ja+4]=V.y,Pa[Ja+5]=V.z,Pa[Ja+6]=W.x,Pa[Ja+7]=W.y,Pa[Ja+8]=W.z,Pa[Ja+9]=na.x,Pa[Ja+10]=na.y,Pa[Ja+11]=na.z,Ja+=12;l.bindBuffer(l.ARRAY_BUFFER,pa.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Pa,ob)}if(ld){Oa=0;for(tc=ec.length;Oa<tc;Oa++){F=ja=0;for(Z=ra.length;F<Z;F++)cc=ra[F],R=Va[cc],U=ec[Oa].vertices[R.a],V=ec[Oa].vertices[R.b],W=ec[Oa].vertices[R.c],Ma=Xc[Oa],Ma[ja]=U.x,
Ma[ja+1]=U.y,Ma[ja+2]=U.z,Ma[ja+3]=V.x,Ma[ja+4]=V.y,Ma[ja+5]=V.z,Ma[ja+6]=W.x,Ma[ja+7]=W.y,Ma[ja+8]=W.z,fb.morphNormals&&(Ic?(Ub=Kc[Oa].vertexNormals[cc],Eb=Ub.a,Fb=Ub.b,Gb=Ub.c):Gb=Fb=Eb=Kc[Oa].faceNormals[cc],Na=Yc[Oa],Na[ja]=Eb.x,Na[ja+1]=Eb.y,Na[ja+2]=Eb.z,Na[ja+3]=Fb.x,Na[ja+4]=Fb.y,Na[ja+5]=Fb.z,Na[ja+6]=Gb.x,Na[ja+7]=Gb.y,Na[ja+8]=Gb.z),ja+=9;F=0;for(Z=sa.length;F<Z;F++)cc=sa[F],R=Va[cc],U=ec[Oa].vertices[R.a],V=ec[Oa].vertices[R.b],W=ec[Oa].vertices[R.c],na=ec[Oa].vertices[R.d],Ma=Xc[Oa],
Ma[ja]=U.x,Ma[ja+1]=U.y,Ma[ja+2]=U.z,Ma[ja+3]=V.x,Ma[ja+4]=V.y,Ma[ja+5]=V.z,Ma[ja+6]=W.x,Ma[ja+7]=W.y,Ma[ja+8]=W.z,Ma[ja+9]=na.x,Ma[ja+10]=na.y,Ma[ja+11]=na.z,fb.morphNormals&&(Ic?(Ub=Kc[Oa].vertexNormals[cc],Eb=Ub.a,Fb=Ub.b,Gb=Ub.c,vc=Ub.d):vc=Gb=Fb=Eb=Kc[Oa].faceNormals[cc],Na=Yc[Oa],Na[ja]=Eb.x,Na[ja+1]=Eb.y,Na[ja+2]=Eb.z,Na[ja+3]=Fb.x,Na[ja+4]=Fb.y,Na[ja+5]=Fb.z,Na[ja+6]=Gb.x,Na[ja+7]=Gb.y,Na[ja+8]=Gb.z,Na[ja+9]=vc.x,Na[ja+10]=vc.y,Na[ja+11]=vc.z),ja+=12;l.bindBuffer(l.ARRAY_BUFFER,pa.__webglMorphTargetsBuffers[Oa]);
l.bufferData(l.ARRAY_BUFFER,Xc[Oa],ob);fb.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,pa.__webglMorphNormalsBuffers[Oa]),l.bufferData(l.ARRAY_BUFFER,Yc[Oa],ob))}}if(dc.length){F=0;for(Z=ra.length;F<Z;F++)R=Va[ra[F]],Kb=dc[R.a],Lb=dc[R.b],Mb=dc[R.c],Ca[fa]=Kb.x,Ca[fa+1]=Kb.y,Ca[fa+2]=Kb.z,Ca[fa+3]=Kb.w,Ca[fa+4]=Lb.x,Ca[fa+5]=Lb.y,Ca[fa+6]=Lb.z,Ca[fa+7]=Lb.w,Ca[fa+8]=Mb.x,Ca[fa+9]=Mb.y,Ca[fa+10]=Mb.z,Ca[fa+11]=Mb.w,Nb=jc[R.a],Ob=jc[R.b],Pb=jc[R.c],Ba[fa]=Nb.x,Ba[fa+1]=Nb.y,Ba[fa+2]=Nb.z,Ba[fa+3]=Nb.w,
Ba[fa+4]=Ob.x,Ba[fa+5]=Ob.y,Ba[fa+6]=Ob.z,Ba[fa+7]=Ob.w,Ba[fa+8]=Pb.x,Ba[fa+9]=Pb.y,Ba[fa+10]=Pb.z,Ba[fa+11]=Pb.w,fa+=12;F=0;for(Z=sa.length;F<Z;F++)R=Va[sa[F]],Kb=dc[R.a],Lb=dc[R.b],Mb=dc[R.c],xc=dc[R.d],Ca[fa]=Kb.x,Ca[fa+1]=Kb.y,Ca[fa+2]=Kb.z,Ca[fa+3]=Kb.w,Ca[fa+4]=Lb.x,Ca[fa+5]=Lb.y,Ca[fa+6]=Lb.z,Ca[fa+7]=Lb.w,Ca[fa+8]=Mb.x,Ca[fa+9]=Mb.y,Ca[fa+10]=Mb.z,Ca[fa+11]=Mb.w,Ca[fa+12]=xc.x,Ca[fa+13]=xc.y,Ca[fa+14]=xc.z,Ca[fa+15]=xc.w,Nb=jc[R.a],Ob=jc[R.b],Pb=jc[R.c],yc=jc[R.d],Ba[fa]=Nb.x,Ba[fa+1]=Nb.y,
Ba[fa+2]=Nb.z,Ba[fa+3]=Nb.w,Ba[fa+4]=Ob.x,Ba[fa+5]=Ob.y,Ba[fa+6]=Ob.z,Ba[fa+7]=Ob.w,Ba[fa+8]=Pb.x,Ba[fa+9]=Pb.y,Ba[fa+10]=Pb.z,Ba[fa+11]=Pb.w,Ba[fa+12]=yc.x,Ba[fa+13]=yc.y,Ba[fa+14]=yc.z,Ba[fa+15]=yc.w,fa+=16;0<fa&&(l.bindBuffer(l.ARRAY_BUFFER,pa.__webglSkinIndicesBuffer),l.bufferData(l.ARRAY_BUFFER,Ba,ob),l.bindBuffer(l.ARRAY_BUFFER,pa.__webglSkinWeightsBuffer),l.bufferData(l.ARRAY_BUFFER,Ca,ob))}if(kd&&Rb){F=0;for(Z=ra.length;F<Z;F++)R=Va[ra[F]],wb=R.vertexColors,Jc=R.color,3===wb.length&&Rb===
THREE.VertexColors?(Hb=wb[0],Ib=wb[1],Jb=wb[2]):Jb=Ib=Hb=Jc,Qa[Ha]=Hb.r,Qa[Ha+1]=Hb.g,Qa[Ha+2]=Hb.b,Qa[Ha+3]=Ib.r,Qa[Ha+4]=Ib.g,Qa[Ha+5]=Ib.b,Qa[Ha+6]=Jb.r,Qa[Ha+7]=Jb.g,Qa[Ha+8]=Jb.b,Ha+=9;F=0;for(Z=sa.length;F<Z;F++)R=Va[sa[F]],wb=R.vertexColors,Jc=R.color,4===wb.length&&Rb===THREE.VertexColors?(Hb=wb[0],Ib=wb[1],Jb=wb[2],wc=wb[3]):wc=Jb=Ib=Hb=Jc,Qa[Ha]=Hb.r,Qa[Ha+1]=Hb.g,Qa[Ha+2]=Hb.b,Qa[Ha+3]=Ib.r,Qa[Ha+4]=Ib.g,Qa[Ha+5]=Ib.b,Qa[Ha+6]=Jb.r,Qa[Ha+7]=Jb.g,Qa[Ha+8]=Jb.b,Qa[Ha+9]=wc.r,Qa[Ha+10]=wc.g,
Qa[Ha+11]=wc.b,Ha+=12;0<Ha&&(l.bindBuffer(l.ARRAY_BUFFER,pa.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,Qa,ob))}if(Vc&&db.hasTangents){F=0;for(Z=ra.length;F<Z;F++)R=Va[ra[F]],Tb=R.vertexTangents,Bb=Tb[0],Cb=Tb[1],Db=Tb[2],Aa[xa]=Bb.x,Aa[xa+1]=Bb.y,Aa[xa+2]=Bb.z,Aa[xa+3]=Bb.w,Aa[xa+4]=Cb.x,Aa[xa+5]=Cb.y,Aa[xa+6]=Cb.z,Aa[xa+7]=Cb.w,Aa[xa+8]=Db.x,Aa[xa+9]=Db.y,Aa[xa+10]=Db.z,Aa[xa+11]=Db.w,xa+=12;F=0;for(Z=sa.length;F<Z;F++)R=Va[sa[F]],Tb=R.vertexTangents,Bb=Tb[0],Cb=Tb[1],Db=Tb[2],uc=Tb[3],Aa[xa]=
Bb.x,Aa[xa+1]=Bb.y,Aa[xa+2]=Bb.z,Aa[xa+3]=Bb.w,Aa[xa+4]=Cb.x,Aa[xa+5]=Cb.y,Aa[xa+6]=Cb.z,Aa[xa+7]=Cb.w,Aa[xa+8]=Db.x,Aa[xa+9]=Db.y,Aa[xa+10]=Db.z,Aa[xa+11]=Db.w,Aa[xa+12]=uc.x,Aa[xa+13]=uc.y,Aa[xa+14]=uc.z,Aa[xa+15]=uc.w,xa+=16;l.bindBuffer(l.ARRAY_BUFFER,pa.__webglTangentBuffer);l.bufferData(l.ARRAY_BUFFER,Aa,ob)}if(Uc&&Sb){F=0;for(Z=ra.length;F<Z;F++)if(R=Va[ra[F]],nc=R.vertexNormals,ac=R.normal,3===nc.length&&Ic)for(va=0;3>va;va++)bc=nc[va],qb[Ua]=bc.x,qb[Ua+1]=bc.y,qb[Ua+2]=bc.z,Ua+=3;else for(va=
0;3>va;va++)qb[Ua]=ac.x,qb[Ua+1]=ac.y,qb[Ua+2]=ac.z,Ua+=3;F=0;for(Z=sa.length;F<Z;F++)if(R=Va[sa[F]],nc=R.vertexNormals,ac=R.normal,4===nc.length&&Ic)for(va=0;4>va;va++)bc=nc[va],qb[Ua]=bc.x,qb[Ua+1]=bc.y,qb[Ua+2]=bc.z,Ua+=3;else for(va=0;4>va;va++)qb[Ua]=ac.x,qb[Ua+1]=ac.y,qb[Ua+2]=ac.z,Ua+=3;l.bindBuffer(l.ARRAY_BUFFER,pa.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,qb,ob)}if(dd&&$c&&kc){F=0;for(Z=ra.length;F<Z;F++)if($b=ra[F],oc=$c[$b],void 0!==oc)for(va=0;3>va;va++)qc=oc[va],zc[Vb]=qc.u,zc[Vb+
1]=qc.v,Vb+=2;F=0;for(Z=sa.length;F<Z;F++)if($b=sa[F],oc=$c[$b],void 0!==oc)for(va=0;4>va;va++)qc=oc[va],zc[Vb]=qc.u,zc[Vb+1]=qc.v,Vb+=2;0<Vb&&(l.bindBuffer(l.ARRAY_BUFFER,pa.__webglUVBuffer),l.bufferData(l.ARRAY_BUFFER,zc,ob))}if(dd&&ad&&kc){F=0;for(Z=ra.length;F<Z;F++)if($b=ra[F],pc=ad[$b],void 0!==pc)for(va=0;3>va;va++)rc=pc[va],Ac[Wb]=rc.u,Ac[Wb+1]=rc.v,Wb+=2;F=0;for(Z=sa.length;F<Z;F++)if($b=sa[F],pc=ad[$b],void 0!==pc)for(va=0;4>va;va++)rc=pc[va],Ac[Wb]=rc.u,Ac[Wb+1]=rc.v,Wb+=2;0<Wb&&(l.bindBuffer(l.ARRAY_BUFFER,
pa.__webglUV2Buffer),l.bufferData(l.ARRAY_BUFFER,Ac,ob))}if(Gc){F=0;for(Z=ra.length;F<Z;F++)Qb[pb]=Ea,Qb[pb+1]=Ea+1,Qb[pb+2]=Ea+2,pb+=3,jb[$a]=Ea,jb[$a+1]=Ea+1,jb[$a+2]=Ea,jb[$a+3]=Ea+2,jb[$a+4]=Ea+1,jb[$a+5]=Ea+2,$a+=6,Ea+=3;F=0;for(Z=sa.length;F<Z;F++)Qb[pb]=Ea,Qb[pb+1]=Ea+1,Qb[pb+2]=Ea+3,Qb[pb+3]=Ea+1,Qb[pb+4]=Ea+2,Qb[pb+5]=Ea+3,pb+=6,jb[$a]=Ea,jb[$a+1]=Ea+1,jb[$a+2]=Ea,jb[$a+3]=Ea+3,jb[$a+4]=Ea+1,jb[$a+5]=Ea+2,jb[$a+6]=Ea+2,jb[$a+7]=Ea+3,$a+=8,Ea+=4;l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,pa.__webglFaceBuffer);
l.bufferData(l.ELEMENT_ARRAY_BUFFER,Qb,ob);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,pa.__webglLineBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,jb,ob)}if(Zc){va=0;for(lc=Zc.length;va<lc;va++)if(y=Zc[va],y.__original.needsUpdate){B=0;if(1===y.size)if(void 0===y.boundTo||"vertices"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)R=Va[ra[F]],y.array[B]=y.value[R.a],y.array[B+1]=y.value[R.b],y.array[B+2]=y.value[R.c],B+=3;F=0;for(Z=sa.length;F<Z;F++)R=Va[sa[F]],y.array[B]=y.value[R.a],y.array[B+1]=y.value[R.b],y.array[B+
2]=y.value[R.c],y.array[B+3]=y.value[R.d],B+=4}else{if("faces"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)wa=y.value[ra[F]],y.array[B]=wa,y.array[B+1]=wa,y.array[B+2]=wa,B+=3;F=0;for(Z=sa.length;F<Z;F++)wa=y.value[sa[F]],y.array[B]=wa,y.array[B+1]=wa,y.array[B+2]=wa,y.array[B+3]=wa,B+=4}}else if(2===y.size)if(void 0===y.boundTo||"vertices"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)R=Va[ra[F]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=V.x,y.array[B+3]=V.y,
y.array[B+4]=W.x,y.array[B+5]=W.y,B+=6;F=0;for(Z=sa.length;F<Z;F++)R=Va[sa[F]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],na=y.value[R.d],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=V.x,y.array[B+3]=V.y,y.array[B+4]=W.x,y.array[B+5]=W.y,y.array[B+6]=na.x,y.array[B+7]=na.y,B+=8}else{if("faces"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)W=V=U=wa=y.value[ra[F]],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=V.x,y.array[B+3]=V.y,y.array[B+4]=W.x,y.array[B+5]=W.y,B+=6;F=0;for(Z=sa.length;F<Z;F++)na=W=V=
U=wa=y.value[sa[F]],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=V.x,y.array[B+3]=V.y,y.array[B+4]=W.x,y.array[B+5]=W.y,y.array[B+6]=na.x,y.array[B+7]=na.y,B+=8}}else if(3===y.size){var da;da="c"===y.type?["r","g","b"]:["x","y","z"];if(void 0===y.boundTo||"vertices"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)R=Va[ra[F]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],y.array[B]=U[da[0]],y.array[B+1]=U[da[1]],y.array[B+2]=U[da[2]],y.array[B+3]=V[da[0]],y.array[B+4]=V[da[1]],y.array[B+5]=V[da[2]],y.array[B+
6]=W[da[0]],y.array[B+7]=W[da[1]],y.array[B+8]=W[da[2]],B+=9;F=0;for(Z=sa.length;F<Z;F++)R=Va[sa[F]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],na=y.value[R.d],y.array[B]=U[da[0]],y.array[B+1]=U[da[1]],y.array[B+2]=U[da[2]],y.array[B+3]=V[da[0]],y.array[B+4]=V[da[1]],y.array[B+5]=V[da[2]],y.array[B+6]=W[da[0]],y.array[B+7]=W[da[1]],y.array[B+8]=W[da[2]],y.array[B+9]=na[da[0]],y.array[B+10]=na[da[1]],y.array[B+11]=na[da[2]],B+=12}else if("faces"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)W=V=U=wa=
y.value[ra[F]],y.array[B]=U[da[0]],y.array[B+1]=U[da[1]],y.array[B+2]=U[da[2]],y.array[B+3]=V[da[0]],y.array[B+4]=V[da[1]],y.array[B+5]=V[da[2]],y.array[B+6]=W[da[0]],y.array[B+7]=W[da[1]],y.array[B+8]=W[da[2]],B+=9;F=0;for(Z=sa.length;F<Z;F++)na=W=V=U=wa=y.value[sa[F]],y.array[B]=U[da[0]],y.array[B+1]=U[da[1]],y.array[B+2]=U[da[2]],y.array[B+3]=V[da[0]],y.array[B+4]=V[da[1]],y.array[B+5]=V[da[2]],y.array[B+6]=W[da[0]],y.array[B+7]=W[da[1]],y.array[B+8]=W[da[2]],y.array[B+9]=na[da[0]],y.array[B+10]=
na[da[1]],y.array[B+11]=na[da[2]],B+=12}else if("faceVertices"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)wa=y.value[ra[F]],U=wa[0],V=wa[1],W=wa[2],y.array[B]=U[da[0]],y.array[B+1]=U[da[1]],y.array[B+2]=U[da[2]],y.array[B+3]=V[da[0]],y.array[B+4]=V[da[1]],y.array[B+5]=V[da[2]],y.array[B+6]=W[da[0]],y.array[B+7]=W[da[1]],y.array[B+8]=W[da[2]],B+=9;F=0;for(Z=sa.length;F<Z;F++)wa=y.value[sa[F]],U=wa[0],V=wa[1],W=wa[2],na=wa[3],y.array[B]=U[da[0]],y.array[B+1]=U[da[1]],y.array[B+2]=U[da[2]],y.array[B+3]=
V[da[0]],y.array[B+4]=V[da[1]],y.array[B+5]=V[da[2]],y.array[B+6]=W[da[0]],y.array[B+7]=W[da[1]],y.array[B+8]=W[da[2]],y.array[B+9]=na[da[0]],y.array[B+10]=na[da[1]],y.array[B+11]=na[da[2]],B+=12}}else if(4===y.size)if(void 0===y.boundTo||"vertices"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)R=Va[ra[F]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=U.z,y.array[B+3]=U.w,y.array[B+4]=V.x,y.array[B+5]=V.y,y.array[B+6]=V.z,y.array[B+7]=V.w,y.array[B+8]=W.x,y.array[B+
9]=W.y,y.array[B+10]=W.z,y.array[B+11]=W.w,B+=12;F=0;for(Z=sa.length;F<Z;F++)R=Va[sa[F]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],na=y.value[R.d],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=U.z,y.array[B+3]=U.w,y.array[B+4]=V.x,y.array[B+5]=V.y,y.array[B+6]=V.z,y.array[B+7]=V.w,y.array[B+8]=W.x,y.array[B+9]=W.y,y.array[B+10]=W.z,y.array[B+11]=W.w,y.array[B+12]=na.x,y.array[B+13]=na.y,y.array[B+14]=na.z,y.array[B+15]=na.w,B+=16}else if("faces"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)W=V=U=wa=
y.value[ra[F]],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=U.z,y.array[B+3]=U.w,y.array[B+4]=V.x,y.array[B+5]=V.y,y.array[B+6]=V.z,y.array[B+7]=V.w,y.array[B+8]=W.x,y.array[B+9]=W.y,y.array[B+10]=W.z,y.array[B+11]=W.w,B+=12;F=0;for(Z=sa.length;F<Z;F++)na=W=V=U=wa=y.value[sa[F]],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=U.z,y.array[B+3]=U.w,y.array[B+4]=V.x,y.array[B+5]=V.y,y.array[B+6]=V.z,y.array[B+7]=V.w,y.array[B+8]=W.x,y.array[B+9]=W.y,y.array[B+10]=W.z,y.array[B+11]=W.w,y.array[B+12]=na.x,
y.array[B+13]=na.y,y.array[B+14]=na.z,y.array[B+15]=na.w,B+=16}else if("faceVertices"===y.boundTo){F=0;for(Z=ra.length;F<Z;F++)wa=y.value[ra[F]],U=wa[0],V=wa[1],W=wa[2],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=U.z,y.array[B+3]=U.w,y.array[B+4]=V.x,y.array[B+5]=V.y,y.array[B+6]=V.z,y.array[B+7]=V.w,y.array[B+8]=W.x,y.array[B+9]=W.y,y.array[B+10]=W.z,y.array[B+11]=W.w,B+=12;F=0;for(Z=sa.length;F<Z;F++)wa=y.value[sa[F]],U=wa[0],V=wa[1],W=wa[2],na=wa[3],y.array[B]=U.x,y.array[B+1]=U.y,y.array[B+2]=
U.z,y.array[B+3]=U.w,y.array[B+4]=V.x,y.array[B+5]=V.y,y.array[B+6]=V.z,y.array[B+7]=V.w,y.array[B+8]=W.x,y.array[B+9]=W.y,y.array[B+10]=W.z,y.array[B+11]=W.w,y.array[B+12]=na.x,y.array[B+13]=na.y,y.array[B+14]=na.z,y.array[B+15]=na.w,B+=16}l.bindBuffer(l.ARRAY_BUFFER,y.buffer);l.bufferData(l.ARRAY_BUFFER,y.array,ob)}}zb&&(delete pa.__inittedArrays,delete pa.__colorArray,delete pa.__normalArray,delete pa.__tangentArray,delete pa.__uvArray,delete pa.__uv2Array,delete pa.__faceArray,delete pa.__vertexArray,
delete pa.__lineArray,delete pa.__skinIndexArray,delete pa.__skinWeightArray)}}ia.verticesNeedUpdate=!1;ia.morphTargetsNeedUpdate=!1;ia.elementsNeedUpdate=!1;ia.uvsNeedUpdate=!1;ia.normalsNeedUpdate=!1;ia.colorsNeedUpdate=!1;ia.tangentsNeedUpdate=!1;cb.attributes&&s(cb)}else if(vb instanceof THREE.Ribbon){if(ia.verticesNeedUpdate||ia.colorsNeedUpdate){var fc=ia,ed=l.DYNAMIC_DRAW,Bc=void 0,Cc=void 0,Lc=void 0,gc=void 0,Mc=void 0,fd=fc.vertices,gd=fc.colors,md=fd.length,nd=gd.length,Nc=fc.__vertexArray,
Oc=fc.__colorArray,od=fc.colorsNeedUpdate;if(fc.verticesNeedUpdate){for(Bc=0;Bc<md;Bc++)Lc=fd[Bc],gc=3*Bc,Nc[gc]=Lc.x,Nc[gc+1]=Lc.y,Nc[gc+2]=Lc.z;l.bindBuffer(l.ARRAY_BUFFER,fc.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Nc,ed)}if(od){for(Cc=0;Cc<nd;Cc++)Mc=gd[Cc],gc=3*Cc,Oc[gc]=Mc.r,Oc[gc+1]=Mc.g,Oc[gc+2]=Mc.b;l.bindBuffer(l.ARRAY_BUFFER,fc.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Oc,ed)}}ia.verticesNeedUpdate=!1;ia.colorsNeedUpdate=!1}else if(vb instanceof THREE.Line){cb=c(vb,ib);gb=
cb.attributes&&r(cb);if(ia.verticesNeedUpdate||ia.colorsNeedUpdate||gb){var Xb=ia,bd=l.DYNAMIC_DRAW,Dc=void 0,Ec=void 0,Pc=void 0,Da=void 0,Qc=void 0,hd=Xb.vertices,id=Xb.colors,pd=hd.length,qd=id.length,Rc=Xb.__vertexArray,Sc=Xb.__colorArray,rd=Xb.colorsNeedUpdate,cd=Xb.__webglCustomAttributesList,Tc=void 0,jd=void 0,Sa=void 0,sc=void 0,eb=void 0,ya=void 0;if(Xb.verticesNeedUpdate){for(Dc=0;Dc<pd;Dc++)Pc=hd[Dc],Da=3*Dc,Rc[Da]=Pc.x,Rc[Da+1]=Pc.y,Rc[Da+2]=Pc.z;l.bindBuffer(l.ARRAY_BUFFER,Xb.__webglVertexBuffer);
l.bufferData(l.ARRAY_BUFFER,Rc,bd)}if(rd){for(Ec=0;Ec<qd;Ec++)Qc=id[Ec],Da=3*Ec,Sc[Da]=Qc.r,Sc[Da+1]=Qc.g,Sc[Da+2]=Qc.b;l.bindBuffer(l.ARRAY_BUFFER,Xb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Sc,bd)}if(cd){Tc=0;for(jd=cd.length;Tc<jd;Tc++)if(ya=cd[Tc],ya.needsUpdate&&(void 0===ya.boundTo||"vertices"===ya.boundTo)){Da=0;sc=ya.value.length;if(1===ya.size)for(Sa=0;Sa<sc;Sa++)ya.array[Sa]=ya.value[Sa];else if(2===ya.size)for(Sa=0;Sa<sc;Sa++)eb=ya.value[Sa],ya.array[Da]=eb.x,ya.array[Da+1]=eb.y,
Da+=2;else if(3===ya.size)if("c"===ya.type)for(Sa=0;Sa<sc;Sa++)eb=ya.value[Sa],ya.array[Da]=eb.r,ya.array[Da+1]=eb.g,ya.array[Da+2]=eb.b,Da+=3;else for(Sa=0;Sa<sc;Sa++)eb=ya.value[Sa],ya.array[Da]=eb.x,ya.array[Da+1]=eb.y,ya.array[Da+2]=eb.z,Da+=3;else if(4===ya.size)for(Sa=0;Sa<sc;Sa++)eb=ya.value[Sa],ya.array[Da]=eb.x,ya.array[Da+1]=eb.y,ya.array[Da+2]=eb.z,ya.array[Da+3]=eb.w,Da+=4;l.bindBuffer(l.ARRAY_BUFFER,ya.buffer);l.bufferData(l.ARRAY_BUFFER,ya.array,bd)}}}ia.verticesNeedUpdate=!1;ia.colorsNeedUpdate=
!1;cb.attributes&&s(cb)}else vb instanceof THREE.ParticleSystem&&(ia instanceof THREE.BufferGeometry?((ia.verticesNeedUpdate||ia.colorsNeedUpdate)&&h(ia,l.DYNAMIC_DRAW,!ia.dynamic),ia.verticesNeedUpdate=!1,ia.colorsNeedUpdate=!1):(cb=c(vb,ib),gb=cb.attributes&&r(cb),(ia.verticesNeedUpdate||ia.colorsNeedUpdate||vb.sortParticles||gb)&&g(ia,l.DYNAMIC_DRAW,vb),ia.verticesNeedUpdate=!1,ia.colorsNeedUpdate=!1,cb.attributes&&s(cb)))}};this.initMaterial=function(a,b,c,d){var e,f,g,h,j,k,m,n,u;a instanceof
THREE.MeshDepthMaterial?u="depth":a instanceof THREE.MeshNormalMaterial?u="normal":a instanceof THREE.MeshBasicMaterial?u="basic":a instanceof THREE.MeshLambertMaterial?u="lambert":a instanceof THREE.MeshPhongMaterial?u="phong":a instanceof THREE.LineBasicMaterial?u="basic":a instanceof THREE.ParticleBasicMaterial&&(u="particle_basic");if(u){var p=THREE.ShaderLib[u];a.uniforms=THREE.UniformsUtils.clone(p.uniforms);a.vertexShader=p.vertexShader;a.fragmentShader=p.fragmentShader}var q,t,v;e=q=t=v=p=
0;for(f=b.length;e<f;e++)g=b[e],g.onlyShadow||(g instanceof THREE.DirectionalLight&&q++,g instanceof THREE.PointLight&&t++,g instanceof THREE.SpotLight&&v++,g instanceof THREE.HemisphereLight&&p++);t+v+q+p<=ga?e=q:(e=Math.ceil(ga*q/(t+q)),v=t=ga-e,p=e);f=t;g=v;h=p;p=q=0;for(v=b.length;p<v;p++)t=b[p],t.castShadow&&(t instanceof THREE.SpotLight&&q++,t instanceof THREE.DirectionalLight&&!t.shadowCascade&&q++);n=q;lc&&d&&d.useVertexTexture?m=1024:(b=l.getParameter(l.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-
20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),m=b);var r;a:{t=a.fragmentShader;v=a.vertexShader;p=a.uniforms;b=a.attributes;q=a.defines;c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,
skinning:a.skinning,maxBones:m,useVertexTexture:lc&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:n,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,
alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide};var s,x,A;d=[];u?d.push(u):(d.push(t),d.push(v));for(x in q)d.push(x),d.push(q[x]);for(s in c)d.push(s),d.push(c[s]);u=d.join();s=0;for(x=ta.length;s<x;s++)if(d=ta[s],d.code===u){d.usedTimes++;r=d.program;break a}s=[];for(A in q)x=q[A],!1!==x&&(x="#define "+A+" "+x,s.push(x));x=s.join("\n");A=l.createProgram();s=["precision "+M+" float;",x,kc?"#define VERTEX_TEXTURES":
"",S.gammaInput?"#define GAMMA_INPUT":"",S.gammaOutput?"#define GAMMA_OUTPUT":"",S.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":
"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?
"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
x=["precision "+M+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",x,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",S.gammaInput?"#define GAMMA_INPUT":"",S.gammaOutput?"#define GAMMA_OUTPUT":"",S.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?
"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");x=E("fragment",x+t);s=E("vertex",s+v);l.attachShader(A,s);l.attachShader(A,x);l.linkProgram(A);l.getProgramParameter(A,l.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+l.getProgramParameter(A,
l.VALIDATE_STATUS)+", gl error ["+l.getError()+"]");l.deleteShader(x);l.deleteShader(s);A.uniforms={};A.attributes={};var w;s="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?s.push("boneTexture"):s.push("boneGlobalMatrices");for(w in p)s.push(w);w=s;s=0;for(x=w.length;s<x;s++)d=w[s],A.uniforms[d]=l.getUniformLocation(A,d);s="position normal uv uv2 tangent color skinIndex skinWeight".split(" ");for(w=0;w<c.maxMorphTargets;w++)s.push("morphTarget"+
w);for(w=0;w<c.maxMorphNormals;w++)s.push("morphNormal"+w);for(r in b)s.push(r);r=s;w=0;for(s=r.length;w<s;w++)x=r[w],A.attributes[x]=l.getAttribLocation(A,x);A.id=oa++;ta.push({program:A,code:u,usedTimes:1});S.info.memory.programs=ta.length;r=A}a.program=r;r=a.program.attributes;0<=r.position&&l.enableVertexAttribArray(r.position);0<=r.color&&l.enableVertexAttribArray(r.color);0<=r.normal&&l.enableVertexAttribArray(r.normal);0<=r.tangent&&l.enableVertexAttribArray(r.tangent);a.skinning&&(0<=r.skinIndex&&
0<=r.skinWeight)&&(l.enableVertexAttribArray(r.skinIndex),l.enableVertexAttribArray(r.skinWeight));if(a.attributes)for(k in a.attributes)void 0!==r[k]&&0<=r[k]&&l.enableVertexAttribArray(r[k]);if(a.morphTargets){a.numSupportedMorphTargets=0;A="morphTarget";for(k=0;k<this.maxMorphTargets;k++)w=A+k,0<=r[w]&&(l.enableVertexAttribArray(r[w]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;A="morphNormal";for(k=0;k<this.maxMorphNormals;k++)w=A+k,0<=r[w]&&(l.enableVertexAttribArray(r[w]),
a.numSupportedMorphNormals++)}a.uniformsList=[];for(j in a.uniforms)a.uniformsList.push([a.uniforms[j],j])};this.setFaceCulling=function(a,b){a?(!b||"ccw"===b?l.frontFace(l.CCW):l.frontFace(l.CW),"back"===a?l.cullFace(l.BACK):"front"===a?l.cullFace(l.FRONT):l.cullFace(l.FRONT_AND_BACK),l.enable(l.CULL_FACE)):l.disable(l.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;Ia!==b&&(b?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE),Ia=b);Ra!==a&&(a?l.frontFace(l.CW):
l.frontFace(l.CCW),Ra=a)};this.setDepthTest=function(a){kb!==a&&(a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST),kb=a)};this.setDepthWrite=function(a){Ta!==a&&(l.depthMask(a),Ta=a)};this.setBlending=function(a,b,c,d){a!==Ka&&(a===THREE.NoBlending?l.disable(l.BLEND):a===THREE.AdditiveBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.SRC_ALPHA,l.ONE)):a===THREE.SubtractiveBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?
(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.SRC_COLOR)):a===THREE.CustomBlending?l.enable(l.BLEND):(l.enable(l.BLEND),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)),Ka=a);if(a===THREE.CustomBlending){if(b!==Wa&&(l.blendEquation(G(b)),Wa=b),c!==qa||d!==Xa)l.blendFunc(G(c),G(d)),qa=c,Xa=d}else Xa=qa=Wa=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=
l.createTexture(),S.info.memory.textures++);l.activeTexture(l.TEXTURE0+b);l.bindTexture(l.TEXTURE_2D,a.__webglTexture);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,a.flipY);l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=G(a.format),f=G(a.type);H(l.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=a.mipmaps,g=0,h=f.length;g<h;g++)c=f[g],l.compressedTexImage2D(l.TEXTURE_2D,g,e,c.width,c.height,0,c.data);
else a instanceof THREE.DataTexture?l.texImage2D(l.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):l.texImage2D(l.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&l.generateMipmap(l.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else l.activeTexture(l.TEXTURE0+b),l.bindTexture(l.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=
!0);a.__webglTexture=l.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=G(a.format),e=G(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,a.__webglTexture);H(l.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=l.createFramebuffer();a.__webglRenderbuffer[f]=l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=l.TEXTURE_CUBE_MAP_POSITIVE_X+f;l.bindFramebuffer(l.FRAMEBUFFER,
a.__webglFramebuffer[f]);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,h,g.__webglTexture,0);J(a.__webglRenderbuffer[f],a)}c&&l.generateMipmap(l.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=l.createFramebuffer(),a.__webglRenderbuffer=l.createRenderbuffer(),l.bindTexture(l.TEXTURE_2D,a.__webglTexture),H(l.TEXTURE_2D,a,c),l.texImage2D(l.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=l.TEXTURE_2D,l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,
d,a.__webglTexture,0),J(a.__webglRenderbuffer,a),c&&l.generateMipmap(l.TEXTURE_2D);b?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=za,a=xb,d=bb,e=La);b!==ha&&(l.bindFramebuffer(l.FRAMEBUFFER,b),l.viewport(d,e,c,a),ha=b);Fa=c;sb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);
this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var f=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,f);f.h=THREE.Math.clamp(f.h+b,0,1);f.s=THREE.Math.clamp(f.s+c,0,1);f.v=THREE.Math.clamp(f.v+d,0,1);a.setHSV(f.h,f.s,f.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,f=a.b,e=Math.max(Math.max(c,d),f),g=Math.min(Math.min(c,d),f);if(g===e)g=c=0;else{var h=e-g,g=h/e,c=(c===e?(d-f)/h:d===e?2+(f-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=g;b.v=e;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,f=a.vertices.length,e=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=e.vertices,j=a.faces,k=e.faces,m=a.faceVertexUvs[0],n=e.faceVertexUvs[0],p={},q=0;q<a.materials.length;q++)p[a.materials[q].id]=q;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var q=0,r=h.length;q<r;q++){var s=h[q].clone();c&&c.multiplyVector3(s);g.push(s)}q=0;for(r=k.length;q<r;q++){var g=k[q],
w,u,A=g.vertexNormals,x=g.vertexColors;g instanceof THREE.Face3?w=new THREE.Face3(g.a+f,g.b+f,g.c+f):g instanceof THREE.Face4&&(w=new THREE.Face4(g.a+f,g.b+f,g.c+f,g.d+f));w.normal.copy(g.normal);d&&d.multiplyVector3(w.normal);h=0;for(s=A.length;h<s;h++)u=A[h].clone(),d&&d.multiplyVector3(u),w.vertexNormals.push(u);w.color.copy(g.color);h=0;for(s=x.length;h<s;h++)u=x[h],w.vertexColors.push(u.clone());void 0!==g.materialIndex&&(h=e.materials[g.materialIndex],s=h.id,x=p[s],void 0===x&&(x=a.materials.length,
p[s]=x,a.materials.push(h)),w.materialIndex=x);w.centroid.copy(g.centroid);c&&c.multiplyVector3(w.centroid);j.push(w)}q=0;for(r=n.length;q<r;q++){c=n[q];d=[];h=0;for(s=c.length;h<s;h++)d.push(new THREE.UV(c[h].u,c[h].v));m.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,f=a.faces,e=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=f.length;a<c;a++)b.faces.push(f[a].clone());a=0;for(c=e.length;a<
c;a++){for(var d=e[a],f=[],g=0,h=d.length;g<h;g++)f.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(f)}return b},randomPointInTriangle:function(a,b,c){var d,f,e,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();f=THREE.GeometryUtils.random();1<d+f&&(d=1-d,f=1-f);e=1-d-f;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(f);g.addSelf(h);h.copy(c);h.multiplyScalar(e);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,f,e;if(a instanceof THREE.Face3)return d=
b.vertices[a.a],f=b.vertices[a.b],e=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,f,e);if(a instanceof THREE.Face4){d=b.vertices[a.a];f=b.vertices[a.b];e=b.vertices[a.c];b=b.vertices[a.d];var g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,f,b),g=THREE.GeometryUtils.triangleArea(f,e,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,f,b),g=THREE.GeometryUtils.triangleArea(f,e,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,
f,b):THREE.GeometryUtils.randomPointInTriangle(f,e,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,f,e=a.faces,g=a.vertices,h=e.length,j=0,k=[],m,n,p,q;for(f=0;f<h;f++)d=e[f],d instanceof THREE.Face3?(m=g[d.a],n=g[d.b],p=g[d.c],d._area=THREE.GeometryUtils.triangleArea(m,n,p)):d instanceof THREE.Face4&&(m=g[d.a],n=g[d.b],p=g[d.c],q=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(m,
n,q),d._area2=THREE.GeometryUtils.triangleArea(n,p,q),d._area=d._area1+d._area2),j+=d._area,k[f]=j;d=[];for(f=0;f<b;f++)g=THREE.GeometryUtils.random()*j,g=c(g),d[f]=THREE.GeometryUtils.randomPointInFace(e[g],a,!0);return d},triangleArea:function(a,b,c){var d,f=THREE.GeometryUtils.__v1;f.sub(a,b);d=f.length();f.sub(a,c);a=f.length();f.sub(b,c);c=f.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,
b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){a=a.faceVertexUvs[0];for(var b=0,c=a.length;b<c;b++)for(var d=a[b],f=0,e=d.length;f<e;f++)1!==d[f].u&&(d[f].u-=Math.floor(d[f].u)),1!==d[f].v&&(d[f].v-=Math.floor(d[f].v))},triangulateQuads:function(a){var b,c,d,f,e=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=
a.faces[b],d instanceof THREE.Face4){f=d.a;var j=d.b,k=d.c,m=d.d,n=new THREE.Face3,p=new THREE.Face3;n.color.copy(d.color);p.color.copy(d.color);n.materialIndex=d.materialIndex;p.materialIndex=d.materialIndex;n.a=f;n.b=j;n.c=m;p.a=j;p.b=k;p.c=m;4===d.vertexColors.length&&(n.vertexColors[0]=d.vertexColors[0].clone(),n.vertexColors[1]=d.vertexColors[1].clone(),n.vertexColors[2]=d.vertexColors[3].clone(),p.vertexColors[0]=d.vertexColors[1].clone(),p.vertexColors[1]=d.vertexColors[2].clone(),p.vertexColors[2]=
d.vertexColors[3].clone());e.push(n,p);d=0;for(f=a.faceVertexUvs.length;d<f;d++)a.faceVertexUvs[d].length&&(n=a.faceVertexUvs[d][b],j=n[1],k=n[2],m=n[3],n=[n[0].clone(),j.clone(),m.clone()],j=[j.clone(),k.clone(),m.clone()],h[d].push(n,j));d=0;for(f=a.faceUvs.length;d<f;d++)a.faceUvs[d].length&&(j=a.faceUvs[d][b],g[d].push(j,j))}else{e.push(d);d=0;for(f=a.faceUvs.length;d<f;d++)g[d].push(a.faceUvs[d][b]);d=0;for(f=a.faceVertexUvs.length;d<f;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=e;a.faceUvs=
g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var f=b.length,e=a.faces[c];if(e instanceof THREE.Face4){var g=e.a,h=e.b,j=e.c,g=a.vertices[g],h=a.vertices[h],j=a.vertices[j],k=a.vertices[e.d];b.push(g.clone());b.push(h.clone());b.push(j.clone());b.push(k.clone());e.a=f;e.b=f+1;e.c=f+2;e.d=f+3}else g=e.a,h=e.b,j=e.c,g=a.vertices[g],h=a.vertices[h],j=a.vertices[j],
b.push(g.clone()),b.push(h.clone()),b.push(j.clone()),e.a=f,e.b=f+1,e.c=f+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,f,e,g,h,j,k,m,n,p,q,r,s,w,u,A,x,v,t=[],C=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)C[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(f=a.faces[c],f instanceof THREE.Face3)if(e=f.a,g=f.b,h=f.c,k=a.vertices[e],m=a.vertices[g],n=a.vertices[h],q=k.distanceTo(m),r=m.distanceTo(n),p=k.distanceTo(n),q>b||r>b||p>b){j=a.vertices.length;x=f.clone();v=f.clone();q>=r&&
q>=p?(k=k.clone(),k.lerpSelf(m,0.5),x.a=e,x.b=j,x.c=h,v.a=j,v.b=g,v.c=h,3===f.vertexNormals.length&&(e=f.vertexNormals[0].clone(),e.lerpSelf(f.vertexNormals[1],0.5),x.vertexNormals[1].copy(e),v.vertexNormals[0].copy(e)),3===f.vertexColors.length&&(e=f.vertexColors[0].clone(),e.lerpSelf(f.vertexColors[1],0.5),x.vertexColors[1].copy(e),v.vertexColors[0].copy(e)),f=0):r>=q&&r>=p?(k=m.clone(),k.lerpSelf(n,0.5),x.a=e,x.b=g,x.c=j,v.a=j,v.b=h,v.c=e,3===f.vertexNormals.length&&(e=f.vertexNormals[1].clone(),
e.lerpSelf(f.vertexNormals[2],0.5),x.vertexNormals[2].copy(e),v.vertexNormals[0].copy(e),v.vertexNormals[1].copy(f.vertexNormals[2]),v.vertexNormals[2].copy(f.vertexNormals[0])),3===f.vertexColors.length&&(e=f.vertexColors[1].clone(),e.lerpSelf(f.vertexColors[2],0.5),x.vertexColors[2].copy(e),v.vertexColors[0].copy(e),v.vertexColors[1].copy(f.vertexColors[2]),v.vertexColors[2].copy(f.vertexColors[0])),f=1):(k=k.clone(),k.lerpSelf(n,0.5),x.a=e,x.b=g,x.c=j,v.a=j,v.b=g,v.c=h,3===f.vertexNormals.length&&
(e=f.vertexNormals[0].clone(),e.lerpSelf(f.vertexNormals[2],0.5),x.vertexNormals[2].copy(e),v.vertexNormals[0].copy(e)),3===f.vertexColors.length&&(e=f.vertexColors[0].clone(),e.lerpSelf(f.vertexColors[2],0.5),x.vertexColors[2].copy(e),v.vertexColors[0].copy(e)),f=2);t.push(x,v);a.vertices.push(k);e=0;for(g=a.faceVertexUvs.length;e<g;e++)a.faceVertexUvs[e].length&&(k=a.faceVertexUvs[e][c],v=k[0],h=k[1],x=k[2],0===f?(m=v.clone(),m.lerpSelf(h,0.5),k=[v.clone(),m.clone(),x.clone()],h=[m.clone(),h.clone(),
x.clone()]):1===f?(m=h.clone(),m.lerpSelf(x,0.5),k=[v.clone(),h.clone(),m.clone()],h=[m.clone(),x.clone(),v.clone()]):(m=v.clone(),m.lerpSelf(x,0.5),k=[v.clone(),h.clone(),m.clone()],h=[m.clone(),h.clone(),x.clone()]),C[e].push(k,h))}else{t.push(f);e=0;for(g=a.faceVertexUvs.length;e<g;e++)C[e].push(a.faceVertexUvs[e][c])}else if(e=f.a,g=f.b,h=f.c,j=f.d,k=a.vertices[e],m=a.vertices[g],n=a.vertices[h],p=a.vertices[j],q=k.distanceTo(m),r=m.distanceTo(n),s=n.distanceTo(p),w=k.distanceTo(p),q>b||r>b||
s>b||w>b){u=a.vertices.length;A=a.vertices.length+1;x=f.clone();v=f.clone();q>=r&&q>=s&&q>=w||s>=r&&s>=q&&s>=w?(q=k.clone(),q.lerpSelf(m,0.5),m=n.clone(),m.lerpSelf(p,0.5),x.a=e,x.b=u,x.c=A,x.d=j,v.a=u,v.b=g,v.c=h,v.d=A,4===f.vertexNormals.length&&(e=f.vertexNormals[0].clone(),e.lerpSelf(f.vertexNormals[1],0.5),g=f.vertexNormals[2].clone(),g.lerpSelf(f.vertexNormals[3],0.5),x.vertexNormals[1].copy(e),x.vertexNormals[2].copy(g),v.vertexNormals[0].copy(e),v.vertexNormals[3].copy(g)),4===f.vertexColors.length&&
(e=f.vertexColors[0].clone(),e.lerpSelf(f.vertexColors[1],0.5),g=f.vertexColors[2].clone(),g.lerpSelf(f.vertexColors[3],0.5),x.vertexColors[1].copy(e),x.vertexColors[2].copy(g),v.vertexColors[0].copy(e),v.vertexColors[3].copy(g)),f=0):(q=m.clone(),q.lerpSelf(n,0.5),m=p.clone(),m.lerpSelf(k,0.5),x.a=e,x.b=g,x.c=u,x.d=A,v.a=A,v.b=u,v.c=h,v.d=j,4===f.vertexNormals.length&&(e=f.vertexNormals[1].clone(),e.lerpSelf(f.vertexNormals[2],0.5),g=f.vertexNormals[3].clone(),g.lerpSelf(f.vertexNormals[0],0.5),
x.vertexNormals[2].copy(e),x.vertexNormals[3].copy(g),v.vertexNormals[0].copy(g),v.vertexNormals[1].copy(e)),4===f.vertexColors.length&&(e=f.vertexColors[1].clone(),e.lerpSelf(f.vertexColors[2],0.5),g=f.vertexColors[3].clone(),g.lerpSelf(f.vertexColors[0],0.5),x.vertexColors[2].copy(e),x.vertexColors[3].copy(g),v.vertexColors[0].copy(g),v.vertexColors[1].copy(e)),f=1);t.push(x,v);a.vertices.push(q,m);e=0;for(g=a.faceVertexUvs.length;e<g;e++)a.faceVertexUvs[e].length&&(k=a.faceVertexUvs[e][c],v=k[0],
h=k[1],x=k[2],k=k[3],0===f?(m=v.clone(),m.lerpSelf(h,0.5),n=x.clone(),n.lerpSelf(k,0.5),v=[v.clone(),m.clone(),n.clone(),k.clone()],h=[m.clone(),h.clone(),x.clone(),n.clone()]):(m=h.clone(),m.lerpSelf(x,0.5),n=k.clone(),n.lerpSelf(v,0.5),v=[v.clone(),h.clone(),m.clone(),n.clone()],h=[n.clone(),m.clone(),x.clone(),k.clone()]),C[e].push(v,h))}else{t.push(f);e=0;for(g=a.faceVertexUvs.length;e<g;e++)C[e].push(a.faceVertexUvs[e][c])}a.faces=t;a.faceVertexUvs=C}};THREE.GeometryUtils.random=THREE.Math.random16;
THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var f=new Image,e=new THREE.Texture(f,b);b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=a.content;e.needsUpdate=!0;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,f);return e},loadCompressedTexture:function(a,b,c,d){var f=new THREE.CompressedTexture;f.mapping=b;var e=new XMLHttpRequest;e.onload=function(){var a=THREE.ImageUtils.parseDDS(e.response,
!0);f.format=a.format;f.mipmaps=a.mipmaps;f.image.width=a.width;f.image.height=a.height;f.generateMipmaps=!1;f.needsUpdate=!0;c&&c(f)};e.onerror=d;e.open("GET",a,!0);e.responseType="arraybuffer";e.send(null);return f},loadTextureCube:function(a,b,c,d){var f=[];f.loadCount=0;var e=new THREE.Texture;e.image=f;void 0!==b&&(e.mapping=b);e.flipY=!1;b=0;for(var g=a.length;b<g;++b){var h=new Image;f[b]=h;h.onload=function(){f.loadCount+=1;6===f.loadCount&&(e.needsUpdate=!0,c&&c())};h.onerror=d;h.crossOrigin=
this.crossOrigin;h.src=a[b]}return e},loadCompressedTextureCube:function(a,b,c,d){var f=[];f.loadCount=0;var e=new THREE.CompressedTexture;e.image=f;void 0!==b&&(e.mapping=b);e.flipY=!1;e.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;f.loadCount+=1;6===f.loadCount&&(e.format=d.format,e.needsUpdate=!0,c&&c())}};for(var g=0,h=a.length;g<h;++g){var j={};f[g]=j;var k=new XMLHttpRequest;
k.onload=b(k,j);k.onerror=d;k.open("GET",a[g],!0);k.responseType="arraybuffer";k.send(null)}return e},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},f=c("DXT1"),e=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var j=h[21];switch(j){case f:f=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case e:f=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:f=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(j&255,j>>8&255,j>>16&255,j>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.width=h[4];d.height=h[3];h=h[1]+4;e=d.width;g=d.height;for(j=0;j<d.mipmapCount;j++){var k=Math.max(4,e)/
4*Math.max(4,g)/4*f,m={data:new Uint8Array(a,h,k),width:e,height:g};d.mipmaps.push(m);h+=k;e=Math.max(0.5*e,1);g=Math.max(0.5*g,1)}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,f=a.height,e=document.createElement("canvas");e.width=d;e.height=f;var g=e.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,f).data,j=g.createImageData(d,f),k=j.data,m=0;m<d;m++)for(var n=0;n<f;n++){var p=
0>n-1?0:n-1,q=n+1>f-1?f-1:n+1,r=0>m-1?0:m-1,s=m+1>d-1?d-1:m+1,w=[],u=[0,0,h[4*(n*d+m)]/255*b];w.push([-1,0,h[4*(n*d+r)]/255*b]);w.push([-1,-1,h[4*(p*d+r)]/255*b]);w.push([0,-1,h[4*(p*d+m)]/255*b]);w.push([1,-1,h[4*(p*d+s)]/255*b]);w.push([1,0,h[4*(n*d+s)]/255*b]);w.push([1,1,h[4*(q*d+s)]/255*b]);w.push([0,1,h[4*(q*d+m)]/255*b]);w.push([-1,1,h[4*(q*d+r)]/255*b]);p=[];r=w.length;for(q=0;q<r;q++){var s=w[q],A=w[(q+1)%r],s=[s[0]-u[0],s[1]-u[1],s[2]-u[2]],A=[A[0]-u[0],A[1]-u[1],A[2]-u[2]];p.push(c([s[1]*
A[2]-s[2]*A[1],s[2]*A[0]-s[0]*A[2],s[0]*A[1]-s[1]*A[0]]))}w=[0,0,0];for(q=0;q<p.length;q++)w[0]+=p[q][0],w[1]+=p[q][1],w[2]+=p[q][2];w[0]/=p.length;w[1]/=p.length;w[2]/=p.length;u=4*(n*d+m);k[u]=255*((w[0]+1)/2)|0;k[u+1]=255*((w[1]+1)/2)|0;k[u+2]=255*w[2]|0;k[u+3]=255}g.putImageData(j,0,0);return e},generateDataTexture:function(a,b,c){var d=a*b,f=new Uint8Array(3*d),e=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)f[3*h]=e,f[3*h+1]=g,f[3*h+2]=c;a=new THREE.DataTexture(f,
a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,f=b.length;d<f;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalMatrix * skinnedNormal.xyz;\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalMatrix * skinnedTangent.xyz;\n#else\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\n#endif\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = mPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}});
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,f=
String(a).split(""),e=f.length,g=[];for(a=0;a<e;a++){var h=new THREE.Path,h=this.extractGlyphPoints(f[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,f){var e=[],g,h,j,k,m,n,p,q,r,s,w,u=b.glyphs[a]||b.glyphs["?"];if(u){if(u.o){b=u._cachedOutline||(u._cachedOutline=u.o.split(" "));k=b.length;for(a=0;a<k;)switch(j=b[a++],j){case "m":j=b[a++]*c+d;m=b[a++]*c;f.moveTo(j,m);break;case "l":j=b[a++]*c+d;m=b[a++]*c;f.lineTo(j,m);break;case "q":j=b[a++]*
c+d;m=b[a++]*c;q=b[a++]*c+d;r=b[a++]*c;f.quadraticCurveTo(q,r,j,m);if(g=e[e.length-1]){n=g.x;p=g.y;g=1;for(h=this.divisions;g<=h;g++){var A=g/h;THREE.Shape.Utils.b2(A,n,q,j);THREE.Shape.Utils.b2(A,p,r,m)}}break;case "b":if(j=b[a++]*c+d,m=b[a++]*c,q=b[a++]*c+d,r=b[a++]*-c,s=b[a++]*c+d,w=b[a++]*-c,f.bezierCurveTo(j,m,q,r,s,w),g=e[e.length-1]){n=g.x;p=g.y;g=1;for(h=this.divisions;g<=h;g++)A=g/h,THREE.Shape.Utils.b3(A,n,q,s,j),THREE.Shape.Utils.b3(A,p,r,w,m)}}}return{offset:u.ha*c,path:f}}}};
THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",e=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=f;THREE.FontUtils.style=e;c=THREE.FontUtils.drawText(a).paths;d=[];f=0;for(e=c.length;f<e;f++)Array.prototype.push.apply(d,c[f].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,f=0,e=b-1,g=0;g<b;e=g++)f+=a[e].x*a[g].y-a[g].x*a[e].y;return 0.5*f};a.Triangulate=function(a,d){var f=a.length;if(3>f)return null;var e=[],g=[],h=[],j,k,m;if(0<b(a))for(k=0;k<f;k++)g[k]=k;else for(k=0;k<f;k++)g[k]=f-1-k;var n=2*f;for(k=f-1;2<f;){if(0>=n--){console.log("Warning, unable to triangulate polygon!");break}j=k;f<=j&&(j=0);k=j+1;f<=k&&(k=0);m=k+1;f<=m&&(m=0);var p;a:{p=a;var q=j,r=k,s=m,w=f,u=g,A=void 0,x=void 0,v=void 0,t=void 0,C=void 0,
z=void 0,D=void 0,E=void 0,H=void 0,x=p[u[q]].x,v=p[u[q]].y,t=p[u[r]].x,C=p[u[r]].y,z=p[u[s]].x,D=p[u[s]].y;if(1E-10>(t-x)*(D-v)-(C-v)*(z-x))p=!1;else{for(A=0;A<w;A++)if(!(A==q||A==r||A==s)){var E=p[u[A]].x,H=p[u[A]].y,J=void 0,K=void 0,G=void 0,O=void 0,M=void 0,I=void 0,L=void 0,N=void 0,T=void 0,ba=void 0,$=void 0,Q=void 0,J=G=M=void 0,J=z-t,K=D-C,G=x-z,O=v-D,M=t-x,I=C-v,L=E-x,N=H-v,T=E-t,ba=H-C,$=E-z,Q=H-D,J=J*ba-K*T,M=M*N-I*L,G=G*Q-O*$;if(0<=J&&0<=G&&0<=M){p=!1;break a}}p=!0}}if(p){e.push([a[g[j]],
a[g[k]],a[g[m]]]);h.push([g[j],g[k],g[m]]);j=k;for(m=k+1;m<f;j++,m++)g[j]=g[m];f--;n=2*f}}return d?h:e};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),f,e=0;b.push(0);for(f=1;f<=a;f++)c=this.getPoint(f/a),e+=c.distanceTo(d),b.push(e),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,f=c.length,e;e=b?b:a*c[f-1];for(var g=0,h=f-1,j;g<=h;)if(d=Math.floor(g+(h-g)/2),j=c[d]-e,0>j)g=d+1;else if(0<j)h=d-1;else{h=d;break}d=h;if(c[d]==e)return d/(f-1);g=c[d];return c=(d+(e-g)/(c[d+1]-g))/(f-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,f;f=(d.length-1)*a;a=Math.floor(f);f-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);return b};
THREE.EllipseCurve=function(a,b,c,d,f,e,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=f;this.aEndAngle=e;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,f,e){THREE.EllipseCurve.call(this,a,b,c,c,d,f,e)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,f){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*f},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,f){a=0.5*(c-a);d=0.5*(d-b);var e=f*f;return(2*b-2*c+a+d)*f*e+(-3*b+3*c-2*a-d)*e+a*f+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f;a*=d.length-1;f=Math.floor(a);a-=f;c[0]=0==f?f:f-1;c[1]=f;c[2]=f>d.length-2?d.length-1:f+1;c[3]=f>d.length-3?d.length-1:f+2;f=d[c[0]];var e=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(f.x,e.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(f.y,e.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(f.z,e.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f;f=(d.length-0)*a;a=Math.floor(f);f-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,f);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,f,e,g;b=c=Number.NEGATIVE_INFINITY;f=e=Number.POSITIVE_INFINITY;var h,j,k,m,n=a[0]instanceof THREE.Vector3;m=n?new THREE.Vector3:new THREE.Vector2;j=0;for(k=a.length;j<k;j++)h=a[j],h.x>b?b=h.x:h.x<f&&(f=h.x),h.y>c?c=h.y:h.y<e&&(e=h.y),n&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),m.addSelf(h);a={minX:f,minY:e,maxX:b,maxY:c,centroid:m.divideScalar(k)};n&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,f;b||(b=this.bends);d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,f;b||(b=this.bends);d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,f,e,g,h,j;d=0;for(f=a.length;d<f;d++)e=a[d],g=e.x,h=e.y,j=g/c.maxX,j=b.getUtoTmapping(j,g),g=b.getPoint(j),h=b.getNormalVector(j).multiplyScalar(h),e.x=g.x+h.x,e.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var f=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,e=new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(e);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,f,e){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(f,e));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,f,e){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,f,e)};
THREE.Path.prototype.absarc=function(a,b,c,d,f,e){this.absellipse(a,b,c,c,d,f,e)};THREE.Path.prototype.ellipse=function(a,b,c,d,f,e,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,f,e,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,f,e,g){var h=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(a,b,c,d,f,e,g);this.curves.push(j);j=j.getPoint(g?1:0);h.push(j.x);h.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,f,e,g,h,j,k,m,n,p,q,r,s;d=0;for(f=this.actions.length;d<f;d++)switch(e=this.actions[d],g=e.action,e=e.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=e[2];j=e[3];n=e[0];p=e[1];0<c.length?(g=c[c.length-1],q=g.x,
r=g.y):(g=this.actions[d-1].args,q=g[g.length-2],r=g[g.length-1]);for(e=1;e<=a;e++)s=e/a,g=THREE.Shape.Utils.b2(s,q,n,h),s=THREE.Shape.Utils.b2(s,r,p,j),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.BEZIER_CURVE_TO:h=e[4];j=e[5];n=e[0];p=e[1];k=e[2];m=e[3];0<c.length?(g=c[c.length-1],q=g.x,r=g.y):(g=this.actions[d-1].args,q=g[g.length-2],r=g[g.length-1]);for(e=1;e<=a;e++)s=e/a,g=THREE.Shape.Utils.b3(s,q,n,k,h),s=THREE.Shape.Utils.b3(s,r,p,m,j),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;s=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*e[0].length;s=s.concat(e[0]);s=new THREE.SplineCurve(s);for(e=1;e<=g;e++)c.push(s.getPointAt(e/g));break;case THREE.PathActions.ARC:h=e[0];j=e[1];p=e[2];k=e[3];g=e[4];n=!!e[5];q=g-k;r=2*a;for(e=1;e<=r;e++)s=e/r,n||(s=1-s),s=k+s*q,g=h+p*Math.cos(s),s=j+p*Math.sin(s),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.ELLIPSE:h=e[0];j=e[1];p=e[2];m=e[3];k=e[4];g=e[5];n=!!e[6];q=g-k;r=2*a;for(e=1;e<=r;e++)s=e/r,n||
(s=1-s),s=k+s*q,g=h+p*Math.cos(s),s=j+m*Math.sin(s),c.push(new THREE.Vector2(g,s))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,f=[],e=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=e.actions.length&&(f.push(e),e=new THREE.Path),e[c].apply(e,d);0!=e.actions.length&&f.push(e);if(0==f.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(1==f.length)return e=f[0],g=new THREE.Shape,g.actions=e.actions,g.curves=e.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=f.length;a<
b;a++)e=f[a],THREE.Shape.Utils.isClockWise(e.getPoints())?(g.actions=e.actions,g.curves=e.curves,d.push(g),g=new THREE.Shape):g.holes.push(e)}else{a=0;for(b=f.length;a<b;a++)e=f[a],THREE.Shape.Utils.isClockWise(e.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=e.actions,g.curves=e.curves):g.holes.push(e);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),f,e,g,h,j,k,m,n,p,q,r=[];for(j=0;j<b.length;j++){k=b[j];Array.prototype.push.apply(d,k);e=Number.POSITIVE_INFINITY;for(f=0;f<k.length;f++){p=k[f];q=[];for(n=0;n<c.length;n++)m=c[n],m=p.distanceToSquared(m),q.push(m),m<e&&(e=m,g=f,h=n)}f=0<=h-1?h-1:c.length-1;e=0<=g-1?g-1:k.length-1;var s=[k[g],c[h],c[f]];n=THREE.FontUtils.Triangulate.area(s);var w=[k[g],k[e],c[h]];p=THREE.FontUtils.Triangulate.area(w);q=h;m=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=k.length);g%=k.length;f=0<=h-1?h-1:c.length-1;e=0<=g-1?g-1:k.length-1;s=[k[g],c[h],c[f]];s=THREE.FontUtils.Triangulate.area(s);w=[k[g],k[e],c[h]];w=THREE.FontUtils.Triangulate.area(w);n+p>s+w&&(h=q,g=m,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=k.length),g%=k.length,f=0<=h-1?h-1:c.length-1,e=0<=g-1?g-1:k.length-1);n=c.slice(0,h);p=c.slice(h);q=k.slice(g);m=k.slice(0,g);e=[k[g],k[e],c[h]];r.push([k[g],c[h],c[f]]);r.push(e);c=n.concat(q).concat(m).concat(p)}return{shape:c,
isolatedPts:r,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,f=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),e,g,h,j,k={};e=0;for(g=d.length;e<g;e++)j=d[e].x+":"+d[e].y,void 0!==k[j]&&console.log("Duplicate point",j),k[j]=e;e=0;for(g=c.length;e<g;e++){h=c[e];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=k[j],void 0!==j&&(h[d]=j)}e=0;for(g=f.length;e<g;e++){h=f[e];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=k[j],void 0!==j&&(h[d]=j)}return c.concat(f)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,f){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,f)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++){var k=a.hierarchy[c].keys[d].morphTargets[j];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var m={};for(k in h){for(j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++)if(a.hierarchy[c].keys[d].morphTargets[j]===k){m[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[j];break}j===a.hierarchy[c].keys[d].morphTargets.length&&(m[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=m}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,f;for(c=0;c<d;c++){f=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(f.useQuaternion=!0);f.matrixAutoUpdate=!0;void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey={pos:0,rot:0,scl:0},f.animationCache.nextKey={pos:0,rot:0,scl:0},f.animationCache.originalMatrix=f instanceof
THREE.Bone?f.skinMatrix:f.matrix);var e=f.animationCache.prevKey;f=f.animationCache.nextKey;e.pos=this.data.hierarchy[c].keys[0];e.rot=this.data.hierarchy[c].keys[0];e.scl=this.data.hierarchy[c].keys[0];f.pos=this.getNextKeyWith("pos",c,1);f.rot=this.getNextKeyWith("rot",c,1);f.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,f,e,g,h,j,k,m;m=this.currentTime+=a*this.timeScale;k=this.currentTime%=this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var n=0,p=this.hierarchy.length;n<p;n++){a=this.hierarchy[n];j=a.animationCache;for(var q=0;3>q;q++){c=b[q];g=j.prevKey[c];h=j.nextKey[c];if(h.time<=m){if(k<m)if(this.loop){g=this.data.hierarchy[n].keys[0];for(h=this.getNextKeyWith(c,n,1);h.time<
k;)g=h,h=this.getNextKeyWith(c,n,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,n,h.index+1);while(h.time<k)}j.prevKey[c]=g;j.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(k-g.time)/(h.time-g.time);f=g[c];e=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+n),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=f[0]+(e[0]-f[0])*d,c.y=f[1]+(e[1]-f[1])*d,c.z=f[2]+
(e[2]-f[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",n,g.index-1).pos,this.points[1]=f,this.points[2]=e,this.points[3]=this.getNextKeyWith("pos",n,h.index+1).pos,d=0.33*d+0.33,f=this.interpolateCatmullRom(this.points,d),c.x=f[0],c.y=f[1],c.z=f[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(f,e,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=f[0]+(e[0]-f[0])*d,c.y=f[1]+(e[1]-f[1])*d,c.z=f[2]+(e[2]-f[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],f,e,g,h,j,k;f=(a.length-1)*b;e=Math.floor(f);f-=e;c[0]=0===e?e:e-1;c[1]=e;c[2]=e>a.length-2?e:e+1;c[3]=e>a.length-3?e:e+2;e=a[c[0]];h=a[c[1]];j=a[c[2]];k=a[c[3]];c=f*f;g=f*c;d[0]=this.interpolate(e[0],h[0],j[0],k[0],f,c,g);d[1]=this.interpolate(e[1],h[1],j[1],k[1],f,c,g);d[2]=this.interpolate(e[2],h[2],j[2],k[2],f,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,f,e,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.0010;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){c=this.data.hierarchy[a].sids;var d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var f=0;f<c.length;f++){var e=c[f],g=this.getNextKeyWith(e,a,0);g&&g.apply(e)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,f,e;for(c=0;c<d;c++)f=this.hierarchy[c],e=this.data.hierarchy[c],f.useQuaternion=!0,void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey=null,e.animationCache.nextKey=null,e.animationCache.originalMatrix=f instanceof THREE.Bone?f.skinMatrix:
f.matrix),f=this.data.hierarchy[c].keys,f.length&&(e.animationCache.prevKey=f[0],e.animationCache.nextKey=f[1],this.startTime=Math.min(f[0].time,this.startTime),this.endTime=Math.max(f[f.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,f,e=this.data.JIT.hierarchy,g,h,j;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);f=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((j=g<h)&&!this.loop){a=0;for(var k=this.hierarchy.length;a<k;a++){var m=this.data.hierarchy[a].keys,e=this.data.hierarchy[a].sids;d=m.length-1;f=this.hierarchy[a];if(m.length){for(m=
0;m<e.length;m++)g=e[m],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();f.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var m=b.keys,n=b.animationCache;if(this.JITCompile&&void 0!==e[a][f])d instanceof THREE.Bone?(d.skinMatrix=e[a][f],d.matrixWorldNeedsUpdate=!1):(d.matrix=e[a][f],d.matrixWorldNeedsUpdate=!0);else if(m.length){this.JITCompile&&n&&(d instanceof
THREE.Bone?d.skinMatrix=n.originalMatrix:d.matrix=n.originalMatrix);b=n.prevKey;c=n.nextKey;if(b&&c){if(c.time<=h){if(j&&this.loop){b=m[0];for(c=m[1];c.time<g;)b=c,c=m[b.index+1]}else if(!j)for(var p=m.length-1;c.time<g&&c.index!==p;)b=c,c=m[b.index+1];n.prevKey=b;n.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===e[0][f]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)e[a][f]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,-1,0);f.lookAt(new THREE.Vector3(-1,0,0));this.add(f);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,0,1);e.lookAt(new THREE.Vector3(0,1,0));this.add(e);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var j=new THREE.PerspectiveCamera(90,1,a,b);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,p=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,f,c);c.activeCubeFace=
2;a.render(b,e,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=p;c.activeCubeFace=5;a.render(b,j,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,f,e,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,e,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,f);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*Math.atan(b/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);a=a||50;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;b=void 0!==b?Math.max(3,b):8;var f,e=[];f=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(f);e.push(g);for(f=0;f<=b;f++){var h=new THREE.Vector3;h.x=a*Math.cos(c+f/b*d);h.y=a*Math.sin(c+f/b*d);this.vertices.push(h);e.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(f=1;f<=b;f++)this.faces.push(new THREE.Face3(f,f+1,0,[c,c,c])),this.faceVertexUvs[0].push([e[f],
e[f+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,f,e,g,h){function j(a,b,c,g,h,j,m,u){var n,p=d||1,q=f||1,r=h/2,s=j/2,x=k.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)n="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)n="y",q=e||1;else if("z"===a&&"y"===b||"y"===a&&"z"===b)n="x",p=e||1;var A=p+1,w=q+1,ba=h/p,$=j/q,Q=new THREE.Vector3;Q[n]=0<m?1:-1;for(h=0;h<w;h++)for(j=0;j<A;j++){var ga=new THREE.Vector3;ga[a]=(j*ba-r)*c;ga[b]=(h*$-s)*g;ga[n]=m;k.vertices.push(ga)}for(h=0;h<q;h++)for(j=0;j<p;j++)a=new THREE.Face4(j+
A*h+x,j+A*(h+1)+x,j+1+A*(h+1)+x,j+1+A*h+x),a.normal.copy(Q),a.vertexNormals.push(Q.clone(),Q.clone(),Q.clone(),Q.clone()),a.materialIndex=u,k.faces.push(a),k.faceVertexUvs[0].push([new THREE.UV(j/p,1-h/q),new THREE.UV(j/p,1-(h+1)/q),new THREE.UV((j+1)/p,1-(h+1)/q),new THREE.UV((j+1)/p,1-h/q)])}THREE.Geometry.call(this);var k=this,m=a/2,n=b/2,p=c/2,q,r,s,w,u,A;if(void 0!==g){if(g instanceof Array)this.materials=g;else{this.materials=[];for(q=0;6>q;q++)this.materials.push(g)}q=0;w=1;r=2;u=3;s=4;A=5}else this.materials=
[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(void 0!=h)for(var x in h)void 0!==this.sides[x]&&(this.sides[x]=h[x]);this.sides.px&&j("z","y",-1,-1,c,b,m,q);this.sides.nx&&j("z","y",1,-1,c,b,-m,w);this.sides.py&&j("x","z",1,1,a,c,n,r);this.sides.ny&&j("x","z",1,-1,a,c,-n,u);this.sides.pz&&j("x","y",1,-1,a,b,p,s);this.sides.nz&&j("x","y",-1,-1,a,b,-p,A);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,f,e){THREE.Geometry.call(this);a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;var g=c/2;d=d||8;f=f||1;var h,j,k=[],m=[];for(j=0;j<=f;j++){var n=[],p=[],q=j/f,r=q*(b-a)+a;for(h=0;h<=d;h++){var s=h/d,w=new THREE.Vector3;w.x=r*Math.sin(2*s*Math.PI);w.y=-q*c+g;w.z=r*Math.cos(2*s*Math.PI);this.vertices.push(w);n.push(this.vertices.length-1);p.push(new THREE.UV(s,1-q))}k.push(n);m.push(p)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(n=this.vertices[k[0][h]].clone(),
p=this.vertices[k[0][h+1]].clone()):(n=this.vertices[k[1][h]].clone(),p=this.vertices[k[1][h+1]].clone());n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*c).normalize();p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*c).normalize();for(j=0;j<f;j++){var q=k[j][h],r=k[j+1][h],s=k[j+1][h+1],w=k[j][h+1],u=n.clone(),A=n.clone(),x=p.clone(),v=p.clone(),t=m[j][h].clone(),C=m[j+1][h].clone(),z=m[j+1][h+1].clone(),D=m[j][h+1].clone();this.faces.push(new THREE.Face4(q,r,s,w,[u,A,x,v]));this.faceVertexUvs[0].push([t,C,z,D])}}if(!e&&0<
a){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++)q=k[0][h],r=k[0][h+1],s=this.vertices.length-1,u=new THREE.Vector3(0,1,0),A=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),t=m[0][h].clone(),C=m[0][h+1].clone(),z=new THREE.UV(C.u,0),this.faces.push(new THREE.Face3(q,r,s,[u,A,x])),this.faceVertexUvs[0].push([t,C,z])}if(!e&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)q=k[j][h+1],r=k[j][h],s=this.vertices.length-1,u=new THREE.Vector3(0,-1,0),A=new THREE.Vector3(0,
-1,0),x=new THREE.Vector3(0,-1,0),t=m[j][h+1].clone(),C=m[j][h].clone(),z=new THREE.UV(C.u,1),this.faces.push(new THREE.Face3(q,r,s,[u,A,x])),this.faceVertexUvs[0].push([t,C,z])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,j=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);j.copy(a).addSelf(g);if(h.equals(j))return g.clone();
h.copy(b).addSelf(f);j.copy(c).addSelf(g);f=d.dot(g);g=j.subSelf(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function f(c,d){var e,f;for(Q=c.length;0<=--Q;){e=Q;f=Q-1;0>f&&(f=c.length-1);
for(var g=0,h=p+2*m,g=0;g<h;g++){var j=T*g,k=T*(g+1),n=d+e+j,j=d+f+j,q=d+f+k,k=d+e+k,t=c,r=g,v=h,s=e,x=f,n=n+J,j=j+J,q=q+J,k=k+J;H.faces.push(new THREE.Face4(n,j,q,k,null,null,u));n=A.generateSideWallUV(H,a,t,b,n,j,q,k,r,v,s,x);H.faceVertexUvs[0].push(n)}}}function e(a,b,c){H.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=J;d+=J;e+=J;H.faces.push(new THREE.Face3(c,d,e,null,null,w));c=f?A.generateBottomUV(H,a,b,c,d,e):A.generateTopUV(H,a,b,c,d,e);H.faceVertexUvs[0].push(c)}var h=void 0!==
b.amount?b.amount:100,j=void 0!==b.bevelThickness?b.bevelThickness:6,k=void 0!==b.bevelSize?b.bevelSize:j-2,m=void 0!==b.bevelSegments?b.bevelSegments:3,n=void 0!==b.bevelEnabled?b.bevelEnabled:!0,p=void 0!==b.steps?b.steps:1,q=b.extrudePath,r,s=!1,w=b.material,u=b.extrudeMaterial,A=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,x,v,t,C;q&&(r=q.getSpacedPoints(p),s=!0,n=!1,x=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(q,p,!1),v=new THREE.Vector3,t=new THREE.Vector3,
C=new THREE.Vector3);n||(k=j=m=0);var z,D,E,H=this,J=this.vertices.length,q=a.extractPoints(),K=q.shape,q=q.holes,G=!THREE.Shape.Utils.isClockWise(K);if(G){K=K.reverse();D=0;for(E=q.length;D<E;D++)z=q[D],THREE.Shape.Utils.isClockWise(z)&&(q[D]=z.reverse());G=!1}var O=THREE.Shape.Utils.triangulateShape(K,q),G=K;D=0;for(E=q.length;D<E;D++)z=q[D],K=K.concat(z);var M,I,L,N,T=K.length,ba=O.length,$=[],Q=0,ga=G.length;M=ga-1;for(I=Q+1;Q<ga;Q++,M++,I++)M===ga&&(M=0),I===ga&&(I=0),$[Q]=d(G[Q],G[M],G[I]);
var S=[],ta,oa=$.concat();D=0;for(E=q.length;D<E;D++){z=q[D];ta=[];Q=0;ga=z.length;M=ga-1;for(I=Q+1;Q<ga;Q++,M++,I++)M===ga&&(M=0),I===ga&&(I=0),ta[Q]=d(z[Q],z[M],z[I]);S.push(ta);oa=oa.concat(ta)}for(M=0;M<m;M++){z=M/m;L=j*(1-z);I=k*Math.sin(z*Math.PI/2);Q=0;for(ga=G.length;Q<ga;Q++)N=c(G[Q],$[Q],I),e(N.x,N.y,-L);D=0;for(E=q.length;D<E;D++){z=q[D];ta=S[D];Q=0;for(ga=z.length;Q<ga;Q++)N=c(z[Q],ta[Q],I),e(N.x,N.y,-L)}}I=k;for(Q=0;Q<T;Q++)N=n?c(K[Q],oa[Q],I):K[Q],s?(t.copy(x.normals[0]).multiplyScalar(N.x),
v.copy(x.binormals[0]).multiplyScalar(N.y),C.copy(r[0]).addSelf(t).addSelf(v),e(C.x,C.y,C.z)):e(N.x,N.y,0);for(z=1;z<=p;z++)for(Q=0;Q<T;Q++)N=n?c(K[Q],oa[Q],I):K[Q],s?(t.copy(x.normals[z]).multiplyScalar(N.x),v.copy(x.binormals[z]).multiplyScalar(N.y),C.copy(r[z]).addSelf(t).addSelf(v),e(C.x,C.y,C.z)):e(N.x,N.y,h/p*z);for(M=m-1;0<=M;M--){z=M/m;L=j*(1-z);I=k*Math.sin(z*Math.PI/2);Q=0;for(ga=G.length;Q<ga;Q++)N=c(G[Q],$[Q],I),e(N.x,N.y,h+L);D=0;for(E=q.length;D<E;D++){z=q[D];ta=S[D];Q=0;for(ga=z.length;Q<
ga;Q++)N=c(z[Q],ta[Q],I),s?e(N.x,N.y+r[p-1].y,r[p-1].x+L):e(N.x,N.y,h+L)}}if(n){j=0*T;for(Q=0;Q<ba;Q++)h=O[Q],g(h[2]+j,h[1]+j,h[0]+j,!0);j=T*(p+2*m);for(Q=0;Q<ba;Q++)h=O[Q],g(h[0]+j,h[1]+j,h[2]+j,!1)}else{for(Q=0;Q<ba;Q++)h=O[Q],g(h[2],h[1],h[0],!0);for(Q=0;Q<ba;Q++)h=O[Q],g(h[0]+T*p,h[1]+T*p,h[2]+T*p,!1)}h=0;f(G,h);h+=G.length;D=0;for(E=q.length;D<E;D++)z=q[D],f(z,h),h+=z.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,f,e){b=a.vertices[f].x;f=a.vertices[f].y;c=a.vertices[e].x;e=a.vertices[e].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,f),new THREE.UV(c,e)]},generateBottomUV:function(a,b,c,d,f,e){return this.generateTopUV(a,b,c,d,f,e)},generateSideWallUV:function(a,b,c,d,f,e,g,h){b=a.vertices[f].x;c=a.vertices[f].y;f=a.vertices[f].z;d=a.vertices[e].x;var j=a.vertices[e].y;e=a.vertices[e].z;var k=a.vertices[g].x,m=a.vertices[g].y;
g=a.vertices[g].z;var n=a.vertices[h].x,p=a.vertices[h].y;a=a.vertices[h].z;return 0.01>Math.abs(c-j)?[new THREE.UV(b,1-f),new THREE.UV(d,1-e),new THREE.UV(k,1-g),new THREE.UV(n,1-a)]:[new THREE.UV(c,1-f),new THREE.UV(j,1-e),new THREE.UV(m,1-g),new THREE.UV(p,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,f,e,g,h=this.vertices.length;f=a.extractPoints();var j=f.shape,k=f.holes;if(!THREE.Shape.Utils.isClockWise(j)){j=j.reverse();f=0;for(e=k.length;f<e;f++)g=k[f],THREE.Shape.Utils.isClockWise(g)&&(k[f]=g.reverse())}var m=THREE.Shape.Utils.triangulateShape(j,k);f=0;for(e=k.length;f<e;f++)g=k[f],j=j.concat(g);k=j.length;e=m.length;for(f=
0;f<k;f++)g=j[f],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(f=0;f<e;f++)k=m[f],j=k[0]+h,g=k[1]+h,k=k[2]+h,this.faces.push(new THREE.Face3(j,g,k,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,j,g,k))};
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);b=b||12;c=c||2*Math.PI;for(var d=[],f=(new THREE.Matrix4).makeRotationZ(c/b),e=0;e<a.length;e++)d[e]=a[e].clone(),this.vertices.push(d[e]);var g=b+1;for(c=0;c<g;c++)for(e=0;e<d.length;e++)d[e]=f.multiplyVector3(d[e].clone()),this.vertices.push(d[e]);for(c=0;c<b;c++){d=0;for(f=a.length;d<f-1;d++)this.faces.push(new THREE.Face4(c*f+d,(c+1)%g*f+d,(c+1)%g*f+(d+1)%f,c*f+(d+1)%f)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/f),new THREE.UV(1-
(c+1)/b,d/f),new THREE.UV(1-(c+1)/b,(d+1)/f),new THREE.UV(1-c/b,(d+1)/f)])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);var f=a/2,e=b/2;c=c||1;d=d||1;var g=c+1,h=d+1,j=a/c,k=b/d,m=new THREE.Vector3(0,0,1);for(a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*j-f,-(a*k-e),0));for(a=0;a<d;a++)for(b=0;b<c;b++)f=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),f.normal.copy(m),f.vertexNormals.push(m.clone(),m.clone(),m.clone(),m.clone()),this.faces.push(f),this.faceVertexUvs[0].push([new THREE.UV(b/c,1-a/d),new THREE.UV(b/c,1-(a+1)/d),
new THREE.UV((b+1)/c,1-(a+1)/d),new THREE.UV((b+1)/c,1-a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,f,e,g){THREE.Geometry.call(this);a=a||50;d=void 0!==d?d:0;f=void 0!==f?f:2*Math.PI;e=void 0!==e?e:0;g=void 0!==g?g:Math.PI;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);var h,j,k=[],m=[];for(j=0;j<=c;j++){var n=[],p=[];for(h=0;h<=b;h++){var q=h/b,r=j/c,s=new THREE.Vector3;s.x=-a*Math.cos(d+q*f)*Math.sin(e+r*g);s.y=a*Math.cos(e+r*g);s.z=a*Math.sin(d+q*f)*Math.sin(e+r*g);this.vertices.push(s);n.push(this.vertices.length-1);p.push(new THREE.UV(q,
1-r))}k.push(n);m.push(p)}for(j=0;j<c;j++)for(h=0;h<b;h++){d=k[j][h+1];f=k[j][h];e=k[j+1][h];g=k[j+1][h+1];var n=this.vertices[d].clone().normalize(),p=this.vertices[f].clone().normalize(),q=this.vertices[e].clone().normalize(),r=this.vertices[g].clone().normalize(),s=m[j][h+1].clone(),w=m[j][h].clone(),u=m[j+1][h].clone(),A=m[j+1][h+1].clone();Math.abs(this.vertices[d].y)==a?(this.faces.push(new THREE.Face3(d,e,g,[n,q,r])),this.faceVertexUvs[0].push([s,u,A])):Math.abs(this.vertices[e].y)==a?(this.faces.push(new THREE.Face3(d,
f,e,[n,p,q])),this.faceVertexUvs[0].push([s,w,u])):(this.faces.push(new THREE.Face4(d,f,e,g,[n,p,q,r])),this.faceVertexUvs[0].push([s,w,u,A]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,f){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=f||2*Math.PI;f=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var e=d/this.tubularSegments*this.arc,g=2*c/this.radialSegments*Math.PI;f.x=this.radius*Math.cos(e);f.y=this.radius*Math.sin(e);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(e);h.y=(this.radius+this.tube*
Math.cos(g))*Math.sin(e);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().subSelf(f).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){f=(this.tubularSegments+1)*c+d-1;var e=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,j=new THREE.Face4(f,e,g,h,[b[f],b[e],b[g],b[h]]);j.normal.addSelf(b[f]);j.normal.addSelf(b[e]);j.normal.addSelf(b[g]);
j.normal.addSelf(b[h]);j.normal.normalize();this.faces.push(j);this.faceVertexUvs[0].push([a[f].clone(),a[e].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,f,e,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=f||2;this.q=e||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;f=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var j=2*(a/this.radialSegments)*this.p*Math.PI;g=2*(b/this.tubularSegments)*Math.PI;e=h(j,g,this.q,this.p,this.radius,this.heightScale);j=h(j+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(j,e);d.add(j,e);f.cross(c,d);d.cross(f,c);f.normalize();d.normalize();j=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);e.x+=j*d.x+g*f.x;e.y+=j*d.y+g*f.y;e.z+=j*d.z+g*f.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(e.x,e.y,e.z))-1}}for(a=
0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){f=(a+1)%this.radialSegments;e=(b+1)%this.tubularSegments;c=this.grid[a][b];d=this.grid[f][b];f=this.grid[f][e];e=this.grid[a][e];g=new THREE.UV(a/this.radialSegments,b/this.tubularSegments);var j=new THREE.UV((a+1)/this.radialSegments,b/this.tubularSegments),k=new THREE.UV((a+1)/this.radialSegments,(b+1)/this.tubularSegments),m=new THREE.UV(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,d,f,e));this.faceVertexUvs[0].push([g,
j,k,m])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,f,e){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=f||!1;e&&(this.debug=new THREE.Object3D);this.grid=[];var g,h;e=this.segments+1;var j,k,m,n=new THREE.Vector3,p,q,r;b=new THREE.TubeGeometry.FrenetFrames(a,b,f);p=b.tangents;q=b.normals;r=b.binormals;this.tangents=p;this.normals=q;this.binormals=r;for(b=0;b<e;b++){this.grid[b]=[];d=b/(e-1);m=a.getPointAt(d);d=p[b];g=q[b];h=r[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,
m,c,255)),this.debug.add(new THREE.ArrowHelper(g,m,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,m,c,65280)));for(d=0;d<this.radiusSegments;d++)j=2*(d/this.radiusSegments)*Math.PI,k=-this.radius*Math.cos(j),j=this.radius*Math.sin(j),n.copy(m),n.x+=k*g.x+j*h.x,n.y+=k*g.y+j*h.y,n.z+=k*g.z+j*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(n.x,n.y,n.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++)e=f?(b+1)%this.segments:b+1,n=(d+1)%this.radiusSegments,a=this.grid[b][d],
c=this.grid[e][d],e=this.grid[e][n],n=this.grid[b][n],p=new THREE.UV(b/this.segments,d/this.radiusSegments),q=new THREE.UV((b+1)/this.segments,d/this.radiusSegments),r=new THREE.UV((b+1)/this.segments,(d+1)/this.radiusSegments),g=new THREE.UV(b/this.segments,(d+1)/this.radiusSegments),this.faces.push(new THREE.Face4(a,c,e,n)),this.faceVertexUvs[0].push([p,q,r,g]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var f=[],e=[],g=[],h=new THREE.Vector3,j=new THREE.Matrix4;b+=1;var k,m,n;this.tangents=f;this.normals=e;this.binormals=g;for(k=0;k<b;k++)m=k/(b-1),f[k]=a.getTangentAt(m),f[k].normalize();e[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(f[0].x);m=Math.abs(f[0].y);n=Math.abs(f[0].z);k<=a&&(a=k,d.set(1,0,0));m<=a&&(a=m,d.set(0,1,0));n<=a&&d.set(0,0,1);h.cross(f[0],d).normalize();
e[0].cross(f[0],h);g[0].cross(f[0],e[0]);for(k=1;k<b;k++)e[k]=e[k-1].clone(),g[k]=g[k-1].clone(),h.cross(f[k-1],f[k]),1E-4<h.length()&&(h.normalize(),d=Math.acos(f[k-1].dot(f[k])),j.makeRotationAxis(h,d).multiplyVector3(e[k])),g[k].cross(f[k],e[k]);if(c){d=Math.acos(e[0].dot(e[b-1]));d/=b-1;0<f[0].dot(h.cross(e[0],e[b-1]))&&(d=-d);for(k=1;k<b;k++)j.makeRotationAxis(f[k],d*k).multiplyVector3(e[k]),g[k].cross(f[k],e[k])}};
THREE.PolyhedronGeometry=function(a,b,c,d){function f(a){var b=a.normalize().clone();b.index=j.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function e(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),j.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),
j.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,e(a,g(a,b),g(a,c),d),e(g(a,b),b,g(b,c),d),e(g(a,c),g(b,c),c,d),e(g(a,b),g(b,c),g(a,c),d))}function g(a,b){n[a.index]||(n[a.index]=[]);n[b.index]||(n[b.index]=[]);var c=n[a.index][b.index];void 0===c&&(n[a.index][b.index]=n[b.index][a.index]=c=f((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
c=c||1;d=d||0;for(var j=this,k=0,m=a.length;k<m;k++)f(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));var n=[];a=this.vertices;k=0;for(m=b.length;k<m;k++)e(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(m=this.vertices.length;k<m;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var f=this.vertices,e=this.faces,g=this.faceVertexUvs[0];d=void 0===d?!1:d;var h,j,k,m,n=b+1;for(h=0;h<=c;h++){m=h/c;for(j=0;j<=b;j++)k=j/b,k=a(k,m),f.push(k)}var p,q,r,s;for(h=0;h<c;h++)for(j=0;j<b;j++)a=h*n+j,f=h*n+j+1,m=(h+1)*n+j,k=(h+1)*n+j+1,p=new THREE.UV(j/b,h/c),q=new THREE.UV((j+1)/b,h/c),r=new THREE.UV(j/b,(h+1)/c),s=new THREE.UV((j+1)/b,(h+1)/c),d?(e.push(new THREE.Face3(a,f,m)),e.push(new THREE.Face3(f,k,m)),g.push([p,
q,r]),g.push([q,s,r])):(e.push(new THREE.Face4(a,f,k,m)),g.push([p,q,s,r]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var f=d,e=a[f].clone(),g=e.length();e.x+=g*2E-6*(Math.random()-0.5);e.y+=g*2E-6*(Math.random()-0.5);e.z+=g*2E-6*(Math.random()-0.5);for(var g=[],h=0;h<c.length;){var j=c[h],k=e,m=a[j[0]],n;n=m;var p=a[j[1]],q=a[j[2]],r=new THREE.Vector3,s=new THREE.Vector3;r.sub(q,p);s.sub(n,p);r.crossSelf(s);r.isZero()||r.normalize();n=r;m=n.dot(m);
if(n.dot(k)>=m){for(k=0;3>k;k++){m=[j[k],j[(k+1)%3]];n=!0;for(p=0;p<g.length;p++)if(g[p][0]===m[1]&&g[p][1]===m[0]){g[p]=g[g.length-1];g.pop();n=!1;break}n&&g.push(m)}c[h]=c[c.length-1];c.pop()}else h++}for(p=0;p<g.length;p++)c.push([g[p][0],g[p][1],f])}f=0;e=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;3>h;h++)void 0===e[g[h]]&&(e[g[h]]=f++,this.vertices.push(a[g[h]])),g[h]=e[g[h]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)g=
this.faces[d],this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var f=new THREE.Geometry;f.vertices.push(new THREE.Vector3(0,0,0));f.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(f,new THREE.LineBasicMaterial({color:d}));this.add(this.line);f=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a);a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,f,e){THREE.CameraHelper.__v.set(d,f,e);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(f=a.length;d<f;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};THREE.GeometryUtils.orderedKey=function(a,b){return Math.min(a,b)+"_"+Math.max(a,b)};
THREE.GeometryUtils.computeEdgeFaces=function(a){function b(a,b){void 0===g[a]&&(g[a]=[]);g[a].push(b)}var c,d,f,e,g={},h=THREE.GeometryUtils.orderedKey;c=0;for(d=a.faces.length;c<d;c++)f=a.faces[c],f instanceof THREE.Face3?(e=h(f.a,f.b),b(e,c),e=h(f.b,f.c),b(e,c),e=h(f.c,f.a),b(e,c)):f instanceof THREE.Face4&&(e=h(f.a,f.b),b(e,c),e=h(f.b,f.c),b(e,c),e=h(f.c,f.d),b(e,c),e=h(f.d,f.a),b(e,c));return g};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){m.debug&&(console&&console.assert)&&console.assert.apply(console,arguments)}function c(){m.debug&&console.log.apply(console,arguments)}function d(){console&&console.log.apply(console,arguments)}function f(a,b,d,f,g,h,n){var u=new THREE.Face4(a,b,d,f,null,g.color,g.materialIndex);if(m.useOldVertexColors){u.vertexColors=[];for(var p,t,q,r=0;4>r;r++){q=h[r];p=new THREE.Color;p.setRGB(0,0,0);for(var v=0;v<q.length;v++)t=g.vertexColors[q[v]-
1],p.r+=t.r,p.g+=t.g,p.b+=t.b;p.r/=q.length;p.g/=q.length;p.b/=q.length;u.vertexColors[r]=p}}j.push(u);m.supportUVs&&(g=[e(a,""),e(b,n),e(d,n),e(f,n)],g[0]?g[1]?g[2]?g[3]?k.push(g):c("d :( ",f+":"+n):c("c :( ",d+":"+n):c("b :( ",b+":"+n):c("a :( ",a+":"+n))}function e(a,b){var e=a+":"+b,f=x[e];return!f?(a>=s&&a<s+r.length?c("face pt"):c("edge pt"),d("warning, UV not found for",e),null):f}function g(a,b,c){var e=a+":"+b;e in x?d("dup vertexNo",a,"oldFaceNo",b,"value",c,"key",e,x[e]):x[e]=c}var h=[],
j=[],k=[],m=this,n=THREE.GeometryUtils.orderedKey,p=THREE.GeometryUtils.computeEdgeFaces,q=a.vertices,r=a.faces,s=q.length,h=q.concat(),w=[],u={},A={},x={},v,t,C,z,D,E=a.faceVertexUvs[0],H;c("originalFaces, uvs, originalVerticesLength",r.length,E.length,s);if(m.supportUVs){v=0;for(t=E.length;v<t;v++){C=0;for(z=E[v].length;C<z;C++)H=r[v]["abcd".charAt(C)],g(H,v,E[v][C])}}0==E.length&&(m.supportUVs=!1);v=0;for(var J in x)v++;v||(m.supportUVs=!1,c("no uvs"));v=0;for(t=r.length;v<t;v++)D=r[v],w.push(D.centroid),
h.push(D.centroid),m.supportUVs&&(z=new THREE.UV,D instanceof THREE.Face3?(z.u=e(D.a,v).u+e(D.b,v).u+e(D.c,v).u,z.v=e(D.a,v).v+e(D.b,v).v+e(D.c,v).v,z.u/=3,z.v/=3):D instanceof THREE.Face4&&(z.u=e(D.a,v).u+e(D.b,v).u+e(D.c,v).u+e(D.d,v).u,z.v=e(D.a,v).v+e(D.b,v).v+e(D.c,v).v+e(D.d,v).v,z.u/=4,z.v/=4),g(s+v,"",z));var p=p(a),K;t=0;var G,O;J={};E={};for(v in p){H=p[v];G=v.split("_");O=G[0];G=G[1];C=O;D=[O,G];void 0===J[C]&&(J[C]=[]);J[C].push(D);C=G;D=[O,G];void 0===J[C]&&(J[C]=[]);J[C].push(D);C=0;
for(z=H.length;C<z;C++){D=H[C];K=O;var M=D,I=v;void 0===E[K]&&(E[K]={});E[K][M]=I;K=G;M=v;void 0===E[K]&&(E[K]={});E[K][D]=M}2>H.length&&(A[v]=!0)}for(v in p)H=p[v],D=H[0],K=H[1],G=v.split("_"),O=G[0],G=G[1],z=new THREE.Vector3,b(0<H.length,"an edge without faces?!"),1==H.length?(z.addSelf(q[O]),z.addSelf(q[G]),z.multiplyScalar(0.5)):(z.addSelf(w[D]),z.addSelf(w[K]),z.addSelf(q[O]),z.addSelf(q[G]),z.multiplyScalar(0.25)),u[v]=s+r.length+t,h.push(z),t++,m.supportUVs&&(z=new THREE.UV,z.u=e(O,D).u+e(G,
D).u,z.v=e(O,D).v+e(G,D).v,z.u/=2,z.v/=2,g(u[v],D,z),2<=H.length&&(b(2==H.length,"did we plan for more than 2 edges?"),z=new THREE.UV,z.u=e(O,K).u+e(G,K).u,z.v=e(O,K).v+e(G,K).v,z.u/=2,z.v/=2,g(u[v],K,z)));c("-- Step 2 done");var L,N;z=["123","12","2","23"];K=["123","23","3","31"];var M=["123","31","1","12"],I=["1234","12","2","23"],T=["1234","23","3","34"],ba=["1234","34","4","41"],$=["1234","41","1","12"];v=0;for(t=w.length;v<t;v++)D=r[v],H=s+v,D instanceof THREE.Face3?(O=n(D.a,D.b),G=n(D.b,D.c),
L=n(D.c,D.a),f(H,u[O],D.b,u[G],D,z,v),f(H,u[G],D.c,u[L],D,K,v),f(H,u[L],D.a,u[O],D,M,v)):D instanceof THREE.Face4?(O=n(D.a,D.b),G=n(D.b,D.c),L=n(D.c,D.d),N=n(D.d,D.a),f(H,u[O],D.b,u[G],D,I,v),f(H,u[G],D.c,u[L],D,T,v),f(H,u[L],D.d,u[N],D,ba,v),f(H,u[N],D.a,u[O],D,$,v)):c("face should be a face!",D);u=new THREE.Vector3;D=new THREE.Vector3;v=0;for(t=q.length;v<t;v++)if(void 0!==J[v]){u.set(0,0,0);D.set(0,0,0);G=new THREE.Vector3(0,0,0);H=0;for(C in E[v])u.addSelf(w[C]),H++;K=0;O=J[v].length;z=H!=O;for(C=
0;C<O;C++)A[n(J[v][C][0],J[v][C][1])]&&K++;u.divideScalar(H);K=0;if(z){for(C=0;C<O;C++)if(H=J[v][C],M=1==p[n(H[0],H[1])].length)H=q[H[0]].clone().addSelf(q[H[1]]).divideScalar(2),D.addSelf(H),K++;D.divideScalar(4);b(2==K,"should have only 2 boundary edges")}else{for(C=0;C<O;C++)H=J[v][C],H=q[H[0]].clone().addSelf(q[H[1]]).divideScalar(2),D.addSelf(H);D.divideScalar(O)}G.addSelf(q[v]);z?(G.divideScalar(2),G.addSelf(D)):(G.multiplyScalar(O-3),G.addSelf(u),G.addSelf(D.multiplyScalar(2)),G.divideScalar(O));
h[v]=G}a.vertices=h;a.faces=j;a.faceVertexUvs[0]=k;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,f)};
THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(a,b,c,d,f,e){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===e&&(e=1);void 0===f&&(f=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:e,color:f,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,f=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+f*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},f=this.geometry,e=0,g=f.morphTargets.length;e<g;e++){var h=f.morphTargets[e].name.match(b);if(h&&1<h.length){var j=h[1];d[j]||(d[j]={start:Infinity,end:-Infinity});h=d[j];e<h.start&&(h.start=e);e>h.end&&(h.end=e);c||(c=j)}}for(j in d)h=d[j],this.createAnimation(j,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var f=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var e=d.startFrame+THREE.Math.clamp(Math.floor(d.time/f),0,d.length-1),g=d.weight;
e!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[e]=0,d.lastFrame=d.currentFrame,d.currentFrame=e);f=d.time%f/f;d.directionBackwards&&(f=1-f);this.morphTargetInfluences[d.currentFrame]=f*g;this.morphTargetInfluences[d.lastFrame]=(1-f)*g}}};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,f,e,g,h,j,k,m,n,p,q;this.init=function(r){b=r.context;c=r;d=new Float32Array(16);f=new Uint16Array(6);r=0;d[r++]=-1;d[r++]=-1;d[r++]=0;d[r++]=0;d[r++]=1;d[r++]=-1;d[r++]=1;d[r++]=
0;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=-1;d[r++]=1;d[r++]=0;d[r++]=1;r=0;f[r++]=0;f[r++]=1;f[r++]=2;f[r++]=0;f[r++]=2;f[r++]=3;e=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,e);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);h=b.createTexture();j=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,j);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(k=!1,m=a(THREE.ShaderFlares.lensFlare)):(k=!0,m=a(THREE.ShaderFlares.lensFlareVertexTexture));n={};p={};n.vertex=b.getAttribLocation(m,"position");n.uv=b.getAttribLocation(m,"uv");p.renderType=b.getUniformLocation(m,"renderType");p.map=b.getUniformLocation(m,"map");p.occlusionMap=b.getUniformLocation(m,"occlusionMap");p.opacity=b.getUniformLocation(m,"opacity");p.color=b.getUniformLocation(m,
"color");p.scale=b.getUniformLocation(m,"scale");p.rotation=b.getUniformLocation(m,"rotation");p.screenPosition=b.getUniformLocation(m,"screenPosition");q=!1};this.render=function(a,d,f,u){a=a.__webglFlares;var A=a.length;if(A){var x=new THREE.Vector3,v=u/f,t=0.5*f,C=0.5*u,z=16/u,D=new THREE.Vector2(z*v,z),E=new THREE.Vector3(1,1,0),H=new THREE.Vector2(1,1),J=p,z=n;b.useProgram(m);q||(b.enableVertexAttribArray(n.vertex),b.enableVertexAttribArray(n.uv),q=!0);b.uniform1i(J.occlusionMap,0);b.uniform1i(J.map,
1);b.bindBuffer(b.ARRAY_BUFFER,e);b.vertexAttribPointer(z.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(z.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var K,G,O,M,I;for(K=0;K<A;K++)if(z=16/u,D.set(z*v,z),M=a[K],x.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(x),d.projectionMatrix.multiplyVector3(x),E.copy(x),H.x=E.x*t+t,H.y=E.y*C+C,k||0<H.x&&H.x<f&&0<H.y&&H.y<u){b.activeTexture(b.TEXTURE1);
b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,H.x-8,H.y-8,16,16,0);b.uniform1i(J.renderType,0);b.uniform2f(J.scale,D.x,D.y);b.uniform3f(J.screenPosition,E.x,E.y,E.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,j);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,H.x-8,H.y-8,16,16,0);b.uniform1i(J.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,
h);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);M.positionScreen.copy(E);M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares();b.uniform1i(J.renderType,2);b.enable(b.BLEND);G=0;for(O=M.lensFlares.length;G<O;G++)I=M.lensFlares[G],0.0010<I.opacity&&0.0010<I.scale&&(E.x=I.x,E.y=I.y,E.z=I.z,z=I.size*I.scale/u,D.x=z*v,D.y=z,b.uniform3f(J.screenPosition,E.x,E.y,E.z),b.uniform2f(J.scale,D.x,D.y),b.uniform1f(J.rotation,I.rotation),b.uniform1f(J.opacity,I.opacity),b.uniform3f(J.color,I.color.r,
I.color.g,I.color.b),c.setBlending(I.blending,I.blendEquation,I.blendSrc,I.blendDst),c.setTexture(I.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,f,e,g=new THREE.Frustum,h=new THREE.Matrix4,j=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;f._shadowPass=!0;e._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(m,n){var p,q,r,s,w,u,A,x,v,t=[];s=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);p=0;for(q=m.__lights.length;p<q;p++)if(r=m.__lights[p],r.castShadow)if(r instanceof THREE.DirectionalLight&&r.shadowCascade)for(w=0;w<r.shadowCascadeCount;w++){var C;if(r.shadowCascadeArray[w])C=r.shadowCascadeArray[w];else{v=r;A=w;C=new THREE.DirectionalLight;C.isVirtual=!0;C.onlyShadow=!0;C.castShadow=!0;C.shadowCameraNear=v.shadowCameraNear;C.shadowCameraFar=v.shadowCameraFar;C.shadowCameraLeft=v.shadowCameraLeft;C.shadowCameraRight=v.shadowCameraRight;
C.shadowCameraBottom=v.shadowCameraBottom;C.shadowCameraTop=v.shadowCameraTop;C.shadowCameraVisible=v.shadowCameraVisible;C.shadowDarkness=v.shadowDarkness;C.shadowBias=v.shadowCascadeBias[A];C.shadowMapWidth=v.shadowCascadeWidth[A];C.shadowMapHeight=v.shadowCascadeHeight[A];C.pointsWorld=[];C.pointsFrustum=[];x=C.pointsWorld;u=C.pointsFrustum;for(var z=0;8>z;z++)x[z]=new THREE.Vector3,u[z]=new THREE.Vector3;x=v.shadowCascadeNearZ[A];v=v.shadowCascadeFarZ[A];u[0].set(-1,-1,x);u[1].set(1,-1,x);u[2].set(-1,
1,x);u[3].set(1,1,x);u[4].set(-1,-1,v);u[5].set(1,-1,v);u[6].set(-1,1,v);u[7].set(1,1,v);C.originalCamera=n;u=new THREE.Gyroscope;u.position=r.shadowCascadeOffset;u.add(C);u.add(C.target);n.add(u);r.shadowCascadeArray[w]=C;console.log("Created virtualLight",C)}A=r;x=w;v=A.shadowCascadeArray[x];v.position.copy(A.position);v.target.position.copy(A.target.position);v.lookAt(v.target);v.shadowCameraVisible=A.shadowCameraVisible;v.shadowDarkness=A.shadowDarkness;v.shadowBias=A.shadowCascadeBias[x];u=A.shadowCascadeNearZ[x];
A=A.shadowCascadeFarZ[x];v=v.pointsFrustum;v[0].z=u;v[1].z=u;v[2].z=u;v[3].z=u;v[4].z=A;v[5].z=A;v[6].z=A;v[7].z=A;t[s]=C;s++}else t[s]=r,s++;p=0;for(q=t.length;p<q;p++){r=t[p];r.shadowMap||(r.shadowMap=new THREE.WebGLRenderTarget(r.shadowMapWidth,r.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),r.shadowMapSize=new THREE.Vector2(r.shadowMapWidth,r.shadowMapHeight),r.shadowMatrix=new THREE.Matrix4);if(!r.shadowCamera){if(r instanceof THREE.SpotLight)r.shadowCamera=
new THREE.PerspectiveCamera(r.shadowCameraFov,r.shadowMapWidth/r.shadowMapHeight,r.shadowCameraNear,r.shadowCameraFar);else if(r instanceof THREE.DirectionalLight)r.shadowCamera=new THREE.OrthographicCamera(r.shadowCameraLeft,r.shadowCameraRight,r.shadowCameraTop,r.shadowCameraBottom,r.shadowCameraNear,r.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}m.add(r.shadowCamera);b.autoUpdateScene&&m.updateMatrixWorld()}r.shadowCameraVisible&&!r.cameraHelper&&(r.cameraHelper=
new THREE.CameraHelper(r.shadowCamera),r.shadowCamera.add(r.cameraHelper));if(r.isVirtual&&C.originalCamera==n){w=n;s=r.shadowCamera;u=r.pointsFrustum;v=r.pointsWorld;j.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(A=0;8>A;A++)x=v[A],x.copy(u[A]),THREE.ShadowMapPlugin.__projector.unprojectVector(x,w),s.matrixWorldInverse.multiplyVector3(x),x.x<j.x&&(j.x=x.x),x.x>k.x&&(k.x=x.x),x.y<j.y&&(j.y=x.y),x.y>k.y&&(k.y=x.y),x.z<j.z&&(j.z=x.z),x.z>k.z&&(k.z=x.z);s.left=j.x;s.right=
k.x;s.top=k.y;s.bottom=j.y;s.updateProjectionMatrix()}s=r.shadowMap;u=r.shadowMatrix;w=r.shadowCamera;w.position.copy(r.matrixWorld.getPosition());w.lookAt(r.target.matrixWorld.getPosition());w.updateMatrixWorld();w.matrixWorldInverse.getInverse(w.matrixWorld);r.cameraHelper&&(r.cameraHelper.visible=r.shadowCameraVisible);r.shadowCameraVisible&&r.cameraHelper.update();u.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);u.multiplySelf(w.projectionMatrix);u.multiplySelf(w.matrixWorldInverse);w._viewMatrixArray||
(w._viewMatrixArray=new Float32Array(16));w._projectionMatrixArray||(w._projectionMatrixArray=new Float32Array(16));w.matrixWorldInverse.flattenToArray(w._viewMatrixArray);w.projectionMatrix.flattenToArray(w._projectionMatrixArray);h.multiply(w.projectionMatrix,w.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(s);b.clear();v=m.__webglObjects;r=0;for(s=v.length;r<s;r++)if(A=v[r],u=A.object,A.render=!1,u.visible&&u.castShadow&&(!(u instanceof THREE.Mesh)||!u.frustumCulled||g.contains(u)))u._modelViewMatrix.multiply(w.matrixWorldInverse,
u.matrixWorld),A.render=!0;r=0;for(s=v.length;r<s;r++)A=v[r],A.render&&(u=A.object,A=A.buffer,z=u.material instanceof THREE.MeshFaceMaterial?u.geometry.materials[0]:u.material,x=0<u.geometry.morphTargets.length&&z.morphTargets,z=u instanceof THREE.SkinnedMesh&&z.skinning,x=u.customDepthMaterial?u.customDepthMaterial:z?x?e:f:x?d:c,A instanceof THREE.BufferGeometry?b.renderBufferDirect(w,m.__lights,null,x,A,u):b.renderBuffer(w,m.__lights,null,x,A,u));v=m.__webglObjectsImmediate;r=0;for(s=v.length;r<
s;r++)A=v[r],u=A.object,u.visible&&u.castShadow&&(u._modelViewMatrix.multiply(w.matrixWorldInverse,u.matrixWorld),b.renderImmediateObject(w,m.__lights,null,c,u))}p=b.getClearColor();q=b.getClearAlpha();a.clearColor(p.r,p.g,p.b,q);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,f,e,g,h,j,k,m;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);f=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;f[a++]=0;f[a++]=1;f[a++]=2;f[a++]=0;f[a++]=2;f[a++]=3;e=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,e);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);a=THREE.ShaderSprite.sprite;var p=b.createProgram(),q=b.createShader(b.FRAGMENT_SHADER),r=b.createShader(b.VERTEX_SHADER);b.shaderSource(q,a.fragmentShader);b.shaderSource(r,a.vertexShader);b.compileShader(q);b.compileShader(r);b.attachShader(p,q);b.attachShader(p,r);b.linkProgram(p);h=p;j={};k={};j.position=b.getAttribLocation(h,"position");j.uv=b.getAttribLocation(h,"uv");k.uvOffset=b.getUniformLocation(h,"uvOffset");k.uvScale=b.getUniformLocation(h,
"uvScale");k.rotation=b.getUniformLocation(h,"rotation");k.scale=b.getUniformLocation(h,"scale");k.alignment=b.getUniformLocation(h,"alignment");k.color=b.getUniformLocation(h,"color");k.map=b.getUniformLocation(h,"map");k.opacity=b.getUniformLocation(h,"opacity");k.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");k.affectedByDistance=b.getUniformLocation(h,"affectedByDistance");k.screenPosition=b.getUniformLocation(h,"screenPosition");k.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");
k.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");m=!1};this.render=function(d,f,q,r){d=d.__webglSprites;var s=d.length;if(s){var w=j,u=k,A=r/q;q*=0.5;var x=0.5*r,v=!0;b.useProgram(h);m||(b.enableVertexAttribArray(w.position),b.enableVertexAttribArray(w.uv),m=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,e);b.vertexAttribPointer(w.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(w.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);
b.uniformMatrix4fv(u.projectionMatrix,!1,f._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(u.map,0);for(var t,C=[],w=0;w<s;w++)t=d[w],t.visible&&0!==t.opacity&&(t.useScreenCoordinates?t.z=-t.position.z:(t._modelViewMatrix.multiply(f.matrixWorldInverse,t.matrixWorld),t.z=-t._modelViewMatrix.elements[14]));d.sort(a);for(w=0;w<s;w++)t=d[w],t.visible&&0!==t.opacity&&(t.map&&t.map.image&&t.map.image.width)&&(t.useScreenCoordinates?(b.uniform1i(u.useScreenCoordinates,1),b.uniform3f(u.screenPosition,
(t.position.x-q)/q,(x-t.position.y)/x,Math.max(0,Math.min(1,t.position.z)))):(b.uniform1i(u.useScreenCoordinates,0),b.uniform1i(u.affectedByDistance,t.affectedByDistance?1:0),b.uniformMatrix4fv(u.modelViewMatrix,!1,t._modelViewMatrix.elements)),f=t.map.image.width/(t.scaleByViewport?r:1),C[0]=f*A*t.scale.x,C[1]=f*t.scale.y,b.uniform2f(u.uvScale,t.uvScale.x,t.uvScale.y),b.uniform2f(u.uvOffset,t.uvOffset.x,t.uvOffset.y),b.uniform2f(u.alignment,t.alignment.x,t.alignment.y),b.uniform1f(u.opacity,t.opacity),
b.uniform3f(u.color,t.color.r,t.color.g,t.color.b),b.uniform1f(u.rotation,t.rotation),b.uniform2fv(u.scale,C),t.mergeWith3D&&!v?(b.enable(b.DEPTH_TEST),v=!0):!t.mergeWith3D&&v&&(b.disable(b.DEPTH_TEST),v=!1),c.setBlending(t.blending,t.blendEquation,t.blendSrc,t.blendDst),c.setTexture(t.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,f=new THREE.Frustum,e=new THREE.Matrix4;this.init=function(e){a=e.context;b=e;e=THREE.ShaderLib.depthRGBA;var f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(a,
b){this.enabled&&this.update(a,b)};this.update=function(g,h){var j,k,m,n,p,q;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&g.updateMatrixWorld();h._viewMatrixArray||(h._viewMatrixArray=new Float32Array(16));h._projectionMatrixArray||(h._projectionMatrixArray=new Float32Array(16));h.matrixWorldInverse.getInverse(h.matrixWorld);h.matrixWorldInverse.flattenToArray(h._viewMatrixArray);h.projectionMatrix.flattenToArray(h._projectionMatrixArray);e.multiply(h.projectionMatrix,
h.matrixWorldInverse);f.setFromMatrix(e);b.setRenderTarget(this.renderTarget);b.clear();q=g.__webglObjects;j=0;for(k=q.length;j<k;j++)if(m=q[j],p=m.object,m.render=!1,p.visible&&(!(p instanceof THREE.Mesh)||!p.frustumCulled||f.contains(p)))p._modelViewMatrix.multiply(h.matrixWorldInverse,p.matrixWorld),m.render=!0;j=0;for(k=q.length;j<k;j++)m=q[j],m.render&&(p=m.object,m=m.buffer,p.material&&b.setMaterialFaces(p.material),n=p.customDepthMaterial?p.customDepthMaterial:p.geometry.morphTargets.length?
d:c,m instanceof THREE.BufferGeometry?b.renderBufferDirect(h,g.__lights,null,n,m,p):b.renderBuffer(h,g.__lights,null,n,m,p));q=g.__webglObjectsImmediate;j=0;for(k=q.length;j<k;j++)m=q[j],p=m.object,p.visible&&p.castShadow&&(p._modelViewMatrix.multiply(h.matrixWorldInverse,p.matrixWorld),b.renderImmediateObject(h,g.__lights,null,c,p));j=b.getClearColor();k=b.getClearAlpha();a.clearColor(j.r,j.g,j.b,k);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};(function(){function a(){var a=n;n--;return a}function b(){var a=document.body.getBoundingClientRect(),b=this.width=a.width,a=this.height=a.height;this.renderer.setSize(b,a);this.camera.top=0;this.camera.left=0;this.camera.right=b;this.camera.bottom=a;this.camera.updateProjectionMatrix();_.isFunction(this.__onResize)&&this.__onResize(b,a)}function c(){_.isFunction(j)&&j(h);_.each(e,function(a){a.render()});h++;g&&requestAnimationFrame(c)}var d=this.Two||{},f=[],e=[],g,h=0,j,k=0,m=2*Math.PI,n=0,p=
{hasEventListeners:_.isFunction(this.addEventListener),bind:function(a,b,c,d){this.hasEventListeners?a.addEventListener(b,c,!!d):a.attachEvent("on"+b,c);return this},unbind:function(a,b,c,d){this.hasEventListeners?a.removeEventListeners(b,c,!!d):a.detachEvent("on"+b,c);return this}},q=function(a){a=_.defaults(a||{},{type:q.TYPES.webgl,autoplay:!0,width:640,height:480,fullscreen:!1,parameters:{antialias:!0}});this.__playing=a.autoplay;this.scene=new THREE.Scene;this.camera=new THREE.OrthographicCamera(0,
a.width,0,a.height,-1E4);this.scene.add(this.camera);var c=a.canvas||document.createElement("canvas");_.extend(a.parameters,{canvas:c});a.type===q.TYPES.webgl&&(c.getContext("webgl")||c.getContext("experimental-webgl"))?(this.renderer=new THREE.WebGLRenderer(a.parameters),a.type=q.TYPES.webgl):a.type===q.TYPES.svg?this.renderer=new THREE.SVGRenderer({}):(this.renderer=new THREE.CanvasRenderer(a.parameters),a.type=q.TYPES.canvas2d);this.type=a.type;this.domElement=this.renderer.domElement;a.fullscreen?
(a=_.bind(b,this),_.extend(document.body.style,{overflow:"hidden",margin:0,padding:0,top:0,left:0,right:0,bottom:0,position:"fixed"}),p.bind(window,"resize",a),a()):(this.renderer.setSize(a.width,a.height),this.width=a.width,this.height=a.height);this.renderer.sortElements=!1;e.push(this)};_.extend(q.prototype,{noConflict:function(){return d},appendTo:function(a){if(!_.isElement(a))return this;a.appendChild(this.renderer.domElement);return this},onResize:function(a){this.__onResize=a;return this},
draw:function(a){this.__onUpdate=a;return this},play:function(){g||q.start();this.__playing=!0;return this},pause:function(){this.__playing=!1;return this},render:function(){if(!this.__playing)return this;_.isFunction(this.__onUpdate)&&this.__onUpdate(h);this.renderer.render(this.scene,this.camera);return this},add:function(a){this.scene.add(a.mesh);return a},makeRectangle:function(a,b,c,d){a=new q.Rectangle(a,b,c,d);return this.add(a)},makeArc:function(a,b,c,d,e,f){a=new q.Arc(a,b,c,d,e,f);return this.add(a)},
makeEllipse:function(a,b,c,d){a=new q.Ellipse(a,b,c,d);return this.add(a)},makeCircle:function(a,b,c){a=new q.Circle(a,b,c);return this.add(a)},makeCurve:function(a){var b=arguments.length;if(!_.isArray(a))for(var c=0;c<b;c+=2){var d=arguments[c];if(!_.isNumber(d))break;a.push(new q.Vector(d,arguments[c+1]))}b=arguments[b-1];b=new q.Curve(a,_.isBoolean(b)?b:void 0);return this.add(b)},makeLine:function(a,b,c,d){a=new q.Line(a,b,c,d);return this.add(a)},makePolygon:function(a){var b=arguments.length,
c=a;if(!_.isArray(a))for(var c=[],d=0;d<b;d+=2){var e=arguments[d];if(!_.isNumber(e))break;c.push(new q.Vector(e,arguments[d+1]))}b=arguments[b-1];c=new q.Polygon(c,_.isBoolean(b)?b:void 0);return this.add(c)},makeGroup:function(){var a=new q.Group(arguments);return this.add(a)}});_.extend(q,{VERSION:0.1,TYPES:{webgl:"webgl",canvas2d:"canvas2d"},RESOLUTION:32,INSTANCES:e,DEFAULTS:{},start:function(){if(g)return this;g=!0;c();return this},onUpdate:function(a){j=a;return this},stop:function(){if(!g)return this;
g=!1;return this},Rectangle:function(a,b,c,d){this.__width=c;this.__height=d;var e=c/2,f=d/2;d=a-e;c=b-f;a+=e;b+=f;q.Polygon.call(this,[new q.Vector(d,c),new q.Vector(a,c),new q.Vector(a,b),new q.Vector(d,b)])},Arc:function(a,b,c,d,e,f){this.__radius=c;var g=Math.min(Math.abs(e-d),m),g=g/(q.RESOLUTION*(g/m));d=f?_.range(-e,-d+g,g):_.range(d,e+g,g);d=_.map(d,function(d){var e=c*Math.cos(d)+a;d=c*Math.sin(d)+b;return new q.Vector(e,d)});d.push(new q.Vector(a,b));q.Polygon.call(this,d)},Circle:function(a,
b,c){this.__radius=c;q.Ellipse.call(this,a,b,c,c)},Ellipse:function(a,b,c,d){this.__width=c;this.__height=d;var e=q.RESOLUTION;q.Polygon.call(this,_.map(_.range(e),function(f){var g=m*((f+1)/e);f=c*Math.cos(g)+a;g=d*Math.sin(g)+b;return new q.Vector(f,g)}))},Curve:function(a,b){this.spline=new THREE.SplineCurve(a);var c=a.length*q.RESOLUTION,d=_.map(_.range(c),function(a){a=this.spline.getPoint(a/c);return new q.Vector(a.x,a.y)},this);q.Polygon.call(this,d,!!b)},Line:function(b,c,d,e){var g=[];if(_.isArray(b))g=
b,b=g[0].x,c=g[0].y;else for(var h=0,j=arguments.length;h<j;h+=2)g.push(new q.Vector(arguments[h]-b,arguments[h+1]-c));this.geometry=new THREE.Geometry;this.geometry.vertices=g;this.__vertices=g.slice(0);this.material=new THREE.LineBasicMaterial({color:0,transparent:!0,overdraw:!0});this.mesh=new THREE.Line(this.geometry,this.material);this.mesh.position.x=b;this.mesh.position.y=c;this.mesh.renderDepth=a();f.push(this)},Polygon:function(b,c){var d=(new THREE.Shape(b)).getBoundingBox(),e=new q.Vector(d.centroid.x,
d.centroid.y),g=new THREE.Shape;_.each(b,function(a,b){a.subSelf(e);0===b?g.moveTo(a.x,a.y):g.lineTo(a.x,a.y)});this.geometry=g.makeGeometry();this.material=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,overdraw:!0});this.material.side=THREE.DoubleSide;var h=this.geometry.vertices[0];!_.isEqual(h,this.geometry.vertices[this.geometry.vertices.length-1])&&!c&&this.geometry.vertices.push(h);this.mesh=new THREE.Mesh(this.geometry,this.material);this.mesh.position.x=d.centroid.x;this.mesh.position.y=
d.centroid.y;this.mesh.doubleSided=!0;this.mesh.renderDepth=a();this.outline=new q.Line(this.geometry.vertices);this.mesh.add(this.outline.mesh);this.outline.mesh.position.x=0;this.outline.mesh.position.y=0;f.push(this)},Group:function(a){this.children=[];this.mesh=new THREE.Object3D;this.add.apply(this,a);this.center()},Morph:function(a,b,c,d){if(a.geometry.vertices.length!==b.length)throw"Two Error: vertex amount mismatch.";a.material.morphTargets||(a.mesh.material.morphTargets=!0);this.object=
a;this.index=a.geometry.morphTargets.length;this.name=d||"Two.Morph-"+k;a.geometry.morphTargets.push({name:this.name,vertices:b});a.outline&&a.outline.geometry.morphTargets.push(a.geometry.morphTargets[this.index]);this.updateMorphTargets();k++},Vector:function(a,b,c){1>=arguments.length&&_.isObject(a)?(this.x=a.x||0,this.y=a.y||0,this.z=a.z||0):(this.x=a||0,this.y=b||0,this.z=c||0)}});var r={getVertices:function(a){return a?this.geometry.vertices:_.map(this.geometry.vertices,function(a){return a.clone()})},
setVertices:function(a,b){_.each(a,function(a,b){var c=this.geometry.vertices[b];_.isUndefined(c)&&(c=new q.Vector,this.geometry.vertices[b]=c);c.set(a.x,a.y,a.z||0)},this);this.__vertices=this.geometry.vertices.slice(0);return b?this:this.updateVertexFlags()},updateVertexFlags:function(){this.geometry.verticesNeedUpdate=!0;this.outline&&(this.outline.geometry.verticesNeedUpdate=!0);return this},scale:function(a,b){var c=arguments.length;if(0>=c)return c=this.mesh.scale,c.x===c.y?c.x:{x:c.x,y:c.y};
1>=c&&(b=a);this.mesh.scale.x=a;this.mesh.scale.y=b;return this},rotate:function(a){if(0>=arguments.length)return this.mesh.rotation.z;this.mesh.rotation.z=a;return this},translate:function(a,b){if(0>=arguments.length)return{x:this.mesh.position.x,y:this.mesh.position.y};this.mesh.position.x=a;this.mesh.position.y=b;return this},zIndex:function(a){if(0>=arguments.length)return this.mesh.renderDepth;this.mesh.renderDepth=a;this.outline&&(this.outline.mesh.renderDepth=a+1);return this},makeMorph:function(a,
b,c,d){a=a.slice(0);d||(a=a.reverse(),a.pop(),d=a.shift(),a.push(d,a[0]));a=new q.Morph(this,a,b,c);_.isArray(this.morphs)||(this.morphs=[]);this.morphs.push(a);return a},remove:function(){var a=this.mesh.parent;a&&(a.remove(this.mesh),this.outline&&a.remove(this.outline));return this},clone:function(a){var b=new this.constructor(this.getVertices());b.mesh.position.copy(this.mesh.position);b.mesh.rotation.copy(this.mesh.rotation);b.mesh.scale.copy(this.mesh.scale);a||this.mesh.parent.add(b.mesh);
return b}},s={scale:r.scale,rotate:r.rotate,translate:r.translate,add:function(){var a=_.toArray(arguments);_.each(a,function(a){a.mesh.position.subSelf(this.mesh.position);this.mesh.add(a.mesh)},this);this.children=this.children.concat(a);return this},zIndex:function(a){if(0>=arguments.length)return this.mesh.renderDepth;this.mesh.renderDepth=a;_.each(this.mesh.children,function(b,c){b.renderDepth=a-c},this);return this},noStroke:function(){return this.stroke(0,0,0,0)},noFill:function(){return this.fill(0,
0,0,0)},strokeWeight:function(a){for(var b=0,c=this.mesh.children.length;b<c;b++){var d=this.mesh.children[b],e=d.material;0<d.children.length&&this.strokeWeight.call({mesh:d,strokeWeight:this.strokeWeight},a);e&&e instanceof THREE.LineBasicMaterial&&(e.linewidth=a,d.visible=0<a)}return this},stroke:function(a,b,c,d){var e=arguments.length;1>=e?(b=c=a,d=1):3>=e&&(d=1);for(var e=0,f=this.mesh.children.length;e<f;e++){var g=this.mesh.children[e],h=g.material;0<g.children.length&&this.stroke.call({mesh:g,
stroke:this.stroke},a,b,c,d);h&&h instanceof THREE.LineBasicMaterial&&(h.color.setRGB(a,b,c),h.opacity=d,g.visible=0<d)}return this},fill:function(a,b,c,d){var e=arguments.length;1>=e?(b=c=a,d=1):3>=e&&(d=1);for(var e=0,f=this.mesh.children.length;e<f;e++){var g=this.mesh.children[e],h=g.material;0<g.children.length&&this.fill.call({mesh:g,fill:this.fill},a,b,c,d);h instanceof THREE.MeshBasicMaterial&&(h.color.setRGB(a,b,c),h.opacity=d,g.visible=0<d)}return this},center:function(){var a=this.getBoundingClientRect();
a.centroid={x:a.left+a.width/2,y:a.top+a.height/2};_.each(this.children,function(b){b.mesh.position.x-=a.centroid.x;b.mesh.position.y-=a.centroid.y},this);this.translate(a.centroid.x,a.centroid.y);return this},getBoundingClientRect:function(){var a={left:Infinity,right:-Infinity,top:Infinity,bottom:-Infinity};_.each(this.children,function(b){var c=b.mesh.position;if(_.isUndefined(b.mesh.geometry)){var d=b.getBoundingClientRect();b={minY:d.top,minX:d.left,maxX:d.right,maxY:d.bottom}}else b=b.mesh.geometry.shapebb;
var d=b.maxX+c.x,e=b.minY+c.y,f=b.maxY+c.y;a.left=Math.min(a.left,b.minX+c.x);a.top=Math.min(a.top,e);a.right=Math.max(a.right,d);a.bottom=Math.max(a.bottom,f)},this);a.width=a.right-a.left;a.height=a.bottom-a.top;return a}},w={beginning:0,ending:1,noStroke:function(){this.strokeWeight(0).stroke(0,0,0,0);return this},stroke:function(a,b,c,d){var e=arguments.length,f=_.isObject(this.outline);if(0>=e)return e=(f?this.outline:this).material,f=e.color,{r:f.r,g:f.g,b:f.b,a:e.opacity};1>=e?(b=c=a,d=1):
3>=e&&(d=1);_.isObject(this.outline)?(this.outline.material.color.setRGB(a,b,c),this.outline.material.opacity=d,this.outline.mesh.visible=0<d):(this.material.color.setRGB(a,b,c),this.material.opacity=d,this.mesh.visible=0<d);return this},strokeWeight:function(a){var b=_.isObject(this.outline);if(_.isUndefined(a))return b?this.outline.material.linewidth:this.material.linewidth;b?(this.outline.material.linewidth=a,this.outline.mesh.visible=0<a):(this.material.linewidth=a,this.mesh.visible=0<a);return this},
begin:function(a){this.beginning=Math.min(Math.max(a,0),1);this.updateStroke();return this},end:function(a){this.ending=Math.max(Math.min(a,1),0);this.updateStroke();return this},activate:function(){return this},updateStroke:function(){var a=_.isObject(this.outline)?this.outline:this,b=a.__vertices,c=b.length,d=c-1,e,f;this.ending>this.beginning?(e=this.ending,f=this.beginning):this.ending<this.beginning?(e=this.beginning,f=this.ending):e=f=this.ending=this.beginning;e=Math.min(Math.round((1-e)*c),
d);d=Math.min(Math.round((1-f)*c),d);f=b[e];for(var g=0;g<e;g++)a.geometry.vertices[g]=f;f=b[d];for(g=d;g<c;g++)a.geometry.vertices[g]=f;return this.updateVertexFlags()}};Object.defineProperty(q.Rectangle.prototype,"width",{get:function(){return this.__width},set:function(a){this.__width=a;var b=this.getVertices(!0),c=b.length-1,d=a/2;_.each(b,function(a,b){a.x=0<b&&b<c?d:-d},this);return this.updateVertexFlags()}});Object.defineProperty(q.Rectangle.prototype,"height",{get:function(){return this.__height},
set:function(a){this.__height=a;var b=this.getVertices(!0),c=a/2;_.each(b,function(a,b){a.y=2>b?-c:c},this);return this.updateVertexFlags()}});Object.defineProperty(q.Ellipse.prototype,"width",{get:function(){return this.__width},set:function(a){this.__width=a;var b=this.getVertices(!0),c=b.length,d=this.__height;_.each(b,function(b,e){var f=e/c,g=a*Math.cos(f*m),f=d*Math.sin(f*m);b.x=g;b.y=f},this);return this.updateVertexFlags()}});Object.defineProperty(q.Ellipse.prototype,"height",{get:function(){return this.__height},
set:function(a){this.__height=a;var b=this.getVertices(!0),c=b.length,d=this.__width;_.each(b,function(b,e){var f=e/c,g=d*Math.cos(f*m),f=a*Math.sin(f*m);b.x=g;b.y=f},this);return this.updateVertexFlags()}});Object.defineProperty(q.Circle.prototype,"radius",{get:function(){return this.__radius},set:function(a){this.__radius=a;var b=this.getVertices(!0),c=b.length;_.each(b,function(b,d){var e=d/c,f=a*Math.cos(e*m),e=a*Math.sin(e*m);b.x=f;b.y=e},this);return this.updateVertexFlags()}});Object.defineProperty(q.Arc.prototype,
"radius",{get:function(){return this.__radius},set:function(a){if(0>=arguments.length)return this.__radius;this.getVertices(!0)}});_.extend(q.Polygon.prototype,r,{noFill:function(){return this.fill(0,0,0,0)},fill:function(a,b,c,d){var e=arguments.length;if(0>=e)return e=this.material.color,{r:e.r,g:e.g,b:e.b,a:this.material.opacity};1>=e?(b=c=a,d=1):3>=e&&(d=1);this.material.color.setRGB(a,b,c);this.material.opacity=d;this.mesh.visible=0<d||_.isObject(this.outline);return this}},w,{});_.extend(q.Line.prototype,
r,w);_.extend(q.Curve.prototype,q.Polygon.prototype,{makeMorph:function(a,b,c,d){a=a.slice(0);var e=this.getVertices().length,f=new THREE.SplineCurve(a);d||(a=a.reverse(),a.pop(),d=a.shift(),a.push(d,a[0]));a=_.map(_.range(e),function(a){a=f.getPoint(a/e);return new q.Vector(a.x,a.y)},this);return r.makeMorph.call(this,a,b,c,!0)}});_.extend(q.Rectangle.prototype,q.Polygon.prototype,{});_.extend(q.Arc.prototype,q.Polygon.prototype,{});_.extend(q.Ellipse.prototype,q.Polygon.prototype,{});_.extend(q.Circle.prototype,
q.Polygon.prototype,{});_.extend(q.Vector.prototype,THREE.Vector3.prototype);_.extend(q.Group.prototype,s);_.extend(q.Morph.prototype,{getVertices:function(a){var b=this.object.geometry.morphTargets[this.index].vertices;return a?b:b.slice(0)},setVertices:function(a){if(this.object.geometry.vertices.length!==a.length)throw"Two error: vertex amount mismatch.";this.object.geometry.morphTargets[this.index].vertices=a;this.object.outline&&this.object.outline.geometry.morphTargets.push(this.object.mesh.geometry.morphTargets[this.index]);
this.updateMorphTargets();return this},influence:function(a){this.object.mesh.morphTargetInfluences[this.index]=a;this.object.outline&&(this.object.outline.mesh.morphTargetInfluences[this.index]=a);return this},updateMorphTargets:function(){var a=this.object.geometry.morphTargets.length,b=this.object.mesh;if(a){b.morphTargetBase=-1;b.morphTargetForcedOrder=[];b.morphTargetInfluences=[];b.morphTargetDictionary={};for(var c=0;c<a;c++)b.morphTargetInfluences.push(0),b.morphTargetDictionary[b.geometry.morphTargets[c].name]=
c;var d=this.object.outline;if(d){d.mesh.morphTargetBase=-1;d.mesh.morphTargetForcedOrder=[];d.mesh.morphTargetInfluences=[];d.mesh.morphTargetDictionary={};for(c=0;c<a;c++)d.mesh.morphTargetInfluences.push(0),d.mesh.morphTargetDictionary[b.geometry.morphTargets[c].name]=c}}}});_.each(THREE.Vector3.prototype,function(a,b){q.Vector.prototype[b]=_.isFunction(a)?function(){a.apply(this,arguments);this.z||(this.z=0)}:a});_.extend(q.Vector.prototype,{clone:function(){return new q.Vector(this.x,this.y)}});
this.Two=q})();
