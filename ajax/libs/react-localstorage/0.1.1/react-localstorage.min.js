"use strict";function loadStateFromLocalStorage(t){if(ls){var e=getLocalStorageKey(t);try{var a=JSON.parse(ls.getItem(e));a&&t.setState(a)}catch(o){console&&console.warn("Unable to load state for",getDisplayName(t),"from localStorage.")}}}function getDisplayName(t){return t.displayName||t.constructor.displayName}function getLocalStorageKey(t){return t.getLocalStorageKey?t.getLocalStorageKey():t.props.localStorageKey||getDisplayName(t)||"react-localstorage"}var React=require("react"),invariant=require("react/lib/invariant"),ls=global.localStorage,Mixin=module.exports={componentDidUpdate:function(t,e){if(ls){var a=getLocalStorageKey(this),o=ls.getItem(a);o&&invariant(o===JSON.stringify(e),"While component "+getDisplayName(this)+" was saving state to localStorage, the localStorage entry was modified by another actor. This can happen when multiple components are using the same localStorage key. Set the property `localStorageKey` on "+getDisplayName(this)+"."),ls.setItem(a,JSON.stringify(this.state))}},componentWillMount:function(){loadStateFromLocalStorage(this)},componentDidMount:function(){ls.setItem(getLocalStorageKey(this),JSON.stringify(this.state))}};
//# sourceMappingURL=react-localstorage/0.1.1/react-localstorage.min.js.map