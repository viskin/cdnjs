L.OSM=L.FeatureGroup.extend({options:{async:!0,forceAll:!1},initialize:function(url,options){L.Util.setOptions(this,options),this._url=url,this._layers={},url&&this.addXML(url,options,this.options.async)},loadXML:function(url,cb,options,async){void 0===async&&(async=this.options.async),void 0===options&&(options=this.options);var req=new window.XMLHttpRequest;req.open("GET",url,async),req.overrideMimeType("text/xml"),req.onreadystatechange=function(){4===req.readyState&&200===req.status&&cb(req.responseXML,options)},req.send(null)},addXML:function(url,options,async){var _this=this,cb=function(xml,options){_this._addXML(xml,options)};this.loadXML(url,cb,options,async)},_addXML:function(xml,options){var layers=this.parseOSM(xml,options);layers&&(this.addLayer(layers),this.fire("loaded"))},parseOSM:function(xml,options){var i,el,ll,layers=[],nodes={},ways={},named=!1;for(el=xml.getElementsByTagName("node"),i=0;i<el.length;i++){var l=this.parse_node(el[i],xml,options);if(void 0!==l&&(nodes[l.osmid]=l,this.options.forceAll||l.tags.length)){var m=this.named_node(l,options);ll||(ll=m.getLatLng()),this.parse_name(m,l,"Node")&&(named=!0),layers.push(m)}}for(el=xml.getElementsByTagName("way"),i=0;i<el.length&&!(i>10);i++){var way=this.parse_way(el[i],nodes,options);way&&(ll||(ll=way.getLatLngs()[0]),this.parse_name(way,way,"Way")&&(named=!0),layers.push(way),ways[way.osmid]=way)}for(el=xml.getElementsByTagName("relation"),i=0;i<el.length&&!(i>10);i++){var relation=this.parse_relation(el[i],ways,options);relation&&(ll||(ll=relation.getLatLngs()[0]),this.parse_name(relation,relation,"Relation")&&(named=!0),layers.push(relation))}if(layers.length){var layer=layers[0];return layers.length>1&&(layer=new L.FeatureGroup(layers)),named||this.parse_name(xml,layer),layer.focusPoint=ll,layer}},parse_name:function(layer,obj,obj_name){if(this.options.forceAll||obj.tags&&obj.tags.length){var i,txt="<table>";for(i=0;i<obj.tags.length;i++){var t=obj.tags[i];txt+="<tr><td>"+t.k+"</td><td>=</td><td>"+t.v+"</td></tr>"}return txt+="</table>",txt="<h2>"+obj_name+" "+obj.osmid+"</h2>"+txt,layer&&layer.bindPopup(txt),txt}},parse_tags:function(line){for(var tags=[],el=line.getElementsByTagName("tag"),i=0;i<el.length;i++)tags.push({k:el[i].getAttribute("k"),v:el[i].getAttribute("v")});return tags},parse_node:function(e){var n={osmid:e.getAttribute("id"),lat:e.getAttribute("lat"),lon:e.getAttribute("lon")};return n.ll=new L.LatLng(n.lat,n.lon),n.tags=this.parse_tags(e),n},parse_way:function(line,nodes,options){var el=line.getElementsByTagName("nd");if(el.length){for(var coords=[],i=0;i<el.length;i++){var ref=el[i].getAttribute("ref"),n=nodes[ref];if(!n)return;coords.push(n.ll)}var layer=new L.Polyline(coords,options);return layer.tags=this.parse_tags(line),layer.osmid=line.getAttribute("id"),layer}},parse_relation:function(line,ways,options){var el=line.getElementsByTagName("member");if(el.length){var rt,i,coords=[],tags=this.parse_tags(line);for(i=0;i<tags.length;i++)"type"===tags[i].k&&(rt=tags[i].v);if("multipolygon"===rt||"boundary"===rt||"waterway"===rt){for(i=0;i<el.length;i++){var mt=el[i].getAttribute("type"),ref=el[i].getAttribute("ref");if("way"===mt){var w=ways[ref];if(!w)return;coords.push(w)}}if(coords.length){var layer=new L.MultiPolyline(coords,options);return layer.tags=this.parse_tags(line),layer.osmid=line.getAttribute("id"),layer}}}},named_node:function(node,options){var marker=new L.Marker(new L.LatLng(node.lat,node.lon),options);return marker}});