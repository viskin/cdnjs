-function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(n.topojson=n.topojson||{})}(this,function(n){"use strict";function t(){}function e(n){if(!n)return t;var e,r,o=n.scale[0],i=n.scale[1],a=n.translate[0],u=n.translate[1];return function(n,t){t||(e=r=0),n[0]=(e+=n[0])*o+a,n[1]=(r+=n[1])*i+u}}function r(n){if(!n)return t;var e,r,o=n.scale[0],i=n.scale[1],a=n.translate[0],u=n.translate[1];return function(n,t){t||(e=r=0);var f=Math.round((n[0]-a)/o),c=Math.round((n[1]-u)/i);n[0]=f-e,n[1]=c-r,e=f,r=c}}function o(n,t){for(var e,r=n.length,o=r-t;o<--r;)e=n[o],n[o++]=n[r],n[r]=e}function i(n,t){for(var e=0,r=n.length;r>e;){var o=e+r>>>1;n[o]<t?e=o+1:r=o}return e}function a(n,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return u(n,t)})}:u(n,t)}function u(n,t){var e={type:"Feature",id:t.id,properties:t.properties||{},geometry:f(n,t)};return null==t.id&&delete e.id,e}function f(n,t){function r(n,t){t.length&&t.pop();for(var e,r=l[0>n?~n:n],i=0,a=r.length;a>i;++i)t.push(e=r[i].slice()),s(e,i);0>n&&o(t,a)}function i(n){return n=n.slice(),s(n,0),n}function a(n){for(var t=[],e=0,o=n.length;o>e;++e)r(n[e],t);return t.length<2&&t.push(t[0].slice()),t}function u(n){for(var t=a(n);t.length<4;)t.push(t[0].slice());return t}function f(n){return n.map(u)}function c(n){var t=n.type;return"GeometryCollection"===t?{type:t,geometries:n.geometries.map(c)}:t in h?{type:t,coordinates:h[t](n)}:null}var s=e(n.transform),l=n.arcs,h={Point:function(n){return i(n.coordinates)},MultiPoint:function(n){return n.coordinates.map(i)},LineString:function(n){return a(n.arcs)},MultiLineString:function(n){return n.arcs.map(a)},Polygon:function(n){return f(n.arcs)},MultiPolygon:function(n){return n.arcs.map(f)}};return c(t)}function c(n,t){function e(t){var e,r=n.arcs[0>t?~t:t],o=r[0];return n.transform?(e=[0,0],r.forEach(function(n){e[0]+=n[0],e[1]+=n[1]})):e=r[r.length-1],0>t?[e,o]:[o,e]}function r(n,t){for(var e in n){var r=n[e];delete t[r.start],delete r.start,delete r.end,r.forEach(function(n){o[0>n?~n:n]=1}),u.push(r)}}var o={},i={},a={},u=[],f=-1;return t.forEach(function(e,r){var o,i=n.arcs[0>e?~e:e];i.length<3&&!i[1][0]&&!i[1][1]&&(o=t[++f],t[f]=e,t[r]=o)}),t.forEach(function(n){var t,r,o=e(n),u=o[0],f=o[1];if(t=a[u])if(delete a[t.end],t.push(n),t.end=f,r=i[f]){delete i[r.start];var c=r===t?t:t.concat(r);i[c.start=t.start]=a[c.end=r.end]=c}else i[t.start]=a[t.end]=t;else if(t=i[f])if(delete i[t.start],t.unshift(n),t.start=u,r=a[u]){delete a[r.end];var s=r===t?t:r.concat(t);i[s.start=r.start]=a[s.end=t.end]=s}else i[t.start]=a[t.end]=t;else t=[n],i[t.start=u]=a[t.end=f]=t}),r(a,i),r(i,a),t.forEach(function(n){o[0>n?~n:n]||u.push([n])}),u}function s(n){return f(n,l.apply(this,arguments))}function l(n,t,e){function r(n){var t=0>n?~n:n;(s[t]||(s[t]=[])).push({i:n,g:f})}function o(n){n.forEach(r)}function i(n){n.forEach(o)}function a(n){"GeometryCollection"===n.type?n.geometries.forEach(a):n.type in l&&(f=n,l[n.type](n.arcs))}var u=[];if(arguments.length>1){var f,s=[],l={LineString:o,MultiLineString:i,Polygon:i,MultiPolygon:function(n){n.forEach(i)}};a(t),s.forEach(arguments.length<3?function(n){u.push(n[0].i)}:function(n){e(n[0].g,n[n.length-1].g)&&u.push(n[0].i)})}else for(var h=0,p=n.arcs.length;p>h;++h)u.push(h);return{type:"MultiLineString",arcs:c(n,u)}}function h(n){var t=n[0],e=n[1],r=n[2];return Math.abs((t[0]-r[0])*(e[1]-t[1])-(t[0]-e[0])*(r[1]-t[1]))}function p(n){for(var t,e=-1,r=n.length,o=n[r-1],i=0;++e<r;)t=o,o=n[e],i+=t[0]*o[1]-t[1]*o[0];return i/2}function d(n){return f(n,v.apply(this,arguments))}function v(n,t){function e(n){n.forEach(function(t){t.forEach(function(t){(o[t=0>t?~t:t]||(o[t]=[])).push(n)})}),i.push(n)}function r(t){return Math.abs(p(f(n,{type:"Polygon",arcs:[t]}).coordinates[0]))}var o={},i=[],a=[];return t.forEach(function(n){"Polygon"===n.type?e(n.arcs):"MultiPolygon"===n.type&&n.arcs.forEach(e)}),i.forEach(function(n){if(!n._){var t=[],e=[n];for(n._=1,a.push(t);n=e.pop();)t.push(n),n.forEach(function(n){n.forEach(function(n){o[0>n?~n:n].forEach(function(n){n._||(n._=1,e.push(n))})})})}}),i.forEach(function(n){delete n._}),{type:"MultiPolygon",arcs:a.map(function(t){var e,i=[];if(t.forEach(function(n){n.forEach(function(n){n.forEach(function(n){o[0>n?~n:n].length<2&&i.push(n)})})}),i=c(n,i),(e=i.length)>1)for(var a,u,f=1,s=r(i[0]);e>f;++f)(a=r(i[f]))>s&&(u=i[0],i[0]=i[f],i[f]=u,s=a);return i})}}function g(n){function t(n,t){n.forEach(function(n){0>n&&(n=~n);var e=o[n];e?e.push(t):o[n]=[t]})}function e(n,e){n.forEach(function(n){t(n,e)})}function r(n,t){"GeometryCollection"===n.type?n.geometries.forEach(function(n){r(n,t)}):n.type in u&&u[n.type](n.arcs,t)}var o={},a=n.map(function(){return[]}),u={LineString:t,MultiLineString:e,Polygon:e,MultiPolygon:function(n,t){n.forEach(function(n){e(n,t)})}};n.forEach(r);for(var f in o)for(var c=o[f],s=c.length,l=0;s>l;++l)for(var h=l+1;s>h;++h){var p,d=c[l],v=c[h];(p=a[d])[f=i(p,v)]!==v&&p.splice(f,0,v),(p=a[v])[f=i(p,d)]!==d&&p.splice(f,0,d)}return a}function y(n,t){return n[1][2]-t[1][2]}function m(){function n(n,t){for(;t>0;){var e=(t+1>>1)-1,o=r[e];if(y(n,o)>=0)break;r[o._=t]=o,r[n._=t=e]=n}}function t(n,t){for(;;){var e=t+1<<1,i=e-1,a=t,u=r[a];if(o>i&&y(r[i],u)<0&&(u=r[a=i]),o>e&&y(r[e],u)<0&&(u=r[a=e]),a===t)break;r[u._=t]=u,r[n._=t=a]=n}}var e={},r=[],o=0;return e.push=function(t){return n(r[t._=o]=t,o++),o},e.pop=function(){if(!(0>=o)){var n,e=r[0];return--o>0&&(n=r[o],t(r[n._=0]=n,0)),e}},e.remove=function(e){var i,a=e._;if(r[a]===e)return a!==--o&&(i=r[o],(y(i,e)<0?n:t)(r[i._=a]=i,a)),a},e}function E(n,t){function o(n){u.remove(n),n[1][2]=t(n),u.push(n)}var i=e(n.transform),a=r(n.transform),u=m();return t||(t=h),n.arcs.forEach(function(n){var e,r,f,c,s=[],l=0;for(r=0,f=n.length;f>r;++r)c=n[r],i(n[r]=[c[0],c[1],1/0],r);for(r=1,f=n.length-1;f>r;++r)e=n.slice(r-1,r+2),e[1][2]=t(e),s.push(e),u.push(e);for(r=0,f=s.length;f>r;++r)e=s[r],e.previous=s[r-1],e.next=s[r+1];for(;e=u.pop();){var h=e.previous,p=e.next;e[1][2]<l?e[1][2]=l:l=e[1][2],h&&(h.next=p,h[2]=e[2],o(h)),p&&(p.previous=h,p[0]=e[0],o(p))}n.forEach(a)}),n}var O="1.6.26";n.version=O,n.mesh=s,n.meshArcs=l,n.merge=d,n.mergeArcs=v,n.feature=a,n.neighbors=g,n.presimplify=E}),L.TOPOJSON=L.FeatureGroup.extend({options:{async:!0},initialize:function(n,t){L.Util.setOptions(this,t),this._topojson=n,this._layers={},n&&this.addTOPOJSON(n,t,this.options.async)},loadJSON:function(n,t,e,r){void 0===r&&(r=this.options.async),void 0===e&&(e=this.options);var o=new window.XMLHttpRequest;if(void 0===o.withCredentials&&"undefined"!=typeof window.XDomainRequest){var i=new window.XDomainRequest;i.open("GET",n,r),i.onprogress=function(){},i.ontimeout=function(){},i.onerror=function(){},i.onload=function(){i.responseText&&t(i.responseText,e)},setTimeout(function(){i.send()},0)}else{o.open("GET",n,r);try{o.overrideMimeType("application/json")}catch(a){}o.onreadystatechange=function(){4===o.readyState&&200===o.status&&t(o.response,e)},o.send(null)}},addTOPOJSON:function(n,t,e){var r=this,o=function(n){r._addTOPOJSON(n)};this.loadJSON(n,o,t,e)},_addTOPOJSON:function(n){var t=this.parseTOPOJSON(n);if(t&&t.length){for(var e=0;e<t.length;e++)this.fire("addlayer",{layer:t[e]}),this.addLayer(t[e]);this.fire("loaded")}},_addData:function(n,t){"addData"in n&&n.addData(t),"setGeoJSON"in n&&n.setGeoJSON(t)},parseTOPOJSON:function(n){var t=[],e="string"==typeof n?JSON.parse(n):n;for(var r in e.objects){var o=L.geoJson(),i=topojson.feature(e,e.objects[r]);i.features?this._addData(o,i.features):_this._addData(o,i),t.push(o)}return t}});
//# sourceMappingURL=TOPOJSON.min.js.map