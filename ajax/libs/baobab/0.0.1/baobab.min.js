var Immutable=require("immutable"),Cursor=require("./cursor.js"),EventEmitter=require("emmett"),helpers=require("./helpers.js"),update=require("./update.js"),types=require("./typology.js"),mixins=require("./mixins.js"),defaults=require("../defaults.json");function Baobab(a,b){if(!(this instanceof Baobab)){return new Baobab(a,b)}if(!types.check(a,"maplike")){throw Error("Baobab: invalid data.")}EventEmitter.call(this);this.data=Immutable.fromJS(a);this._futureUpdate={};this._willUpdate=false;this._history=[];this.options=Immutable.fromJS(defaults).merge(b);this.mixin=mixins.baobab(this)}helpers.inherits(Baobab,EventEmitter);Baobab.prototype._stack=function(a){if(!types.check(a,"maplike")){throw Error("Baobab.update: wrong specification.")}this._futureUpdate=helpers.merge(a,this._futureUpdate);if(!this.options.get("delay")){return this._commit()}if(!this._willUpdate){this._willUpdate=true;helpers.later(this._commit.bind(this))}return this};Baobab.prototype._commit=function(){var b=this;var a=update(this.data,this._futureUpdate);var c=this.data;this.data=a.data;this.emit("update",{oldData:c,newData:this.data,log:a.log});this._futureUpdate={};this._willUpdate=false;return this};Baobab.prototype.select=function(a){if(!a){throw Error("Baobab.select: invalid path.")}if(arguments.length>1){a=Array.prototype.slice.call(arguments)}if(!types.check(a,"path")){throw Error("Baobab.select: invalid path.")}return new Cursor(this,a)};Baobab.prototype.get=function(b){var a;if(arguments.length>1){b=Array.prototype.slice.call(arguments)}if(b){a=this.data.getIn(typeof b==="string"?[b]:b)}else{a=this.data}if(this.options.get("toJS")){return a.toJS()}else{return a}};Baobab.prototype.set=function(b,c){if(arguments.length<2){throw Error("Baobab.set: expects a key and a value.")}var a={};a[b]={$set:c};return this.update(a)};Baobab.prototype.update=function(a){return this._stack(a)};Baobab.prototype.toJS=function(){return this.data.toJS()};Baobab.prototype.toJSON=Baobab.prototype.toJS;Baobab.prototype.toString=function(){return"Baobab "+this.data.toString().replace(/^[^{]+\{/,"{")};Baobab.prototype.inspect=Baobab.prototype.toString;Baobab.prototype.toSource=Baobab.prototype.toString;module.exports=Baobab;