(function(global){Ember.libraries.register("Ember Simple Auth OAuth 2.0","0.8.0-beta.3");var define,requireModule;(function(){var registry={},seen={};define=function(name,deps,callback){registry[name]={deps:deps,callback:callback}};requireModule=function(name){if(seen.hasOwnProperty(name)){return seen[name]}seen[name]={};if(!registry[name]){throw new Error("Could not find module "+name)}var mod=registry[name],deps=mod.deps,callback=mod.callback,reified=[],exports;for(var i=0,l=deps.length;i<l;i++){if(deps[i]==="exports"){reified.push(exports={})}else{reified.push(requireModule(resolve(deps[i])))}}var value=callback.apply(this,reified);return seen[name]=exports||value;function resolve(child){if(child.charAt(0)!=="."){return child}var parts=child.split("/");var parentBase=name.split("/").slice(0,-1);for(var i=0,l=parts.length;i<l;i++){var part=parts[i];if(part===".."){parentBase.pop()}else if(part==="."){continue}else{parentBase.push(part)}}return parentBase.join("/")}};requireModule.registry=registry})();define("simple-auth-oauth2/authenticators/oauth2",["simple-auth/authenticators/base","./../configuration","exports"],function(__dependency1__,__dependency2__,__exports__){"use strict";var Base=__dependency1__["default"];var Configuration=__dependency2__["default"];__exports__["default"]=Base.extend({serverTokenEndpoint:"/token",serverTokenRevocationEndpoint:null,refreshAccessTokens:true,_refreshTokenTimeout:null,init:function(){this.serverTokenEndpoint=Configuration.serverTokenEndpoint;this.serverTokenRevocationEndpoint=Configuration.serverTokenRevocationEndpoint;this.refreshAccessTokens=Configuration.refreshAccessTokens},restore:function(data){var _this=this;return new Ember.RSVP.Promise(function(resolve,reject){var now=(new Date).getTime();if(!Ember.isEmpty(data.expires_at)&&data.expires_at<now){if(_this.refreshAccessTokens){_this.refreshAccessToken(data.expires_in,data.refresh_token).then(function(data){resolve(data)},reject)}else{reject()}}else{if(Ember.isEmpty(data.access_token)){reject()}else{_this.scheduleAccessTokenRefresh(data.expires_in,data.expires_at,data.refresh_token);resolve(data)}}})},authenticate:function(options){var _this=this;return new Ember.RSVP.Promise(function(resolve,reject){var data={grant_type:"password",username:options.identification,password:options.password};if(!Ember.isEmpty(options.scope)){var scopesString=Ember.makeArray(options.scope).join(" ");Ember.merge(data,{scope:scopesString})}_this.makeRequest(_this.serverTokenEndpoint,data).then(function(response){Ember.run(function(){var expiresAt=_this.absolutizeExpirationTime(response.expires_in);_this.scheduleAccessTokenRefresh(response.expires_in,expiresAt,response.refresh_token);if(!Ember.isEmpty(expiresAt)){response=Ember.merge(response,{expires_at:expiresAt})}resolve(response)})},function(xhr,status,error){Ember.run(function(){reject(xhr.responseJSON||xhr.responseText)})})})},invalidate:function(data){var _this=this;function success(resolve){Ember.run.cancel(_this._refreshTokenTimeout);delete _this._refreshTokenTimeout;resolve()}return new Ember.RSVP.Promise(function(resolve,reject){if(Ember.isEmpty(_this.serverTokenRevocationEndpoint)){success(resolve)}else{var requests=[];Ember.A(["access_token","refresh_token"]).forEach(function(tokenType){var token=data[tokenType];if(!Ember.isEmpty(token)){requests.push(_this.makeRequest(_this.serverTokenRevocationEndpoint,{token_type_hint:tokenType,token:token}))}});Ember.$.when.apply(Ember.$,requests).always(function(responses){success(resolve)})}})},makeRequest:function(url,data){return Ember.$.ajax({url:url,type:"POST",data:data,dataType:"json",contentType:"application/x-www-form-urlencoded"})},scheduleAccessTokenRefresh:function(expiresIn,expiresAt,refreshToken){var _this=this;if(this.refreshAccessTokens){var now=(new Date).getTime();if(Ember.isEmpty(expiresAt)&&!Ember.isEmpty(expiresIn)){expiresAt=new Date(now+expiresIn*1e3).getTime()}var offset=(Math.floor(Math.random()*5)+5)*1e3;if(!Ember.isEmpty(refreshToken)&&!Ember.isEmpty(expiresAt)&&expiresAt>now-offset){Ember.run.cancel(this._refreshTokenTimeout);delete this._refreshTokenTimeout;if(!Ember.testing){this._refreshTokenTimeout=Ember.run.later(this,this.refreshAccessToken,expiresIn,refreshToken,expiresAt-now-offset)}}}},refreshAccessToken:function(expiresIn,refreshToken){var _this=this;var data={grant_type:"refresh_token",refresh_token:refreshToken};return new Ember.RSVP.Promise(function(resolve,reject){_this.makeRequest(_this.serverTokenEndpoint,data).then(function(response){Ember.run(function(){expiresIn=response.expires_in||expiresIn;refreshToken=response.refresh_token||refreshToken;var expiresAt=_this.absolutizeExpirationTime(expiresIn);var data=Ember.merge(response,{expires_in:expiresIn,expires_at:expiresAt,refresh_token:refreshToken});_this.scheduleAccessTokenRefresh(expiresIn,null,refreshToken);_this.trigger("sessionDataUpdated",data);resolve(data)})},function(xhr,status,error){Ember.Logger.warn("Access token could not be refreshed - server responded with "+error+".");reject()})})},absolutizeExpirationTime:function(expiresIn){if(!Ember.isEmpty(expiresIn)){return new Date((new Date).getTime()+expiresIn*1e3).getTime()}}})});define("simple-auth-oauth2/authorizers/oauth2",["simple-auth/authorizers/base","exports"],function(__dependency1__,__exports__){"use strict";var Base=__dependency1__["default"];__exports__["default"]=Base.extend({authorize:function(jqXHR,requestOptions){var accessToken=this.get("session.secure.access_token");if(this.get("session.isAuthenticated")&&!Ember.isEmpty(accessToken)){jqXHR.setRequestHeader("Authorization","Bearer "+accessToken)}}})});define("simple-auth-oauth2/configuration",["simple-auth/utils/load-config","exports"],function(__dependency1__,__exports__){"use strict";var loadConfig=__dependency1__["default"];var defaults={serverTokenEndpoint:"/token",serverTokenRevocationEndpoint:null,refreshAccessTokens:true};__exports__["default"]={serverTokenEndpoint:defaults.serverTokenEndpoint,serverTokenRevocationEndpoint:defaults.serverTokenRevocationEndpoint,refreshAccessTokens:defaults.refreshAccessTokens,load:loadConfig(defaults)}});define("simple-auth-oauth2/ember",["./initializer"],function(__dependency1__){"use strict";var initializer=__dependency1__["default"];Ember.onLoad("Ember.Application",function(Application){Application.initializer(initializer)})});define("simple-auth-oauth2/initializer",["./configuration","simple-auth/utils/get-global-config","simple-auth-oauth2/authenticators/oauth2","simple-auth-oauth2/authorizers/oauth2","exports"],function(__dependency1__,__dependency2__,__dependency3__,__dependency4__,__exports__){"use strict";var Configuration=__dependency1__["default"];var getGlobalConfig=__dependency2__["default"];var Authenticator=__dependency3__["default"];var Authorizer=__dependency4__["default"];__exports__["default"]={name:"simple-auth-oauth2",before:"simple-auth",initialize:function(container,application){var config=getGlobalConfig("simple-auth-oauth2");Configuration.load(container,config);application.register("simple-auth-authorizer:oauth2-bearer",Authorizer);application.register("simple-auth-authenticator:oauth2-password-grant",Authenticator)}}});define("simple-auth/authenticators/base",["exports"],function(__exports__){__exports__["default"]=global.SimpleAuth.Authenticators.Base});define("simple-auth/authorizers/base",["exports"],function(__exports__){__exports__["default"]=global.SimpleAuth.Authorizers.Base});define("simple-auth/utils/get-global-config",["exports"],function(__exports__){__exports__["default"]=global.SimpleAuth.Utils.getGlobalConfig});define("simple-auth/utils/load-config",["exports"],function(__exports__){__exports__["default"]=global.SimpleAuth.Utils.loadConfig});var initializer=requireModule("simple-auth-oauth2/initializer")["default"];var Configuration=requireModule("simple-auth-oauth2/configuration")["default"];var Authenticator=requireModule("simple-auth-oauth2/authenticators/oauth2")["default"];var Authorizer=requireModule("simple-auth-oauth2/authorizers/oauth2")["default"];global.SimpleAuth.Configuration.OAuth2=Configuration;global.SimpleAuth.Authenticators.OAuth2=Authenticator;global.SimpleAuth.Authorizers.OAuth2=Authorizer;requireModule("simple-auth-oauth2/ember")})(typeof global!=="undefined"?global:window);
