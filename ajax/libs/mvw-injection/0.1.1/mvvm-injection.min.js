/*! MVW-Injection (0.1.0). (C) 2015 Xavier Boubert. MIT @license: en.wikipedia.org/wiki/MIT_License */
!function(e){"use strict";var r=new function(){function e(e){if("function"==typeof e){var r=e.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,""),t=r.match(/^function\s*[^\(]*\s*\(\s*([^\)]*)\)/m);return e=null===t||t.length<2?[e]:t[1].replace(/\s/g,"").split(",").filter(function(e){return e.trim().length>0}).concat(e)}return e}function r(r){function i(r,o){var c,s,f=n[o].interfacesSupported,a=[];for(c=0;c<r.length;c++){var u=!1;for(s=0;s<f.length;s++){if(!n[f[s]])throw new Error('DependencyInjection: "'+f[s]+'" interface is not registered.');var d=n[f[s]].factories[r[c]];if(d){if(u=!0,!d.instantiated){var r=e(d.result);d.result=r.pop();var l=i(r,f[s]);d.result=d.result.apply(t,l),d.instantiated=!0}a.push(d.result);break}}if(!u)throw new Error('DependencyInjection: "'+r[c]+'" is not registered or accessible in '+o+".")}return a}this.get=function(e){var t=i([e],r);return t[0]},this.invoke=function(n){var o=e(n);n=o.pop();var c=i(o,r);return n.apply(t,c)}}var t=this,n={};this.injector={},this.registerInterface=function(e,i){if(t[e])throw new Error('DependencyInjection: "'+e+'" interface is already registered.');return n[e]={interfacesSupported:(i||[]).concat(e),factories:{}},t.injector[e]=new r(e),t[e]=function(r,i){if(n[e].factories[r])throw new Error('DependencyInjection: "'+r+'" is already registered in '+e+".");return n[e].factories[r]={instantiated:!1,result:i},t},t}};"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=r:e.DependencyInjection=r}(this),function(e){"use strict";var r="undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports:e.DependencyInjection;r.registerInterface("model",["viewmodel","factory","service"]),r.registerInterface("factory",["viewmodel","model","service"]),r.registerInterface("service",["viewmodel","model","factory"]),r.registerInterface("viewmodel",["model","factory","service","view","converter"]),r.registerInterface("view",["viewmodel","converter"]),r.registerInterface("converter",["viewmodel","view"])}(this);
//# sourceMappingURL=mvvm-injection.min.js.map