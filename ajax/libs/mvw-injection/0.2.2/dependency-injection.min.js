/*! MVW-Injection (0.2.1). (C) 2015 Xavier Boubert. MIT @license: en.wikipedia.org/wiki/MIT_License */
!function(e){"use strict";var t=new function(){function e(e){if("function"==typeof e){var t=e.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,""),n=t.match(/^function\s*[^\(]*\s*\(\s*([^\)]*)\)/m);return e=null===n||n.length<2?[e]:n[1].replace(/\s/g,"").split(",").filter(function(e){return e.trim().length>0}).concat(e)}return e}function t(t){function i(t,o,a){var f,s,c=r[o].interfacesSupported,u=[];for(f=0;f<t.length;f++){var l=null;if(a&&"undefined"!=typeof a[t[f]])l=a[t[f]];else for(s=0;s<c.length;s++){if(!r[c[s]])throw new Error('DependencyInjection: "'+c[s]+'" interface is not registered.');if(l=r[c[s]].factories[t[f]]){l.interfaceName=c[s];break}}if(!l)throw new Error('DependencyInjection: "'+t[f]+'" is not registered or accessible in '+o+".");if(!l.instantiated){var p=e(l.result);l.result=p.pop();var d=i(p,l.interfaceName);l.result=l.result.apply(n,d),l.instantiated=!0}u.push(l.result)}return u}this.get=function(e){var n=i([e],t);return n[0]},this.invoke=function(n,r,o){var a=e(r);if(r=a.pop(),o){var f,s,c={};for(f in o)for(s in o[f])c[s]={interfaceName:f,instantiated:!1,result:o[f][s]};o=c}var u=i(a,t,o);return r.apply(n,u)}}var n=this,r={};this.injector={},this.registerInterface=function(e,i){return n[e]?n:(r[e]={interfacesSupported:(i||[]).concat(e),factories:{}},n.injector[e]=new t(e),n[e]=function(t,i){return r[e].factories[t]?n:(r[e].factories[t]={instantiated:!1,result:i},n)},n)}};"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=t:e.DependencyInjection=t}(this);
//# sourceMappingURL=dependency-injection.min.js.map