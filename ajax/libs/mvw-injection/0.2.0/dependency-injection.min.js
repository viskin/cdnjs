/*! MVW-Injection (0.1.1). (C) 2015 Xavier Boubert. MIT @license: en.wikipedia.org/wiki/MIT_License */
!function(e){"use strict";var n=new function(){function e(e){if("function"==typeof e){var n=e.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,""),t=n.match(/^function\s*[^\(]*\s*\(\s*([^\)]*)\)/m);return e=null===t||t.length<2?[e]:t[1].replace(/\s/g,"").split(",").filter(function(e){return e.trim().length>0}).concat(e)}return e}function n(n){function i(n,o,a){var c,s,f=r[o].interfacesSupported,u=[];for(c=0;c<n.length;c++){var l=null;if(a&&"undefined"!=typeof a[n[c]])l=a[n[c]];else for(s=0;s<f.length;s++){if(!r[f[s]])throw new Error('DependencyInjection: "'+f[s]+'" interface is not registered.');if(l=r[f[s]].factories[n[c]]){l.interfaceName=f[s];break}}if(!l)throw new Error('DependencyInjection: "'+n[c]+'" is not registered or accessible in '+o+".");if(!l.instantiated){var p=e(l.result);l.result=p.pop();var d=i(p,l.interfaceName);l.result=l.result.apply(t,d),l.instantiated=!0}u.push(l.result)}return u}this.get=function(e){var t=i([e],n);return t[0]},this.invoke=function(r,o){var a=e(r);if(r=a.pop(),o){var c,s,f={};for(c in o)for(s in o[c])f[s]={interfaceName:c,instantiated:!1,result:o[c][s]};o=f}var u=i(a,n,o);return r.apply(t,u)}}var t=this,r={};this.injector={},this.registerInterface=function(e,i){if(t[e])throw new Error('DependencyInjection: "'+e+'" interface is already registered.');return r[e]={interfacesSupported:(i||[]).concat(e),factories:{}},t.injector[e]=new n(e),t[e]=function(n,i){if(r[e].factories[n])throw new Error('DependencyInjection: "'+n+'" is already registered in '+e+".");return r[e].factories[n]={instantiated:!1,result:i},t},t}};"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=n:e.DependencyInjection=n}(this);
//# sourceMappingURL=dependency-injection.min.js.map