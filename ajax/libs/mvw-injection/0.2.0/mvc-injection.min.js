/*! MVW-Injection (0.1.1). (C) 2015 Xavier Boubert. MIT @license: en.wikipedia.org/wiki/MIT_License */
!function(e){"use strict";var t=new function(){function e(e){if("function"==typeof e){var t=e.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,""),r=t.match(/^function\s*[^\(]*\s*\(\s*([^\)]*)\)/m);return e=null===r||r.length<2?[e]:r[1].replace(/\s/g,"").split(",").filter(function(e){return e.trim().length>0}).concat(e)}return e}function t(t){function i(t,o,c){var s,a,f=n[o].interfacesSupported,u=[];for(s=0;s<t.length;s++){var l=null;if(c&&"undefined"!=typeof c[t[s]])l=c[t[s]];else for(a=0;a<f.length;a++){if(!n[f[a]])throw new Error('DependencyInjection: "'+f[a]+'" interface is not registered.');if(l=n[f[a]].factories[t[s]]){l.interfaceName=f[a];break}}if(!l)throw new Error('DependencyInjection: "'+t[s]+'" is not registered or accessible in '+o+".");if(!l.instantiated){var d=e(l.result);l.result=d.pop();var p=i(d,l.interfaceName);l.result=l.result.apply(r,p),l.instantiated=!0}u.push(l.result)}return u}this.get=function(e){var r=i([e],t);return r[0]},this.invoke=function(n,o){var c=e(n);if(n=c.pop(),o){var s,a,f={};for(s in o)for(a in o[s])f[a]={interfaceName:s,instantiated:!1,result:o[s][a]};o=f}var u=i(c,t,o);return n.apply(r,u)}}var r=this,n={};this.injector={},this.registerInterface=function(e,i){if(r[e])throw new Error('DependencyInjection: "'+e+'" interface is already registered.');return n[e]={interfacesSupported:(i||[]).concat(e),factories:{}},r.injector[e]=new t(e),r[e]=function(t,i){if(n[e].factories[t])throw new Error('DependencyInjection: "'+t+'" is already registered in '+e+".");return n[e].factories[t]={instantiated:!1,result:i},r},r}};"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=t:e.DependencyInjection=t}(this),function(e){"use strict";var t="undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports:e.DependencyInjection;t.registerInterface("model",["factory","service"]),t.registerInterface("factory",["model","service"]),t.registerInterface("service",["model","factory"]),t.registerInterface("controller",["model","factory","service"]),t.registerInterface("view",["model","factory","service","converter"]),t.registerInterface("converter",["model","factory","service","view"])}(this);
//# sourceMappingURL=mvc-injection.min.js.map