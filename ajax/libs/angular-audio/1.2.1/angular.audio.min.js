"use strict";var angular=angular;angular.module("ngAudio",[]).directive("ngAudio",["$compile","$q","ngAudio",function(e,n,i){return{restrict:"AEC",scope:{volume:"=",start:"=",currentTime:"=",loop:"=",clickPlay:"="},controller:function(e,n,t,o){var u=i.load(n.ngAudio);e.$audio=u,t.on("click",function(){e.clickPlay!==!1&&(u.audio.play(),u.volume=e.volume||u.volume,u.loop=e.loop,u.currentTime=e.start||0,o(function(){u.play()},5))})}}}]).service("localAudioFindingService",["$q",function(e){this.find=function(n){var i=e.defer(),t=document.getElementById(n);return t?i.resolve(t):i.reject(n),i.promise}}]).service("remoteAudioFindingService",["$q",function(e){this.find=function(n){var i=e.defer(),t=new Audio;return t.addEventListener("error",function(){i.reject()}),t.addEventListener("loadstart",function(){i.resolve(t)}),setTimeout(function(){t.src=n},1),i.promise}}]).service("cleverAudioFindingService",["$q","localAudioFindingService","remoteAudioFindingService",function(e,n,i){this.find=function(t){var o=e.defer();return t=t.replace("|","/"),n.find(t).then(o.resolve,function(){return i.find(t)}).then(o.resolve,o.reject),o.promise}}]).value("ngAudioGlobals",{muting:!1,songmuting:!1}).factory("NgAudioObject",["cleverAudioFindingService","$rootScope","$interval","$timeout","ngAudioGlobals",function(e,n,i,t,o){return function(t){function u(){r=n.$watch(function(){return{volume:g.volume,currentTime:g.currentTime,progress:g.progress,muting:g.muting,loop:g.loop}},function(e,n){e.currentTime!==n.currentTime&&g.setCurrentTime(e.currentTime),e.progress!==n.progress&&g.setProgress(e.progress),e.volume!==n.volume&&g.setVolume(e.volume),e.volume!==n.volume&&g.setVolume(e.volume),s=e.loop,e.muting!==n.muting&&g.setMuting(e.muting)},!0)}var r,c,s,l,a=!1,m=!1,d=!1,v=!1,f=!0,g=this;this.id=t,this.safeId=t.replace("/","|"),this.loop=0,this.unbind=function(){f=!1},this.play=function(){a=!0},this.pause=function(){m=!0},this.restart=function(){d=!0},this.stop=function(){this.restart()},this.setVolume=function(e){c=e},this.setMuting=function(e){v=e},this.setProgress=function(e){l&&l.duration&&(l.currentTime=l.duration*e)},this.setCurrentTime=function(e){l&&l.duration&&(l.currentTime=e)},e.find(t).then(function(e){l=e,l.addEventListener("canplay",function(){g.canPlay=!0})},function(e){g.error=!0,console.warn(e)}),i(function(){r&&r(),l&&(v||o.isMuting?l.volume=0:l.volume=void 0!==g.volume?g.volume:1,a&&(l.play(),a=!1),d&&(l.pause(),l.currentTime=0,d=!1),m&&(l.pause(),m=!1),c&&(l.volume=c,c=void 0),f&&(g.currentTime=l.currentTime,g.duration=l.duration,g.remaining=l.duration-l.currentTime,g.progress=l.currentTime/l.duration,g.paused=l.paused,g.src=l.src,s&&g.currentTime===g.duration&&(s!==!0&&(s--,g.loop--),g.setCurrentTime(0),g.play())),v||o.isMuting||(g.volume=l.volume),g.audio=l),u()},25)}}]).service("ngAudio",["NgAudioObject","ngAudioGlobals",function(e,n){this.play=function(n){var i=new e(n);return i.play(),i},this.load=function(n){return new e(n)},this.mute=function(){n.muting=!0},this.unmute=function(){n.muting=!1},this.toggleMute=function(){n.muting=!n.muting}}]);
//# sourceMappingURL=./angular.audio.min.js.map