"use strict";angular.module("ngAudio",[]).directive("ngAudio",["$compile","$q","ngAudio",function(e,n,t){return{restrict:"AEC",scope:{volume:"=",start:"=",currentTime:"=",loop:"=",clickPlay:"="},controller:function(e,n,i,o){var r=t.load(n.ngAudio);e.$audio=r,i.on("click",function(){e.clickPlay!==!1&&(r.audio.play(),r.volume=e.volume||r.volume,r.loop=e.loop,r.currentTime=e.start||0,o(function(){r.play()},5))})}}}]).service("localAudioFindingService",["$q",function(e){this.find=function(n){var t=e.defer(),i=document.getElementById(n);return i?t.resolve(i):t.reject(n),t.promise}}]).service("remoteAudioFindingService",["$q",function(e){this.find=function(n){var t=e.defer(),i=new Audio;return i.addEventListener("error",function(){t.reject()}),i.addEventListener("loadstart",function(){t.resolve(i)}),setTimeout(function(){i.src=n},1),t.promise}}]).service("cleverAudioFindingService",["$q","localAudioFindingService","remoteAudioFindingService",function(e,n,t){this.find=function(i){var o=e.defer();return i=i.replace("|","/"),n.find(i).then(o.resolve,function(){return t.find(i)}).then(o.resolve,o.reject),o.promise}}]).value("ngAudioGlobals",{muting:!1,songmuting:!1,performance:25,unlock:!0}).factory("NgAudioObject",["cleverAudioFindingService","$rootScope","$interval","$timeout","ngAudioGlobals",function(e,n,t,i,o){return function(i){function r(){u=n.$watch(function(){return{volume:h.volume,currentTime:h.currentTime,progress:h.progress,muting:h.muting,loop:h.loop,playbackRate:h.playbackRate}},function(e,n){e.currentTime!==n.currentTime&&h.setCurrentTime(e.currentTime),e.progress!==n.progress&&h.setProgress(e.progress),e.volume!==n.volume&&h.setVolume(e.volume),e.playbackRate!==n.playbackRate&&h.setPlaybackRate(e.playbackRate),s=e.loop,e.muting!==n.muting&&h.setMuting(e.muting)},!0)}o.unlock&&window.addEventListener("click",function y(){a.play(),a.pause(),window.removeEventListener("click",y)});var u,c,s,a,l=!1,d=!1,m=!1,f=!1,v=!1,p=!1,g=!0,h=this;this.id=i,this.safeId=i.replace("/","|"),this.loop=0,this.unbind=function(){g=!1},this.play=function(){l=!0},this.pause=function(){d=!0},this.restart=function(){m=!0},this.stop=function(){this.restart()},this.setVolume=function(e){c=e},this.setPlaybackRate=function(e){v=e,f=!0},this.setMuting=function(e){p=e},this.setProgress=function(e){a&&a.duration&&(a.currentTime=a.duration*e)},this.setCurrentTime=function(e){a&&a.duration&&(a.currentTime=e)},e.find(i).then(function(e){a=e,a.addEventListener("canplay",function(){h.canPlay=!0})},function(e){h.error=!0,console.warn(e)}),t(function(){u&&u(),a&&(p||o.isMuting?a.volume=0:a.volume=void 0!==h.volume?h.volume:1,l&&(a.play(),l=!1),m&&(a.pause(),a.currentTime=0,m=!1),d&&(a.pause(),d=!1),f&&(a.playbackRate=v,f=!1),c&&(a.volume=c,c=void 0),g&&(h.currentTime=a.currentTime,h.duration=a.duration,h.remaining=a.duration-a.currentTime,h.progress=a.currentTime/a.duration,h.paused=a.paused,h.src=a.src,s&&h.currentTime>=h.duration&&(s!==!0&&(s--,h.loop--),h.setCurrentTime(0),h.play())),p||o.isMuting||(h.volume=a.volume),h.audio=a),r()},o.performance)}}]).service("ngAudio",["NgAudioObject","ngAudioGlobals",function(e,n){this.play=function(n){var t=new e(n);return t.play(),t},this.load=function(n){return new e(n)},this.mute=function(){n.muting=!0},this.unmute=function(){n.muting=!1},this.toggleMute=function(){n.muting=!n.muting}}]);
//# sourceMappingURL=./angular.audio.min.js.map