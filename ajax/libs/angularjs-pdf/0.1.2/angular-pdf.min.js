!function(){"use strict";angular.module("pdf",[]).directive("ngPdf",function($window){return{restrict:"E",templateUrl:function(element,attr){return attr.templateUrl?attr.templateUrl:"partials/viewer.html"},link:function(scope){var url=scope.pdfUrl,pdfDoc=null,pageNum=1,scale=1,canvas=document.getElementById("pdf-canvas"),ctx=canvas.getContext("2d"),windowEl=angular.element($window);windowEl.on("scroll",function(){scope.$apply(function(){scope.scroll=windowEl[0].scrollY})}),PDFJS.disableWorker=!0,scope.pageNum=pageNum,scope.renderPage=function(num){pdfDoc.getPage(num).then(function(page){var viewport=page.getViewport(scale);canvas.height=viewport.height,canvas.width=viewport.width;var renderContext={canvasContext:ctx,viewport:viewport};page.render(renderContext)}),scope.pageCount=pdfDoc.numPages},scope.goPrevious=function(){scope.pageNum<=1||(scope.pageNum=parseInt(scope.pageNum,10)-1)},scope.goNext=function(){scope.pageNum>=pdfDoc.numPages||(scope.pageNum=parseInt(scope.pageNum,10)+1)},scope.zoomIn=function(){return scale+=.2,scope.renderPage(scope.pageNum),scale},scope.zoomOut=function(){return scale-=.2,scope.renderPage(scope.pageNum),scale},scope.changePage=function(){scope.renderPage(scope.pageNum)},scope.rotate=function(){"rotate0"===canvas.getAttribute("class")?canvas.setAttribute("class","rotate90"):"rotate90"===canvas.getAttribute("class")?canvas.setAttribute("class","rotate180"):"rotate180"===canvas.getAttribute("class")?canvas.setAttribute("class","rotate270"):canvas.setAttribute("class","rotate0")},PDFJS.getDocument(url).then(function(_pdfDoc){scope.pageCount=_pdfDoc.numPages,pdfDoc=_pdfDoc,scope.renderPage(scope.pageNum)}),scope.$watch("pageNum",function(newVal){null!==pdfDoc&&scope.renderPage(newVal)})}}})}();