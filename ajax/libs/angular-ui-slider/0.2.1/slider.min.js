angular.module("ui.slider",[]).value("uiSliderConfig",{}).directive("uiSlider",["uiSliderConfig","$timeout",function(e,a){return e=e||{},{require:"ngModel",compile:function(){var i=function(i,n,u,l){function r(e,a){return a?parseFloat(e):parseInt(e,10)}function o(){n.hasClass("ui-slider")&&n.slider("destroy")}var d=angular.copy(i.$eval(u.uiSlider)),s=angular.extend(d||{},e),t={min:null,max:null},v=["min","max","step","lowerBound","upperBound"],p=!angular.isUndefined(u.useDecimals),f=function(){angular.isArray(l.$viewValue)&&s.range!==!0&&(console.warn("Change your range option of ui-slider. When assigning ngModel an array of values then the range option should be set to true."),s.range=!0),angular.forEach(v,function(e){angular.isDefined(u[e])&&(s[e]=r(u[e],p))}),n.slider(s),f=angular.noop};angular.forEach(v,function(e){u.$observe(e,function(a){a&&(f(),s[e]=r(a,p),n.slider("option",e,r(a,p)),l.$render())})}),u.$observe("disabled",function(e){f(),n.slider("option","disabled",!!e)}),i.$watch(u.uiSlider,function(e){f(),void 0!==e&&n.slider("option",e)},!0),a(f,0,!0),n.bind("slide",function(e,a){var u;if(a.values){var r=a.values.slice();s.lowerBound&&r[0]<s.lowerBound&&(r[0]=Math.max(r[0],s.lowerBound)),s.upperBound&&r[1]>s.upperBound&&(r[1]=Math.min(r[1],s.upperBound)),r[0]===a.values[0]&&r[1]===a.values[1]||(u=!0,a.values=r)}else{var o=a.value;s.lowerBound&&o<s.lowerBound&&(o=Math.max(o,s.lowerBound)),s.upperBound&&o>s.upperBound&&(o=Math.min(o,s.upperBound)),o!==a.value&&(u=!0,a.value=o)}return l.$setViewValue(a.values||a.value),$(a.handle).find(".ui-slider-tip").text(a.value),i.$apply(),u?(setTimeout(function(){n.slider("value",a.values||a.value)},0),!1):void 0}),l.$render=function(){f();var e=s.range===!0?"values":"value";if(s.range===!0||!isNaN(l.$viewValue)||l.$viewValue instanceof Array?s.range&&!angular.isDefined(l.$viewValue)&&(l.$viewValue=[0,0]):l.$viewValue=0,s.range===!0){if(l.$viewValue&&angular.isString(l.$viewValue)&&1===(l.$viewValue.match(/,/g)||[]).length){var a=l.$viewValue.split(",");l.$viewValue=[Number(a[0]),Number(a[1])]}angular.isDefined(s.min)&&s.min>l.$viewValue[0]&&(l.$viewValue[0]=s.min),angular.isDefined(s.max)&&s.max<l.$viewValue[1]&&(l.$viewValue[1]=s.max),l.$viewValue[0]>l.$viewValue[1]&&(t.min>=l.$viewValue[1]&&(l.$viewValue[1]=t.min),t.max<=l.$viewValue[0]&&(l.$viewValue[0]=t.max)),t.min=l.$viewValue[0],t.max=l.$viewValue[1]}n.slider(e,l.$viewValue)},i.$watch(u.ngModel,function(){s.range===!0&&l.$render()},!0),i.$on("$destroy",o),n.one("$destroy",o)},n=function(e,i,n,u){var l=angular.extend({},e.$eval(n.uiSlider)),r=["min","max","step","tick","tip"];if(angular.forEach(r,function(e){angular.isDefined(n[e])&&(l[e]=n[e])}),angular.isDefined(l.tick)&&angular.isDefined(l.step))for(var o=parseInt((parseInt(l.max)-parseInt(l.min))/parseInt(l.step)),d=o;d>=0;d--){var s=d/o*100+"%";$("<div/>").addClass("ui-slider-tick").appendTo(i).css({left:s})}angular.isDefined(l.tip)&&a(function(){i.find(".ui-slider-handle").append('<div class="ui-slider-tip">'+u.$viewValue+"</div>")},10)};return{pre:i,post:n}}}}]);
//# sourceMappingURL=slider.min.js.map