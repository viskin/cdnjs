"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function PagerDirective(){return{restrict:"E",controller:PagerController,controllerAs:"pager",scope:!0,bindToController:{page:"=",size:"=",count:"=",onPage:"&"},template:'<div class="dt-pager">\n        <ul class="pager">\n          <li ng-class="{ disabled: !pager.canPrevious() }">\n            <a href ng-click="pager.selectPage(1)" class="icon-prev"></a>\n          </li>\n          <li ng-class="{ disabled: !pager.canPrevious() }">\n            <a href ng-click="pager.prevPage()" class="icon-left"></a>\n          </li>\n          <li ng-repeat="pg in pager.pages track by $index" ng-class="{ active: pg.active }">\n            <a href ng-click="pager.selectPage(pg.number)">{{pg.text}}</a>\n          </li>\n          <li ng-class="{ disabled: !pager.canNext() }">\n            <a href ng-click="pager.nextPage()" class="icon-right"></a>\n          </li>\n          <li ng-class="{ disabled: !pager.canNext() }">\n            <a href ng-click="pager.selectPage(pager.totalPages)" class="icon-skip"></a>\n          </li>\n        </ul>\n      </div>',replace:!0}}function FooterDirective(){return{restrict:"E",controller:FooterController,controllerAs:"footer",scope:!0,bindToController:{paging:"=",onPage:"&"},template:'<div class="dt-footer">\n        <div class="page-count">{{footer.paging.count}} total</div>\n        <dt-pager page="footer.page"\n               size="footer.paging.size"\n               count="footer.paging.count"\n               on-page="footer.onPaged(page)"\n               ng-show="footer.paging.count > 1">\n         </dt-pager>\n      </div>',replace:!0}}function CellDirective($rootScope,$compile,$log,$timeout){return{restrict:"E",controller:CellController,scope:!0,controllerAs:"cell",bindToController:{options:"=",value:"=",selected:"=",column:"=",row:"=",expanded:"=",hasChildren:"=",onTreeToggle:"&",onCheckboxChange:"&"},template:'<div class="dt-cell"\n            data-title="{{::cell.column.name}}"\n            ng-style="cell.styles()"\n            ng-class="cell.cellClass()">\n        <label ng-if="cell.column.isCheckboxColumn" class="dt-checkbox">\n          <input type="checkbox"\n                 ng-checked="cell.selected"\n                 ng-click="cell.onCheckboxChanged($event)" />\n        </label>\n        <span ng-if="cell.column.isTreeColumn && cell.hasChildren"\n              ng-class="cell.treeClass()"\n              ng-click="cell.onTreeToggled($event)"></span>\n        <span class="dt-cell-content"></span>\n      </div>',replace:!0,compile:function(){return{pre:function($scope,$elm,$attrs,ctrl){var cellScope,content=angular.element($elm[0].querySelector(".dt-cell-content"));(ctrl.column.template||ctrl.column.cellRenderer)&&(cellScope=ctrl.options.$outer.$new(!1),cellScope.getValue=ctrl.getValue),$scope.$watch("cell.row",function(){if(cellScope&&(cellScope.$cell=ctrl.value,cellScope.$row=ctrl.row,cellScope.$column=ctrl.column,cellScope.$$watchers=null),ctrl.column.template){content.empty();var elm=angular.element("<span>"+ctrl.column.template.trim()+"</span>");content.append($compile(elm)(cellScope))}else if(ctrl.column.cellRenderer){content.empty();var elm=angular.element(ctrl.column.cellRenderer(cellScope,content));content.append($compile(elm)(cellScope))}else content[0].innerHTML=ctrl.getValue()},!0)}}}}}function CamelCase(str){return str=str.replace(/[^a-zA-Z0-9 ]/g," "),str=str.replace(/([a-z](?=[A-Z]))/g,"$1 "),str=str.replace(/([^a-zA-Z0-9 ])|^[0-9]+/g,"").trim().toLowerCase(),str=str.replace(/([ 0-9]+)([a-zA-Z])/g,function(a,b,c){return b.trim()+c.toUpperCase()})}function GetVendorPrefixedName(property){var name=CamelCase(property);return cache[name]||(void 0!==testStyle[prefix.css+property]?cache[name]=prefix.css+property:void 0!==testStyle[property]&&(cache[name]=property)),cache[name]}function TranslateXY(styles,x,y){hasCSSTransforms?!isSafari&&hasCSS3DTransforms?(styles[transform]="translate3d("+x+"px, "+y+"px, 0)",styles[backfaceVisibility]="hidden"):styles[CamelCase(transform)]="translate("+x+"px, "+y+"px)":(styles.top=y+"px",styles.left=x+"px")}function GroupRowDirective(){return{restrict:"E",controller:GroupRowController,controllerAs:"group",bindToController:{row:"=",onGroupToggle:"&",expanded:"=",options:"="},scope:!0,replace:!0,template:'\n      <div class="dt-group-row">\n        <span ng-class="group.treeClass()"\n              ng-click="group.onGroupToggled($event)">\n        </span>\n        <span class="dt-group-row-label" ng-bind="group.row.name">\n        </span>\n      </div>',link:function($scope,$elm,$attrs,ctrl){TranslateXY($elm[0].style,0,ctrl.row.$$index*ctrl.options.rowHeight),ctrl.options.internal.styleTranslator.register($scope.$index,$elm)}}}function DeepValueGetter(obj,path){if(!obj||!path)return obj;var current=obj,split=path.split(".");if(split.length)for(var i=0,len=split.length;len>i;i++)current=current[split[i]];return current}function RowDirective(){return{restrict:"E",controller:RowController,controllerAs:"rowCtrl",scope:!0,bindToController:{row:"=",columns:"=",columnWidths:"=",expanded:"=",selected:"=",hasChildren:"=",options:"=",onCheckboxChange:"&",onTreeToggle:"&"},link:function($scope,$elm,$attrs,ctrl){ctrl.row&&TranslateXY($elm[0].style,0,ctrl.row.$$index*ctrl.options.rowHeight),ctrl.options.internal.styleTranslator.register($scope.$index,$elm)},template:'\n      <div class="dt-row">\n        <div class="dt-row-left dt-row-block"\n             ng-if="rowCtrl.columns[\'left\'].length"\n             ng-style="rowCtrl.stylesByGroup(\'left\')">\n          <dt-cell ng-repeat="column in rowCtrl.columns[\'left\'] track by column.$id"\n                   on-tree-toggle="rowCtrl.onTreeToggled(cell)"\n                   column="column"\n                   options="rowCtrl.options"\n                   has-children="rowCtrl.hasChildren"\n                   on-checkbox-change="rowCtrl.onCheckboxChanged($event)"\n                   selected="rowCtrl.selected"\n                   expanded="rowCtrl.expanded"\n                   row="rowCtrl.row"\n                   value="rowCtrl.getValue(column)">\n          </dt-cell>\n        </div>\n        <div class="dt-row-center dt-row-block"\n             ng-style="rowCtrl.stylesByGroup(\'center\')">\n          <dt-cell ng-repeat="column in rowCtrl.columns[\'center\'] track by column.$id"\n                   on-tree-toggle="rowCtrl.onTreeToggled(cell)"\n                   column="column"\n                   options="rowCtrl.options"\n                   has-children="rowCtrl.hasChildren"\n                   expanded="rowCtrl.expanded"\n                   selected="rowCtrl.selected"\n                   row="rowCtrl.row"\n                   on-checkbox-change="rowCtrl.onCheckboxChanged($event)"\n                   value="rowCtrl.getValue(column)">\n          </dt-cell>\n        </div>\n        <div class="dt-row-right dt-row-block"\n             ng-if="rowCtrl.columns[\'right\'].length"\n             ng-style="rowCtrl.stylesByGroup(\'right\')">\n          <dt-cell ng-repeat="column in rowCtrl.columns[\'right\'] track by column.$id"\n                   on-tree-toggle="rowCtrl.onTreeToggled(cell)"\n                   column="column"\n                   options="rowCtrl.options"\n                   has-children="rowCtrl.hasChildren"\n                   selected="rowCtrl.selected"\n                   on-checkbox-change="rowCtrl.onCheckboxChanged($event)"\n                   row="rowCtrl.row"\n                   expanded="rowCtrl.expanded"\n                   value="rowCtrl.getValue(column)">\n          </dt-cell>\n        </div>\n      </div>',replace:!0}}function SelectionDirective(){return{controller:SelectionController,restrict:"A",require:"^dtBody",controllerAs:"selCtrl"}}function ScrollerDirective($timeout,$rootScope){return{restrict:"E",require:"^dtBody",transclude:!0,replace:!0,template:'<div ng-style="scrollerStyles()" ng-transclude></div>',link:function($scope,$elm,$attrs,ctrl){function update(){ctrl.options.internal.offsetY=lastScrollY,ctrl.options.internal.offsetX=lastScrollX,ctrl.updatePage(),ctrl.options.scrollbarV&&ctrl.getRows(),ctrl.options.$outer.$digest(),ticking=!1}function requestTick(){ticking||(requestAnimFrame(update),ticking=!0)}var ticking=!1,lastScrollY=0,lastScrollX=0,parent=$elm.parent();ctrl.options.internal.styleTranslator=new StyleTranslator(ctrl.options.rowHeight),ctrl.options.internal.setYOffset=function(offsetY){parent[0].scrollTop=offsetY},parent.on("scroll",function(ev){lastScrollY=this.scrollTop,lastScrollX=this.scrollLeft,requestTick()}),$scope.$on("$destroy",function(){parent.off("scroll")}),$scope.scrollerStyles=function(){return ctrl.options.scrollbarV?{height:ctrl.count*ctrl.options.rowHeight+"px"}:void 0}}}}function BodyDirective($timeout){return{restrict:"E",controller:BodyController,controllerAs:"body",bindToController:{columns:"=",columnWidths:"=",rows:"=",options:"=",selected:"=?",expanded:"=?",onPage:"&",onTreeToggle:"&",onSelect:"&",onRowClick:"&",onRowDblClick:"&"},scope:!0,template:'\n      <div \n        class="progress-linear" \n        role="progressbar" \n        ng-show="body.options.paging.loadingIndicator">\n        <div class="container">\n          <div class="bar"></div>\n        </div>\n      </div>\n      <div class="dt-body" ng-style="body.styles()" dt-seletion>\n        <dt-scroller class="dt-body-scroller">\n          <dt-group-row ng-repeat-start="r in body.tempRows track by $index"\n                        ng-if="r.group"\n                        ng-style="body.groupRowStyles(r)" \n                        options="body.options"\n                        on-group-toggle="body.onGroupToggle(group)"\n                        expanded="body.getRowExpanded(r)"\n                        tabindex="{{$index}}"\n                        row="r">\n          </dt-group-row>\n          <dt-row ng-repeat-end\n                  ng-if="!r.group"\n                  row="body.getRowValue($index)"\n                  tabindex="{{$index}}"\n                  columns="body.columns"\n                  column-widths="body.columnWidths"\n                  ng-keydown="selCtrl.keyDown($event, $index, r)"\n                  ng-click="selCtrl.rowClicked($event, r.$$index, r)"\n                  ng-dblclick="selCtrl.rowDblClicked($event, r.$$index, r)"\n                  on-tree-toggle="body.onTreeToggled(row, cell)"\n                  ng-class="body.rowClasses(r)"\n                  options="body.options"\n                  selected="body.isSelected(r)"\n                  on-checkbox-change="selCtrl.onCheckboxChange($event, $index, row)"\n                  columns="body.columnsByPin"\n                  has-children="body.getRowHasChildren(r)"\n                  expanded="body.getRowExpanded(r)"\n                  ng-style="body.rowStyles(r)">\n          </dt-row>\n        </dt-scroller>\n        <div ng-if="body.rows && !body.rows.length" \n             class="empty-row" \n             ng-bind="::body.options.emptyMessage">\n       </div>\n       <div ng-if="body.rows === undefined" \n             class="loading-row"\n             ng-bind="::body.options.loadingMessage">\n        </div>\n      </div>'}}function NextSortDirection(sortType,currentSort){return"single"===sortType?"asc"===currentSort?"desc":"asc":currentSort?"asc"===currentSort?"desc":void 0:"asc"}function HeaderCellDirective($compile){return{restrict:"E",controller:HeaderCellController,controllerAs:"hcell",scope:!0,bindToController:{options:"=",column:"=",onCheckboxChange:"&",onSort:"&",sortType:"=",onResize:"&",selected:"="},replace:!0,template:'<div ng-class="hcell.cellClass()"\n            class="dt-header-cell"\n            draggable="true"\n            data-id="{{column.$id}}"\n            ng-style="hcell.styles()"\n            title="{{::hcell.column.name}}">\n        <div resizable="hcell.column.resizable"\n             on-resize="hcell.onResized(width, hcell.column)"\n             min-width="hcell.column.minWidth"\n             max-width="hcell.column.maxWidth">\n          <label ng-if="hcell.column.isCheckboxColumn && hcell.column.headerCheckbox" class="dt-checkbox">\n            <input type="checkbox"\n                   ng-checked="hcell.selected"\n                   ng-click="hcell.onCheckboxChange()" />\n          </label>\n          <span class="dt-header-cell-label"\n                ng-click="hcell.onSorted()">\n          </span>\n          <span ng-class="hcell.sortClass()"></span>\n        </div>\n      </div>',compile:function(){return{pre:function($scope,$elm,$attrs,ctrl){var label=$elm[0].querySelector(".dt-header-cell-label"),cellScope=void 0;if((ctrl.column.headerTemplate||ctrl.column.headerRenderer)&&(cellScope=ctrl.options.$outer.$new(!1),cellScope.$header=ctrl.column.name,cellScope.$index=$scope.$index),ctrl.column.headerTemplate){var elm=angular.element("<span>"+ctrl.column.headerTemplate.trim()+"</span>");angular.element(label).append($compile(elm)(cellScope))}else if(ctrl.column.headerRenderer){var elm=angular.element(ctrl.column.headerRenderer($elm));angular.element(label).append($compile(elm)(cellScope)[0])}else{var val=ctrl.column.name;(void 0===val||null===val)&&(val=""),label.textContent=val}}}}}}function HeaderDirective($timeout){return{restrict:"E",controller:HeaderController,controllerAs:"header",scope:!0,bindToController:{options:"=",columns:"=",columnWidths:"=",onSort:"&",onResize:"&",onCheckboxChange:"&"},template:'\n      <div class="dt-header" ng-style="header.styles()">\n\n        <div class="dt-header-inner" ng-style="header.innerStyles()">\n          <div class="dt-row-left"\n               ng-style="header.stylesByGroup(\'left\')"\n               ng-if="header.columns[\'left\'].length"\n               sortable="header.options.reorderable"\n               on-sortable-sort="columnsResorted(event, columnId)">\n            <dt-header-cell\n              ng-repeat="column in header.columns[\'left\'] track by column.$id"\n              on-checkbox-change="header.onCheckboxChanged()"\n              on-sort="header.onSorted(column)"\n              options="header.options"\n              sort-type="header.options.sortType"\n              on-resize="header.onResized(column, width)"\n              selected="header.isSelected()"\n              column="column">\n            </dt-header-cell>\n          </div>\n          <div class="dt-row-center"\n               sortable="header.options.reorderable"\n               ng-style="header.stylesByGroup(\'center\')"\n               on-sortable-sort="columnsResorted(event, columnId)">\n            <dt-header-cell\n              ng-repeat="column in header.columns[\'center\'] track by column.$id"\n              on-checkbox-change="header.onCheckboxChanged()"\n              on-sort="header.onSorted(column)"\n              sort-type="header.options.sortType"\n              selected="header.isSelected()"\n              on-resize="header.onResized(column, width)"\n              options="header.options"\n              column="column">\n            </dt-header-cell>\n          </div>\n          <div class="dt-row-right"\n               ng-if="header.columns[\'right\'].length"\n               sortable="header.options.reorderable"\n               ng-style="header.stylesByGroup(\'right\')"\n               on-sortable-sort="columnsResorted(event, columnId)">\n            <dt-header-cell\n              ng-repeat="column in header.columns[\'right\'] track by column.$id"\n              on-checkbox-change="header.onCheckboxChanged()"\n              on-sort="header.onSorted(column)"\n              sort-type="header.options.sortType"\n              selected="header.isSelected()"\n              on-resize="header.onResized(column, width)"\n              options="header.options"\n              column="column">\n            </dt-header-cell>\n          </div>\n        </div>\n      </div>',replace:!0,link:function($scope,$elm,$attrs,ctrl){$scope.columnsResorted=function(event,columnId){var col=findColumnById(columnId),parent=angular.element(event.currentTarget),newIdx=-1;angular.forEach(parent.children(),function(c,i){columnId===angular.element(c).attr("data-id")&&(newIdx=i)}),$timeout(function(){angular.forEach(ctrl.columns,function(group){var idx=group.indexOf(col);if(idx>-1){var curColAtIdx=group[newIdx],siblingIdx=ctrl.options.columns.indexOf(curColAtIdx),curIdx=ctrl.options.columns.indexOf(col);return ctrl.options.columns.splice(curIdx,1),ctrl.options.columns.splice(siblingIdx,0,col),!1}})})};var findColumnById=function(columnId){var columns=ctrl.columns.left.concat(ctrl.columns.center).concat(ctrl.columns.right);return columns.find(function(c){return c.$id===columnId})}}}}function SortableDirective($timeout){return{restrict:"A",scope:{isSortable:"=sortable",onSortableSort:"&"},link:function($scope,$element,$attrs){function isbefore(a,b){if(a.parentNode==b.parentNode)for(var cur=a;cur;cur=cur.previousSibling)if(cur===b)return!0;return!1}function onDragEnter(e){var target=e.target;isbefore(dragEl,target)?target.parentNode.insertBefore(dragEl,target):target.nextSibling&&target.hasAttribute("draggable")&&target.parentNode.insertBefore(dragEl,target.nextSibling.nextSibling)}function onDragEnd(evt){evt.preventDefault(),dragEl.classList.remove("dt-clone"),$element.off("dragend",onDragEnd),$element.off("dragenter",onDragEnter),nextEl!==dragEl.nextSibling&&$scope.onSortableSort({event:evt,columnId:angular.element(dragEl).attr("data-id")})}function onDragStart(evt){return $scope.isSortable?(evt=evt.originalEvent||evt,dragEl=evt.target,nextEl=dragEl.nextSibling,dragEl.classList.add("dt-clone"),evt.dataTransfer.effectAllowed="move",evt.dataTransfer.setData("Text",dragEl.textContent),$element.on("dragenter",onDragEnter),void $element.on("dragend",onDragEnd)):!1}var dragEl,nextEl;$element[0];$element.on("dragstart",onDragStart),$scope.$on("$destroy",function(){$element.off("dragstart",onDragStart)})}}}function ResizableDirective($document,$timeout){return{restrict:"A",scope:{isResizable:"=resizable",minWidth:"=",maxWidth:"=",onResize:"&"},link:function($scope,$element,$attrs){function mousemove(event){event=event.originalEvent||event;var width=parent[0].scrollWidth,movementX=event.movementX||event.mozMovementX||event.screenX-prevScreenX,newWidth=width+(movementX||0);prevScreenX=event.screenX,(!$scope.minWidth||newWidth>=$scope.minWidth)&&(!$scope.maxWidth||newWidth<=$scope.maxWidth)&&parent.css({width:newWidth+"px"})}function mouseup(){$scope.onResize&&$timeout(function(){$scope.onResize({width:parent[0].scrollWidth})}),$document.unbind("mousemove",mousemove),$document.unbind("mouseup",mouseup)}$scope.isResizable&&$element.addClass("resizable");var prevScreenX,handle=angular.element('<span class="dt-resize-handle" title="Resize"></span>'),parent=$element.parent();handle.on("mousedown",function(event){return $element[0].classList.contains("resizable")?(event.stopPropagation(),event.preventDefault(),$document.on("mousemove",mousemove),void $document.on("mouseup",mouseup)):!1}),$element.append(handle)}}}function throttle(func,wait,options){var context,args,result,timeout=null,previous=0;options||(options={});var later=function(){previous=options.leading===!1?0:new Date,timeout=null,result=func.apply(context,args)};return function(){var now=new Date;previous||options.leading!==!1||(previous=now);var remaining=wait-(now-previous);return context=this,args=arguments,0>=remaining?(clearTimeout(timeout),timeout=null,previous=now,result=func.apply(context,args)):timeout||options.trailing===!1||(timeout=setTimeout(later,remaining)),result}}function ScrollbarWidth(){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.width="100px",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var widthNoScroll=outer.offsetWidth;outer.style.overflow="scroll";var inner=document.createElement("div");inner.style.width="100%",outer.appendChild(inner);var widthWithScroll=inner.offsetWidth;return outer.parentNode.removeChild(outer),widthNoScroll-widthWithScroll}function ObjectId(){var timestamp=((new Date).getTime()/1e3|0).toString(16);return timestamp+"xxxxxxxxxxxxxxxx".replace(/[x]/g,function(){return(16*Math.random()|0).toString(16)}).toLowerCase()}function ScaleColumns(colsByGroup,maxWidth,totalFlexGrow){angular.forEach(colsByGroup,function(cols){cols.forEach(function(column){column.canAutoResize?column.width=0:(maxWidth-=column.width,totalFlexGrow-=column.flexGrow)})});var hasMinWidth={},remainingWidth=maxWidth,_loop=function(){var widthPerFlexPoint=remainingWidth/totalFlexGrow;remainingWidth=0,angular.forEach(colsByGroup,function(cols){cols.forEach(function(column,i){if(column.canAutoResize&&!hasMinWidth[i]){var newWidth=column.width+column.flexGrow*widthPerFlexPoint;void 0!==column.minWidth&&newWidth<column.minWidth?(remainingWidth+=newWidth-column.minWidth,column.width=column.minWidth,hasMinWidth[i]=!0):column.width=newWidth}})})};do _loop();while(0!==remainingWidth)}function ColumnsByPin(cols){for(var ret={left:[],center:[],right:[]},i=0,len=cols.length;len>i;i++){var c=cols[i];c.frozenLeft?ret.left.push(c):c.frozenRight?ret.right.push(c):ret.center.push(c)}return ret}function GetTotalFlexGrow(columns){var totalFlexGrow=0,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=columns[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var c=_step.value;totalFlexGrow+=c.flexGrow||0}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator["return"]&&_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError}}return totalFlexGrow}function ColumnTotalWidth(columns,prop){var totalWidth=0;return columns.forEach(function(c){var has=prop&&c[prop];totalWidth+=has?c[prop]:c.width}),totalWidth}function AdjustColumnWidths(allColumns,expectedWidth){var columnsWidth=ColumnTotalWidth(allColumns),totalFlexGrow=GetTotalFlexGrow(allColumns),colsByGroup=ColumnsByPin(allColumns);columnsWidth!==expectedWidth&&ScaleColumns(colsByGroup,expectedWidth,totalFlexGrow)}function ForceFillColumnWidths(allColumns,expectedWidth,startIdx){var contentWidth=0,columnsToResize=startIdx>-1?allColumns.slice(startIdx,allColumns.length).filter(function(c){return c.canAutoResize}):allColumns.filter(function(c){return c.canAutoResize});allColumns.forEach(function(c){contentWidth+=c.canAutoResize?c.$$oldWidth||c.width:c.width});var remainingWidth=expectedWidth-contentWidth,additionWidthPerColumn=remainingWidth/columnsToResize.length,exceedsWindow=contentWidth>expectedWidth;columnsToResize.forEach(function(column){if(exceedsWindow)column.width=column.$$oldWidth||column.width;else{column.$$oldWidth||(column.$$oldWidth=column.width);var newSize=column.$$oldWidth+additionWidthPerColumn;column.minWith&&newSize<column.minWidth?column.width=column.minWidth:column.maxWidth&&newSize>column.maxWidth?column.width=column.maxWidth:column.width=newSize}})}function ColumnGroupWidths(groups,all){return{left:ColumnTotalWidth(groups.left),center:ColumnTotalWidth(groups.center),right:ColumnTotalWidth(groups.right),total:ColumnTotalWidth(all)}}function DataTableDirective($window,$timeout,$parse){return{restrict:"E",replace:!0,controller:DataTableController,scope:!0,bindToController:{options:"=",rows:"=",selected:"=?",expanded:"=?",onSelect:"&",onSort:"&",onTreeToggle:"&",onPage:"&",onRowClick:"&",onRowDblClick:"&"},controllerAs:"dt",template:function(element){var columns=element[0].getElementsByTagName("column"),id=ObjectId();return DataTableService.saveColumns(id,columns),'<div class="dt" ng-class="dt.tableCss()" data-column-id="'+id+'">\n          <dt-header options="dt.options"\n                     on-checkbox-change="dt.onHeaderCheckboxChange()"\n                     columns="dt.columnsByPin"\n                     column-widths="dt.columnWidths"\n                     ng-if="dt.options.headerHeight"\n                     on-resize="dt.onResize(column, width)"\n                     selected="dt.isAllRowsSelected()"\n                     on-sort="dt.onSorted()">\n          </dt-header>\n          <dt-body rows="dt.rows"\n                   selected="dt.selected"\n                   expanded="dt.expanded"\n                   columns="dt.columnsByPin"\n                   on-select="dt.onSelected(rows)"\n                   on-row-click="dt.onRowClicked(row)"\n                   on-row-dbl-click="dt.onRowDblClicked(row)"\n                   column-widths="dt.columnWidths"\n                   options="dt.options"\n                   on-page="dt.onBodyPage(offset, size)"\n                   on-tree-toggle="dt.onTreeToggled(row, cell)">\n           </dt-body>\n          <dt-footer ng-if="dt.options.footerHeight"\n                     ng-style="{ height: dt.options.footerHeight + \'px\' }"\n                     on-page="dt.onFooterPage(offset, size)"\n                     paging="dt.options.paging">\n           </dt-footer>\n        </div>'},compile:function(tElem,tAttrs){return{pre:function($scope,$elm,$attrs,ctrl){function resize(){var rect=$elm[0].getBoundingClientRect();if(ctrl.options.internal.innerWidth=Math.floor(rect.width),ctrl.options.scrollbarV){var height=rect.height;ctrl.options.headerHeight&&(height-=ctrl.options.headerHeight),ctrl.options.footerHeight&&(height-=ctrl.options.footerHeight),ctrl.options.internal.bodyHeight=height,ctrl.calculatePageSize()}ctrl.adjustColumns()}DataTableService.buildColumns($scope,$parse);var id=$elm.attr("data-column-id"),columns=DataTableService.columns[id];columns&&(ctrl.options.columns=columns),ctrl.transposeColumnDefaults(),ctrl.options.internal.scrollBarWidth=ScrollbarWidth(),angular.element($window).bind("resize",throttle(function(){$timeout(resize)}));var checkVisibility=function checkVisibility(){var bounds=$elm[0].getBoundingClientRect(),visible=bounds.width&&bounds.height;visible?resize():$timeout(checkVisibility,100)};checkVisibility(),$elm.addClass("dt-loaded"),$scope.$on("$destroy",function(){angular.element($window).off("resize")})}}}}}DataTableDirective.$inject=["$window","$timeout","$parse"],ResizableDirective.$inject=["$document","$timeout"],SortableDirective.$inject=["$timeout"],HeaderDirective.$inject=["$timeout"],HeaderCellDirective.$inject=["$compile"],BodyDirective.$inject=["$timeout"],ScrollerDirective.$inject=["$timeout","$rootScope"],CellDirective.$inject=["$rootScope","$compile","$log","$timeout"],Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();!function(){function polyfill(fnName){Array.prototype[fnName]||(Array.prototype[fnName]=function(predicate){var i,len,test,thisArg=arguments[1];if("function"!=typeof predicate)throw new TypeError;for(test=thisArg?function(){return predicate.apply(thisArg,arguments)}:predicate,i=0,len=this.length;len>i;i++)if(test(this[i],i,this)===!0)return"find"===fnName?this[i]:i;return"find"!==fnName?-1:void 0})}for(var i in{find:1,findIndex:1})polyfill(i)}();var PagerController=function(){function PagerController($scope){var _this=this;_classCallCheck(this,PagerController),$scope.$watch("pager.count",function(newVal){_this.calcTotalPages(_this.size,_this.count),_this.getPages(_this.page||1)}),$scope.$watch("pager.page",function(newVal){0!==newVal&&newVal<=_this.totalPages&&_this.getPages(newVal)}),this.getPages(this.page||1)}return PagerController.$inject=["$scope"],_createClass(PagerController,[{key:"calcTotalPages",value:function(size,count){var count=1>size?1:Math.ceil(count/size);this.totalPages=Math.max(count||0,1)}},{key:"selectPage",value:function(num){num>0&&num<=this.totalPages&&(this.page=num,this.onPage({page:num}))}},{key:"prevPage",value:function(){this.page>1&&this.selectPage(--this.page)}},{key:"nextPage",value:function(){this.selectPage(++this.page)}},{key:"canPrevious",value:function(){return this.page>1}},{key:"canNext",value:function(){return this.page<this.totalPages}},{key:"getPages",value:function(page){var pages=[],startPage=1,endPage=this.totalPages,maxSize=5,isMaxSized=maxSize<this.totalPages;isMaxSized&&(startPage=(Math.ceil(page/maxSize)-1)*maxSize+1,endPage=Math.min(startPage+maxSize-1,this.totalPages));for(var number=startPage;endPage>=number;number++)pages.push({number:number,text:number,active:number===page});this.pages=pages}}]),PagerController}(),FooterController=function(){function FooterController($scope){var _this2=this;_classCallCheck(this,FooterController),this.page=this.paging.offset+1,$scope.$watch("footer.paging.offset",function(newVal){_this2.offsetChanged(newVal)})}return FooterController.$inject=["$scope"],_createClass(FooterController,[{key:"offsetChanged",value:function(newVal){this.page=newVal+1}},{key:"onPaged",value:function(page){this.paging.offset=page-1,this.onPage({offset:this.paging.offset,size:this.paging.size})}}]),FooterController}(),CellController=function(){function CellController(){_classCallCheck(this,CellController)}return _createClass(CellController,[{key:"styles",value:function(){return{width:this.column.width+"px"}}},{key:"cellClass",value:function(){var style={"dt-tree-col":this.column.isTreeColumn};return this.column.className&&(style[this.column.className]=!0),style}},{key:"treeClass",value:function(){return{"dt-tree-toggle":!0,"icon-right":!this.expanded,"icon-down":this.expanded}}},{key:"onTreeToggled",value:function(evt){evt.stopPropagation(),this.expanded=!this.expanded,this.onTreeToggle({cell:{value:this.value,column:this.column,expanded:this.expanded}})}},{key:"onCheckboxChanged",value:function(event){event.stopPropagation(),this.onCheckboxChange({$event:event})}},{key:"getValue",value:function(){var val=this.column.cellDataGetter?this.column.cellDataGetter(this.value):this.value;return(void 0===val||null===val)&&(val=""),val}}]),CellController}(),cache={},testStyle=document.createElement("div").style,prefix=function(){var styles=window.getComputedStyle(document.documentElement,""),pre=(Array.prototype.slice.call(styles).join("").match(/-(moz|webkit|ms)-/)||""===styles.OLink&&["","o"])[1],dom="WebKit|Moz|MS|O".match(new RegExp("("+pre+")","i"))[1];return{dom:dom,lowercase:pre,css:"-"+pre+"-",js:pre[0].toUpperCase()+pre.substr(1)}}(),transform=GetVendorPrefixedName("transform"),backfaceVisibility=GetVendorPrefixedName("backfaceVisibility"),hasCSSTransforms=!!GetVendorPrefixedName("transform"),hasCSS3DTransforms=!!GetVendorPrefixedName("perspective"),ua=window.navigator.userAgent,isSafari=/Safari\//.test(ua)&&!/Chrome\//.test(ua),GroupRowController=function(){function GroupRowController(){_classCallCheck(this,GroupRowController)}return _createClass(GroupRowController,[{key:"onGroupToggled",value:function(evt){evt.stopPropagation(),this.onGroupToggle({group:this.row})}},{key:"treeClass",value:function(){return{"dt-tree-toggle":!0,"icon-right":!this.expanded,"icon-down":this.expanded}}}]),GroupRowController}(),RowController=function(){function RowController(){_classCallCheck(this,RowController)}return _createClass(RowController,[{key:"getValue",value:function(col){return col.prop?DeepValueGetter(this.row,col.prop):""}},{key:"onTreeToggled",value:function(cell){this.onTreeToggle({cell:cell,row:this.row})}},{key:"stylesByGroup",value:function(group){var styles={
width:this.columnWidths[group]+"px"};if("left"===group)TranslateXY(styles,this.options.internal.offsetX,0);else if("right"===group){var offset=-1*(this.columnWidths.total-this.options.internal.innerWidth-this.options.internal.offsetX+this.options.internal.scrollBarWidth);TranslateXY(styles,offset,0)}return styles}},{key:"onCheckboxChanged",value:function(ev){this.onCheckboxChange({$event:ev,row:this.row})}}]),RowController}(),KEYS={BACKSPACE:8,TAB:9,RETURN:13,ALT:18,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46,COMMA:188,PERIOD:190,A:65,Z:90,ZERO:48,NUMPAD_0:96,NUMPAD_9:105},SelectionController=function(){function SelectionController($scope){_classCallCheck(this,SelectionController),this.body=$scope.body,this.options=$scope.body.options,this.selected=$scope.body.selected}return SelectionController.$inject=["$scope"],_createClass(SelectionController,[{key:"keyDown",value:function(ev,index,row){if(KEYS[ev.keyCode]&&ev.preventDefault(),ev.keyCode===KEYS.DOWN){var next=ev.target.nextElementSibling;next&&next.focus()}else if(ev.keyCode===KEYS.UP){var prev=ev.target.previousElementSibling;prev&&prev.focus()}else ev.keyCode===KEYS.RETURN&&this.selectRow(index,row)}},{key:"rowClicked",value:function(event,index,row){this.options.checkboxSelection||(event.preventDefault(),this.selectRow(event,index,row)),this.body.onRowClick({row:row})}},{key:"rowDblClicked",value:function(event,index,row){this.options.checkboxSelection||(event.preventDefault(),this.selectRow(event,index,row)),this.body.onRowDblClick({row:row})}},{key:"onCheckboxChange",value:function(event,index,row){this.selectRow(event,index,row)}},{key:"selectRow",value:function(event,index,row){if(this.options.selectable)if(this.options.multiSelect){var isShiftKeyDown=(event.ctrlKey||event.metaKey,event.shiftKey);if(isShiftKeyDown)this.selectRowsBetween(index,row);else{var idx=this.selected.indexOf(row);idx>-1?this.selected.splice(idx,1):(this.options.multiSelectOnShift&&1===this.selected.length&&this.selected.splice(0,1),this.selected.push(row),this.body.onSelect({rows:[row]}))}this.prevIndex=index}else this.selected=row,this.body.onSelect({rows:[row]})}},{key:"selectRowsBetween",value:function(index){for(var reverse=index<this.prevIndex,selecteds=[],i=0,len=this.body.rows.length;len>i;i++){var row=this.body.rows[i],greater=i>=this.prevIndex&&index>=i,lesser=i<=this.prevIndex&&i>=index,range={};if(range=reverse?{start:index,end:this.prevIndex-index}:{start:this.prevIndex,end:index+1},reverse&&lesser||!reverse&&greater){var idx=this.selected.indexOf(row);if(reverse&&idx>-1){this.selected.splice(idx,1);continue}i>=range.start&&i<range.end&&-1===idx&&(this.selected.push(row),selecteds.push(row))}}this.body.onSelect({rows:selecteds})}}]),SelectionController}(),requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/60)}}(),StyleTranslator=function(){function StyleTranslator(height){_classCallCheck(this,StyleTranslator),this.height=height,this.map=new Map}return _createClass(StyleTranslator,[{key:"update",value:function(rows){for(var n=0;n<=this.map.size;){var dom=this.map.get(n),model=rows[n];dom&&model&&TranslateXY(dom[0].style,0,model.$$index*this.height),n++}}},{key:"register",value:function(idx,dom){this.map.set(idx,dom)}}]),StyleTranslator}(),BodyController=function(){function BodyController($scope,$timeout){var _this3=this;if(_classCallCheck(this,BodyController),this.$scope=$scope,this.tempRows=[],this.treeColumn=this.options.columns.find(function(c){return c.isTreeColumn}),this.groupColumn=this.options.columns.find(function(c){return c.group}),$scope.$watchCollection("body.rows",this.rowsUpdated.bind(this)),this.options.scrollbarV||!this.options.scrollbarV&&this.options.paging.externalPaging){var sized=!1;$scope.$watch("body.options.paging.size",function(newVal,oldVal){(!sized||newVal>oldVal)&&(_this3.getRows(),sized=!0)}),$scope.$watch("body.options.paging.count",function(count){_this3.count=count,_this3.updatePage()}),$scope.$watch("body.options.paging.offset",function(newVal){_this3.options.paging.size&&_this3.onPage({offset:newVal,size:_this3.options.paging.size})})}}return BodyController.$inject=["$scope","$timeout"],_createClass(BodyController,[{key:"rowsUpdated",value:function(newVal,oldVal){if(newVal)if(this.options.paging.externalPaging||(this.options.paging.count=newVal.length),this.count=this.options.paging.count,(this.treeColumn||this.groupColumn)&&this.buildRowsByGroup(),this.options.scrollbarV){var refresh=newVal&&oldVal&&(newVal.length===oldVal.length||newVal.length<oldVal.length);this.getRows(refresh)}else{var rows=this.rows;if(this.treeColumn?rows=this.buildTree():this.groupColumn&&(rows=this.buildGroups()),this.options.paging.externalPaging){var idxs=this.getFirstLastIndexes(),idx=idxs.first;for(this.tempRows.splice(0,this.tempRows.length);idx<idxs.last;)this.tempRows.push(rows[idx++])}else{var _tempRows;this.tempRows.splice(0,this.tempRows.length),(_tempRows=this.tempRows).push.apply(_tempRows,_toConsumableArray(rows))}}}},{key:"getFirstLastIndexes",value:function(){var firstRowIndex,endIndex;return this.options.scrollbarV?(firstRowIndex=Math.max(Math.floor((this.options.internal.offsetY||0)/this.options.rowHeight,0),0),endIndex=Math.min(firstRowIndex+this.options.paging.size,this.count)):this.options.paging.externalPaging?(firstRowIndex=Math.max(this.options.paging.offset*this.options.paging.size,0),endIndex=Math.min(firstRowIndex+this.options.paging.size,this.count)):endIndex=this.count,{first:firstRowIndex,last:endIndex}}},{key:"updatePage",value:function(){var curPage=this.options.paging.offset,idxs=this.getFirstLastIndexes();void 0===this.options.internal.oldScrollPosition&&(this.options.internal.oldScrollPosition=0);var oldScrollPosition=this.options.internal.oldScrollPosition,newPage=idxs.first/this.options.paging.size;this.options.internal.oldScrollPosition=newPage,newPage=oldScrollPosition>newPage?Math.floor(newPage):newPage>oldScrollPosition?Math.ceil(newPage):curPage,isNaN(newPage)||(this.options.paging.offset=newPage)}},{key:"buildRowsByGroup",value:function(){this.index={},this.rowsByGroup={};for(var parentProp=this.treeColumn?this.treeColumn.relationProp:this.groupColumn.prop,i=0,len=this.rows.length;len>i;i++){var row=this.rows[i],relVal=row[parentProp];if(relVal&&(this.rowsByGroup[relVal]?this.rowsByGroup[relVal].push(row):this.rowsByGroup[relVal]=[row]),this.treeColumn){var prop=this.treeColumn.prop;if(this.index[row[prop]]=row,void 0===row[parentProp])row.$$depth=0;else{var parent=this.index[row[parentProp]];row.$$depth=parent.$$depth+1,parent.$$children?parent.$$children.push(row[prop]):parent.$$children=[row[prop]]}}}}},{key:"buildGroups",value:function(){var _this4=this,temp=[];return angular.forEach(this.rowsByGroup,function(v,k){temp.push({name:k,group:!0}),_this4.expanded[k]&&temp.push.apply(temp,_toConsumableArray(v))}),temp}},{key:"isSelected",value:function(row){var selected=!1;return this.options.selectable&&(selected=this.options.multiSelect?this.selected.indexOf(row)>-1:this.selected===row),selected}},{key:"buildTree",value:function(){for(var count=0,temp=[],i=0,len=this.rows.length;len>i;i++){var row=this.rows[i],relVal=row[this.treeColumn.relationProp],keyVal=row[this.treeColumn.prop],rows=this.rowsByGroup[keyVal],expanded=this.expanded[keyVal];relVal||(count++,temp.push(row)),rows&&rows.length&&expanded&&(temp.push.apply(temp,_toConsumableArray(rows)),count+=rows.length)}return temp}},{key:"getRows",value:function(refresh){if((this.treeColumn||this.groupColumn)&&!this.rowsByGroup)return!1;var temp;this.treeColumn?(temp=this.treeTemp||[],(refresh||!this.treeTemp)&&(this.treeTemp=temp=this.buildTree(),this.count=temp.length,this.tempRows.splice(0,this.tempRows.length))):this.groupColumn?(temp=this.groupsTemp||[],(refresh||!this.groupsTemp)&&(this.groupsTemp=temp=this.buildGroups(),this.count=temp.length)):(temp=this.rows,refresh===!0&&this.tempRows.splice(0,this.tempRows.length));var idx=0,indexes=this.getFirstLastIndexes(),rowIndex=indexes.first;for(this.tempRows.splice(0,indexes.last-indexes.first);rowIndex<indexes.last&&rowIndex<this.count;){var row=temp[rowIndex];row&&(row.$$index=rowIndex,this.tempRows[idx]=row),idx++,rowIndex++}return this.options.internal.styleTranslator.update(this.tempRows),this.tempRows}},{key:"styles",value:function styles(){var styles={width:this.options.internal.innerWidth+"px"};return this.options.scrollbarV?this.options.scrollbarH===!1&&(styles.overflowX="hidden"):styles.overflowY="hidden",this.options.scrollbarV&&(styles.height=this.options.internal.bodyHeight+"px"),styles}},{key:"rowStyles",value:function(row){var styles={};return"auto"===this.options.rowHeight&&(styles.height=this.options.rowHeight+"px"),styles}},{key:"groupRowStyles",value:function(row){var styles=this.rowStyles(row);return styles.width=this.columnWidths.total+"px",styles}},{key:"rowClasses",value:function(row){var styles={selected:this.isSelected(row),"dt-row-even":row&&row.$$index%2===0,"dt-row-odd":row&&row.$$index%2!==0};return this.treeColumn&&(styles["dt-leaf"]=this.rowsByGroup[row[this.treeColumn.relationProp]],styles["dt-has-leafs"]=this.rowsByGroup[row[this.treeColumn.prop]],styles["dt-depth-"+row.$$depth]=!0),styles}},{key:"getRowValue",value:function(idx){return this.tempRows[idx]}},{key:"getRowExpanded",value:function(row){return this.treeColumn?this.expanded[row[this.treeColumn.prop]]:this.groupColumn?this.expanded[row.name]:void 0}},{key:"getRowHasChildren",value:function(row){if(this.treeColumn){var children=this.rowsByGroup[row[this.treeColumn.prop]];return void 0!==children||children&&!children.length}}},{key:"onTreeToggled",value:function(row,cell){var val=row[this.treeColumn.prop];if(this.expanded[val]=!this.expanded[val],this.options.scrollbarV)this.getRows(!0);else{var _tempRows2,values=this.buildTree();this.tempRows.splice(0,this.tempRows.length),(_tempRows2=this.tempRows).push.apply(_tempRows2,_toConsumableArray(values))}this.onTreeToggle({row:row,cell:cell})}},{key:"onGroupToggle",value:function(row){if(this.expanded[row.name]=!this.expanded[row.name],this.options.scrollbarV)this.getRows(!0);else{var _tempRows3,values=this.buildGroups();this.tempRows.splice(0,this.tempRows.length),(_tempRows3=this.tempRows).push.apply(_tempRows3,_toConsumableArray(values))}}}]),BodyController}(),HeaderCellController=function(){function HeaderCellController(){_classCallCheck(this,HeaderCellController)}return _createClass(HeaderCellController,[{key:"styles",value:function(){return{width:this.column.width+"px",minWidth:this.column.minWidth+"px",maxWidth:this.column.maxWidth+"px",height:this.column.height+"px"}}},{key:"cellClass",value:function(){var cls={sortable:this.column.sortable,resizable:this.column.resizable};return this.column.heaerClassName&&(cls[this.column.headerClassName]=!0),cls}},{key:"onSorted",value:function(){this.column.sortable&&(this.column.sort=NextSortDirection(this.sortType,this.column.sort),void 0===this.column.sort&&(this.column.sortPriority=void 0),this.onSort({column:this.column}))}},{key:"sortClass",value:function(){return{"sort-btn":!0,"sort-asc icon-down":"asc"===this.column.sort,"sort-desc icon-up":"desc"===this.column.sort}}},{key:"onResized",value:function(width,column){this.onResize({column:column,width:width})}},{key:"onCheckboxChange",value:function(){this.onCheckboxChanged()}}]),HeaderCellController}(),HeaderController=function(){function HeaderController(){_classCallCheck(this,HeaderController)}return _createClass(HeaderController,[{key:"styles",value:function(){return{width:this.options.internal.innerWidth+"px",height:this.options.headerHeight+"px"}}},{key:"innerStyles",value:function(){return{width:this.columnWidths.total+"px"}}},{key:"onSorted",value:function(sortedColumn){if("single"===this.options.sortType){var unsortColumn=function(column){column!==sortedColumn&&(column.sort=void 0)};this.columns.left.forEach(unsortColumn),this.columns.center.forEach(unsortColumn),this.columns.right.forEach(unsortColumn)}this.onSort({column:sortedColumn})}},{key:"stylesByGroup",value:function(group){var styles={width:this.columnWidths[group]+"px"};if("center"===group)TranslateXY(styles,-1*this.options.internal.offsetX,0);else if("right"===group){var offset=-1*(this.columnWidths.total-this.options.internal.innerWidth);TranslateXY(styles,offset,0)}return styles}},{key:"onCheckboxChanged",value:function(){this.onCheckboxChange()}},{key:"onResized",value:function(column,width){this.onResize({column:column,width:width})}}]),HeaderController}(),DataTableService={columns:{},dTables:{},saveColumns:function(id,columnElms){if(columnElms&&columnElms.length){var columnsArray=[].slice.call(columnElms);this.dTables[id]=columnsArray}},buildColumns:function(scope,parse){var _this5=this;angular.forEach(this.dTables,function(columnElms,id){_this5.columns[id]=[],angular.forEach(columnElms,function(c){var column={};angular.forEach(c.attributes,function(attr){var attrName=CamelCase(attr.name);switch(attrName){case"class":column.className=attr.value;break;case"name":case"prop":column[attrName]=attr.value;break;case"headerRenderer":case"cellRenderer":case"cellDataGetter":column[attrName]=parse(attr.value);break;default:column[attrName]=parse(attr.value)(scope)}});var header=c.getElementsByTagName("column-header");header.length&&(column.headerTemplate=header[0].innerHTML,c.removeChild(header[0])),""!==c.innerHTML&&(column.template=c.innerHTML),_this5.columns[id].push(column)})}),this.dTables={}}},ColumnDefaults={frozenLeft:!1,frozenRight:!1,className:void 0,heaerClassName:void 0,flexGrow:0,minWidth:100,maxWidth:void 0,width:150,resizable:!0,comparator:void 0,sortable:!0,sort:void 0,headerRenderer:void 0,cellRenderer:void 0,cellDataGetter:void 0,isTreeColumn:!1,isCheckboxColumn:!1,headerCheckbox:!1,canAutoResize:!0},TableDefaults={scrollbarV:!0,rowHeight:30,columnMode:"standard",loadingMessage:"Loading...",emptyMessage:"No data to display",headerHeight:30,footerHeight:0,paging:{externalPaging:!1,size:void 0,count:0,offset:0,loadingIndicator:!1},selectable:!1,multiSelect:!1,checkboxSelection:!1,reorderable:!0,internal:{offsetX:0,offsetY:0,innerWidth:0,bodyHeight:300}},DataTableController=function(){function DataTableController($scope,$filter,$log,$transclude){var _this6=this;_classCallCheck(this,DataTableController),Object.assign(this,{$scope:$scope,$filter:$filter,$log:$log}),this.defaults(),this.options.$outer=$scope.$parent,$scope.$watch("dt.options.columns",function(newVal,oldVal){_this6.transposeColumnDefaults(),newVal.length!==oldVal.length&&_this6.adjustColumns(),_this6.calculateColumns()},!0);var watch=$scope.$watch("dt.rows",function(newVal){newVal&&(watch(),_this6.onSorted())})}return DataTableController.$inject=["$scope","$filter","$log","$transclude"],_createClass(DataTableController,[{key:"defaults",value:function(){var _this7=this;this.expanded=this.expanded||{},this.options=angular.extend(angular.copy(TableDefaults),this.options),angular.forEach(TableDefaults.paging,function(v,k){_this7.options.paging[k]||(_this7.options.paging[k]=v)}),this.options.selectable&&this.options.multiSelect&&(this.selected=this.selected||[])}},{key:"transposeColumnDefaults",value:function(){for(var i=0,len=this.options.columns.length;len>i;i++){var column=this.options.columns[i];column.$id=ObjectId(),angular.forEach(ColumnDefaults,function(v,k){column.hasOwnProperty(k)||(column[k]=v)}),column.name&&!column.prop&&(column.prop=CamelCase(column.name)),this.options.columns[i]=column}}},{key:"calculateColumns",value:function(){var columns=this.options.columns;this.columnsByPin=ColumnsByPin(columns),this.columnWidths=ColumnGroupWidths(this.columnsByPin,columns)}},{key:"tableCss",value:function(){return{fixed:this.options.scrollbarV,selectable:this.options.selectable,checkboxable:this.options.checkboxSelection}}},{key:"adjustColumns",value:function(forceIdx){var width=this.options.internal.innerWidth-this.options.internal.scrollBarWidth;"force"===this.options.columnMode?ForceFillColumnWidths(this.options.columns,width,forceIdx):"flex"===this.options.columnMode&&AdjustColumnWidths(this.options.columns,width)}},{key:"calculatePageSize",value:function(){this.options.paging.size=Math.ceil(this.options.internal.bodyHeight/this.options.rowHeight)+1}},{key:"onSorted",value:function(){if(this.rows){var sorts=this.options.columns.filter(function(c){return c.sort}).sort(function(a,b){if(a.sortPriority&&b.sortPriority){if(a.sortPriority>b.sortPriority)return 1;if(a.sortPriority<b.sortPriority)return-1}else{if(a.sortPriority)return-1;if(b.sortPriority)return 1}return 0}).map(function(c,i){return c.sortPriority=i+1,c});if(sorts.length){this.onSort()&&this.onSort()(sorts),this.options.onSort&&this.options.onSort(sorts);for(var clientSorts=[],i=0,len=sorts.length;len>i;i++){var c=sorts[i];if(c.comparator!==!1){var dir="asc"===c.sort?"":"-";clientSorts.push(dir+c.prop)}}if(clientSorts.length){var _rows,sortedValues=this.$filter("orderBy")(this.rows,clientSorts);this.rows.splice(0,this.rows.length),(_rows=this.rows).push.apply(_rows,_toConsumableArray(sortedValues))}}this.options.internal.setYOffset(0)}}},{key:"onTreeToggled",value:function(row,cell){this.onTreeToggle({row:row,cell:cell})}},{key:"onBodyPage",value:function(offset,size){this.onPage({offset:offset,size:size})}},{key:"onFooterPage",value:function(offset,size){var pageBlockSize=this.options.rowHeight*size,offsetY=pageBlockSize*offset;this.options.internal.setYOffset(offsetY)}},{key:"onHeaderCheckboxChange",value:function(){if(this.rows){var matches=this.selected.length===this.rows.length;if(this.selected.splice(0,this.selected.length),!matches){var _selected;(_selected=this.selected).push.apply(_selected,_toConsumableArray(this.rows))}}}},{key:"isAllRowsSelected",value:function(){return this.rows?!1:this.selected.length===this.rows.length}},{key:"onResize",value:function(column,width){var idx=this.options.columns.indexOf(column);if(idx>-1){var column=this.options.columns[idx];column.width=width,column.canAutoResize=!1,this.adjustColumns(idx),this.calculateColumns()}}},{key:"onSelected",value:function(rows){this.onSelect({rows:rows})}},{key:"onRowClicked",value:function(row){this.onRowClick({row:row})}},{key:"onRowDblClicked",value:function(row){this.onRowDblClick({row:row})}}]),DataTableController}(),dataTable=angular.module("data-table",[]).directive("dtable",DataTableDirective).directive("resizable",ResizableDirective).directive("sortable",SortableDirective).directive("dtHeader",HeaderDirective).directive("dtHeaderCell",HeaderCellDirective).directive("dtBody",BodyDirective).directive("dtScroller",ScrollerDirective).directive("dtSeletion",SelectionDirective).directive("dtRow",RowDirective).directive("dtGroupRow",GroupRowDirective).directive("dtCell",CellDirective).directive("dtFooter",FooterDirective).directive("dtPager",PagerDirective);exports["default"]=dataTable,module.exports=exports["default"];