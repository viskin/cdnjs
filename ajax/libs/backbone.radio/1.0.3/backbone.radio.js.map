{"version":3,"sources":["backbone.radio.js"],"names":[],"mappings":"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","file":"backbone.radio.js","sourcesContent":["// Backbone.Radio v1.0.3\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone'], factory) :\n  (global.Backbone = global.Backbone || {}, global.Backbone.Radio = factory(global._,global.Backbone));\n}(this, function (_,Backbone) { 'use strict';\n\n  _ = 'default' in _ ? _['default'] : _;\n  Backbone = 'default' in Backbone ? Backbone['default'] : Backbone;\n\n  var previousRadio = Backbone.Radio;\n\n  var Radio = Backbone.Radio = {};\n\n  Radio.VERSION = '1.0.3';\n\n  // This allows you to run multiple instances of Radio on the same\n  // webapp. After loading the new version, call `noConflict()` to\n  // get a reference to it. At the same time the old version will be\n  // returned to Backbone.Radio.\n  Radio.noConflict = function() {\n    Backbone.Radio = previousRadio;\n    return this;\n  };\n\n  // Whether or not we're in DEBUG mode or not. DEBUG mode helps you\n  // get around the issues of lack of warnings when events are mis-typed.\n  Radio.DEBUG = false;\n\n  // Format debug text.\n  Radio._debugText = function(warning, eventName, channelName) {\n    return warning + (channelName ? ' on the ' + channelName + ' channel' : '') +\n      ': \"' + eventName + '\"';\n  };\n\n  // This is the method that's called when an unregistered event was called.\n  // By default, it logs warning to the console. By overriding this you could\n  // make it throw an Error, for instance. This would make firing a nonexistent event\n  // have the same consequence as firing a nonexistent method on an Object.\n  Radio.debugLog = function(warning, eventName, channelName) {\n    if (Radio.DEBUG && console && console.warn) {\n      console.warn(Radio._debugText(warning, eventName, channelName));\n    }\n  };\n\n  var eventSplitter = /\\s+/;\n\n  // An internal method used to handle Radio's method overloading for Requests.\n  // It's borrowed from Backbone.Events. It differs from Backbone's overload\n  // API (which is used in Backbone.Events) in that it doesn't support space-separated\n  // event names.\n  Radio._eventsApi = function(obj, action, name, rest) {\n    if (!name) {\n      return false;\n    }\n\n    var results = {};\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        var result = obj[action].apply(obj, [key, name[key]].concat(rest));\n        eventSplitter.test(key) ? _.extend(results, result) : results[key] = result;\n      }\n      return results;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        results[names[i]] = obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return results;\n    }\n\n    return false;\n  };\n\n  // An optimized way to execute callbacks.\n  Radio._callHandler = function(callback, context, args) {\n    var a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: return callback.call(context);\n      case 1: return callback.call(context, a1);\n      case 2: return callback.call(context, a1, a2);\n      case 3: return callback.call(context, a1, a2, a3);\n      default: return callback.apply(context, args);\n    }\n  };\n\n  // A helper used by `off` methods to the handler from the store\n  function removeHandler(store, name, callback, context) {\n    var event = store[name];\n    if (\n       (!callback || (callback === event.callback || callback === event.callback._callback)) &&\n       (!context || (context === event.context))\n    ) {\n      delete store[name];\n      return true;\n    }\n  }\n\n  function removeHandlers(store, name, callback, context) {\n    store || (store = {});\n    var names = name ? [name] : _.keys(store);\n    var matched = false;\n\n    for (var i = 0, length = names.length; i < length; i++) {\n      name = names[i];\n\n      // If there's no event by this name, log it and continue\n      // with the loop\n      if (!store[name]) {\n        continue;\n      }\n\n      if (removeHandler(store, name, callback, context)) {\n        matched = true;\n      }\n    }\n\n    return matched;\n  }\n\n  /*\n   * tune-in\n   * -------\n   * Get console logs of a channel's activity\n   *\n   */\n\n  var _logs = {};\n\n  // This is to produce an identical function in both tuneIn and tuneOut,\n  // so that Backbone.Events unregisters it.\n  function _partial(channelName) {\n    return _logs[channelName] || (_logs[channelName] = _.partial(Radio.log, channelName));\n  }\n\n  _.extend(Radio, {\n\n    // Log information about the channel and event\n    log: function(channelName, eventName) {\n      if (typeof console === 'undefined') { return; }\n      var args = _.drop(arguments, 2);\n      console.log('[' + channelName + '] \"' + eventName + '\"', args);\n    },\n\n    // Logs all events on this channel to the console. It sets an\n    // internal value on the channel telling it we're listening,\n    // then sets a listener on the Backbone.Events\n    tuneIn: function(channelName) {\n      var channel = Radio.channel(channelName);\n      channel._tunedIn = true;\n      channel.on('all', _partial(channelName));\n      return this;\n    },\n\n    // Stop logging all of the activities on this channel to the console\n    tuneOut: function(channelName) {\n      var channel = Radio.channel(channelName);\n      channel._tunedIn = false;\n      channel.off('all', _partial(channelName));\n      delete _logs[channelName];\n      return this;\n    }\n  });\n\n  /*\n   * Backbone.Radio.Requests\n   * -----------------------\n   * A messaging system for requesting data.\n   *\n   */\n\n  function makeCallback(callback) {\n    return _.isFunction(callback) ? callback : function() { return callback; };\n  }\n\n  Radio.Requests = {\n\n    // Make a request\n    request: function(name) {\n      var args = _.rest(arguments);\n      var results = Radio._eventsApi(this, 'request', name, args);\n      if (results) {\n        return results;\n      }\n      var channelName = this.channelName;\n      var requests = this._requests;\n\n      // Check if we should log the request, and if so, do it\n      if (channelName && this._tunedIn) {\n        Radio.log.apply(this, [channelName, name].concat(args));\n      }\n\n      // If the request isn't handled, log it in DEBUG mode and exit\n      if (requests && (requests[name] || requests['default'])) {\n        var handler = requests[name] || requests['default'];\n        args = requests[name] ? args : arguments;\n        return Radio._callHandler(handler.callback, handler.context, args);\n      } else {\n        Radio.debugLog('An unhandled request was fired', name, channelName);\n      }\n    },\n\n    // Set up a handler for a request\n    reply: function(name, callback, context) {\n      if (Radio._eventsApi(this, 'reply', name, [callback, context])) {\n        return this;\n      }\n\n      this._requests || (this._requests = {});\n\n      if (this._requests[name]) {\n        Radio.debugLog('A request was overwritten', name, this.channelName);\n      }\n\n      this._requests[name] = {\n        callback: makeCallback(callback),\n        context: context || this\n      };\n\n      return this;\n    },\n\n    // Set up a handler that can only be requested once\n    replyOnce: function(name, callback, context) {\n      if (Radio._eventsApi(this, 'replyOnce', name, [callback, context])) {\n        return this;\n      }\n\n      var self = this;\n\n      var once = _.once(function() {\n        self.stopReplying(name);\n        return makeCallback(callback).apply(this, arguments);\n      });\n\n      return this.reply(name, once, context);\n    },\n\n    // Remove handler(s)\n    stopReplying: function(name, callback, context) {\n      if (Radio._eventsApi(this, 'stopReplying', name)) {\n        return this;\n      }\n\n      // Remove everything if there are no arguments passed\n      if (!name && !callback && !context) {\n        delete this._requests;\n      } else if (!removeHandlers(this._requests, name, callback, context)) {\n        Radio.debugLog('Attempted to remove the unregistered request', name, this.channelName);\n      }\n\n      return this;\n    }\n  };\n\n  /*\n   * Backbone.Radio.channel\n   * ----------------------\n   * Get a reference to a channel by name.\n   *\n   */\n\n  Radio._channels = {};\n\n  Radio.channel = function(channelName) {\n    if (!channelName) {\n      throw new Error('You must provide a name for the channel.');\n    }\n\n    if (Radio._channels[channelName]) {\n      return Radio._channels[channelName];\n    } else {\n      return (Radio._channels[channelName] = new Radio.Channel(channelName));\n    }\n  };\n\n  /*\n   * Backbone.Radio.Channel\n   * ----------------------\n   * A Channel is an object that extends from Backbone.Events,\n   * and Radio.Requests.\n   *\n   */\n\n  Radio.Channel = function(channelName) {\n    this.channelName = channelName;\n  };\n\n  _.extend(Radio.Channel.prototype, Backbone.Events, Radio.Requests, {\n\n    // Remove all handlers from the messaging systems of this channel\n    reset: function() {\n      this.off();\n      this.stopListening();\n      this.stopReplying();\n      return this;\n    }\n  });\n\n  /*\n   * Top-level API\n   * -------------\n   * Supplies the 'top-level API' for working with Channels directly\n   * from Backbone.Radio.\n   *\n   */\n\n  var channel;\n  var args;\n  var systems = [Backbone.Events, Radio.Requests];\n  _.each(systems, function(system) {\n    _.each(system, function(method, methodName) {\n      Radio[methodName] = function(channelName) {\n        args = _.rest(arguments);\n        channel = this.channel(channelName);\n        return channel[methodName].apply(channel, args);\n      };\n    });\n  });\n\n  Radio.reset = function(channelName) {\n    var channels = !channelName ? this._channels : [this._channels[channelName]];\n    _.invoke(channels, 'reset');\n  };\n\n  return Radio;\n\n}));\n//# sourceMappingURL=./backbone.radio.js.map"],"sourceRoot":"/source/"}