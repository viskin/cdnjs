!function(factory){"use strict";"function"==typeof define&&define.amd?define(["load-image"],factory):factory(window.loadImage)}(function(loadImage){"use strict";var hasblobSlice=window.Blob&&(Blob.prototype.slice||Blob.prototype.webkitSlice||Blob.prototype.mozSlice);loadImage.blobSlice=hasblobSlice&&function(){var slice=this.slice||this.webkitSlice||this.mozSlice;return slice.apply(this,arguments)},loadImage.metaDataParsers={jpeg:{65505:[]}},loadImage.parseMetaData=function(file,callback,options){options=options||{};var that=this,maxMetaDataSize=options.maxMetaDataSize||262144,data={},noMetaData=!(window.DataView&&file&&file.size>=12&&"image/jpeg"===file.type&&loadImage.blobSlice);(noMetaData||!loadImage.readFile(loadImage.blobSlice.call(file,0,maxMetaDataSize),function(e){if(e.target.error)return console.log(e.target.error),void callback(data);var markerBytes,markerLength,parsers,i,buffer=e.target.result,dataView=new DataView(buffer),offset=2,maxOffset=dataView.byteLength-4,headLength=offset;if(65496===dataView.getUint16(0)){for(;maxOffset>offset&&(markerBytes=dataView.getUint16(offset),markerBytes>=65504&&65519>=markerBytes||65534===markerBytes);){if(markerLength=dataView.getUint16(offset+2)+2,offset+markerLength>dataView.byteLength){console.log("Invalid meta data: Invalid segment size.");break}if(parsers=loadImage.metaDataParsers.jpeg[markerBytes])for(i=0;i<parsers.length;i+=1)parsers[i].call(that,dataView,offset,markerLength,data,options);offset+=markerLength,headLength=offset}!options.disableImageHead&&headLength>6&&(buffer.slice?data.imageHead=buffer.slice(0,headLength):data.imageHead=new Uint8Array(buffer).subarray(0,headLength))}else console.log("Invalid JPEG file: Missing JPEG marker.");callback(data)},"readAsArrayBuffer"))&&callback(data)}});