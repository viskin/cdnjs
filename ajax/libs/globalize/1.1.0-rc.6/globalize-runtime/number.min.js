(function(root,factory){if(typeof define==="function"&&define.amd){define(["../globalize-runtime"],factory)}else if(typeof exports==="object"){module.exports=factory(require("../globalize-runtime"))}else{factory(root.Globalize)}})(this,function(Globalize){var createError=Globalize._createError,regexpEscape=Globalize._regexpEscape,runtimeKey=Globalize._runtimeKey,stringPad=Globalize._stringPad,validateParameterType=Globalize._validateParameterType,validateParameterPresence=Globalize._validateParameterPresence,validateParameterTypeString=Globalize._validateParameterTypeString;var createErrorUnsupportedFeature=function(feature){return createError("E_UNSUPPORTED","Unsupported {feature}.",{feature:feature})};var validateParameterTypeNumber=function(value,name){validateParameterType(value,name,value===undefined||typeof value==="number","Number")};var numberFormatGroupingSeparator=function(number,primaryGroupingSize,secondaryGroupingSize){var index,currentGroupingSize=primaryGroupingSize,ret="",sep=",",switchToSecondary=secondaryGroupingSize?true:false;number=String(number).split(".");index=number[0].length;while(index>currentGroupingSize){ret=number[0].slice(index-currentGroupingSize,index)+(ret.length?sep:"")+ret;index-=currentGroupingSize;if(switchToSecondary){currentGroupingSize=secondaryGroupingSize;switchToSecondary=false}}number[0]=number[0].slice(0,index)+(ret.length?sep:"")+ret;return number.join(".")};var numberFormatIntegerFractionDigits=function(number,minimumIntegerDigits,minimumFractionDigits,maximumFractionDigits,round,roundIncrement){if(maximumFractionDigits){if(roundIncrement){number=round(number,roundIncrement)}else{number=round(number,{exponent:-maximumFractionDigits})}if(minimumFractionDigits){number=String(number).split(".");number[1]=stringPad(number[1]||"",minimumFractionDigits,true);number=number.join(".")}}else{number=round(number)}number=String(number);if(minimumIntegerDigits){number=number.split(".");number[0]=stringPad(number[0],minimumIntegerDigits);number=number.join(".")}return number};var numberToPrecision=function(number,precision,round){var roundOrder;number=number.toPrecision(precision+2);roundOrder=Math.ceil(Math.log(Math.abs(number))/Math.log(10));roundOrder-=precision;return round(number,{exponent:roundOrder})};var numberFormatSignificantDigits=function(number,minimumSignificantDigits,maximumSignificantDigits,round){var atMinimum,atMaximum;if(minimumSignificantDigits>maximumSignificantDigits){maximumSignificantDigits=minimumSignificantDigits}atMinimum=numberToPrecision(number,minimumSignificantDigits,round);atMaximum=numberToPrecision(number,maximumSignificantDigits,round);number=+atMinimum===+atMaximum?atMinimum:atMaximum;number=(+number).toString(10);if(/e/.test(number)){throw createErrorUnsupportedFeature({feature:"integers out of (1e21, 1e-7)"})}if(minimumSignificantDigits-number.replace(/^0+|\./g,"").length>0){number=number.split(".");number[1]=stringPad(number[1]||"",minimumSignificantDigits-number[0].replace(/^0+/,"").length,true);number=number.join(".")}return number};var numberFormat=function(number,properties){var infinitySymbol,maximumFractionDigits,maximumSignificantDigits,minimumFractionDigits,minimumIntegerDigits,minimumSignificantDigits,nanSymbol,nuDigitsMap,padding,prefix,primaryGroupingSize,pattern,ret,round,roundIncrement,secondaryGroupingSize,suffix,symbolMap;padding=properties[1];minimumIntegerDigits=properties[2];minimumFractionDigits=properties[3];maximumFractionDigits=properties[4];minimumSignificantDigits=properties[5];maximumSignificantDigits=properties[6];roundIncrement=properties[7];primaryGroupingSize=properties[8];secondaryGroupingSize=properties[9];round=properties[15];infinitySymbol=properties[16];nanSymbol=properties[17];symbolMap=properties[18];nuDigitsMap=properties[19];if(isNaN(number)){return nanSymbol}if(number<0){pattern=properties[12];prefix=properties[13];suffix=properties[14]}else{pattern=properties[11];prefix=properties[0];suffix=properties[10]}if(!isFinite(number)){return prefix+infinitySymbol+suffix}ret=prefix;if(pattern.indexOf("%")!==-1){number*=100}else if(pattern.indexOf("‰")!==-1){number*=1e3}if(!isNaN(minimumSignificantDigits*maximumSignificantDigits)){number=numberFormatSignificantDigits(number,minimumSignificantDigits,maximumSignificantDigits,round)}else{number=numberFormatIntegerFractionDigits(number,minimumIntegerDigits,minimumFractionDigits,maximumFractionDigits,round,roundIncrement)}number=number.replace(/^-/,"");if(primaryGroupingSize){number=numberFormatGroupingSeparator(number,primaryGroupingSize,secondaryGroupingSize)}ret+=number;ret+=suffix;return ret.replace(/('([^']|'')+'|'')|./g,function(character,literal){if(literal){literal=literal.replace(/''/,"'");if(literal.length>2){literal=literal.slice(1,-1)}return literal}character=character.replace(/[.,\-+E%\u2030]/,function(symbol){return symbolMap[symbol]});if(nuDigitsMap){character=character.replace(/[0-9]/,function(digit){return nuDigitsMap[+digit]})}return character})};var numberFormatterFn=function(properties){return function numberFormatter(value){validateParameterPresence(value,"value");validateParameterTypeNumber(value,"value");return numberFormat(value,properties)}};var numberNumberRe=/^([^0-9]*)(([0-9,]*[0-9]+)(\.[0-9]+)?)(E[+-]?[0-9]+)?([^0-9]*)$/;var numberParse=function(value,properties){var aux,infinitySymbol,invertedNuDigitsMap,invertedSymbolMap,localizedDigitRe,localizedSymbolsRe,negativePrefix,negativeSuffix,number,prefix,suffix;infinitySymbol=properties[0];invertedSymbolMap=properties[1];negativePrefix=properties[2];negativeSuffix=properties[3];invertedNuDigitsMap=properties[4];if(aux=value.match(infinitySymbol)){number=Infinity;prefix=value.slice(0,aux.length);suffix=value.slice(aux.length+1)}else{localizedSymbolsRe=new RegExp(Object.keys(invertedSymbolMap).map(function(localizedSymbol){return regexpEscape(localizedSymbol)}).join("|"),"g");value=value.replace(localizedSymbolsRe,function(localizedSymbol){return invertedSymbolMap[localizedSymbol]});if(invertedNuDigitsMap){localizedDigitRe=new RegExp(Object.keys(invertedNuDigitsMap).map(function(localizedDigit){return regexpEscape(localizedDigit)}).join("|"),"g");value=value.replace(localizedDigitRe,function(localizedDigit){return invertedNuDigitsMap[localizedDigit]})}if(value.charAt(0)==="."){value="0"+value}value=value.match(numberNumberRe);if(!value){return NaN}prefix=value[1];suffix=value[6];number=value[2].replace(/,/g,"");if(value[5]){number+=value[5]}number=+number;if(isNaN(number)){return NaN}if(value[0].indexOf("%")!==-1){number/=100;suffix=suffix.replace("%","")}else if(value[0].indexOf("‰")!==-1){number/=1e3;suffix=suffix.replace("‰","")}}if(prefix===negativePrefix&&suffix===negativeSuffix){number*=-1}return number};var numberParserFn=function(properties){return function numberParser(value){validateParameterPresence(value,"value");validateParameterTypeString(value,"value");return numberParse(value,properties)}};var numberTruncate=function(value){if(isNaN(value)){return NaN}return Math[value<0?"ceil":"floor"](value)};var numberRound=function(method){method=method||"round";method=method==="truncate"?numberTruncate:Math[method];return function(value,incrementOrExp){var exp,increment;value=+value;if(isNaN(value)){return NaN}if(typeof incrementOrExp==="object"&&incrementOrExp.exponent){exp=+incrementOrExp.exponent;increment=1;if(exp===0){return method(value)}if(!(typeof exp==="number"&&exp%1===0)){return NaN}}else{increment=+incrementOrExp||1;if(increment===1){return method(value)}if(isNaN(increment)){return NaN}increment=increment.toExponential().split("e");exp=+increment[1];increment=+increment[0]}value=value.toString().split("e");value[0]=+value[0]/increment;value[1]=value[1]?+value[1]-exp:-exp;value=method(+(value[0]+"e"+value[1]));value=value.toString().split("e");value[0]=+value[0]*increment;value[1]=value[1]?+value[1]+exp:exp;return+(value[0]+"e"+value[1])}};Globalize._createErrorUnsupportedFeature=createErrorUnsupportedFeature;Globalize._numberFormat=numberFormat;Globalize._numberFormatterFn=numberFormatterFn;Globalize._numberParse=numberParse;Globalize._numberParserFn=numberParserFn;Globalize._numberRound=numberRound;Globalize._validateParameterPresence=validateParameterPresence;Globalize._validateParameterTypeNumber=validateParameterTypeNumber;Globalize._validateParameterTypeString=validateParameterTypeString;Globalize.numberFormatter=Globalize.prototype.numberFormatter=function(options){options=options||{};return Globalize[runtimeKey("numberFormatter",this._locale,[options])]};Globalize.numberParser=Globalize.prototype.numberParser=function(options){options=options||{};return Globalize[runtimeKey("numberParser",this._locale,[options])]};Globalize.formatNumber=Globalize.prototype.formatNumber=function(value,options){validateParameterPresence(value,"value");validateParameterTypeNumber(value,"value");return this.numberFormatter(options)(value)};Globalize.parseNumber=Globalize.prototype.parseNumber=function(value,options){validateParameterPresence(value,"value");validateParameterTypeString(value,"value");return this.numberParser(options)(value)};return Globalize});
