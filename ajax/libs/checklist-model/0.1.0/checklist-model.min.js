angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function($parse,$compile){function contains(arr,item){if(angular.isArray(arr)){for(var i=0;i<arr.length;i++){if(angular.equals(arr[i],item)){return true}}}return false}function add(arr,item){arr=angular.isArray(arr)?arr:[];for(var i=0;i<arr.length;i++){if(angular.equals(arr[i],item)){return}}arr.push(item)}function remove(arr,item){if(angular.isArray(arr)){for(var i=0;i<arr.length;i++){if(angular.equals(arr[i],item)){arr.splice(i,1);return}}}}return{restrict:"A",scope:true,link:function(scope,elem,attrs){if(elem[0].tagName!=="INPUT"||!elem.attr("type","checkbox")){throw'checklist-model should be applied to `input[type="checkbox"]`.'}if(!attrs.checklistValue){throw"You should provide  `checklist-value`."}var model;var value=$parse(attrs.checklistValue)(scope.$parent);elem.removeAttr("checklist-model");elem.attr("ng-model","checked");$compile(elem)(scope);scope.$watch("checked",function(newValue,oldValue){if(newValue===oldValue){return}if(newValue===true){add(model,value)}else if(newValue===false){remove(model,value)}});elem.bind("$destroy",function(){remove(model,value)});scope.$parent.$watch(attrs.checklistModel,function(newArr,oldArr){model=newArr;scope.checked=contains(newArr,value)},true)}}}]);
