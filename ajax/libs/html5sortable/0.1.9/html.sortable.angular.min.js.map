{"version":3,"sources":["html.sortable.angular.js"],"names":["angular","module","directive","$timeout","$parse","require","link","scope","element","attrs","ngModel","opts","model","scallback","htmlSortableCallback","extend","$eval","htmlSortable","sortable","$render","$watch","bind","e","data","$source","startparent","attr","$dest","endparent","$sourceModel","$destModel","$start","oldindex","$end","item","index","$apply","$items","splice","assign","$item","$sourceItems","$destItems"],"mappings":"CAUC,SAASA,GACR,YAEAA,GAAQC,OAAO,mBACZC,UAAU,gBACT,WAAY,SAAU,SAASC,EAAUC,GACvC,OACEC,QAAS,WACTC,KAAM,SAASC,EAAOC,EAASC,EAAOC,GACpC,GAAIC,GACAC,EACAC,CAEAJ,GAAMK,uBACRD,EAAYJ,EAAMK,sBAGpBH,EAAOX,EAAQe,UAAWR,EAAMS,MAAMP,EAAMQ,eAC5CT,EAAQU,SAASP,GAEbD,IACFE,EAAQR,EAAOK,EAAMC,SAErBA,EAAQS,QAAU,WAChBhB,EAAS,WACPK,EAAQU,SAAS,WAChB,KAGLX,EAAMa,OAAOR,EAAO,WAClBT,EAAS,WACPK,EAAQU,SAAS,WAChB,MACF,GAEHV,EAAQU,WAAWG,KAAK,aAAc,SAASC,EAAGC,GAChD,GAAIC,GAAUD,EAAKE,YAAYC,KAAK,YAChCC,EAAUJ,EAAKK,UAAUF,KAAK,YAE9BG,EAAezB,EAAOoB,GACtBM,EAAa1B,EAAOuB,GAEpBI,EAASR,EAAKS,SACdC,EAASV,EAAKW,KAAKC,OAEvB5B,GAAM6B,OAAO,WACX,GAAIP,EAAaN,EAAKE,YAAYlB,WAAauB,EAAWP,EAAKK,UAAUrB,SAAU,CACjF,GAAI8B,GAASR,EAAaN,EAAKE,YAAYlB,QAC3C8B,GAAOC,OAAOL,EAAM,EAAGI,EAAOC,OAAOP,EAAQ,GAAG,IAChDF,EAAaU,OAAOhC,EAAO8B,OACtB,CACL,GAAIG,GAAQX,EAAaN,EAAKE,YAAYlB,SAASwB,GAC/CU,EAAeZ,EAAaN,EAAKE,YAAYlB,SAC7CmC,EAAaZ,EAAWP,EAAKK,UAAUrB,YAE3CkC,GAAaH,OAAOP,EAAQ,GAC5BW,EAAWJ,OAAOL,EAAM,EAAGO,GAE3BX,EAAaU,OAAOhC,EAAOkC,GAC3BX,EAAWS,OAAOhC,EAAOmC,MAIzB7B,GACFN,EAAMM,GAAWgB,EAAaN,EAAKE,YAAYlB,SAAUuB,EAAWP,EAAKK,UAAUrB,SAAUwB,EAAQE,YAQrHjC","file":"html.sortable.angular.min.js","sourcesContent":["/*\n * AngularJS integration with the HTML5 Sortable jQuery Plugin\n * https://github.com/voidberg/html5sortable\n *\n * Copyright 2013, Alexandru Badiu <andu@ctrlz.ro>\n *\n * Thanks to the following contributors: samantp.\n *\n * Released under the MIT license.\n */\n(function(angular) {\n  'use strict';\n\n  angular.module('htmlSortable', [])\n    .directive('htmlSortable', [\n      '$timeout', '$parse', function($timeout, $parse) {\n        return {\n          require: '?ngModel',\n          link: function(scope, element, attrs, ngModel) {\n            var opts;\n            var model;\n            var scallback;\n\n            if (attrs.htmlSortableCallback) {\n              scallback = attrs.htmlSortableCallback;\n            }\n\n            opts = angular.extend({}, scope.$eval(attrs.htmlSortable));\n            element.sortable(opts);\n\n            if (ngModel) {\n              model = $parse(attrs.ngModel);\n\n              ngModel.$render = function() {\n                $timeout(function() {\n                  element.sortable('reload');\n                }, 50);\n              };\n\n              scope.$watch(model, function() {\n                $timeout(function() {\n                  element.sortable('reload');\n                }, 50);\n              }, true);\n\n              element.sortable().bind('sortupdate', function(e, data) {\n                var $source = data.startparent.attr('ng-model');\n                var $dest   = data.endparent.attr('ng-model');\n\n                var $sourceModel = $parse($source);\n                var $destModel = $parse($dest);\n\n                var $start = data.oldindex;\n                var $end   = data.item.index();\n\n                scope.$apply(function() {\n                  if ($sourceModel(data.startparent.scope()) === $destModel(data.endparent.scope())) {\n                    var $items = $sourceModel(data.startparent.scope());\n                    $items.splice($end, 0, $items.splice($start, 1)[0]);\n                    $sourceModel.assign(scope, $items);\n                  } else {\n                    var $item = $sourceModel(data.startparent.scope())[$start];\n                    var $sourceItems = $sourceModel(data.startparent.scope());\n                    var $destItems = $destModel(data.endparent.scope()) || [];\n\n                    $sourceItems.splice($start, 1);\n                    $destItems.splice($end, 0, $item);\n\n                    $sourceModel.assign(scope, $sourceItems);\n                    $destModel.assign(scope, $destItems);\n                  }\n                });\n\n                if (scallback) {\n                  scope[scallback]($sourceModel(data.startparent.scope()), $destModel(data.endparent.scope()), $start, $end);\n                }\n              });\n            }\n          }\n        };\n      }\n    ]);\n}(angular));\n"],"sourceRoot":"/source/"}