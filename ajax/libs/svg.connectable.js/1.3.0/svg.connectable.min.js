(function(){var container=null,markers=null;function connectable(options,elmTarget){var con={};if(elmTarget===undefined){elmTarget=options;options={}}container=options.container||container;var elmSource=this;markers=options.markers||markers;var marker=markers.marker(10,10),markerId="triangle-"+Math.random().toString(16),line=container.line().attr("marker-end","url(#"+markerId+")");marker.attr({id:markerId,viewBox:"0 0 10 10",refX:"0",refY:"5",markerUnits:"strokeWidth",markerWidth:"4",markerHeight:"5"});marker.path().attr({d:"M 0 0 L 10 5 L 0 10 z"});var sPos={},tPos={};con.source=elmSource;con.target=elmTarget;con.line=line;con.marker=marker;con.computeLineCoordinates=function(con){var sT=con.source.transform(),tT=con.target.transform(),sB=con.source.bbox(),tB=con.target.bbox(),x1=sT.x+sB.width/2,y1=sT.y+sB.height/2,x2=tT.x+tB.width/2,y2=tT.y+tB.height/2;return{x1:x1,y1:y1,x2:x2,y2:y2}};if(options.padEllipse){con.computeLineCoordinates=function(con){var sPos=con.source.transform(),tPos=con.target.transform(),elmS=con.source.node.querySelector("ellipse")||con.source.node.querySelector("circle"),elmT=con.target.node.querySelector("ellipse")||con.target.node.querySelector("circle"),xR1,xR2,yR1,yR2;if(elmS.tagName==="circle"){xR1=yR1=parseFloat(elmS.getAttribute("r"));xR2=yR2=parseFloat(elmT.getAttribute("r"))}else{xR1=parseFloat(elmS.getAttribute("rx"));yR1=parseFloat(elmS.getAttribute("ry"));xR2=parseFloat(elmT.getAttribute("rx"));yR2=parseFloat(elmT.getAttribute("ry"))}var sx=sPos.x+xR1/2,sy=sPos.y+yR1/2,tx=tPos.x+xR2/2,ty=tPos.y+yR2/2,dx=tx-sx,dy=ty-sy,d=Math.sqrt(dx*dx+dy*dy),ux=dx/d,uy=dy/d,x1=sx+xR1*ux,y1=sy+yR1*uy,x2=sx+(d-xR2-5)*ux,y2=sy+(d-yR2-5)*uy;return{x1:x1+xR1/2,y1:y1+yR1/2,x2:x2+xR2/2,y2:y2+yR2/2}}}elmSource.cons=elmSource.cons||[];elmSource.cons.push(con);con.update=function(){line.attr(con.computeLineCoordinates(con))};con.update();elmSource.on("dragmove",con.update);elmTarget.on("dragmove",con.update);con.setLineColor=function(color,c){c=c||this;c.line.stroke(color);c.marker.fill(color)};return con}SVG.extend(SVG.Element,{connectable:connectable})}).call(this);