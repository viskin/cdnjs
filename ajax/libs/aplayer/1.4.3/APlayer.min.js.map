{"version":3,"sources":["APlayer.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","instances","APlayer","option","_this","this","isMobile","navigator","userAgent","match","autoplay","defaultOption","element","document","getElementsByClassName","narrow","mutex","showlrc","theme","loop","defaultKey","hasOwnProperty","playIndex","toString","call","music","audios","secondToTime","second","add0","num","min","parseInt","sec","parseLrc","arr","lrcs","k","lyric","split","lrc","lyricLen","lrcTimes","lrcText","replace","timeLen","j","oneTime","exec","lrcTime","push","sort","a","b","updateBar","type","percentage","direction","style","updateLrc","currentTime","arguments","undefined","audio","lrcIndex","lrcContents","transform","webkitTransform","classList","remove","getElementsByTagName","add","eventTypes","event","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","trigger","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","func","getElementViewLeft","actualLeft","offsetLeft","current","offsetParent","elementScrollLeft","body","scrollLeft","documentElement","getElementViewTop","actualTop","offsetTop","elementScrollTop","scrollTop","_this2","multiple","innerHTML","eleHTML","pic","encodeURI","title","author","offsetWidth","marginRight","button","addEventListener","e","contains","play","pause","listItem","_loop","_i","musicIndex","setMusic","playedBar","loadedBar","thumb","bar","barWidth","window","clientWidth","clientX","duration","parseFloat","width","background","thumbMove","thumbUp","removeEventListener","playedTime","setInterval","clearInterval","volumeBar","volumeBarWrap","volumeicon","barHeight","clientY","volume","muted","className","loopEle","list","index","_this3","indexMusic","backgroundImage","createElement","src","url","preload","buffered","end","ended","height","lrcHTML","_this4","paused","setTimeout","_this5","name","module","exports"],"mappings":"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","file":"APlayer.min.js","sourcesContent":["((instances) => {\n\n    class APlayer {\n        /**\n         * APlayer constructor function\n         *\n         * @param {Object} option - See README\n         * @constructor\n         */\n        constructor(option) {\n\n            this.isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n            // compatibility: some mobile browsers don't suppose autoplay\n            if (this.isMobile) {\n                option.autoplay = false;\n            }\n\n            // default options\n            const defaultOption = {\n                element: document.getElementsByClassName('aplayer')[0],\n                narrow: false,\n                autoplay: false,\n                mutex: true,\n                showlrc: 0,\n                theme: '#b7daff',\n                loop: true\n            };\n            for (let defaultKey in defaultOption) {\n                if (defaultOption.hasOwnProperty(defaultKey) && !option.hasOwnProperty(defaultKey)) {\n                    option[defaultKey] = defaultOption[defaultKey];\n                }\n            }\n\n            // multiple music\n            this.playIndex = Object.prototype.toString.call(option.music) === '[object Array]' ? 0 : -1;\n\n            this.option = option;\n            this.audios = [];\n            this.loop = option.loop;\n\n            /**\n             * Parse second to 00:00 format\n             *\n             * @param {Number} second\n             * @return {String} 00:00 format\n             */\n            this.secondToTime = (second) => {\n                const add0 = (num) => {\n                    return num < 10 ? '0' + num : '' + num;\n                };\n                const min = parseInt(second / 60);\n                const sec = parseInt(second - min * 60);\n                return add0(min) + ':' + add0(sec);\n            };\n\n            /**\n             * Parse lrc, suppose multiple time tag\n             *\n             * @param {Array} arr - Format:\n             * [mm:ss.xx]lyric\n             * [mm:ss.xxx]lyric\n             * [mm:ss.xx][mm:ss.xx][mm:ss.xx]lyric\n             *\n             * @return {Array} [[[time, text], [time, text], [time, text], ...], [[time, text], [time, text], [time, text], ...], ...]\n             */\n            this.parseLrc = (arr) => {\n                let lrcs = [];\n                for (let k = 0; k < arr.length; k++) {\n                    const lyric = arr[k].split('\\n');\n                    let lrc = [];\n                    const lyricLen = lyric.length;\n                    for (let i = 0; i < lyricLen; i++) {\n                        // match lrc time\n                        const lrcTimes = lyric[i].match(/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/g);\n                        // match lrc text\n                        const lrcText = lyric[i].replace(/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/g, '').replace(/^\\s+|\\s+$/g, '');\n\n                        if (lrcTimes != null) {\n                            // handle multiple time tag\n                            const timeLen = lrcTimes.length;\n                            for (let j = 0; j < timeLen; j++) {\n                                const oneTime = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/.exec(lrcTimes[j]);\n                                const lrcTime = (oneTime[1]) * 60 + parseInt(oneTime[2]) + parseInt(oneTime[3]) / ((oneTime[3] + '').length === 2 ? 100 : 1000);\n                                lrc.push([lrcTime, lrcText]);\n                            }\n                        }\n                    }\n                    // sort by time\n                    lrc.sort((a, b) => a[0] - b[0]);\n                    lrcs.push(lrc);\n                }\n                return lrcs;\n            };\n\n            /**\n             * Update progress bar, including loading progress bar and play progress bar\n             *\n             * @param {String} type - Point out which bar it is, should be played loaded or volume\n             * @param {Number} percentage\n             * @param {String} direction - Point out the direction of this bar, Should be height or width\n             */\n            this.updateBar = (type, percentage, direction) => {\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this[type + 'Bar'].style[direction] = percentage * 100 + '%';\n            };\n\n            /**\n             * Update lrc\n             *\n             * @param {Number} currentTime\n             */\n            this.updateLrc = (currentTime = this.audio.currentTime) => {\n                if (this.lrcIndex > this.lrc.length - 1 || currentTime < this.lrc[this.lrcIndex][0] || (!this.lrc[this.lrcIndex + 1] || currentTime >= this.lrc[this.lrcIndex + 1][0])) {\n                    for (let i = 0; i < this.lrc.length; i++) {\n                        if (currentTime >= this.lrc[i][0] && (!this.lrc[i + 1] || currentTime < this.lrc[i + 1][0])) {\n                            this.lrcIndex = i;\n                            this.lrcContents.style.transform = `translateY(${-this.lrcIndex * 20}px)`;\n                            this.lrcContents.style.webkitTransform = `translateY(${-this.lrcIndex * 20}px)`;\n                            this.lrcContents.getElementsByClassName('aplayer-lrc-current')[0].classList.remove('aplayer-lrc-current');\n                            this.lrcContents.getElementsByTagName('p')[i].classList.add('aplayer-lrc-current');\n                        }\n                    }\n                }\n            };\n\n            // define APlayer events\n            this.eventTypes = ['play', 'pause', 'canplay', 'playing', 'ended', 'error'];\n            this.event = {};\n            for (let type of this.eventTypes) {\n                this.event[type] = [];\n            }\n            this.trigger = (type) => {\n                for (let func of this.event[type]) {\n                    func();\n                }\n            }\n        }\n\n        /**\n         * AutoLink initialization function\n         */\n        init() {\n            this.element = this.option.element;\n            this.multiple = this.playIndex > -1;\n            this.music = this.multiple ? this.option.music[this.playIndex] : this.option.music;\n\n            let i;\n            // parser lrc\n            if (this.option.showlrc) {\n                let lrcs = [];\n                if (this.option.showlrc === 1) {\n                    if (this.multiple) {\n                        for (i = 0; i < this.option.music.length; i++) {\n                            lrcs.push(this.option.music[i].lrc);\n                        }\n                    }\n                    else {\n                        lrcs.push(this.option.music.lrc);\n                    }\n                }\n                else if (this.option.showlrc === 2 || this.option.showlrc === true)  {\n                    for (i = 0; i < this.element.getElementsByClassName('aplayer-lrc-content').length; i++) {\n                        lrcs.push(this.element.getElementsByClassName('aplayer-lrc-content')[i].innerHTML);\n                    }\n                }\n\n                this.lrcs = this.parseLrc(lrcs);\n            }\n\n            // add class aplayer-withlrc\n            if (this.option.showlrc) {\n                this.element.classList.add('aplayer-withlrc');\n            }\n\n            // fill in HTML\n            let eleHTML = `\n                <div class=\"aplayer-pic\" ${(this.music.pic ? (`style=\"background-image: url(\"${encodeURI(this.music.pic)}\");\"`) : ``)}>\n                    <div class=\"aplayer-button aplayer-play\">\n                        <i class=\"demo-icon aplayer-icon-play\"></i>\n                    </div>\n                </div>\n                <div class=\"aplayer-info\">\n                    <div class=\"aplayer-music\">\n                        <span class=\"aplayer-title\"></span>\n                        <span class=\"aplayer-author\"></span>\n                    </div>\n                    <div class=\"aplayer-lrc\">\n                        <div class=\"aplayer-lrc-contents\" style=\"transform: translateY(0); -webkit-transform: translateY(0);\"></div>\n                    </div>\n                    <div class=\"aplayer-controller\">\n                        <div class=\"aplayer-bar-wrap\">\n                            <div class=\"aplayer-bar\">\n                                <div class=\"aplayer-loaded\" style=\"width: 0\"></div>\n                                <div class=\"aplayer-played\" style=\"width: 0; background: ${this.option.theme};\">\n                                    <span class=\"aplayer-thumb\" style=\"border: 1px solid ${this.option.theme};\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"aplayer-time\">\n                             - <span class=\"aplayer-ptime\">00:00</span> / <span class=\"aplayer-dtime\">00:00</span>\n                            <div class=\"aplayer-volume-wrap\">\n                                <i class=\"demo-icon aplayer-icon-volume-down\"></i>\n                                <div class=\"aplayer-volume-bar-wrap\">\n                                    <div class=\"aplayer-volume-bar\">\n                                        <div class=\"aplayer-volume\" style=\"height: 80%; background: ${this.option.theme};\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <i class=\"demo-icon aplayer-icon-loop${(this.loop ? `` : ` aplayer-noloop`)}\"></i>${(this.multiple ? `<i class=\"demo-icon aplayer-icon-menu\"></i>` : ``)}\n                        </div>\n                    </div>\n                </div>`;\n            if (this.multiple) {\n                eleHTML += `\n                <div class=\"aplayer-list\">\n                    <ol>`;\n                for (i = 0; i < this.option.music.length; i++) {\n                    eleHTML += `\n                        <li>\n                            <span class=\"aplayer-list-cur\" style=\"background: ${this.option.theme};\"></span>\n                            <span class=\"aplayer-list-index\">${(i + 1)}</span>\n                            <span class=\"aplayer-list-title\">${this.option.music[i].title}</span>\n                            <span class=\"aplayer-list-author\">${this.option.music[i].author}</span>\n                        </li>`\n                }\n                eleHTML += `\n                    </ol>\n                </div>`\n            }\n            this.element.innerHTML = eleHTML;\n\n            if (this.element.getElementsByClassName('aplayer-info')[0].offsetWidth < 200) {\n                this.element.getElementsByClassName('aplayer-time')[0].classList.add('aplayer-time-narrow');\n            }\n            // fix the width of aplayer bar\n            this.element.getElementsByClassName('aplayer-bar-wrap')[0].style.marginRight = this.element.getElementsByClassName('aplayer-time')[0].offsetWidth + 5 + 'px';\n\n            // switch to narrow style\n            if (this.option.narrow) {\n                this.element.classList.add('aplayer-narrow');\n            }\n\n            // play and pause button\n            this.button = this.element.getElementsByClassName('aplayer-button')[0];\n            this.button.addEventListener('click', (e) => {\n                if (this.button.classList.contains('aplayer-play')) {\n                    this.play();\n                }\n                else if (this.button.classList.contains('aplayer-pause')) {\n                    this.pause();\n                }\n            });\n\n            // click music list: change music\n            if (this.multiple) {\n                const listItem = this.element.getElementsByClassName('aplayer-list')[0].getElementsByTagName('li');\n                for (let i = 0; i < this.option.music.length; i++) {\n                    listItem[i].addEventListener('click', () => {\n                        const musicIndex = parseInt(listItem[i].getElementsByClassName('aplayer-list-index')[0].innerHTML) - 1;\n                        if (musicIndex !== this.playIndex) {\n                            this.setMusic(musicIndex);\n                        }\n                        this.play();\n                    });\n                }\n            }\n\n            // control play progress\n            this.playedBar = this.element.getElementsByClassName('aplayer-played')[0];\n            this.loadedBar = this.element.getElementsByClassName('aplayer-loaded')[0];\n            this.thumb = this.element.getElementsByClassName('aplayer-thumb')[0];\n            this.bar = this.element.getElementsByClassName('aplayer-bar')[0];\n            let barWidth;\n            this.bar.addEventListener('click', (event) => {\n                const e = event || window.event;\n                barWidth = this.bar.clientWidth;\n                const percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n                this.updateBar('played', percentage, 'width');\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n                this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n            });\n\n            this.thumb.addEventListener('mouseover', () => {\n                this.thumb.style.background = this.option.theme;\n            });\n            this.thumb.addEventListener('mouseout', () => {\n                this.thumb.style.background = '#fff';\n            });\n\n            const thumbMove = (event) => {\n                const e = event || window.event;\n                let percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this.updateBar('played', percentage, 'width');\n                if (this.option.showlrc) {\n                    this.updateLrc(parseFloat(this.playedBar.style.width) / 100 * this.audio.duration);\n                }\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n            };\n\n            const thumbUp = () => {\n                document.removeEventListener('mouseup', thumbUp);\n                document.removeEventListener('mousemove', thumbMove);\n                this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n                this.playedTime = setInterval(() => {\n                    this.updateBar('played', this.audio.currentTime / this.audio.duration, 'width');\n                    if (this.option.showlrc) {\n                        this.updateLrc();\n                    }\n                    this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(this.audio.currentTime);\n                    this.trigger('playing');\n                }, 100);\n            };\n\n            this.thumb.addEventListener('mousedown', () => {\n                barWidth = this.bar.clientWidth;\n                clearInterval(this.playedTime);\n                document.addEventListener('mousemove', thumbMove);\n                document.addEventListener('mouseup', thumbUp);\n            });\n\n            // control volume\n            this.volumeBar = this.element.getElementsByClassName('aplayer-volume')[0];\n            const volumeBarWrap = this.element.getElementsByClassName('aplayer-volume-bar')[0];\n            const volumeicon = this.element.getElementsByClassName('aplayer-time')[0].getElementsByTagName('i')[0];\n            const barHeight = 35;\n            this.element.getElementsByClassName('aplayer-volume-bar-wrap')[0].addEventListener('click', (event) => {\n                const e = event || window.event;\n                let percentage = (barHeight - e.clientY + getElementViewTop(volumeBarWrap)) / barHeight;\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this.updateBar('volume', percentage, 'height');\n                this.audio.volume = percentage;\n                if (this.audio.muted) {\n                    this.audio.muted = false;\n                }\n                if (percentage === 1) {\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-up';\n                }\n                else {\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-down';\n                }\n            });\n            volumeicon.addEventListener('click', () => {\n                if (this.audio.muted) {\n                    this.audio.muted = false;\n                    volumeicon.className = this.audio.volume === 1 ? 'demo-icon aplayer-icon-volume-up' : 'demo-icon aplayer-icon-volume-down';\n                    this.updateBar('volume', this.audio.volume, 'height');\n                }\n                else {\n                    this.audio.muted = true;\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-off';\n                    this.updateBar('volume', 0, 'height');\n                }\n            });\n\n            // get element's view position\n            function getElementViewLeft(element) {\n                let actualLeft = element.offsetLeft;\n                let current = element.offsetParent;\n                let elementScrollLeft;\n                while (current !== null) {\n                    actualLeft += current.offsetLeft;\n                    current = current.offsetParent;\n                }\n                elementScrollLeft = document.body.scrollLeft + document.documentElement.scrollLeft;\n                return actualLeft - elementScrollLeft;\n            }\n\n            function getElementViewTop(element) {\n                let actualTop = element.offsetTop;\n                let current = element.offsetParent;\n                let elementScrollTop;\n                while (current !== null) {\n                    actualTop += current.offsetTop;\n                    current = current.offsetParent;\n                }\n                elementScrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n                return actualTop - elementScrollTop;\n            }\n\n            // loop control\n            const loopEle = this.element.getElementsByClassName('aplayer-icon-loop')[0];\n            loopEle.addEventListener('click', () => {\n                if (this.loop) {\n                    loopEle.classList.add('aplayer-noloop');\n                    this.loop = false;\n                    this.audio.loop = this.multiple ? false : this.loop;\n                }\n                else {\n                    loopEle.classList.remove('aplayer-noloop');\n                    this.loop = true;\n                    this.audio.loop = this.multiple ? false : this.loop;\n                }\n            });\n\n            // toggle menu control\n            if (this.multiple) {\n                this.element.getElementsByClassName('aplayer-icon-menu')[0].addEventListener('click', () => {\n                    const list = this.element.getElementsByClassName('aplayer-list')[0];\n                    if (!list.classList.contains('aplayer-list-hide')) {\n                        list.classList.add('aplayer-list-hide');\n                    }\n                    else {\n                        list.classList.remove('aplayer-list-hide');\n                    }\n                });\n            }\n\n            this.setMusic(0);\n\n            instances.push(this);\n        }\n\n        /**\n         * Set music\n         */\n        setMusic(index) {\n            // get this.music\n            if (this.multiple && typeof(index) !== 'undefined') {\n                this.playIndex = index;\n            }\n            const indexMusic = this.playIndex;\n            this.music = this.multiple ? this.option.music[indexMusic] : this.option.music;\n\n            // set html\n            if (this.music.pic) {\n                this.element.getElementsByClassName('aplayer-pic')[0].style.backgroundImage = `url(${encodeURI(this.music.pic)})`;\n            }\n            this.element.getElementsByClassName('aplayer-title')[0].innerHTML = this.music.title;\n            this.element.getElementsByClassName('aplayer-author')[0].innerHTML = ` - ${this.music.author}`;\n            if (this.multiple) {\n                if (this.element.getElementsByClassName('aplayer-list-light')[0]) {\n                    this.element.getElementsByClassName('aplayer-list-light')[0].classList.remove('aplayer-list-light');\n                }\n                this.element.getElementsByClassName('aplayer-list')[0].getElementsByTagName('li')[indexMusic].classList.add('aplayer-list-light');\n            }\n\n            // set the previous audio object\n            if (this.audio) {\n                this.pause();\n                this.audio.currentTime = 0;\n            }\n\n            // get this audio object\n            if ((this.multiple && !this.audios[indexMusic]) || this.playIndex === -1) {\n                this.audio = document.createElement(\"audio\");\n                this.audio.src = this.music.url;\n                this.audio.preload = this.isMobile ? 'none' : 'metadata';\n\n                // show audio time: the metadata has loaded or changed\n                this.audio.addEventListener('durationchange', () => {\n                    if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                        this.element.getElementsByClassName('aplayer-dtime')[0].innerHTML = this.secondToTime(this.audio.duration);\n                    }\n                });\n\n                // show audio loaded bar: to inform interested parties of progress downloading the media\n                this.audio.addEventListener('progress', () => {\n                    const percentage = this.audio.buffered.length ? this.audio.buffered.end(this.audio.buffered.length - 1) / this.audio.duration : 0;\n                    this.updateBar('loaded', percentage, 'width');\n                });\n\n                // audio download error: an error occurs\n                this.audio.addEventListener('error', () => {\n                    this.element.getElementsByClassName('aplayer-author')[0].innerHTML = ` - Error happens ╥﹏╥`;\n                    this.trigger('pause');\n                });\n\n                // audio can play: enough data is available that the media can be played\n                this.audio.addEventListener('canplay', () => {\n                    this.trigger('canplay');\n                });\n\n                // multiple music play\n                this.ended = false;\n                if (this.multiple) {\n                    this.audio.addEventListener('ended', () => {\n                        if (this.playIndex < this.option.music.length - 1) {\n                            this.setMusic(++this.playIndex);\n                        }\n                        else if (this.loop) {\n                            this.setMusic(0);\n                        }\n                        else if (!this.loop) {\n                            this.ended = true;\n                            this.pause();\n                            this.trigger('ended');\n                        }\n                    });\n                }\n                else {\n                    this.audio.addEventListener('ended', () => {\n                        if (!this.loop) {\n                            this.ended = true;\n                            this.pause();\n                            this.trigger('ended');\n                        }\n                    });\n                }\n\n                // control volume\n                this.audio.volume = parseInt(this.element.getElementsByClassName('aplayer-volume')[0].style.height) / 100;\n\n                // loop\n                this.audio.loop = this.multiple ? false : this.loop;\n\n                if (this.multiple) {\n                    this.audios[indexMusic] = this.audio;\n                }\n            }\n            else {\n                this.audio = this.audios[indexMusic];\n                this.audio.volume = parseInt(this.element.getElementsByClassName('aplayer-volume')[0].style.height) / 100;\n                this.audio.currentTime = 0;\n            }\n\n            // fill in lrc\n            if (this.option.showlrc) {\n                this.lrc = this.multiple ? this.lrcs[indexMusic] : this.lrcs[0];\n                let lrcHTML = '';\n                this.lrcContents = this.element.getElementsByClassName('aplayer-lrc-contents')[0];\n                for (let i = 0; i < this.lrc.length; i++) {\n                    lrcHTML += `<p>${this.lrc[i][1]}</p>`;\n                }\n                this.lrcContents.innerHTML = lrcHTML;\n                if (!this.lrcIndex) {\n                    this.lrcIndex = 0;\n                }\n                this.lrcContents.getElementsByTagName('p')[0].classList.add('aplayer-lrc-current');\n                this.lrcContents.style.transform = 'translateY(0px)';\n                this.lrcContents.style.webkitTransform = 'translateY(0px)';\n            }\n\n            // set duration time\n            if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                this.element.getElementsByClassName('aplayer-dtime')[0].innerHTML = this.audio.duration ? this.secondToTime(this.audio.duration) : '00:00';\n            }\n\n            // autoplay\n            if (this.option.autoplay && !this.isMobile) {\n                this.play();\n            }\n            this.option.autoplay = true;  // autoplay next music\n\n            if (this.isMobile) {\n                this.pause();\n            }\n        }\n\n        /**\n         * Play music\n         */\n        play() {\n            if (this.audio.paused) {\n                this.button.classList.remove('aplayer-play');\n                this.button.classList.add('aplayer-pause');\n                this.button.innerHTML = '';\n                setTimeout(() => {\n                    this.button.innerHTML = '<i class=\"demo-icon aplayer-icon-pause\"></i>';\n                }, 100);\n\n                // pause other players (Thanks @Aprikyblue)\n                if (this.option.mutex) {\n                    for (let i = 0; i < instances.length; i++) {\n                        if (this != instances[i]) {\n                            instances[i].pause();\n                        }\n                    }\n                }\n                this.audio.play();\n                if (this.playedTime) {\n                    clearInterval(this.playedTime);\n                }\n                this.playedTime = setInterval(() => {\n                    this.updateBar('played', this.audio.currentTime / this.audio.duration, 'width');\n                    if (this.option.showlrc) {\n                        this.updateLrc();\n                    }\n                    this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(this.audio.currentTime);\n                    this.trigger('playing');\n                }, 100);\n                this.trigger('play');\n            }\n        }\n\n        /**\n         * Pause music\n         */\n        pause() {\n            if (!this.audio.paused || this.ended) {\n                this.ended = false;\n                this.button.classList.remove('aplayer-pause');\n                this.button.classList.add('aplayer-play');\n                this.button.innerHTML = '';\n                setTimeout(() => {\n                    this.button.innerHTML = '<i class=\"demo-icon aplayer-icon-play\"></i>';\n                }, 100);\n                this.audio.pause();\n                clearInterval(this.playedTime);\n                this.trigger('pause');\n            }\n        }\n\n        /**\n         * attach event\n         */\n        on(name, func) {\n            if (typeof func === 'function') {\n                this.event[name].push(func);\n            }\n        }\n    }\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = APlayer\n    }\n    else {\n        window.APlayer = APlayer;\n    }\n})([]);"],"sourceRoot":"/source/"}