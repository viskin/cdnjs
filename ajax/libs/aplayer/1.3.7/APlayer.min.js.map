{"version":3,"sources":["APlayer.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","APlayer","option","_this","this","isMobile","navigator","userAgent","match","autoplay","defaultOption","element","document","getElementsByClassName","narrow","showlrc","theme","defaultKey","hasOwnProperty","playIndex","toString","call","music","audios","loop","secondToTime","second","add0","num","min","parseInt","sec","parseLrc","arr","lrcs","k","lyric","split","lrc","lyricLen","lrcTimes","lrcText","replace","timeLen","j","oneTime","exec","lrcTime","push","sort","a","b","updateBar","type","percentage","direction","style","updateLrc","currentTime","audio","lrcIndex","lrcContents","transform","webkitTransform","classList","remove","getElementsByTagName","add","value","getElementViewLeft","actualLeft","offsetLeft","current","offsetParent","elementScrollLeft","body","scrollLeft","documentElement","getElementViewTop","actualTop","offsetTop","elementScrollTop","scrollTop","_this2","innerHTML","eleHTML","title","author","button","addEventListener","e","contains","play","pause","listItem","_loop","_i","musicIndex","setMusic","playedBar","loadedBar","thumb","bar","barWidth","event","window","clientWidth","clientX","duration","parseFloat","width","background","thumbMove","thumbUp","removeEventListener","clearInterval","playedTime","volumeBar","volumeBarWrap","volumeicon","barHeight","clientY","volume","muted","className","loopEle","list","index","_this3","indexMusic","pic","backgroundImage","encodeURI","createElement","src","url","preload","buffered","end","height","lrcHTML","_this4","setTimeout","setInterval","_this5","module","exports"],"mappings":"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","file":"APlayer.min.js","sourcesContent":["/**\n * APlayer constructor function\n *\n * @param {Object} option - See README\n * @constructor\n */\n(() => {\n    class APlayer {\n        constructor (option) {\n\n            this.isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n            // compatibility: some mobile browsers don't suppose autoplay\n            if (this.isMobile) {\n                option.autoplay = false;\n            }\n\n            // default options\n            const defaultOption = {\n                element: document.getElementsByClassName('aplayer')[0],\n                narrow: false,\n                autoplay: false,\n                showlrc: false,\n                theme: '#b7daff'\n            };\n            for (let defaultKey in defaultOption) {\n                if (defaultOption.hasOwnProperty(defaultKey) && !option.hasOwnProperty(defaultKey)) {\n                    option[defaultKey] = defaultOption[defaultKey];\n                }\n            }\n\n            // multiple music\n            this.playIndex = Object.prototype.toString.call(option.music) === '[object Array]' ? 0 : -1;\n\n            this.option = option;\n            this.audios = [];\n            this.loop = true;\n\n            /**\n             * Parse second to 00:00 format\n             *\n             * @param {Number} second\n             * @return {String} 00:00 format\n             */\n            this.secondToTime =  (second) => {\n                const add0 = (num) => {\n                    return num < 10 ? '0' + num : '' + num;\n                };\n                const min = parseInt(second / 60);\n                const sec = parseInt(second - min * 60);\n                return add0(min) + ':' + add0(sec);\n            };\n\n            /**\n             * Parse lrc, suppose multiple time tag\n             *\n             * @param {Array} arr - Format:\n             * [mm:ss.xx]lyric\n             * [mm:ss.xxx]lyric\n             * [mm:ss.xx][mm:ss.xx][mm:ss.xx]lyric\n             *\n             * @return {Array} [[[time, text], [time, text], [time, text], ...], [[time, text], [time, text], [time, text], ...], ...]\n             */\n            this.parseLrc =  (arr) => {\n                let lrcs = [];\n                for (let k = 0; k < arr.length; k++) {\n                    const lyric = arr[k].split('\\n');\n                    let lrc = [];\n                    const lyricLen = lyric.length;\n                    for (let i = 0; i < lyricLen; i++) {\n                        // match lrc time\n                        const lrcTimes = lyric[i].match(/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/g);\n                        // match lrc text\n                        const lrcText = lyric[i].replace(/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/g, '').replace(/^\\s+|\\s+$/g, '');\n\n                        if (lrcTimes != null) {\n                            // handle multiple time tag\n                            const timeLen = lrcTimes.length;\n                            for (let j = 0; j < timeLen; j++) {\n                                const oneTime = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/.exec(lrcTimes[j]);\n                                const lrcTime = (oneTime[1]) * 60 + parseInt(oneTime[2]) + parseInt(oneTime[3]) / ((oneTime[3] + '').length === 2 ? 100 : 1000);\n                                lrc.push([lrcTime, lrcText]);\n                            }\n                        }\n                    }\n                    // sort by time\n                    lrc.sort((a, b) => a[0] - b[0]);\n                    lrcs.push(lrc);\n                }\n                return lrcs;\n            };\n\n            /**\n             * Update progress bar, including loading progress bar and play progress bar\n             *\n             * @param {String} type - Point out which bar it is, should be played loaded or volume\n             * @param {Number} percentage\n             * @param {String} direction - Point out the direction of this bar, Should be height or width\n             */\n            this.updateBar = (type, percentage, direction) => {\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this[type + 'Bar'].style[direction] = percentage * 100 + '%';\n            };\n\n            /**\n             * Update lrc\n             *\n             * @param {Number} currentTime\n             */\n            this.updateLrc = (currentTime) => {\n                if (typeof(currentTime) === 'undefined') {\n                    currentTime = this.audio.currentTime;\n                }\n                if (this.lrcIndex > this.lrc.length - 1 || currentTime < this.lrc[this.lrcIndex][0] || (!this.lrc[this.lrcIndex + 1] || currentTime >= this.lrc[this.lrcIndex + 1][0])) {\n                    for (let i = 0; i < this.lrc.length; i++) {\n                        if (currentTime >= this.lrc[i][0] && (!this.lrc[i + 1] || currentTime < this.lrc[i + 1][0])) {\n                            this.lrcIndex = i;\n                            this.lrcContents.style.transform = 'translateY(' + -this.lrcIndex * 20 + 'px)';\n                            this.lrcContents.style.webkitTransform = 'translateY(' + -this.lrcIndex * 20 + 'px)';\n                            this.lrcContents.getElementsByClassName('aplayer-lrc-current')[0].classList.remove('aplayer-lrc-current');\n                            this.lrcContents.getElementsByTagName('p')[i].classList.add('aplayer-lrc-current');\n                        }\n                    }\n                }\n            };\n        }\n\n        /**\n         * AutoLink initialization function\n         */\n        init () {\n            this.element = this.option.element;\n            this.music = this.playIndex > -1 ? this.option.music[this.playIndex] : this.option.music;\n\n            let i;\n            // parser lrc\n            if (this.option.showlrc) {\n                let lrcs = [];\n                for (i = 0; i < this.element.getElementsByClassName('aplayer-lrc-content').length; i++) {\n                    lrcs.push(this.element.getElementsByClassName('aplayer-lrc-content')[i].innerHTML);\n                }\n                this.lrcs = this.parseLrc(lrcs);\n            }\n\n            // fill in HTML\n            let eleHTML = `\n                <div class=\"aplayer-pic\">\n                    <div class=\"aplayer-button aplayer-play\">\n                        <i class=\"demo-icon aplayer-icon-play\"></i>\n                    </div>\n                </div>\n                <div class=\"aplayer-info\">\n                    <div class=\"aplayer-music\">\n                        <span class=\"aplayer-title\"></span>\n                        <span class=\"aplayer-author\"></span>\n                    </div>\n                    <div class=\"aplayer-lrc\">\n                        <div class=\"aplayer-lrc-contents\" style=\"transform: translateY(0); -webkit-transform: translateY(0);\"></div>\n                    </div>\n                    <div class=\"aplayer-controller\">\n                        <div class=\"aplayer-bar-wrap\">\n                            <div class=\"aplayer-bar\">\n                                <div class=\"aplayer-loaded\" style=\"width: 0\"></div>\n                                <div class=\"aplayer-played\" style=\"width: 0; background: ` + this.option.theme + `;\">\n                                    <span class=\"aplayer-thumb\" style=\"border: 1px solid ` + this.option.theme + `;\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"aplayer-time\">\n                             - <span class=\"aplayer-ptime\">00:00</span> / <span class=\"aplayer-dtime\">00:00</span>\n                            <div class=\"aplayer-volume-wrap\">\n                                <i class=\"demo-icon aplayer-icon-volume-down\"></i>\n                                <div class=\"aplayer-volume-bar-wrap\">\n                                    <div class=\"aplayer-volume-bar\">\n                                        <div class=\"aplayer-volume\" style=\"height: 80%; background: ` + this.option.theme + `;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <i class=\"demo-icon aplayer-icon-loop\"></i>` + (this.playIndex > -1 ? `<i class=\"demo-icon aplayer-icon-menu\"></i>` : ``) + `\n                        </div>\n                    </div>\n                </div>`;\n            if (this.playIndex > -1) {\n                eleHTML += `\n                <div class=\"aplayer-list\">\n                    <ol>`;\n                for (i = 0; i < this.option.music.length; i++) {\n                    eleHTML += `\n                        <li>\n                            <span class=\"aplayer-list-cur\" style=\"background: ` + this.option.theme + `;\"></span>\n                            <span class=\"aplayer-list-index\">` + (i + 1) + `</span>\n                            <span class=\"aplayer-list-title\">` + this.option.music[i].title + `</span>\n                            <span class=\"aplayer-list-author\">` + this.option.music[i].author + `</span>\n                        </li>`\n                }\n                eleHTML += `\n                    </ol>\n                </div>`\n            }\n            this.element.innerHTML = eleHTML;\n\n            // switch to narrow style\n            if (this.option.narrow) {\n                this.element.classList.add('aplayer-narrow');\n            }\n\n            // play and pause button\n            this.button = this.element.getElementsByClassName('aplayer-button')[0];\n            this.button.addEventListener('click', (e) => {\n                if (this.button.classList.contains('aplayer-play')) {\n                   this.play();\n                }\n                else if (this.button.classList.contains('aplayer-pause')) {\n                    this.pause();\n                }\n            });\n\n            // click music list: change music\n            if (this.playIndex > -1) {\n                const listItem = this.element.getElementsByClassName('aplayer-list')[0].getElementsByTagName('li');\n                for (let i = 0; i < this.option.music.length; i++) {\n                    listItem[i].addEventListener('click', () => {\n                        const musicIndex = parseInt(listItem[i].getElementsByClassName('aplayer-list-index')[0].innerHTML) - 1;\n                        if (musicIndex !== this.playIndex) {\n                            this.setMusic(musicIndex);\n                        }\n                        this.play();\n                    });\n                }\n            }\n\n            // control play progress\n            this.playedBar = this.element.getElementsByClassName('aplayer-played')[0];\n            this.loadedBar = this.element.getElementsByClassName('aplayer-loaded')[0];\n            this.thumb = this.element.getElementsByClassName('aplayer-thumb')[0];\n            this.bar = this.element.getElementsByClassName('aplayer-bar')[0];\n            let barWidth;\n            this.bar.addEventListener('click', (event) => {\n                const e = event || window.event;\n                barWidth = this.bar.clientWidth;\n                const percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n                this.updateBar('played', percentage, 'width');\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n                this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n            });\n\n            this.thumb.addEventListener('mouseover', () => {\n                this.thumb.style.background = this.option.theme;\n            });\n            this.thumb.addEventListener('mouseout', () => {\n                this.thumb.style.background = '#fff';\n            });\n\n            const thumbMove = (event) => {\n                const e = event || window.event;\n                let percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this.updateBar('played', percentage, 'width');\n                if (this.option.showlrc) {\n                    this.updateLrc(parseFloat(this.playedBar.style.width) / 100 * this.audio.duration);\n                }\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n            };\n\n            const thumbUp = () => {\n                document.removeEventListener('mouseup', thumbUp);\n                document.removeEventListener('mousemove', thumbMove);\n                this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n                this.play();\n            };\n\n            this.thumb.addEventListener('mousedown', () => {\n                barWidth = this.bar.clientWidth;\n                clearInterval(this.playedTime);\n                document.addEventListener('mousemove', thumbMove);\n                document.addEventListener('mouseup', thumbUp);\n            });\n\n            // control volume\n            this.volumeBar = this.element.getElementsByClassName('aplayer-volume')[0];\n            const volumeBarWrap = this.element.getElementsByClassName('aplayer-volume-bar')[0];\n            const volumeicon = this.element.getElementsByClassName('aplayer-time')[0].getElementsByTagName('i')[0];\n            const barHeight = 35;\n            this.element.getElementsByClassName('aplayer-volume-bar-wrap')[0].addEventListener('click', (event) => {\n                const e = event || window.event;\n                let percentage = (barHeight - e.clientY + getElementViewTop(volumeBarWrap)) / barHeight;\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this.updateBar('volume', percentage, 'height');\n                this.audio.volume = percentage;\n                if (this.audio.muted) {\n                    this.audio.muted = false;\n                }\n                if (percentage === 1) {\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-up';\n                }\n                else {\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-down';\n                }\n            });\n            volumeicon.addEventListener('click', () => {\n                if (this.audio.muted) {\n                    this.audio.muted = false;\n                    volumeicon.className = this.audio.volume === 1 ? 'demo-icon aplayer-icon-volume-up' : 'demo-icon aplayer-icon-volume-down';\n                    this.updateBar('volume', this.audio.volume, 'height');\n                }\n                else {\n                    this.audio.muted = true;\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-off';\n                    this.updateBar('volume', 0, 'height');\n                }\n            });\n\n            // get element's view position\n            function getElementViewLeft(element) {\n                let actualLeft = element.offsetLeft;\n                let current = element.offsetParent;\n                let elementScrollLeft;\n                while (current !== null) {\n                    actualLeft += current.offsetLeft;\n                    current = current.offsetParent;\n                }\n                elementScrollLeft = document.body.scrollLeft + document.documentElement.scrollLeft;\n                return actualLeft - elementScrollLeft;\n            }\n\n            function getElementViewTop(element) {\n                let actualTop = element.offsetTop;\n                let current = element.offsetParent;\n                let elementScrollTop;\n                while (current !== null) {\n                    actualTop += current.offsetTop;\n                    current = current.offsetParent;\n                }\n                elementScrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n                return actualTop - elementScrollTop;\n            }\n\n            // loop control\n            const loopEle = this.element.getElementsByClassName('aplayer-icon-loop')[0];\n            loopEle.addEventListener('click', () => {\n                if (this.loop) {\n                    loopEle.classList.add('aplayer-noloop');\n                    this.loop = false;\n                    this.audio.loop = this.playIndex > -1 ? false : this.loop;\n                }\n                else {\n                    loopEle.classList.remove('aplayer-noloop');\n                    this.loop = true;\n                    this.audio.loop = this.playIndex > -1 ? false : this.loop;\n                }\n            });\n\n            // toggle menu control\n            if (this.playIndex > -1) {\n                this.element.getElementsByClassName('aplayer-icon-menu')[0].addEventListener('click', () => {\n                    const list = this.element.getElementsByClassName('aplayer-list')[0];\n                    if (!list.classList.contains('aplayer-list-hide')) {\n                        list.classList.add('aplayer-list-hide');\n                    }\n                    else {\n                        list.classList.remove('aplayer-list-hide');\n                    }\n                });\n            }\n\n            this.setMusic(0);\n        };\n\n        /**\n         * Set music\n         */\n        setMusic (index) {\n            // get this.music\n            if (this.playIndex > -1 && typeof(index) !== 'undefined') {\n                this.playIndex = index;\n            }\n            const indexMusic = this.playIndex;\n            this.music = this.playIndex > -1 ? this.option.music[indexMusic] : this.option.music;\n\n            // set html\n            if (this.music.pic) {\n                this.element.getElementsByClassName('aplayer-pic')[0].style.backgroundImage = 'url(' + encodeURI(this.music.pic) + ')';\n            }\n            this.element.getElementsByClassName('aplayer-title')[0].innerHTML = this.music.title;\n            this.element.getElementsByClassName('aplayer-author')[0].innerHTML = ' - ' + this.music.author;\n            if (this.playIndex > -1) {\n                if (this.element.getElementsByClassName('aplayer-list-light')[0]) {\n                    this.element.getElementsByClassName('aplayer-list-light')[0].classList.remove('aplayer-list-light');\n                }\n                this.element.getElementsByClassName('aplayer-list')[0].getElementsByTagName('li')[indexMusic].classList.add('aplayer-list-light');\n            }\n\n            // set the previous audio object\n            if (this.audio) {\n                this.pause();\n                this.audio.currentTime = 0;\n            }\n\n            // get this audio object\n            if ((this.playIndex > -1 && !this.audios[indexMusic]) || this.playIndex === -1) {\n                this.audio = document.createElement(\"audio\");\n                this.audio.src = this.music.url;\n                this.audio.preload = this.isMobile ? 'none' : 'metadata';\n\n                // show audio time\n                this.audio.addEventListener('durationchange', () => {\n                    if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                        this.element.getElementsByClassName('aplayer-dtime')[0].innerHTML = this.secondToTime(this.audio.duration);\n                    }\n                });\n\n                // show audio loaded bar\n                this.audio.addEventListener('progress', () => {\n                    const percentage = this.audio.buffered.length ? this.audio.buffered.end(this.audio.buffered.length - 1) / this.audio.duration : 0;\n                    this.updateBar('loaded', percentage, 'width');\n                });\n\n                // audio download error\n                this.audio.addEventListener('error', () => {\n                    this.element.getElementsByClassName('aplayer-author')[0].innerHTML = ' - ' + 'Error happens ╥﹏╥';\n                });\n\n                // multiple music play\n                if (this.playIndex > -1) {\n                    this.audio.addEventListener('ended', () => {\n                        if (this.playIndex < this.option.music.length - 1) {\n                            this.setMusic(++this.playIndex);\n                        }\n                        else if (this.loop) {\n                            this.setMusic(0);\n                        }\n                        else if (!this.loop) {\n                            this.pause();\n                        }\n                    });\n                }\n                else {\n                    this.audio.addEventListener('ended', () => {\n                        if (!this.loop) {\n                            this.pause();\n                        }\n                    });\n                }\n\n                // control volume\n                this.audio.volume = parseInt(this.element.getElementsByClassName('aplayer-volume')[0].style.height) / 100;\n\n                // loop\n                this.audio.loop = this.playIndex > -1 ? false : this.loop;\n\n                if (this.playIndex > -1) {\n                    this.audios[indexMusic] = this.audio;\n                }\n            }\n            else {\n                this.audio = this.audios[indexMusic];\n                this.audio.volume = parseInt(this.element.getElementsByClassName('aplayer-volume')[0].style.height) / 100;\n                this.audio.currentTime = 0;\n            }\n\n            // fill in lrc\n            if (this.option.showlrc) {\n                this.lrc = this.playIndex > -1 ? this.lrcs[indexMusic] : this.lrcs[0];\n                this.element.classList.add('aplayer-withlrc');\n                let lrcHTML = '';\n                this.lrcContents = this.element.getElementsByClassName('aplayer-lrc-contents')[0];\n                for (let i = 0; i < this.lrc.length; i++) {\n                    lrcHTML += '<p>' + this.lrc[i][1] + '</p>';\n                }\n                this.lrcContents.innerHTML = lrcHTML;\n                if (!this.lrcIndex) {\n                    this.lrcIndex = 0;\n                }\n                this.lrcContents.getElementsByTagName('p')[0].classList.add('aplayer-lrc-current');\n                this.lrcContents.style.transform = 'translateY(0px)';\n                this.lrcContents.style.webkitTransform = 'translateY(0px)';\n            }\n\n            // set duration time\n            if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                this.element.getElementsByClassName('aplayer-dtime')[0].innerHTML = this.audio.duration ? this.secondToTime(this.audio.duration) : '00:00';\n            }\n\n            // autoplay\n            if (this.option.autoplay && !this.isMobile) {\n                this.play();\n            }\n            this.option.autoplay = true;  // autoplay next music\n\n            if (this.isMobile) {\n                this.pause();\n            }\n        };\n\n        /**\n         * Play music\n         */\n        play () {\n            this.button.classList.remove('aplayer-play');\n            this.button.classList.add('aplayer-pause');\n            this.button.innerHTML = '';\n            setTimeout(() => {\n                this.button.innerHTML = '<i class=\"demo-icon aplayer-icon-pause\"></i>';\n            }, 100);\n            this.audio.play();\n            if (this.playedTime) {\n                clearInterval(this.playedTime);\n            }\n            this.playedTime = setInterval(() => {\n                this.updateBar('played', this.audio.currentTime / this.audio.duration, 'width');\n                if (this.option.showlrc) {\n                    this.updateLrc();\n                }\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(this.audio.currentTime);\n            }, 100);\n        };\n\n        /**\n         * Pause music\n         */\n        pause () {\n            this.button.classList.remove('aplayer-pause');\n            this.button.classList.add('aplayer-play');\n            this.button.innerHTML = '';\n            setTimeout(() => {\n                this.button.innerHTML = '<i class=\"demo-icon aplayer-icon-play\"></i>';\n            }, 100);\n            this.audio.pause();\n            clearInterval(this.playedTime);\n        };\n    }\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = APlayer\n    }\n    else {\n        window.APlayer = APlayer;\n    }\n})();"],"sourceRoot":"/source/"}