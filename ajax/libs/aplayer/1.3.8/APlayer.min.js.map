{"version":3,"sources":["APlayer.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","APlayers","APlayer","option","_this","this","isMobile","navigator","userAgent","match","autoplay","defaultOption","element","document","getElementsByClassName","narrow","mutex","showlrc","theme","defaultKey","hasOwnProperty","playIndex","toString","call","music","audios","loop","secondToTime","second","add0","num","min","parseInt","sec","parseLrc","arr","lrcs","k","lyric","split","lrc","lyricLen","lrcTimes","lrcText","replace","timeLen","j","oneTime","exec","lrcTime","push","sort","a","b","updateBar","type","percentage","direction","style","updateLrc","currentTime","audio","lrcIndex","lrcContents","transform","webkitTransform","classList","remove","getElementsByTagName","add","value","getElementViewLeft","actualLeft","offsetLeft","current","offsetParent","elementScrollLeft","body","scrollLeft","documentElement","getElementViewTop","actualTop","offsetTop","elementScrollTop","scrollTop","_this2","innerHTML","eleHTML","title","author","button","addEventListener","e","contains","play","pause","listItem","_loop","_i","musicIndex","setMusic","playedBar","loadedBar","thumb","bar","barWidth","event","window","clientWidth","clientX","duration","parseFloat","width","background","thumbMove","thumbUp","removeEventListener","clearInterval","playedTime","volumeBar","volumeBarWrap","volumeicon","barHeight","clientY","volume","muted","className","loopEle","list","index","_this3","indexMusic","pic","backgroundImage","encodeURI","createElement","src","url","preload","buffered","end","height","lrcHTML","_this4","paused","setTimeout","setInterval","_this5","module","exports"],"mappings":"AAAA,YAIA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,OAIhiB,WACI,GAAIkB,MAEEC,EAAA,WACF,QADEA,GACWC,GAOT,GAAIC,GAAQC,IAEZxB,iBAAgBwB,KAVlBH,GAGEG,KAAKC,SAAWC,UAAUC,UAAUC,MAAM,6CAEtCJ,KAAKC,WACLH,EAAOO,UAAW,EALL,IASXC,IACFC,QAASC,SAASC,uBAAuB,WAAW,GACpDC,QAAQ,EACRL,UAAU,EACVM,OAAO,EACPC,SAAS,EACTC,MAAO,UAEX,KAAK,GAAIC,KAAcR,GACfA,EAAcS,eAAeD,KAAgBhB,EAAOiB,eAAeD,KACnEhB,EAAOgB,GAAcR,EAAcQ,GAnB1Bd,MAwBZgB,UAA6D,mBAAjD1B,OAAOK,UAAUsB,SAASC,KAAKpB,EAAOqB,OAA8B,EAAI,GAEzFnB,KAAKF,OAASA,EACdE,KAAKoB,UACLpB,KAAKqB,MAAO,EA5BKrB,KAoCZsB,aAAgB,SAACC,GAClB,GAAMC,GAAO,SAACC,GACV,MAAa,IAANA,EAAW,IAAMA,EAAM,GAAKA,GAEjCC,EAAMC,SAASJ,EAAS,IACxBK,EAAMD,SAASJ,EAAe,GAANG,EAC9B,OAAOF,GAAKE,GAAO,IAAMF,EAAKI,IA1CjB5B,KAuDZ6B,SAAY,SAACC,GAEd,IAAK,GADDC,MACKC,EAAI,EAAGA,EAAIF,EAAI7C,OAAQ+C,IAAK,CAIjC,IAAK,GAHCC,GAAQH,EAAIE,GAAGE,MAAM,MACvBC,KACEC,EAAWH,EAAMhD,OACdD,EAAI,EAAOoD,EAAJpD,EAAcA,IAAK,CAE/B,GAAMqD,GAAWJ,EAAMjD,GAAGoB,MAAM,kCAE1BkC,EAAUL,EAAMjD,GAAGuD,QAAQ,iCAAkC,IAAIA,QAAQ,aAAc,GAE7F,IAAgB,MAAZF,EAGA,IAAK,GADCG,GAAUH,EAASpD,OAChBwD,EAAI,EAAOD,EAAJC,EAAaA,IAAK,CAC9B,GAAMC,GAAU,gCAAgCC,KAAKN,EAASI,IACxDG,EAAyB,GAAfF,EAAS,GAAWf,SAASe,EAAQ,IAAMf,SAASe,EAAQ,KAAoC,KAA5BA,EAAQ,GAAK,IAAIzD,OAAe,IAAM,IAC1HkD,GAAIU,MAAMD,EAASN,KAhBEH,EAqB7BW,KAAK,SAACC,EAAGC,GAUT,MAVeD,GAAE,GAAKC,EAAE,KAC5BjB,EAAKc,KAAKV,GAEd,MAAOJ,IAjFM/B,KA2FZiD,UAAY,SAACC,EAAMC,EAAYC,GAChCD,EAAaA,EAAa,EAAIA,EAAa,EAC3CA,EAA0B,EAAbA,EAAiBA,EAAa,EAC3CpD,EAAKmD,EAAO,OAAOG,MAAMD,GAA0B,IAAbD,EAAmB,KA9F5CnD,KAsGZsD,UAAY,SAACC,GAId,GAH4B,mBAAjBA,KACPA,EAAcxD,EAAKyD,MAAMD,aAEzBxD,EAAK0D,SAAW1D,EAAKoC,IAAIlD,OAAS,GAAKsE,EAAcxD,EAAKoC,IAAIpC,EAAK0D,UAAU,KAAQ1D,EAAKoC,IAAIpC,EAAK0D,SAAW,IAAMF,GAAexD,EAAKoC,IAAIpC,EAAK0D,SAAW,GAAG,GAC/J,IAAK,GAAIzE,GAAI,EAAGA,EAAIe,EAAKoC,IAAIlD,OAAQD,IAC7BuE,GAAexD,EAAKoC,IAAInD,GAAG,MAAQe,EAAKoC,IAAInD,EAAI,IAAMuE,EAAcxD,EAAKoC,IAAInD,EAAI,GAAG,MACpFe,EAAK0D,SAAWzE,EAChBe,EAAK2D,YAAYL,MAAMM,UAAY,cAAiC,IAAhB5D,EAAK0D,SAAgB,MACzE1D,EAAK2D,YAAYL,MAAMO,gBAAkB,cAAiC,IAAhB7D,EAAK0D,SAAgB,MAC/E1D,EAAK2D,YAAYjD,uBAAuB,uBAAuB,GAAGoD,UAAUC,OAAO,uBACnF/D,EAAK2D,YAAYK,qBAAqB,KAAK/E,GAAG6E,UAAUG,IAAI,yBA+ZhF,MAxYApF,cAzIEiB,IA0IEL,IAAK,OACLyE,MAAO,WAfH,QAyLKC,GAAmB3D,GAIxB,IAHA,GAAI4D,GAAa5D,EAAQ6D,WACrBC,EAAU9D,EAAQ+D,aAClBC,EAAA,OACe,OAAZF,GACHF,GAAcE,EAAQD,WACtBC,EAAUA,EAAQC,YAGtB,OADAC,GAAoB/D,SAASgE,KAAKC,WAAajE,SAASkE,gBAAgBD,WACjEN,EAAaI,EAGxB,QAASI,GAAkBpE,GAIvB,IAHA,GAAIqE,GAAYrE,EAAQsE,UACpBR,EAAU9D,EAAQ+D,aAClBQ,EAAA,OACe,OAAZT,GACHO,GAAaP,EAAQQ,UACrBR,EAAUA,EAAQC,YAGtB,OADAQ,GAAmBtE,SAASgE,KAAKO,UAAYvE,SAASkE,gBAAgBK,UAC/DH,EAAYE,EA9LnB,GAAIE,GAAShF,IAfjBA,MAAKO,QAAUP,KAAKF,OAAOS,QAC3BP,KAAKmB,MAAQnB,KAAKgB,UAAY,GAAKhB,KAAKF,OAAOqB,MAAMnB,KAAKgB,WAAahB,KAAKF,OAAOqB,KAEnF,IAAInC,GAAA,MAJA,IAMAgB,KAAKF,OAAOc,QAAS,CACrB,GAAImB,KACJ,KAAK/C,EAAI,EAAGA,EAAIgB,KAAKO,QAAQE,uBAAuB,uBAAuBxB,OAAQD,IAC/E+C,EAAKc,KAAK7C,KAAKO,QAAQE,uBAAuB,uBAAuBzB,GAAGiG,UAE5EjF,MAAK+B,KAAO/B,KAAK6B,SAASE,GAX1B,GAeAmD,GAAU,ggCAkBmElF,KAAKF,OAAOe,MAAZ,iGACAb,KAAKF,OAAOe,MAAZ,uqBAUWb,KAAKF,OAAOe,MAAZ,8MAI5Bb,KAAKgB,UAAY,GAAA,8CAAjB,IAjClD,sFAqCd,IAAIhB,KAAKgB,UAAY,GAAI,CAIrB,IAHAkE,GAAA,yEAGKlG,EAAI,EAAGA,EAAIgB,KAAKF,OAAOqB,MAAMlC,OAAQD,IACtCkG,GAAW,iHAEmDlF,KAAKF,OAAOe,MAAZ,6EAChB7B,EAAI,GAHvC,yEAIkCgB,KAAKF,OAAOqB,MAAMnC,GAAGmG,MAArB,0EACCnF,KAAKF,OAAOqB,MAAMnC,GAAGoG,OAArB,wCAGlDF,IAAA,sDAIJlF,KAAKO,QAAQ0E,UAAYC,EAGrBlF,KAAKF,OAAOY,QACZV,KAAKO,QAAQsD,UAAUG,IAAI,kBAzE3BhE,KA6ECqF,OAASrF,KAAKO,QAAQE,uBAAuB,kBAAkB,GACpET,KAAKqF,OAAOC,iBAAiB,QAAS,SAACC,GAC/BP,EAAKK,OAAOxB,UAAU2B,SAAS,gBAChCR,EAAKS,OAECT,EAAKK,OAAOxB,UAAU2B,SAAS,kBACpCR,EAAKU,UAKT1F,KAAKgB,UAAY,KA7Bb,WA+BJ,IAAK,GADC2E,GAAWX,EAAKzE,QAAQE,uBAAuB,gBAAgB,GAAGsD,qBAAqB,MA3BjF6B,EAAQ,SA4BXC,GACLF,EAASE,GAAGP,iBAAiB,QAAS,WAClC,GAAMQ,GAAanE,SAASgE,EAASE,GAAGpF,uBAAuB,sBAAsB,GAAGwE,WAAa,CACjGa,KAAed,EAAKhE,WACpBgE,EAAKe,SAASD,GAElBd,EAAKS,UANJI,EAAI,EAAGA,EAAIb,EAAKlF,OAAOqB,MAAMlC,OAAQ4G,IAjBlCD,EAiBHC,MA1FT7F,KAsGCgG,UAAYhG,KAAKO,QAAQE,uBAAuB,kBAAkB,GACvET,KAAKiG,UAAYjG,KAAKO,QAAQE,uBAAuB,kBAAkB,GACvET,KAAKkG,MAAQlG,KAAKO,QAAQE,uBAAuB,iBAAiB,GAClET,KAAKmG,IAAMnG,KAAKO,QAAQE,uBAAuB,eAAe,EAC9D,IAAI2F,GAAA,MACJpG,MAAKmG,IAAIb,iBAAiB,QAAS,SAACe,GAChC,GAAMd,GAAIc,GAASC,OAAOD,KAC1BD,GAAWpB,EAAKmB,IAAII,WACpB,IAAMpD,IAAcoC,EAAEiB,QAAUtC,EAAmBc,EAAKmB,MAAQC,CAChEpB,GAAK/B,UAAU,SAAUE,EAAY,SACrC6B,EAAKzE,QAAQE,uBAAuB,iBAAiB,GAAGwE,UAAYD,EAAK1D,aAAa6B,EAAa6B,EAAKxB,MAAMiD,UAC9GzB,EAAKxB,MAAMD,YAAcmD,WAAW1B,EAAKgB,UAAU3C,MAAMsD,OAAS,IAAM3B,EAAKxB,MAAMiD,WAGvFzG,KAAKkG,MAAMZ,iBAAiB,YAAa,WACrCN,EAAKkB,MAAM7C,MAAMuD,WAAa5B,EAAKlF,OAAOe,QAE9Cb,KAAKkG,MAAMZ,iBAAiB,WAAY,WACpCN,EAAKkB,MAAM7C,MAAMuD,WAAa,QAGlC,IAAMC,GAAY,SAACR,GACf,GAAMd,GAAIc,GAASC,OAAOD,MACtBlD,GAAcoC,EAAEiB,QAAUtC,EAAmBc,EAAKmB,MAAQC,CAC9DjD,GAAaA,EAAa,EAAIA,EAAa,EAC3CA,EAA0B,EAAbA,EAAiBA,EAAa,EAC3C6B,EAAK/B,UAAU,SAAUE,EAAY,SACjC6B,EAAKlF,OAAOc,SACZoE,EAAK1B,UAAUoD,WAAW1B,EAAKgB,UAAU3C,MAAMsD,OAAS,IAAM3B,EAAKxB,MAAMiD,UAE7EzB,EAAKzE,QAAQE,uBAAuB,iBAAiB,GAAGwE,UAAYD,EAAK1D,aAAa6B,EAAa6B,EAAKxB,MAAMiD,WAG5GK,EAAU,QAAVA,KACFtG,SAASuG,oBAAoB,UAAWD,GACxCtG,SAASuG,oBAAoB,YAAaF,GAC1C7B,EAAKxB,MAAMD,YAAcmD,WAAW1B,EAAKgB,UAAU3C,MAAMsD,OAAS,IAAM3B,EAAKxB,MAAMiD,SACnFzB,EAAKS,OAGTzF,MAAKkG,MAAMZ,iBAAiB,YAAa,WACrCc,EAAWpB,EAAKmB,IAAII,YACpBS,cAAchC,EAAKiC,YACnBzG,SAAS8E,iBAAiB,YAAauB,GACvCrG,SAAS8E,iBAAiB,UAAWwB,KAlJrC9G,KAsJCkH,UAAYlH,KAAKO,QAAQE,uBAAuB,kBAAkB,EACvE,IAAM0G,GAAgBnH,KAAKO,QAAQE,uBAAuB,sBAAsB,GAC1E2G,EAAapH,KAAKO,QAAQE,uBAAuB,gBAAgB,GAAGsD,qBAAqB,KAAK,GAC9FsD,EAAY,EAClBrH,MAAKO,QAAQE,uBAAuB,2BAA2B,GAAG6E,iBAAiB,QAAS,SAACe,GACzF,GAAMd,GAAIc,GAASC,OAAOD,MACtBlD,GAAckE,EAAY9B,EAAE+B,QAAU3C,EAAkBwC,IAAkBE,CAC9ElE,GAAaA,EAAa,EAAIA,EAAa,EAC3CA,EAA0B,EAAbA,EAAiBA,EAAa,EAC3C6B,EAAK/B,UAAU,SAAUE,EAAY,UACrC6B,EAAKxB,MAAM+D,OAASpE,EAChB6B,EAAKxB,MAAMgE,QACXxC,EAAKxB,MAAMgE,OAAQ,GAEJ,IAAfrE,EACAiE,EAAWK,UAAY,mCAGvBL,EAAWK,UAAY,uCAG/BL,EAAW9B,iBAAiB,QAAS,WAC7BN,EAAKxB,MAAMgE,OACXxC,EAAKxB,MAAMgE,OAAQ,EACnBJ,EAAWK,UAAkC,IAAtBzC,EAAKxB,MAAM+D,OAAe,mCAAqC,qCACtFvC,EAAK/B,UAAU,SAAU+B,EAAKxB,MAAM+D,OAAQ,YAG5CvC,EAAKxB,MAAMgE,OAAQ,EACnBJ,EAAWK,UAAY,oCACvBzC,EAAK/B,UAAU,SAAU,EAAG,YApLhC,IAkNEyE,GAAU1H,KAAKO,QAAQE,uBAAuB,qBAAqB,EACzEiH,GAAQpC,iBAAiB,QAAS,WAC1BN,EAAK3D,MACLqG,EAAQ7D,UAAUG,IAAI,kBACtBgB,EAAK3D,MAAO,EACZ2D,EAAKxB,MAAMnC,KAAO2D,EAAKhE,UAAY,IAAK,EAAQgE,EAAK3D,OAGrDqG,EAAQ7D,UAAUC,OAAO,kBACzBkB,EAAK3D,MAAO,EACZ2D,EAAKxB,MAAMnC,KAAO2D,EAAKhE,UAAY,IAAK,EAAQgE,EAAK3D,QAKzDrB,KAAKgB,UAAY,IACjBhB,KAAKO,QAAQE,uBAAuB,qBAAqB,GAAG6E,iBAAiB,QAAS,WAClF,GAAMqC,GAAO3C,EAAKzE,QAAQE,uBAAuB,gBAAgB,EAC5DkH,GAAK9D,UAAU2B,SAAS,qBAIzBmC,EAAK9D,UAAUC,OAAO,qBAHtB6D,EAAK9D,UAAUG,IAAI,uBAQ/BhE,KAAK+F,SAAS,GAEdnG,EAASiD,KAAK7C,SAxBdR,IAAK,WAMLyE,MAAO,SAwBD2D,GAvBF,GAAIC,GAAS7H,IAyBbA,MAAKgB,UAAY,IAAwB,mBAAX4G,KAC9B5H,KAAKgB,UAAY4G,EAErB,IAAME,GAAa9H,KAAKgB,SALX,IAMbhB,KAAKmB,MAAQnB,KAAKgB,UAAY,GAAKhB,KAAKF,OAAOqB,MAAM2G,GAAc9H,KAAKF,OAAOqB,MAG3EnB,KAAKmB,MAAM4G,MACX/H,KAAKO,QAAQE,uBAAuB,eAAe,GAAG4C,MAAM2E,gBAAkB,OAASC,UAAUjI,KAAKmB,MAAM4G,KAAO,KAEvH/H,KAAKO,QAAQE,uBAAuB,iBAAiB,GAAGwE,UAAYjF,KAAKmB,MAAMgE,MAC/EnF,KAAKO,QAAQE,uBAAuB,kBAAkB,GAAGwE,UAAY,MAAQjF,KAAKmB,MAAMiE,OACpFpF,KAAKgB,UAAY,KACbhB,KAAKO,QAAQE,uBAAuB,sBAAsB,IAC1DT,KAAKO,QAAQE,uBAAuB,sBAAsB,GAAGoD,UAAUC,OAAO,sBAElF9D,KAAKO,QAAQE,uBAAuB,gBAAgB,GAAGsD,qBAAqB,MAAM+D,GAAYjE,UAAUG,IAAI,uBAI5GhE,KAAKwD,QACLxD,KAAK0F,QACL1F,KAAKwD,MAAMD,YAAc,GAIzBvD,KAAMgB,UAAY,KAAOhB,KAAKoB,OAAO0G,IAAmC,KAAnB9H,KAAKgB,WAC1DhB,KAAKwD,MAAQhD,SAAS0H,cAAc,SACpClI,KAAKwD,MAAM2E,IAAMnI,KAAKmB,MAAMiH,IAC5BpI,KAAKwD,MAAM6E,QAAUrI,KAAKC,SAAW,OAAS,WAH8BD,KAMvEwD,MAAM8B,iBAAiB,iBAAkB,WACd,IAAxBuC,EAAKrE,MAAMiD,WACXoB,EAAKtH,QAAQE,uBAAuB,iBAAiB,GAAGwE,UAAY4C,EAAKvG,aAAauG,EAAKrE,MAAMiD,aAR7BzG,KAavEwD,MAAM8B,iBAAiB,WAAY,WACpC,GAAMnC,GAAa0E,EAAKrE,MAAM8E,SAASrJ,OAAS4I,EAAKrE,MAAM8E,SAASC,IAAIV,EAAKrE,MAAM8E,SAASrJ,OAAS,GAAK4I,EAAKrE,MAAMiD,SAAW,CAChIoB,GAAK5E,UAAU,SAAUE,EAAY,WAfmCnD,KAmBvEwD,MAAM8B,iBAAiB,QAAS,WACjCuC,EAAKtH,QAAQE,uBAAuB,kBAAkB,GAAGwE,UAAY,yBAIrEjF,KAAKgB,UAAY,GACjBhB,KAAKwD,MAAM8B,iBAAiB,QAAS,WAC7BuC,EAAK7G,UAAY6G,EAAK/H,OAAOqB,MAAMlC,OAAS,EAC5C4I,EAAK9B,WAAW8B,EAAK7G,WAEhB6G,EAAKxG,KACVwG,EAAK9B,SAAS,GAER8B,EAAKxG,MACXwG,EAAKnC,UAKb1F,KAAKwD,MAAM8B,iBAAiB,QAAS,WAC5BuC,EAAKxG,MACNwG,EAAKnC,UAxC2D1F,KA8CvEwD,MAAM+D,OAAS5F,SAAS3B,KAAKO,QAAQE,uBAAuB,kBAAkB,GAAG4C,MAAMmF,QAAU,IA9C1BxI,KAiDvEwD,MAAMnC,KAAOrB,KAAKgB,UAAY,IAAK,EAAQhB,KAAKqB,KAEjDrB,KAAKgB,UAAY,KACjBhB,KAAKoB,OAAO0G,GAAc9H,KAAKwD,SAInCxD,KAAKwD,MAAQxD,KAAKoB,OAAO0G,GACzB9H,KAAKwD,MAAM+D,OAAS5F,SAAS3B,KAAKO,QAAQE,uBAAuB,kBAAkB,GAAG4C,MAAMmF,QAAU,IACtGxI,KAAKwD,MAAMD,YAAc,GAIzBvD,KAAKF,OAAOc,QAAS,CACrBZ,KAAKmC,IAAMnC,KAAKgB,UAAY,GAAKhB,KAAK+B,KAAK+F,GAAc9H,KAAK+B,KAAK,GACnE/B,KAAKO,QAAQsD,UAAUG,IAAI,kBAC3B,IAAIyE,GAAU,EACdzI,MAAK0D,YAAc1D,KAAKO,QAAQE,uBAAuB,wBAAwB,EAC/E,KAAK,GAAIzB,GAAI,EAAGA,EAAIgB,KAAKmC,IAAIlD,OAAQD,IACjCyJ,GAAW,MAAQzI,KAAKmC,IAAInD,GAAG,GAAK,MAExCgB,MAAK0D,YAAYuB,UAAYwD,EACxBzI,KAAKyD,WACNzD,KAAKyD,SAAW,GAEpBzD,KAAK0D,YAAYK,qBAAqB,KAAK,GAAGF,UAAUG,IAAI,uBAC5DhE,KAAK0D,YAAYL,MAAMM,UAAY,kBACnC3D,KAAK0D,YAAYL,MAAMO,gBAAkB,kBAIjB,IAAxB5D,KAAKwD,MAAMiD,WACXzG,KAAKO,QAAQE,uBAAuB,iBAAiB,GAAGwE,UAAYjF,KAAKwD,MAAMiD,SAAWzG,KAAKsB,aAAatB,KAAKwD,MAAMiD,UAAY,SAInIzG,KAAKF,OAAOO,WAAaL,KAAKC,UAC9BD,KAAKyF,OAETzF,KAAKF,OAAOO,UAAW,EAEnBL,KAAKC,UACLD,KAAK0F,WApBTlG,IAAK,OAMLyE,MAAO,WACH,GAAIyE,GAAS1I,IAqBjB,IAAIA,KAAKwD,MAAMmF,OAAQ,CAAA,GACnB3I,KAAKqF,OAAOxB,UAAUC,OAAO,gBAC7B9D,KAAKqF,OAAOxB,UAAUG,IAAI,iBAC1BhE,KAAKqF,OAAOJ,UAAY,GACxB2D,WAAW,WACPF,EAAKrD,OAAOJ,UAAY,gDACzB,KAGCjF,KAAKF,OAAOa,MACZ,IAAK,GAAI3B,GAAI,EAAGA,EAAIY,EAASX,OAAQD,IAC7BgB,MAAQJ,EAASZ,IACjBY,EAASZ,GAAG0G,OAIxB1F,MAAKwD,MAAMiC,OACPzF,KAAKiH,YACLD,cAAchH,KAAKiH,YAEvBjH,KAAKiH,WAAa4B,YAAY,WAC1BH,EAAKzF,UAAU,SAAUyF,EAAKlF,MAAMD,YAAcmF,EAAKlF,MAAMiD,SAAU,SACnEiC,EAAK5I,OAAOc,SACZ8H,EAAKpF,YAEToF,EAAKnI,QAAQE,uBAAuB,iBAAiB,GAAGwE,UAAYyD,EAAKpH,aAAaoH,EAAKlF,MAAMD,cAClG,SAfP/D,IAAK,QAMLyE,MAAO,WACH,GAAI6E,GAAS9I,IAgBZA,MAAKwD,MAAMmF,SACZ3I,KAAKqF,OAAOxB,UAAUC,OAAO,iBAC7B9D,KAAKqF,OAAOxB,UAAUG,IAAI,gBAC1BhE,KAAKqF,OAAOJ,UAAY,GACxB2D,WAAW,WACPE,EAAKzD,OAAOJ,UAAY,+CACzB,KACHjF,KAAKwD,MAAMkC,QACXsB,cAAchH,KAAKiH,iBA1hBzBpH,IA+hBgB,oBAAXkJ,SAAoD,mBAAnBA,QAAOC,QAC/CD,OAAOC,QAAUnJ,EAGjByG,OAAOzG,QAAUA","file":"APlayer.min.js","sourcesContent":["/**\n * APlayer constructor function\n *\n * @param {Object} option - See README\n * @constructor\n */\n(() => {\n    let APlayers = [];\n\n    class APlayer {\n        constructor (option) {\n\n            this.isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n            // compatibility: some mobile browsers don't suppose autoplay\n            if (this.isMobile) {\n                option.autoplay = false;\n            }\n\n            // default options\n            const defaultOption = {\n                element: document.getElementsByClassName('aplayer')[0],\n                narrow: false,\n                autoplay: false,\n                mutex: true,\n                showlrc: false,\n                theme: '#b7daff'\n            };\n            for (let defaultKey in defaultOption) {\n                if (defaultOption.hasOwnProperty(defaultKey) && !option.hasOwnProperty(defaultKey)) {\n                    option[defaultKey] = defaultOption[defaultKey];\n                }\n            }\n\n            // multiple music\n            this.playIndex = Object.prototype.toString.call(option.music) === '[object Array]' ? 0 : -1;\n\n            this.option = option;\n            this.audios = [];\n            this.loop = true;\n\n            /**\n             * Parse second to 00:00 format\n             *\n             * @param {Number} second\n             * @return {String} 00:00 format\n             */\n            this.secondToTime =  (second) => {\n                const add0 = (num) => {\n                    return num < 10 ? '0' + num : '' + num;\n                };\n                const min = parseInt(second / 60);\n                const sec = parseInt(second - min * 60);\n                return add0(min) + ':' + add0(sec);\n            };\n\n            /**\n             * Parse lrc, suppose multiple time tag\n             *\n             * @param {Array} arr - Format:\n             * [mm:ss.xx]lyric\n             * [mm:ss.xxx]lyric\n             * [mm:ss.xx][mm:ss.xx][mm:ss.xx]lyric\n             *\n             * @return {Array} [[[time, text], [time, text], [time, text], ...], [[time, text], [time, text], [time, text], ...], ...]\n             */\n            this.parseLrc =  (arr) => {\n                let lrcs = [];\n                for (let k = 0; k < arr.length; k++) {\n                    const lyric = arr[k].split('\\n');\n                    let lrc = [];\n                    const lyricLen = lyric.length;\n                    for (let i = 0; i < lyricLen; i++) {\n                        // match lrc time\n                        const lrcTimes = lyric[i].match(/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/g);\n                        // match lrc text\n                        const lrcText = lyric[i].replace(/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/g, '').replace(/^\\s+|\\s+$/g, '');\n\n                        if (lrcTimes != null) {\n                            // handle multiple time tag\n                            const timeLen = lrcTimes.length;\n                            for (let j = 0; j < timeLen; j++) {\n                                const oneTime = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/.exec(lrcTimes[j]);\n                                const lrcTime = (oneTime[1]) * 60 + parseInt(oneTime[2]) + parseInt(oneTime[3]) / ((oneTime[3] + '').length === 2 ? 100 : 1000);\n                                lrc.push([lrcTime, lrcText]);\n                            }\n                        }\n                    }\n                    // sort by time\n                    lrc.sort((a, b) => a[0] - b[0]);\n                    lrcs.push(lrc);\n                }\n                return lrcs;\n            };\n\n            /**\n             * Update progress bar, including loading progress bar and play progress bar\n             *\n             * @param {String} type - Point out which bar it is, should be played loaded or volume\n             * @param {Number} percentage\n             * @param {String} direction - Point out the direction of this bar, Should be height or width\n             */\n            this.updateBar = (type, percentage, direction) => {\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this[type + 'Bar'].style[direction] = percentage * 100 + '%';\n            };\n\n            /**\n             * Update lrc\n             *\n             * @param {Number} currentTime\n             */\n            this.updateLrc = (currentTime) => {\n                if (typeof(currentTime) === 'undefined') {\n                    currentTime = this.audio.currentTime;\n                }\n                if (this.lrcIndex > this.lrc.length - 1 || currentTime < this.lrc[this.lrcIndex][0] || (!this.lrc[this.lrcIndex + 1] || currentTime >= this.lrc[this.lrcIndex + 1][0])) {\n                    for (let i = 0; i < this.lrc.length; i++) {\n                        if (currentTime >= this.lrc[i][0] && (!this.lrc[i + 1] || currentTime < this.lrc[i + 1][0])) {\n                            this.lrcIndex = i;\n                            this.lrcContents.style.transform = 'translateY(' + -this.lrcIndex * 20 + 'px)';\n                            this.lrcContents.style.webkitTransform = 'translateY(' + -this.lrcIndex * 20 + 'px)';\n                            this.lrcContents.getElementsByClassName('aplayer-lrc-current')[0].classList.remove('aplayer-lrc-current');\n                            this.lrcContents.getElementsByTagName('p')[i].classList.add('aplayer-lrc-current');\n                        }\n                    }\n                }\n            };\n        }\n\n        /**\n         * AutoLink initialization function\n         */\n        init () {\n            this.element = this.option.element;\n            this.music = this.playIndex > -1 ? this.option.music[this.playIndex] : this.option.music;\n\n            let i;\n            // parser lrc\n            if (this.option.showlrc) {\n                let lrcs = [];\n                for (i = 0; i < this.element.getElementsByClassName('aplayer-lrc-content').length; i++) {\n                    lrcs.push(this.element.getElementsByClassName('aplayer-lrc-content')[i].innerHTML);\n                }\n                this.lrcs = this.parseLrc(lrcs);\n            }\n\n            // fill in HTML\n            let eleHTML = `\n                <div class=\"aplayer-pic\">\n                    <div class=\"aplayer-button aplayer-play\">\n                        <i class=\"demo-icon aplayer-icon-play\"></i>\n                    </div>\n                </div>\n                <div class=\"aplayer-info\">\n                    <div class=\"aplayer-music\">\n                        <span class=\"aplayer-title\"></span>\n                        <span class=\"aplayer-author\"></span>\n                    </div>\n                    <div class=\"aplayer-lrc\">\n                        <div class=\"aplayer-lrc-contents\" style=\"transform: translateY(0); -webkit-transform: translateY(0);\"></div>\n                    </div>\n                    <div class=\"aplayer-controller\">\n                        <div class=\"aplayer-bar-wrap\">\n                            <div class=\"aplayer-bar\">\n                                <div class=\"aplayer-loaded\" style=\"width: 0\"></div>\n                                <div class=\"aplayer-played\" style=\"width: 0; background: ` + this.option.theme + `;\">\n                                    <span class=\"aplayer-thumb\" style=\"border: 1px solid ` + this.option.theme + `;\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"aplayer-time\">\n                             - <span class=\"aplayer-ptime\">00:00</span> / <span class=\"aplayer-dtime\">00:00</span>\n                            <div class=\"aplayer-volume-wrap\">\n                                <i class=\"demo-icon aplayer-icon-volume-down\"></i>\n                                <div class=\"aplayer-volume-bar-wrap\">\n                                    <div class=\"aplayer-volume-bar\">\n                                        <div class=\"aplayer-volume\" style=\"height: 80%; background: ` + this.option.theme + `;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <i class=\"demo-icon aplayer-icon-loop\"></i>` + (this.playIndex > -1 ? `<i class=\"demo-icon aplayer-icon-menu\"></i>` : ``) + `\n                        </div>\n                    </div>\n                </div>`;\n            if (this.playIndex > -1) {\n                eleHTML += `\n                <div class=\"aplayer-list\">\n                    <ol>`;\n                for (i = 0; i < this.option.music.length; i++) {\n                    eleHTML += `\n                        <li>\n                            <span class=\"aplayer-list-cur\" style=\"background: ` + this.option.theme + `;\"></span>\n                            <span class=\"aplayer-list-index\">` + (i + 1) + `</span>\n                            <span class=\"aplayer-list-title\">` + this.option.music[i].title + `</span>\n                            <span class=\"aplayer-list-author\">` + this.option.music[i].author + `</span>\n                        </li>`\n                }\n                eleHTML += `\n                    </ol>\n                </div>`\n            }\n            this.element.innerHTML = eleHTML;\n\n            // switch to narrow style\n            if (this.option.narrow) {\n                this.element.classList.add('aplayer-narrow');\n            }\n\n            // play and pause button\n            this.button = this.element.getElementsByClassName('aplayer-button')[0];\n            this.button.addEventListener('click', (e) => {\n                if (this.button.classList.contains('aplayer-play')) {\n                   this.play();\n                }\n                else if (this.button.classList.contains('aplayer-pause')) {\n                    this.pause();\n                }\n            });\n\n            // click music list: change music\n            if (this.playIndex > -1) {\n                const listItem = this.element.getElementsByClassName('aplayer-list')[0].getElementsByTagName('li');\n                for (let i = 0; i < this.option.music.length; i++) {\n                    listItem[i].addEventListener('click', () => {\n                        const musicIndex = parseInt(listItem[i].getElementsByClassName('aplayer-list-index')[0].innerHTML) - 1;\n                        if (musicIndex !== this.playIndex) {\n                            this.setMusic(musicIndex);\n                        }\n                        this.play();\n                    });\n                }\n            }\n\n            // control play progress\n            this.playedBar = this.element.getElementsByClassName('aplayer-played')[0];\n            this.loadedBar = this.element.getElementsByClassName('aplayer-loaded')[0];\n            this.thumb = this.element.getElementsByClassName('aplayer-thumb')[0];\n            this.bar = this.element.getElementsByClassName('aplayer-bar')[0];\n            let barWidth;\n            this.bar.addEventListener('click', (event) => {\n                const e = event || window.event;\n                barWidth = this.bar.clientWidth;\n                const percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n                this.updateBar('played', percentage, 'width');\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n                this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n            });\n\n            this.thumb.addEventListener('mouseover', () => {\n                this.thumb.style.background = this.option.theme;\n            });\n            this.thumb.addEventListener('mouseout', () => {\n                this.thumb.style.background = '#fff';\n            });\n\n            const thumbMove = (event) => {\n                const e = event || window.event;\n                let percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this.updateBar('played', percentage, 'width');\n                if (this.option.showlrc) {\n                    this.updateLrc(parseFloat(this.playedBar.style.width) / 100 * this.audio.duration);\n                }\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n            };\n\n            const thumbUp = () => {\n                document.removeEventListener('mouseup', thumbUp);\n                document.removeEventListener('mousemove', thumbMove);\n                this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n                this.play();\n            };\n\n            this.thumb.addEventListener('mousedown', () => {\n                barWidth = this.bar.clientWidth;\n                clearInterval(this.playedTime);\n                document.addEventListener('mousemove', thumbMove);\n                document.addEventListener('mouseup', thumbUp);\n            });\n\n            // control volume\n            this.volumeBar = this.element.getElementsByClassName('aplayer-volume')[0];\n            const volumeBarWrap = this.element.getElementsByClassName('aplayer-volume-bar')[0];\n            const volumeicon = this.element.getElementsByClassName('aplayer-time')[0].getElementsByTagName('i')[0];\n            const barHeight = 35;\n            this.element.getElementsByClassName('aplayer-volume-bar-wrap')[0].addEventListener('click', (event) => {\n                const e = event || window.event;\n                let percentage = (barHeight - e.clientY + getElementViewTop(volumeBarWrap)) / barHeight;\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this.updateBar('volume', percentage, 'height');\n                this.audio.volume = percentage;\n                if (this.audio.muted) {\n                    this.audio.muted = false;\n                }\n                if (percentage === 1) {\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-up';\n                }\n                else {\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-down';\n                }\n            });\n            volumeicon.addEventListener('click', () => {\n                if (this.audio.muted) {\n                    this.audio.muted = false;\n                    volumeicon.className = this.audio.volume === 1 ? 'demo-icon aplayer-icon-volume-up' : 'demo-icon aplayer-icon-volume-down';\n                    this.updateBar('volume', this.audio.volume, 'height');\n                }\n                else {\n                    this.audio.muted = true;\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-off';\n                    this.updateBar('volume', 0, 'height');\n                }\n            });\n\n            // get element's view position\n            function getElementViewLeft(element) {\n                let actualLeft = element.offsetLeft;\n                let current = element.offsetParent;\n                let elementScrollLeft;\n                while (current !== null) {\n                    actualLeft += current.offsetLeft;\n                    current = current.offsetParent;\n                }\n                elementScrollLeft = document.body.scrollLeft + document.documentElement.scrollLeft;\n                return actualLeft - elementScrollLeft;\n            }\n\n            function getElementViewTop(element) {\n                let actualTop = element.offsetTop;\n                let current = element.offsetParent;\n                let elementScrollTop;\n                while (current !== null) {\n                    actualTop += current.offsetTop;\n                    current = current.offsetParent;\n                }\n                elementScrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n                return actualTop - elementScrollTop;\n            }\n\n            // loop control\n            const loopEle = this.element.getElementsByClassName('aplayer-icon-loop')[0];\n            loopEle.addEventListener('click', () => {\n                if (this.loop) {\n                    loopEle.classList.add('aplayer-noloop');\n                    this.loop = false;\n                    this.audio.loop = this.playIndex > -1 ? false : this.loop;\n                }\n                else {\n                    loopEle.classList.remove('aplayer-noloop');\n                    this.loop = true;\n                    this.audio.loop = this.playIndex > -1 ? false : this.loop;\n                }\n            });\n\n            // toggle menu control\n            if (this.playIndex > -1) {\n                this.element.getElementsByClassName('aplayer-icon-menu')[0].addEventListener('click', () => {\n                    const list = this.element.getElementsByClassName('aplayer-list')[0];\n                    if (!list.classList.contains('aplayer-list-hide')) {\n                        list.classList.add('aplayer-list-hide');\n                    }\n                    else {\n                        list.classList.remove('aplayer-list-hide');\n                    }\n                });\n            }\n\n            this.setMusic(0);\n\n            APlayers.push(this);\n        };\n\n        /**\n         * Set music\n         */\n        setMusic (index) {\n            // get this.music\n            if (this.playIndex > -1 && typeof(index) !== 'undefined') {\n                this.playIndex = index;\n            }\n            const indexMusic = this.playIndex;\n            this.music = this.playIndex > -1 ? this.option.music[indexMusic] : this.option.music;\n\n            // set html\n            if (this.music.pic) {\n                this.element.getElementsByClassName('aplayer-pic')[0].style.backgroundImage = 'url(' + encodeURI(this.music.pic) + ')';\n            }\n            this.element.getElementsByClassName('aplayer-title')[0].innerHTML = this.music.title;\n            this.element.getElementsByClassName('aplayer-author')[0].innerHTML = ' - ' + this.music.author;\n            if (this.playIndex > -1) {\n                if (this.element.getElementsByClassName('aplayer-list-light')[0]) {\n                    this.element.getElementsByClassName('aplayer-list-light')[0].classList.remove('aplayer-list-light');\n                }\n                this.element.getElementsByClassName('aplayer-list')[0].getElementsByTagName('li')[indexMusic].classList.add('aplayer-list-light');\n            }\n\n            // set the previous audio object\n            if (this.audio) {\n                this.pause();\n                this.audio.currentTime = 0;\n            }\n\n            // get this audio object\n            if ((this.playIndex > -1 && !this.audios[indexMusic]) || this.playIndex === -1) {\n                this.audio = document.createElement(\"audio\");\n                this.audio.src = this.music.url;\n                this.audio.preload = this.isMobile ? 'none' : 'metadata';\n\n                // show audio time\n                this.audio.addEventListener('durationchange', () => {\n                    if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                        this.element.getElementsByClassName('aplayer-dtime')[0].innerHTML = this.secondToTime(this.audio.duration);\n                    }\n                });\n\n                // show audio loaded bar\n                this.audio.addEventListener('progress', () => {\n                    const percentage = this.audio.buffered.length ? this.audio.buffered.end(this.audio.buffered.length - 1) / this.audio.duration : 0;\n                    this.updateBar('loaded', percentage, 'width');\n                });\n\n                // audio download error\n                this.audio.addEventListener('error', () => {\n                    this.element.getElementsByClassName('aplayer-author')[0].innerHTML = ' - ' + 'Error happens ╥﹏╥';\n                });\n\n                // multiple music play\n                if (this.playIndex > -1) {\n                    this.audio.addEventListener('ended', () => {\n                        if (this.playIndex < this.option.music.length - 1) {\n                            this.setMusic(++this.playIndex);\n                        }\n                        else if (this.loop) {\n                            this.setMusic(0);\n                        }\n                        else if (!this.loop) {\n                            this.pause();\n                        }\n                    });\n                }\n                else {\n                    this.audio.addEventListener('ended', () => {\n                        if (!this.loop) {\n                            this.pause();\n                        }\n                    });\n                }\n\n                // control volume\n                this.audio.volume = parseInt(this.element.getElementsByClassName('aplayer-volume')[0].style.height) / 100;\n\n                // loop\n                this.audio.loop = this.playIndex > -1 ? false : this.loop;\n\n                if (this.playIndex > -1) {\n                    this.audios[indexMusic] = this.audio;\n                }\n            }\n            else {\n                this.audio = this.audios[indexMusic];\n                this.audio.volume = parseInt(this.element.getElementsByClassName('aplayer-volume')[0].style.height) / 100;\n                this.audio.currentTime = 0;\n            }\n\n            // fill in lrc\n            if (this.option.showlrc) {\n                this.lrc = this.playIndex > -1 ? this.lrcs[indexMusic] : this.lrcs[0];\n                this.element.classList.add('aplayer-withlrc');\n                let lrcHTML = '';\n                this.lrcContents = this.element.getElementsByClassName('aplayer-lrc-contents')[0];\n                for (let i = 0; i < this.lrc.length; i++) {\n                    lrcHTML += '<p>' + this.lrc[i][1] + '</p>';\n                }\n                this.lrcContents.innerHTML = lrcHTML;\n                if (!this.lrcIndex) {\n                    this.lrcIndex = 0;\n                }\n                this.lrcContents.getElementsByTagName('p')[0].classList.add('aplayer-lrc-current');\n                this.lrcContents.style.transform = 'translateY(0px)';\n                this.lrcContents.style.webkitTransform = 'translateY(0px)';\n            }\n\n            // set duration time\n            if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                this.element.getElementsByClassName('aplayer-dtime')[0].innerHTML = this.audio.duration ? this.secondToTime(this.audio.duration) : '00:00';\n            }\n\n            // autoplay\n            if (this.option.autoplay && !this.isMobile) {\n                this.play();\n            }\n            this.option.autoplay = true;  // autoplay next music\n\n            if (this.isMobile) {\n                this.pause();\n            }\n        };\n\n        /**\n         * Play music\n         */\n        play () {\n            if (this.audio.paused) {\n                this.button.classList.remove('aplayer-play');\n                this.button.classList.add('aplayer-pause');\n                this.button.innerHTML = '';\n                setTimeout(() => {\n                    this.button.innerHTML = '<i class=\"demo-icon aplayer-icon-pause\"></i>';\n                }, 100);\n\n                // pause other players (Thanks @Aprikyblue)\n                if (this.option.mutex) {\n                    for (let i = 0; i < APlayers.length; i++) {\n                        if (this != APlayers[i]) {\n                            APlayers[i].pause();\n                        }\n                    }\n                }\n                this.audio.play();\n                if (this.playedTime) {\n                    clearInterval(this.playedTime);\n                }\n                this.playedTime = setInterval(() => {\n                    this.updateBar('played', this.audio.currentTime / this.audio.duration, 'width');\n                    if (this.option.showlrc) {\n                        this.updateLrc();\n                    }\n                    this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(this.audio.currentTime);\n                }, 100);\n            }\n        };\n\n        /**\n         * Pause music\n         */\n        pause () {\n            if (!this.audio.paused) {\n                this.button.classList.remove('aplayer-pause');\n                this.button.classList.add('aplayer-play');\n                this.button.innerHTML = '';\n                setTimeout(() => {\n                    this.button.innerHTML = '<i class=\"demo-icon aplayer-icon-play\"></i>';\n                }, 100);\n                this.audio.pause();\n                clearInterval(this.playedTime);\n            }\n        };\n    }\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = APlayer\n    }\n    else {\n        window.APlayer = APlayer;\n    }\n})();"],"sourceRoot":"/source/"}