(function(){"Alchemy.js is a graph drawing application for the web.\nCopyright (C) 2014  GraphAlchemist, Inc.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\nlets";var a,b,c=function(a,b){return function(){return a.apply(b,arguments)}},d=[].slice;a=function(){function a(){this.allEdges=c(this.allEdges,this),this.allNodes=c(this.allNodes,this),this.getEdges=c(this.getEdges,this),this.getNodes=c(this.getNodes,this),this.begin=c(this.begin,this),this.setState=c(this.setState,this),this.getState=c(this.getState,this),this.version="0.2.2",this.layout={},this.interactions={},this.utils={},this.visControls={},this.styles={},this.models={},this.drawing={},this.editor={},this.log={},this.state={interactions:"default",layout:"default",filters:{edges:{},nodes:{}}}}return a.prototype.getState=function(){return null!=this.state.key?this.state.key:void 0},a.prototype.setState=function(a,b){return this.state.key=b},a.prototype.begin=function(a){return this.conf=_.assign({},alchemy.defaults,a),"string"==typeof alchemy.conf.dataSource?d3.json(alchemy.conf.dataSource,alchemy.startGraph):"object"==typeof alchemy.conf.dataSource?alchemy.startGraph(alchemy.conf.dataSource):void 0},a.prototype.getNodes=function(){var a,b,c,e,f,g,h;if(a=arguments[0],b=2<=arguments.length?d.call(arguments,1):[]){for(b.push(a),e=_.union(b),f=[],g=0,h=e.length;h>g;g++)c=e[g],f.push(alchemy._nodes[c].properties);return f}return[this._nodes[a].properties]},a.prototype.getEdges=function(a,b){var c,d,e;return null==a&&(a=null),null==b&&(b=null),null!=a&&null!=b?(d=""+a+"-"+b,c=this._edges[d],[c.properties]):null!=a&&null==b?(e=_.map(this._edges,function(b){return b.properties.source===a||b.properties.target===a?b.properties:void 0}),_.compact(e)):void 0},a.prototype.allNodes=function(){return _.map(this._nodes,function(a){return a.properties})},a.prototype.allEdges=function(){return _.map(this._edges,function(a){return a.properties})},a}(),b={},"undefined"!=typeof module&&module.exports?module.exports=new a:this.alchemy=new a}).call(this),function(){alchemy.clustering=function(){function a(){var a,b,c,d,e,f;a=alchemy._nodes,this.clusterKey=alchemy.conf.clusterKey,this.identifyClusters(),b=-500,f=function(b){return a[b.source.id].properties[this.clusterKey]===a[b.target.id].properties[this.clusterKey]?1:1},c=function(){return.7},e=function(b){return a=alchemy._nodes,a[b.source.id].properties.root||a[b.target.id].properties.root?300:a[b.source.id].properties[this.clusterKey]===a[b.target.id].properties[this.clusterKey]?10:600},d=function(a){return 8*a},this.layout={charge:b,linkStrength:function(a){return f(a)},friction:function(){return c()},linkDistancefn:function(a){return e(a)},gravity:function(a){return d(a)}}}return a.prototype.identifyClusters=function(){var a,b,c;return b=alchemy._nodes,a=_.uniq(_.map(_.values(b),function(a){return a.properties[""+alchemy.conf.clusterKey]})),this.clusterMap=_.zipObject(a,function(){c=[];for(var b=0,d=a.length;d>=0?d>=b:b>=d;d>=0?b++:b--)c.push(b);return c}.apply(this))},a.prototype.getClusterColour=function(a){var b;return b=this.clusterMap[a]%alchemy.conf.clusterColours.length,alchemy.conf.clusterColours[b]},a.prototype.edgeGradient=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o;for(c=d3.select(""+alchemy.conf.divSelector+" svg"),b={},j=alchemy._nodes,n=_.map(a,function(a){return a._d3}),l=0,m=n.length;m>l;l++)if(d=n[l],!j[d.source.id].properties.root&&!j[d.target.id].properties.root&&j[d.source.id].properties[this.clusterKey]!==j[d.target.id].properties[this.clusterKey]&&j[d.target.id].properties[this.clusterKey]!==j[d.source.id].properties[this.clusterKey]){if(h=j[d.source.id].properties[this.clusterKey]+"-"+j[d.target.id].properties[this.clusterKey],h in b)continue;h in b||(k=this.getClusterColour(j[d.target.id].properties[this.clusterKey]),e=this.getClusterColour(j[d.source.id].properties[this.clusterKey]),b[h]={startColour:k,endColour:e})}o=[];for(i in b)g="cluster-gradient-"+i,f=c.append("svg:linearGradient").attr("id",g),f.append("svg:stop").attr("offset","0%").attr("stop-color",b[i].startColour),o.push(f.append("svg:stop").attr("offset","100%").attr("stop-color",b[i].endColour));return o},a}(),alchemy.clusterControls={init:function(){var a;return a="<input class='form-control form-inline' id='cluster-key' placeholder=\"Cluster Key\"></input>",d3.select("#clustering-container").append("div").attr("id","cluster-key-container").attr("class","property form-inline form-group").html(a).style("display","none"),d3.select("#cluster_control_header").on("click",function(){var a,b;return b=d3.select("#cluster-key-container"),a=b.style("display"),b.style("display",function(){return"block"===a?"none":"block"}),"none"===d3.select("#cluster-key-container").style("display")?d3.select("#cluster-arrow").attr("class","fa fa-2x fa-caret-right"):d3.select("#cluster-arrow").attr("class","fa fa-2x fa-caret-down")}),d3.select("#cluster-key").on("keydown",function(){return"Enter"===d3.event.keyIdentifier?(alchemy.conf.cluster=!0,alchemy.conf.clusterKey=this.value,alchemy.generateLayout()):void 0})}}}.call(this),function(){alchemy.controlDash={init:function(){var a;return this.dashIsShown()?(a=alchemy.conf.divSelector,d3.select(""+a).append("div").attr("id","control-dash-wrapper").attr("class","col-md-4 initial"),d3.select("#control-dash-wrapper").append("i").attr("id","dash-toggle").attr("class","fa fa-flask col-md-offset-12"),d3.select("#control-dash-wrapper").append("div").attr("id","control-dash").attr("class","col-md-12"),d3.select("#dash-toggle").on("click",alchemy.interactions.toggleControlDash),alchemy.controlDash.zoomCtrl(),alchemy.controlDash.search(),alchemy.controlDash.filters(),alchemy.controlDash.stats(),alchemy.controlDash.clustering()):void 0},search:function(){return alchemy.conf.search?(d3.select("#control-dash").append("div").attr("id","search").html("<div class='input-group'>\n    <input class='form-control' placeholder='Search'>\n    <i class='input-group-addon search-icon'><span class='fa fa-search fa-1x'></span></i>\n</div> "),alchemy.search.init()):void 0},zoomCtrl:function(){return alchemy.conf.zoomControls?(d3.select("#control-dash-wrapper").append("div").attr("id","zoom-controls").attr("class","col-md-offset-12").html("<button id='zoom-reset'  class='btn btn-defualt btn-primary'><i class='fa fa-crosshairs fa-lg'></i></button> <button id='zoom-in'  class='btn btn-defualt btn-primary'><i class='fa fa-plus'></i></button> <button id='zoom-out' class='btn btn-default btn-primary'><i class='fa fa-minus'></i></button>"),d3.select("#zoom-in").on("click",function(){return alchemy.interactions.clickZoom("in")}),d3.select("#zoom-out").on("click",function(){return alchemy.interactions.clickZoom("out")}),d3.select("#zoom-reset").on("click",function(){return alchemy.interactions.clickZoom("reset")})):void 0},filters:function(){return alchemy.conf.nodeFilters||alchemy.conf.edgeFilters?(d3.select("#control-dash").append("div").attr("id","filters"),alchemy.filters.init()):void 0},stats:function(){var a;return alchemy.conf.nodeStats||alchemy.conf.edgeStats?(a='<div id = "stats-header" data-toggle="collapse" data-target="#stats #all-stats">\n<h3>\n    Statistics\n</h3>\n<span class = "fa fa-caret-right fa-2x"></span>\n</div>\n<div id="all-stats" class="collapse">\n    <ul class = "list-group" id="node-stats"></ul>\n    <ul class = "list-group" id="rel-stats"></ul>  \n</div>',d3.select("#control-dash").append("div").attr("id","stats").html(a).select("#stats-header").on("click",function(){return d3.select("#all-stats").classed("in")?d3.select("#stats-header>span").attr("class","fa fa-2x fa-caret-right"):d3.select("#stats-header>span").attr("class","fa fa-2x fa-caret-down")}),alchemy.stats.init()):void 0},clustering:function(){var a;return alchemy.conf.clusterControl?(a='<div id="clustering-container">\n    <div id="cluster_control_header" data-toggle="collapse" data-target="#clustering #cluster-options">\n         <h3>Clustering</h3>\n        <span id="cluster-arrow" class="fa fa-2x fa-caret-right"></span>\n    </div>\n</div>',d3.select("#control-dash").append("div").attr("id","clustering").html(a).select("#cluster_control_header"),alchemy.clusterControls.init()):void 0},dashIsShown:function(){var a;return a=alchemy.conf,a.showEditor||a.captionToggle||a.toggleRootNodes||a.removeElement||a.clusterControl||a.nodeStats||a.edgeStats||a.edgeFilters||a.nodeFilters||a.edgesToggle||a.nodesToggle||a.search}}}.call(this),function(){alchemy.filters={init:function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p;if(alchemy.filters.show(),alchemy.conf.edgeFilters&&alchemy.filters.showEdgeFilters(),alchemy.conf.nodeFilters&&alchemy.filters.showNodeFilters(),alchemy.conf.nodeTypes){for(e=Object.keys(alchemy.conf.nodeTypes),g="",n=alchemy.conf.nodeTypes[e],h=0,k=n.length;k>h;h++)f=n[h],alchemy.state.filters.nodes[""+f]={active:!0},a=f.replace("_"," "),g+="<li class = 'list-group-item nodeType' role = 'menuitem' id='li-"+f+"' name = "+f+">"+a+"</li>";$("#node-dropdown").append(g)}if(alchemy.conf.edgeTypes){for(o=d3.selectAll(".edge")[0],i=0,l=o.length;l>i;i++)b=o[i],currentRelationshipTypes[[b].caption]=!0;for(d="",p=alchemy.conf.edgeTypes,j=0,m=p.length;m>j;j++)c=p[j],alchemy.state.filters.edges[""+c]={active:!0},a=c.replace("_"," "),d+="<li class = 'list-group-item edgeType' role = 'menuitem' id='li-"+c+"' name = "+c+">"+a+"</li>";$("#rel-dropdown").append(d)}return alchemy.conf.captionsToggle&&alchemy.filters.captionsToggle(),alchemy.conf.edgesToggle&&alchemy.filters.edgesToggle(),alchemy.conf.nodesToggle&&alchemy.filters.nodesToggle(),alchemy.filters.update()},show:function(){var a;return a='<div id = "filter-header" data-toggle="collapse" data-target="#filters form">\n    <h3>Filters</h3>\n    <span class = "fa fa-2x fa-caret-right"></span>\n</div>\n    <form class="form-inline collapse">\n    </form>',d3.select("#control-dash #filters").html(a),d3.selectAll("#filter-header").on("click",function(){return d3.select("#filters>form").classed("in")?d3.select("#filter-header>span").attr("class","fa fa-2x fa-caret-right"):d3.select("#filter-header>span").attr("class","fa fa-2x fa-caret-down")}),$("#filters form").submit(!1)},showEdgeFilters:function(){var a;return a='<div id="filter-relationships">\n     <div id="filter-rel-header" data-target = "#rel-dropdown" data-toggle="collapse">\n         <h4>\n             Edge Types\n         </h4>\n         <span class="fa fa-lg fa-caret-right"></span>\n     </div>\n     <ul id="rel-dropdown" class="collapse list-group" role="menu">\n     </ul>\n</div>\n',$("#filters form").append(a),d3.select("#filter-rel-header").on("click",function(){return d3.select("#rel-dropdown").classed("in")?d3.select("#filter-rel-header>span").attr("class","fa fa-lg fa-caret-right"):d3.select("#filter-rel-header>span").attr("class","fa fa-lg fa-caret-down")})},showNodeFilters:function(){var a;return a=' <div id="filter-nodes">\n     <div id="filter-node-header" data-target = "#node-dropdown" data-toggle="collapse">\n         <h4>\n             Node Types\n         </h4>\n         <span class="fa fa-lg fa-caret-right"></span>\n     </div>\n     <ul id="node-dropdown" class="collapse list-group" role="menu">\n     </ul>\n</div>',$("#filters form").append(a),d3.select("#filter-node-header").on("click",function(){return d3.select("#node-dropdown").classed("in")?d3.select("#filter-node-header>span").attr("class","fa fa-lg fa-caret-right"):d3.select("#filter-node-header>span").attr("class","fa fa-lg fa-caret-down")})},captionsToggle:function(){return d3.select("#filters form").append("li").attr({id:"toggle-captions","class":"list-group-item active-label toggle"}).html("Show Captions").on("click",function(){var a;return a=d3.select("g text").attr("style"),"display: block"===a?d3.selectAll("g text").attr("style","display: none"):d3.selectAll("g text").attr("style","display: block")})},edgesToggle:function(){return d3.select("#filters form").append("li").attr({id:"toggle-edges","class":"list-group-item active-label toggle"}).html("Toggle Edges").on("click",function(){return 0===d3.selectAll(".edge.hidden")[0].length?d3.selectAll(".edge").classed("hidden",!0):d3.selectAll(".edge").classed("hidden",!1)})},nodesToggle:function(){return d3.select("#filters form").append("li").attr({id:"toggle-nodes","class":"list-group-item active-label toggle"}).html("Toggle Nodes").on("click",function(){var a;return a=alchemy.conf.toggleRootNodes?".node,.edge":".node:not(.root),.edge",0===d3.selectAll(".node.hidden")[0].length?d3.selectAll(a).classed("hidden",!0):d3.selectAll(a).classed("hidden",!1)})},update:function(){var a,b;return a=function(a){var b,c,d;return d=a.attr("name"),c=!a.classed("disabled"),b=a.classed("nodeType")?"nodes":"edges",[d,b,c]},b=function(a,b,c,d){var e,f,g,h,i,j,k,l,m,n;if("object"!=typeof a){if(g=d3.selectAll("."+a),g.classed({inactive:c,highlight:d}),"nodes"===b)for(m=g.data(),i=0,k=m.length;k>i;i++)for(h=m[i],n=alchemy._nodes[h.id].adjacentEdges,j=0,l=n.length;l>j;j++)e=n[j],f=alchemy._edges[e],f.allNodesActive()||(c=!0),d3.select("[source-target='"+e+"']").classed({inactive:c,highlight:d});return"edges"===b&&g.classed({inactive:function(a){var b;return b=alchemy._edges[a.id].allNodesActive(),c||!b}}),alchemy.stats.update()}},d3.selectAll(".nodeType, .edgeType").on("mouseenter",function(){var b,c,d,e,f;return b=d3.select(this),f=a(b),e=f[0],c=f[1],d=f[2],d3.selectAll("."+e).classed("highlight",!0)}).on("mouseleave",function(){var b,c,d,e,f;return b=d3.select(this),f=a(b),e=f[0],c=f[1],d=f[2],d3.selectAll("."+e).classed("highlight",!1)}).on("click",function(){var c,d,e,f,g,h;return c=d3.select(this),h=a(c),g=h[0],d=h[1],f=h[2],e=!1,c.classed({disabled:f}),b(g,d,f,e)})}}}.call(this),function(){alchemy.interactions={edgeClick:function(a){var b;return b=alchemy.vis,b.selectAll(".edge").classed({highlight:!1}),d3.select("[source-target='"+a.id+"']").classed({highlight:!0,selected:!0}),d3.event.stopPropagation(),"function"==typeof alchemy.conf.edgeClick?alchemy.conf.edgeClick(a):void 0},nodeMouseOver:function(a){var b;return null==alchemy.conf.nodeMouseOver?null:(b=alchemy._nodes[a.id],"function"==typeof alchemy.conf.nodeMouseOver?alchemy.conf.nodeMouseOver(b):"number"==typeof alchemy.conf.nodeMouseOver?b.properties[alchemy.conf.nodeMouseOver]:void 0)},nodeMouseOut:function(a){return null!=alchemy.conf.nodeMouseOut&&"function"==typeof alchemy.conf.nodeMouseOut?alchemy.conf.nodeMouseOut(a):null},nodeMouseUp:function(){},nodeDoubleClick:function(a){var b,c,d;if(d3.event.stopPropagation(),alchemy.conf.extraDataSource&&!a.expanded&&!alchemy.conf.unexpandable.indexOf(a.type===!1)){$('<div id="loading-spi"></div>nner').show(),console.log("loading more data for "+a.id),a.expanded=!0,d3.json(alchemy.conf.extraDataSource+a.id,loadMoreNodes),c=findAllEdges(a),d=[];for(b in edges)d.push(edges[b].distance*=2);return d}},nodeClick:function(a){var b;d3.event.stopPropagation(),alchemy.vis.select("#node-"+a.id).empty()||(b=alchemy.vis.select("#node-"+a.id).classed("selected"),alchemy.vis.select("#node-"+a.id).classed("selected",!b)),"function"==typeof alchemy.conf.nodeClick&&alchemy.conf.nodeClick(a)},zoom:function(a){return null==this._zoomBehavior&&(this._zoomBehavior=d3.behavior.zoom()),this._zoomBehavior.scaleExtent(a).on("zoom",function(){return alchemy.vis.attr("transform","translate("+d3.event.translate+") scale("+d3.event.scale+")")})},clickZoom:function(a){var b,c,d,e;return e=alchemy.vis.attr("transform").match(/(-*\d+\.*\d*)/g).map(function(a){return parseFloat(a)}),c=e[0],d=e[1],b=e[2],alchemy.vis.attr("transform",function(){return"in"===a?(b<alchemy.conf.scaleExtent[1]&&(b+=.2),"translate("+c+","+d+") scale("+b+")"):"out"===a?(b>alchemy.conf.scaleExtent[0]&&(b-=.2),"translate("+c+","+d+") scale("+b+")"):"reset"===a?"translate(0,0) scale(1)":console.log("error")}),null==this._zoomBehavior&&(this._zoomBehavior=d3.behavior.zoom()),this._zoomBehavior.scale(b).translate([c,d])},toggleControlDash:function(){var a;return a=d3.select("#control-dash-wrapper").classed("off-canvas")||d3.select("#control-dash-wrapper").classed("initial"),d3.select("#control-dash-wrapper").classed({"off-canvas":!a,initial:!1,"on-canvas":a})},nodeDragStarted:function(a){return d3.event.sourceEvent.stopPropagation(),d3.select(this).classed("dragging",!0),a.fixed=!0},nodeDragged:function(a){var b,c,d,e,f,g,h,i;for(a.x+=d3.event.dx,a.y+=d3.event.dy,a.px+=d3.event.dx,a.py+=d3.event.dy,e=d3.select(this),e.attr("transform","translate("+a.x+", "+a.y+")"),c=alchemy._nodes[e.datum().id].adjacentEdges,b=new alchemy.drawing.DrawEdges,i=[],g=0,h=c.length;h>g;g++)d=c[g],f=d3.select("g.edge[source-target='"+d+"']"),i.push(b.updateEdge(f));return i},nodeDragended:function(){return d3.select(this).classed({dragging:!1}),alchemy.conf.forceLocked?void 0:alchemy.force.start()},deselectAll:function(){var a;if(null!=(a=d3.event)?!a.defaultPrevented:!0)return alchemy.vis.selectAll(".node, .edge").classed("selected highlight",!1),d3.select(".alchemy svg").classed({"highlight-active":!1}),alchemy.conf.showEditor===!0&&alchemy.modifyElements.nodeEditorClear(),alchemy.vis.selectAll("line.edge").classed("highlighted connected unconnected",!1),alchemy.vis.selectAll("g.node,circle,text").classed("selected unselected neighbor unconnected connecting",!1),alchemy.conf.deselectAll?alchemy.conf.deselectAll():void 0}}}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.Layout=function(){function b(){this.linkDistancefn=a(this.linkDistancefn,this),this.tick=a(this.tick,this),this.collide=a(this.collide,this),this.linkStrength=a(this.linkStrength,this),this.gravity=a(this.gravity,this);var b,c;b=alchemy.conf,c=alchemy._nodes,this.k=Math.sqrt(Math.log(_.size(alchemy._nodes))/(b.graphWidth()*b.graphHeight())),this._clustering=new alchemy.clustering,this.d3NodeInternals=_.keys(alchemy._nodes),b.cluster?(this._charge=function(){return this._clustering.layout.charge},this._linkStrength=function(a){return this._clustering.layout.linkStrength(a)}):(this._charge=function(){return-10/this.k},this._linkStrength=function(a){return c[a.source.id].properties.root||c[a.target.id].properties.root?1:.9}),b.cluster?this._linkDistancefn=function(a){return this._clustering.layout.linkDistancefn(a)}:"default"===b.linkDistancefn?this._linkDistancefn=function(){return 1/(50*this.k)}:"number"==typeof b.linkDistancefn?this._linkDistancefn=function(){return b.linkDistancefn}:"function"==typeof b.linkDistancefn&&(this._linkDistancefn=function(a){return b.linkDistancefn(a)})}return b.prototype.gravity=function(){return alchemy.conf.cluster?this._clustering.layout.gravity(this.k):50*this.k},b.prototype.linkStrength=function(a){return this._linkStrength(a)},b.prototype.friction=function(){return alchemy.conf.cluster?.7:.9},b.prototype.collide=function(a){var b,c,d,e,f,g;return a=a._d3,b=alchemy.conf,g=2*(a.r+a["stroke-width"])+b.nodeOverlap,c=a.x-g,d=a.x+g,e=a.y-g,f=a.y+g,function(b,h,i,j,k){var l,m,n;return b.point&&b.point!==a&&(m=a.x-Math.abs(b.point.x),n=a.y-b.point.y,l=Math.sqrt(m*m+n*n),g=g,g>l&&(l=(l-g)/l*alchemy.conf.alpha,a.x-=m*=l,a.y-=n*=l,b.point.x+=m,b.point.y+=n)),h>d||c>j||i>f||e>k}},b.prototype.tick=function(){var a,b,c,d,e;if(alchemy.conf.collisionDetection)for(b=d3.geom.quadtree(this.d3NodeInternals),e=_.values(alchemy._nodes),c=0,d=e.length;d>c;c++)a=e[c],b.visit(this.collide(a));return alchemy.node.attr("transform",function(a){return"translate("+a.x+","+a.y+")"}),null==this.drawEdge&&(this.drawEdge=new alchemy.drawing.DrawEdge),this.drawEdge.styleText(alchemy.edge),this.drawEdge.styleLink(alchemy.edge)},b.prototype.positionRootNodes=function(){var a,b,c,d,e,f,g,h,i,j;if(a=alchemy.conf,b={width:a.graphWidth(),height:a.graphHeight()},e=_.filter(alchemy._nodes,function(a){return a.properties.root}),1!==e.length){for(d=0,j=[],f=0,g=e.length;g>f;f++)c=e[f],d++,c._d3.x=b.width/Math.sqrt(e.length*d),c._d3.y=b.height/2,j.push(c._d3.fixed=!0);return j}c=e[0],h=[b.width/2,b.width/2],c._d3.x=h[0],c._d3.px=h[1],i=[b.height/2,b.height/2],c._d3.y=i[0],c._d3.py=i[1],c._d3.fixed=!0},b.prototype.chargeDistance=function(){return 500},b.prototype.linkDistancefn=function(a){return this._linkDistancefn(a)},b.prototype.charge=function(){return this._charge()},b}(),alchemy.generateLayout=function(a){var b;return null==a&&(a=!1),b=alchemy.conf,alchemy.layout=new alchemy.Layout,alchemy.force=d3.layout.force().size([b.graphWidth(),b.graphHeight()]).nodes(_.map(alchemy._nodes,function(a){return a._d3})).links(_.map(alchemy._edges,function(a){return a._d3})),alchemy.force.charge(alchemy.layout.charge()).linkDistance(function(a){return alchemy.layout.linkDistancefn(a)}).theta(1).gravity(alchemy.layout.gravity()).linkStrength(function(a){return alchemy.layout.linkStrength(a)}).friction(alchemy.layout.friction()).chargeDistance(alchemy.layout.chargeDistance()),alchemy.updateGraph()}}.call(this),function(){}.call(this),function(){alchemy.search={init:function(){var a;return a=d3.select("#search input"),a.on("keyup",function(){var b;return b=a[0][0].value.toLowerCase(),d3.selectAll(".node").classed("inactive",!1),d3.selectAll("text").attr("style",function(){return""!==b?"display: inline;":void 0}),d3.selectAll(".node").classed("inactive",function(a){var c,d;return c=d3.select(this),"contains"===alchemy.conf.searchMethod&&(d=c.text().toLowerCase().indexOf(b)<0),"begins"===alchemy.conf.searchMethod&&(d=0!==c.text().toLowerCase().indexOf(b)),d?d3.selectAll("[source-target*='"+a.id+"']").classed("inactive",d):d3.selectAll("[source-target*='"+a.id+"']").classed("inactive",function(a){var b,c,d;return b=[a.source.id,a.target.id],c=d3.select("#node-"+b[0]).classed("inactive"),d=d3.select("#node-"+b[1]).classed("inactive"),d||c}),d})})}}}.call(this),function(){alchemy.startGraph=function(a){var b,c,d,e,f,g;return c=alchemy.conf,d3.select(c.divSelector).empty()&&console.warn(alchemy.utils.warnings.divWarning()),a||alchemy.utils.warnings.dataWarning(),alchemy._nodes={},alchemy._edges={},a.nodes.forEach(function(a){return alchemy._nodes[a.id]=new alchemy.models.Node(a)}),a.edges.forEach(function(a){var b;return b=new alchemy.models.Edge(a),alchemy._edges[b.id]=b}),alchemy.vis=d3.select(c.divSelector).attr("style","width:"+c.graphWidth()+"px; height:"+c.graphHeight()+"px").append("svg").attr("xmlns","http://www.w3.org/2000/svg").attr("pointer-events","all").on("dblclick.zoom",null).on("click",alchemy.interactions.deselectAll).call(alchemy.interactions.zoom(c.scaleExtent)).append("g").attr("transform","translate("+c.initialTranslate+") scale("+c.initialScale+")"),f=new alchemy.editor.Interactions,d3.select("body").on("keydown",f.deleteSelected),alchemy.generateLayout(),alchemy.controlDash.init(),c.forceLocked||alchemy.force.on("tick",alchemy.layout.tick).start(),null!=c.afterLoad&&("function"==typeof c.afterLoad?c.afterLoad():"string"==typeof c.afterLoad&&(alchemy[c.afterLoad]=!0)),c.initialScale!==alchemy.defaults.initialScale?void alchemy.interactions.zoom().scale(c.initialScale):c.initialTranslate!==alchemy.defaults.initialTranslate?void alchemy.interactions.zoom().translate(c.initialTranslate):((c.cluster||c.directedEdges)&&(d=d3.select(""+alchemy.conf.divSelector+" svg").append("svg:defs")),c.directedEdges&&(b=c.edgeArrowSize+2*c.edgeWidth(),g=d.append("svg:marker").attr("id","arrow").attr("viewBox","0 -"+.4*b+" "+b+" "+b).attr("markerUnits","userSpaceOnUse").attr("markerWidth",b).attr("markerHeight",b).attr("orient","auto"),g.append("svg:path").attr("d","M "+b+",0 L 0,"+.4*b+" L 0,-"+.4*b),c.curvedEdges?g.attr("refX",b+1):g.attr("refX",1)),c.showEditor?(e=new alchemy.editor.Editor,e.startEditor()):void 0)}}.call(this),function(){alchemy.stats={init:function(){return alchemy.stats.update()},nodeStats:function(){var a,b,c,d,e,f,g,h,i,j,k,l;if(g="",f=d3.selectAll(".node")[0].length,a=d3.selectAll(".node.active")[0].length,c=d3.selectAll(".node.inactive")[0].length,g+="<li class = 'list-group-item gen_node_stat'>Number of nodes: <span class='badge'>"+f+"</span></li>",g+="<li class = 'list-group-item gen_node_stat'>Number of active nodes: <span class='badge'>"+a+"</span></li>",g+="<li class = 'list-group-item gen_node_stat'>Number of inactive nodes: <span class='badge'>"+c+"</span></li>",alchemy.conf.nodeTypes){for(e=Object.keys(alchemy.conf.nodeTypes),i="",l=alchemy.conf.nodeTypes[e],j=0,k=l.length;k>j;j++)h=l[j],b=h.replace("_"," "),f=d3.selectAll("g.node."+h)[0].length,i+="<li class = 'list-group-item nodeType' id='li-"+h+"' name = "+b+">Number of nodes of type "+b+": <span class='badge'>"+f+"</span></li>";g+=i}return d="<li id='node-stats-graph' class='list-group-item'></li>",g+=d,$("#node-stats").html(g)},edgeStats:function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n;if(d=null,f=d3.selectAll(".edge")[0].length,a=d3.selectAll(".edge.active")[0].length,h=d3.selectAll(".edge.inactive")[0].length,e="<li class = 'list-group-item gen_edge_stat'>Number of relationships: <span class='badge'>"+f+"</span></li> <li class = 'list-group-item gen_edge_stat'>Number of active relationships: <span class='badge'>"+a+"</span></li> <li class = 'list-group-item gen_edge_stat'>Number of inactive relationships: <span class='badge'>"+h+"</span></li> <li id='edge-stats-graph' class='list-group-item'></li>",alchemy.conf.edgeTypes){for(d=[],m=d3.selectAll(".edge")[0],i=0,k=m.length;k>i;i++)c=m[i],currentRelationshipTypes[[c].caption]=!0;for(n=alchemy.conf.edgeTypes,j=0,l=n.length;l>j;j++)g=n[j],g&&(b=g.replace("_"," "),f=d3.selectAll(".edge."+g)[0].length,d.push([""+b,f]))}return $("#rel-stats").html(e),alchemy.stats.insertSVG("edge",d),d},nodeStats:function(){var a,b,c,d,e,f,g,h,i,j,k;if(c=null,h=d3.selectAll(".node")[0].length,a=d3.selectAll(".node.active")[0].length,b=d3.selectAll(".node.inactive")[0].length,alchemy.conf.nodeTypes)for(c=[],e=Object.keys(alchemy.conf.nodeTypes),k=alchemy.conf.nodeTypes[e],i=0,j=k.length;j>i;i++)g=k[i],f=d3.selectAll("g.node."+g)[0].length,c.push([""+g,f]);return d="<li class = 'list-group-item gen_node_stat'>Number of nodes: <span class='badge'>"+h+"</span></li> <li class = 'list-group-item gen_node_stat'>Number of active nodes: <span class='badge'>"+a+"</span></li> <li class = 'list-group-item gen_node_stat'>Number of inactive nodes: <span class='badge'>"+b+"</span></li> <li id='node-stats-graph' class='list-group-item'></li>",$("#node-stats").html(d),alchemy.stats.insertSVG("node",c),c},insertSVG:function(a,b){var c,d,e,f,g,h,i,j;return null===b?d3.select("#"+a+"-stats-graph").html("<br><h4 class='no-data'>There are no "+a+"Types listed in your conf.</h4>"):(j=.25*alchemy.conf.graphWidth(),f=250,h=j/4,e=d3.scale.category20(),c=d3.svg.arc().outerRadius(h-10).innerRadius(h/2),g=d3.layout.pie().sort(null).value(function(a){return a[1]}),i=d3.select("#"+a+"-stats-graph").append("svg").append("g").style({width:j,height:f}).attr("transform","translate("+j/2+","+f/2+")"),d=i.selectAll(".arc").data(g(b)).enter().append("g").classed("arc",!0).on("mouseover",function(a,c){return d3.select("#"+b[c][0]+"-stat").classed("hidden",!1)}).on("mouseout",function(a,c){return d3.select("#"+b[c][0]+"-stat").classed("hidden",!0)}),d.append("path").attr("d",c).attr("stroke",function(a,b){return e(b)}).attr("stroke-width",2).attr("fill-opacity","0.3"),d.append("text").attr("transform",function(a){return"translate("+c.centroid(a)+")"}).attr("id",function(a,c){return""+b[c][0]+"-stat"}).attr("dy",".35em").classed("hidden",!0).text(function(a,c){return b[c][0]}))},update:function(){return alchemy.conf.nodeStats===!0&&alchemy.stats.nodeStats(),alchemy.conf.edgeStats===!0?alchemy.stats.edgeStats():void 0}}}.call(this),function(){alchemy.updateGraph=function(a){var b,c,d;if(null==a&&(a=!0),alchemy.edge=alchemy.vis.selectAll("g.edge").data(_.map(alchemy._edges,function(a){return a._d3}),function(a){return a.id}),alchemy.node=alchemy.vis.selectAll("g.node").data(_.map(alchemy._nodes,function(a){return a._d3}),function(a){return a.id}),a){for(alchemy.layout.positionRootNodes(),this.force.start();this.force.alpha()>.005;)alchemy.force.tick();b=new alchemy.drawing.DrawEdges,b.createEdge(alchemy.edge),c=new alchemy.drawing.DrawNodes,c.createNode(alchemy.node),d=!0,console.log(Date()+" completed initial computation")}return alchemy.vis.selectAll("g.node").attr("transform",function(a){return"translate("+a.x+", "+a.y+")"}),alchemy.node.exit().remove()}}.call(this),function(){alchemy.defaults={graphWidth:function(){return d3.select(this.divSelector).node().parentElement.clientWidth},graphHeight:function(){return"BODY"===d3.select(this.divSelector).node().parentElement.nodeName?window.innerHeight:d3.select(this.divSelector).node().parentElement.clientHeight},alpha:.5,collisionDetection:!0,nodeOverlap:25,fixNodes:!1,fixRootNodes:!1,forceLocked:!0,linkDistancefn:"default",nodePositions:null,showEditor:!1,captionToggle:!1,toggleRootNodes:!1,removeElement:!1,cluster:!1,clusterKey:"cluster",clusterColours:d3.shuffle(["#DD79FF","#FFFC00","#00FF30","#5168FF","#00C0FF","#FF004B","#00CDCD","#f83f00","#f800df","#ff8d8f","#ffcd00","#184fff","#ff7e00"]),clusterControl:!1,nodeStats:!1,edgeStats:!1,edgeFilters:!1,nodeFilters:!1,edgesToggle:!1,nodesToggle:!1,zoomControls:!1,nodeCaption:"caption",nodeStyle:{},nodeColour:null,nodeMouseOver:"caption",nodeRadius:10,nodeTypes:null,rootNodes:"root",rootNodeRadius:15,edgeCaption:"caption",edgeClick:"default",edgeStyle:function(){return null},edgeTypes:null,curvedEdges:!1,edgeWidth:function(){return 4},edgeOverlayWidth:20,directedEdges:!1,edgeArrowSize:5,search:!1,searchMethod:"contains",afterLoad:"afterLoad",divSelector:"#alchemy",dataSource:null,initialScale:1,initialTranslate:[0,0],scaleExtent:[.5,2.4],dataWarning:"default",warningMessage:"There be no data!  What's going on?"}}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.drawing.DrawEdge=function(){function b(){this.setInteractions=a(this.setInteractions,this),this.styleText=a(this.styleText,this),this.classEdge=a(this.classEdge,this),this.styleLink=a(this.styleLink,this),this.createLink=a(this.createLink,this);var b;b=alchemy.conf,this.curved=b.curvedEdges,this.directed=b.directedEdges,this.utils=new alchemy.drawing.EdgeUtils}return b.prototype.createLink=function(a){var b,c,d;return b=alchemy.conf,c=alchemy.interactions,d=this.utils,this.curved?(a.append("path").attr("class","edge-line").attr("id",function(a){return"path-"+a.id}),a.filter(function(a){return null!=a.caption}).append("text"),a.append("path").attr("class","edge-handler").style("stroke-width",""+b.edgeOverlayWidth)):(a.append("line").attr("class","edge-line").attr("shape-rendering","optimizeSpeed").style("stroke",function(a){return d.edgeStyle(a)}).style("stroke-width",function(a){var b;return b=alchemy._edges[a.id].properties,alchemy.conf.edgeWidth(b)}),a.filter(function(a){return null!=a.caption}).append("text"),a.append("rect").attr("class","edge-handler"))},b.prototype.styleLink=function(a){var b,c;return b=alchemy.conf,c=this.utils,this.curved?(a.selectAll("path").attr("d",function(a){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;return d=c.edgeAngle(a),n=Math.abs(d)>90?-1:1,m=function(a){return 0!==a?0>a?-1:1:0}(d),q=c.startLine(a),i=c.endLine(a),o=q.x,p=q.y,r=i.x,s=i.y,g=r-o,h=s-p,j=Math.sqrt(g*g+h*h),k=(g*alchemy.conf.nodeRadius+2)/j,l=(h*alchemy.conf.nodeRadius+2)/j,e=-m*b.edgeArrowSize+k,f=n*b.edgeArrowSize+l,"M "+(o-k)+","+(p-l)+" A "+j+", "+j+" "+c.edgeAngle(a)+" 0, 1 "+(r-e)+", "+(s-f)
}),a.select("path.edge-line").style("stroke",function(a){return c.edgeStyle(a)})):(a.select(".edge-line").each(function(a){var b,d;return d=c.startLine(a),b=c.endLine(a),d3.select(this).attr({x1:d.x,y1:d.y,x2:b.x,y2:b.y})}),a.select(".edge-handler").attr("x",0).attr("y",-b.edgeOverlayWidth/2).attr("height",b.edgeOverlayWidth).attr("width",function(a){return c.edgeLength(a)}).attr("transform",function(a){return"translate("+a.source.x+", "+a.source.y+") rotate("+c.edgeAngle(a)+")"})),this.directed?a.select(".edge-line").attr("marker-end","url(#arrow)"):void 0},b.prototype.classEdge=function(a){return a.classed("active",!0)},b.prototype.styleText=function(a){var b;return b=this.utils,this.curved?a.select("text").attr("dx",function(a){return b.middlePath(a).x}).attr("dy",function(a){return b.middlePath(a).y+20}).attr("transform",function(a){return"rotate("+b.captionAngle(a)+" "+b.middlePath(a).x+" "+b.middlePath(a).y+")"}).text(function(a){return a.caption}):a.select("text").attr("dx",function(a){return b.middleLine(a).x}).attr("dy",function(a){return b.middleLine(a).y-5}).attr("transform",function(a){return"rotate("+b.captionAngle(a)+" "+b.middleLine(a).x+" "+b.middleLine(a).y+")"}).text(function(a){return a.caption})},b.prototype.setInteractions=function(a){var b,c;return b="editor"===alchemy.getState("interactions"),b?(c=new alchemy.editor.Interactions,a.select(".edge-handler").on("click",c.edgeClick)):a.select(".edge-handler").on("click",alchemy.interactions.edgeClick)},b}()}.call(this),function(){alchemy.drawing.DrawEdges=function(){function a(){this.utils=new alchemy.drawing.EdgeUtils,this.drawEdge=new alchemy.drawing.DrawEdge(this.utils)}return a.prototype.createEdge=function(a){return a.enter().append("g").attr("id",function(a){return"edge-"+a.id}).attr("class",function(a){var b;return b=alchemy._edges[a.id].properties.caption,"edge "+b}).attr("source-target",function(a){return""+a.source.id+"-"+a.target.id}),this.drawEdge.createLink(a),this.drawEdge.classEdge(a),this.drawEdge.styleLink(a),this.drawEdge.styleText(a),this.drawEdge.setInteractions(a),a.exit().remove()},a.prototype.updateEdge=function(a){return this.drawEdge.classEdge(a),this.drawEdge.styleLink(a),this.drawEdge.styleText(a),this.drawEdge.setInteractions(a)},a}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.drawing.DrawNode=function(){function b(){this.styleNode=a(this.styleNode,this),this.setInteractions=a(this.setInteractions,this),this.createNode=a(this.createNode,this),this.styleText=a(this.styleText,this);var b,c,d,e;c=alchemy.interactions,b=alchemy.conf,d=alchemy._nodes,c=alchemy.interactions,this.utils=new alchemy.drawing.NodeUtils,e=this.utils,this._styleText=function(a){return a.selectAll("text").attr("dy",function(a){return d[a.id].properties.root?b.rootNodeRadius/2:2*b.nodeRadius-5}).text(function(a){return e.nodeText(a)})},this._createNode=function(a){return a.append("circle").attr("id",function(a){return"circle-"+a.id}),a.append("svg:text").attr("id",function(a){return"text-"+a.id})},this._styleNode=function(a){return a.select("circle").attr("r",function(a){return a.r}).attr("shape-rendering","optimizeSpeed").attr("style",function(a){return e.nodeStyle(a)})},this._setInteractions=function(a){var c,d,e,f,g,h;return e="editor"===alchemy.getState("interactions"),c=alchemy.interactions,d=d3.behavior.drag().origin(Object).on("dragstart",null).on("drag",null).on("dragend",null),e?(f=new alchemy.editor.Interactions,a.on("mouseup",f.nodeMouseUp).on("mouseover",f.nodeMouseOver).on("mouseout",f.nodeMouseOut).on("dblclick",c.nodeDoubleClick).on("click",f.nodeClick)):(a.on("mouseup",null).on("mouseover",c.nodeMouseOver).on("mouseout",c.nodeMouseOut).on("dblclick",c.nodeDoubleClick).on("click",c.nodeClick),d=d3.behavior.drag().origin(Object).on("dragstart",c.nodeDragStarted).on("drag",c.nodeDragged).on("dragend",c.nodeDragended),b.fixNodes||(g=a.filter(function(a){return a.root!==!0}),g.call(d)),b.fixRootNodes?void 0:(h=a.filter(function(a){return a.root===!0}),h.call(d)))}}return b.prototype.styleText=function(a){return this._styleText(a)},b.prototype.createNode=function(a){return this._createNode(a)},b.prototype.setInteractions=function(a){return this._setInteractions(a)},b.prototype.styleNode=function(a){return this._styleNode(a)},b}()}.call(this),function(){alchemy.drawing.DrawNodes=function(){function a(){this.drawNode=new alchemy.drawing.DrawNode}return a.prototype.createNode=function(a){return a.enter().append("g").attr("class",function(a){var b;return b=alchemy._nodes[a.id].getProperties(),null!=a.nodeType?"node "+a.nodeType+" active":"node active"}).attr("id",function(a){return"node-"+a.id}).classed("root",function(a){return a.root}),this.drawNode.createNode(a),this.drawNode.styleNode(a),this.drawNode.styleText(a),this.drawNode.setInteractions(a),a.exit().remove()},a.prototype.updateNode=function(a){return this.drawNode.styleNode(a),this.drawNode.styleText(a),this.drawNode.setInteractions(a)},a}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.drawing.EdgeUtils=function(){function b(){this.captionAngle=a(this.captionAngle,this);var b,c,d,e,f,g,h;d=alchemy.conf,g=alchemy._nodes,e=alchemy._edges,alchemy.conf.cluster?(c=alchemy.layout._clustering,this.edgeStyle=function(a){var b,d,e,f;return b=alchemy.conf.clusterKey,g[a.source.id].properties.root||g[a.target.id].properties.root?(f=g[a.source.id].properties.root?g[a.target.id].properties[b]:g[a.source.id].properties[b],""+c.getClusterColour(f)):g[a.source.id].properties[b]===g[a.target.id].properties[b]?(f=g[a.source.id].properties[b],""+c.getClusterColour(f)):g[a.source.id].properties[b]!==g[a.target.id].properties[b]?(e=""+g[a.source.id].properties[b]+"-"+g[a.target.id].properties[b],d="cluster-gradient-"+e,"url(#"+d+")"):void 0}):this.edgeStyle=null==alchemy.conf.edgeStyle||alchemy.conf.cluster?function(){return""}:function(a){return""+alchemy.conf.edgeStyle(a)},h=function(a){return a*a},f=function(a){var b,c;return c=a.target.x-a.source.x,b=a.target.y-a.source.y,Math.sqrt(b*b+c*c)},this._edgeWalk=function(a,b){var c,e,g;return g=a.target.x-a.source.x,e=a.target.y-a.source.y,f=Math.sqrt(e*e+g*g),"middle"===b?(c=f/2,{x:a.source.x+g*c/f,y:a.source.y+e*c/f}):"linkStart"===b?(c=a.source.r+a.source["stroke-width"],{x:a.source.x+g*c/f,y:a.source.y+e*c/f}):"linkEnd"===b?(c=d.curvedEdges?f:f-(a.target.r+a.target["stroke-width"]),d.directedEdges&&(c-=d.edgeArrowSize),{x:a.source.x+g*c/f,y:a.source.y+e*c/f}):void 0},b=alchemy.conf.edgeCaption,"string"==typeof b?this.edgeCaption=function(a){return e[a.id].properties[b]}:"function"==typeof b&&(this.edgeCaption=function(a){return b(e[a.id])})}return b.prototype.middleLine=function(a){return this._edgeWalk(a,"middle")},b.prototype.startLine=function(a){return this._edgeWalk(a,"linkStart")},b.prototype.endLine=function(a){return this._edgeWalk(a,"linkEnd")},b.prototype.edgeLength=function(a){var b,c,d;return d=a.target.x-a.source.x,b=a.target.y-a.source.y,c=Math.sqrt(b*b+d*d)},b.prototype.edgeAngle=function(a){var b,c;return c=a.target.x-a.source.x,b=a.target.y-a.source.y,Math.atan2(b,c)/Math.PI*180},b.prototype.captionAngle=function(a){var b;return b=this.edgeAngle(a),-90>b||b>90?b+=180:b},b.prototype.hyp=function(a){return hyp(a)},b.prototype.middlePath=function(a){var b,c;return c=d3.select("#path-"+a.id).node(),b=c.getPointAtLength(c.getTotalLength()/2),{x:b.x,y:b.y}},b}()}.call(this),function(){alchemy.drawing.NodeUtils=function(){function a(){var a,b;b=alchemy._nodes,a=alchemy.conf,this.nodeColours=a.cluster?function(b){var c,d,e,f,g;return g=alchemy._nodes[b.id].properties,d=alchemy.layout._clustering.clusterMap,c=alchemy.conf.clusterKey,f=d[g[c]]%a.clusterColours.length,e=a.clusterColours[f],""+e}:function(){var b;return a.nodeColour?b=a.nodeColour:""}}return a.prototype.nodeStyle=function(a){var b,c;return b=this.nodeColours(a),c="editor"===alchemy.getState("interactions")?"#E82C0C":b,"fill: "+b+"; stroke: "+b+"; stroke-width: "+a["stroke-width"]+";"},a.prototype.nodeText=function(a){var b,c;return c=alchemy._nodes[a.id],alchemy.conf.nodeCaption&&"string"==typeof alchemy.conf.nodeCaption?null!=c.properties[alchemy.conf.nodeCaption]?c.properties[alchemy.conf.nodeCaption]:"":alchemy.conf.nodeCaption&&"function"==typeof alchemy.conf.nodeCaption?(b=alchemy.conf.nodeCaption(c),(void 0===b||"undefined"===String(b))&&(alchemy.log.caption="At least one caption returned undefined",alchemy.conf.caption=!1),b):void 0},a}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.editor.Editor=function(){function b(){this.nodeEditor=a(this.nodeEditor,this),this.startEditor=a(this.startEditor,this),this.utils=new alchemy.editor.Utils}return b.prototype.editorContainerHTML='<div id="editor-header" data-toggle="collapse" data-target="#editor #element-options">\n    <h3>Editor</h3><span class="fa fa-2x fa-caret-right"></span>\n</div>\n<div id="element-options" class="collapse">\n    <ul class="list-group"> \n        <li class="list-group-item" id="remove">Remove Selected</li> \n        <li class="list-group-item" id="editor-interactions">Editor mode enabled, click to disable editor interactions</li>\n    </ul>\n</div>',b.prototype.elementEditorHTML=function(a){return"<h4>"+a+' Editor</h4>\n<form id="add-property-form">\n    <div id="add-property">\n        <input class="form-control" id="add-prop-key" placeholder="New Property Name">\n        <input class="form-control" id="add-prop-value" placeholder="New Property Value">\n    </div>\n    <input id="add-prop-submit" type="submit" value="Add Property" placeholder="add a property to this node">\n</form>\n<form id="properties-list">\n    <input id="update-properties" type="submit" value="Update Properties">\n</form>'},b.prototype.startEditor=function(){var a,b,c,d,e;return a=alchemy.conf.divSelector,d=this.editorContainerHTML,b=d3.select(""+a+" #control-dash").append("div").attr("id","editor").html(d),b.select("#editor-header").on("click",function(){return d3.select("#element-options").classed("in")?d3.select("#editor-header>span").attr("class","fa fa-2x fa-caret-right"):d3.select("#editor-header>span").attr("class","fa fa-2x fa-caret-down")}),c=b.select("#element-options ul #editor-interactions").on("click",function(){return d3.select(this).attr("class",function(){return"editor"===alchemy.getState()?(alchemy.setState("interactions","default"),"inactive list-group-item"):(alchemy.setState("interactions","editor"),"active list-group-item")}).html(function(){return"editor"===alchemy.getState()?"Disable Editor Interactions":"Enable Editor Interactions"})}),b.select("#element-options ul #remove").on("click",function(){return alchemy.editor.remove()}),e=this.utils,c.on("click",function(){return d3.select("#editor-interactions").classed("active")?(e.disableEditor(),d3.select("#editor-interactions").classed({active:!1,inactive:!0}).html("Editor mode disabled, click to enable editor interactions")):(e.enableEditor(),d3.select("#editor-interactions").classed({active:!0,inactive:!1}).html("Editor mode enabled, click to disable editor interactions"))})},b.prototype.nodeEditor=function(a){var b,c,d,e,f,g,h,i,j,k,l,m;c=alchemy.conf.divSelector,d=d3.select(""+c+" #control-dash-wrapper #control-dash #editor"),i=d.select("#element-options"),f=this.elementEditorHTML("Node"),e=i.append("div").attr("id","node-editor").html(f),e.attr("class",function(){return d3.select("#editor-interactions").classed("active")?"enabled":"hidden"}),b=d.select("#node-editor form #add-property"),b.select("#node-add-prop-key").attr("placeholder","New Property Name").attr("value",null),b.select("#node-add-prop-value").attr("placeholder","New Property Value").attr("value",null),d3.select("#add-property-form").on("submit",function(){var a,b;return event.preventDefault(),a=d3.select("#add-prop-key").property("value"),a=a.replace(/\s/g,"_"),b=d3.select("#add-prop-value").property("value"),l(a,b,!0),d3.selectAll("#add-property .edited-property").classed({"edited-property":!1}),this.reset()}),g=alchemy._nodes[a.id].getProperties(),d3.select("#node-"+a.id).classed({editing:!0}),k=d.select("#node-editor #properties-list");for(j in g)m=g[j],h=k.append("div").attr("id","node-"+j).attr("class","property form-inline form-group"),h.append("label").attr("for","node-"+j+"-input").attr("class","form-control property-name").text(""+j),h.append("input").attr("id","node-"+j+"-input").attr("class","form-control property-value").attr("value",""+m);return d3.select("#properties-list").on("submit",function(){var a,b,c,d,e,f,g;for(event.preventDefault(),b=d3.selectAll(".edited-property"),g=b[0],e=0,f=g.length;f>e;e++)j=g[e],c=d3.select(j),a=c.select("label").text(),d=c.select("input").attr("value"),l(a,d,!1);return d3.selectAll("#node-properties-list .edited-property").classed({"edited-property":!1}),this.reset()}),d3.selectAll("#add-prop-key, #add-prop-value, .property").on("keydown",function(){return 13===d3.event.keyCode&&event.preventDefault(),d3.select(this).classed({"edited-property":!0})}),l=function(b,c,d){var e,f;return f=a.id,""!==b&&""!==c?(alchemy._nodes[f].setProperty(""+b,""+c),e=new alchemy.drawing.DrawNodes,e.updateNode(d3.select("#node-"+f)),d===!0?(d3.select("#node-add-prop-key").attr("value","property added/updated to key: "+b),d3.select("#node-add-prop-value").attr("value","property at "+b+" updated to: "+c)):d3.select("#node-"+b+"-input").attr("value","property at "+b+" updated to: "+c)):d===!0?(d3.select("#node-add-prop-key").attr("value","null or invalid input"),d3.select("#node-add-prop-value").attr("value","null or invlid input")):d3.select("#node-"+b+"-input").attr("value","null or invalid input")}},b.prototype.editorClear=function(){return d3.selectAll(".node").classed({editing:!1}),d3.selectAll(".edge").classed({editing:!1}),d3.select("#node-editor").remove(),d3.select("#edge-editor").remove(),d3.select("#node-add-prop-submit").attr("placeholder",function(){return d3.selectAll(".selected").empty()?"select a node or edge to edit properties":"add a property to this element"})},b.prototype.edgeEditor=function(a){var b,c,d,e,f,g,h,i,j,k,l,m;c=alchemy.conf.divSelector,f=d3.select(""+c+" #control-dash-wrapper #control-dash #editor"),i=f.select("#element-options"),h=this.elementEditorHTML("Edge"),g=i.append("div").attr("id","edge-editor").html(h),g.attr("class",function(){return d3.select("#editor-interactions").classed("active")?"enabled":"hidden"}),b=f.select("#edge-editor form #add-property"),b.select("#add-prop-key").attr("placeholder","New Property Name").attr("value",null),b.select("#add-prop-value").attr("placeholder","New Property Value").attr("value",null),d=alchemy._edges[a.id].getProperties(),d3.select("#edge-"+a.id).classed({editing:!0}),k=f.select("#edge-editor #properties-list");for(j in d)m=d[j],e=k.append("div").attr("id","edge-"+j).attr("class","property form-inline form-group"),e.append("label").attr("for","edge-"+j+"-input").attr("class","form-control property-name").text(""+j),e.append("input").attr("id","edge-"+j+"-input").attr("class","form-control property-value").attr("value",""+m);return d3.selectAll("#add-prop-key, #add-prop-value, .property").on("keydown",function(){return 13===d3.event.keyCode&&event.preventDefault(),d3.select(this).classed({"edited-property":!0})}),d3.select("#add-property-form").on("submit",function(){var a,b;return event.preventDefault(),a=d3.select("#add-prop-key").property("value"),a=a.replace(/\s/g,"_"),b=d3.select("#add-prop-value").property("value"),l(a,b,!0),d3.selectAll("#add-property .edited-property").classed({"edited-property":!1}),this.reset()}),d3.select("#properties-list").on("submit",function(){var a,b,c,d,e,f,g;for(event.preventDefault(),b=d3.selectAll(".edited-property"),g=b[0],e=0,f=g.length;f>e;e++)j=g[e],c=d3.select(j),a=c.select("label").text(),d=c.select("input").property("value"),l(a,d,!1);return d3.selectAll("#properties-list .edited-property").classed({"edited-property":!1}),this.reset()}),l=function(b,c,d){var e,f,g;return f=a.id,""!==b&&""!==c?(alchemy._edges[f].setProperty(""+b,""+c),g=d3.select("#edge-"+f),e=new alchemy.drawing.DrawEdges,e.updateEdge(d3.select("#edge-"+f)),d===!0?(d3.select("#add-prop-key").attr("value","property added/updated to key: "+b),d3.select("#add-prop-value").attr("value","property at "+b+" updated to: "+c)):d3.select("#edge-"+b+"-input").attr("value","property at "+b+" updated to: "+c)):d===!0?(d3.select("#add-prop-key").attr("value","null or invalid input"),d3.select("#add-prop-value").attr("value","null or invlid input")):d3.select("#edge-"+b+"-input").attr("value","null or invalid input")}},b}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.editor.Interactions=function(){function b(){this.reset=a(this.reset,this),this.deleteSelected=a(this.deleteSelected,this),this.addNodeDragended=a(this.addNodeDragended,this),this.addNodeDragging=a(this.addNodeDragging,this),this.addNodeStart=a(this.addNodeStart,this),this.edgeClick=a(this.edgeClick,this),this.nodeClick=a(this.nodeClick,this),this.nodeMouseUp=a(this.nodeMouseUp,this),this.editor=new alchemy.editor.Editor}return b.prototype.nodeMouseOver=function(){var a;return d3.select(this).select("circle").empty()||(a=d3.select(this).select("circle").attr("r"),d3.select(this).select("circle").attr("r",3*a)),this},b.prototype.nodeMouseUp=function(a){return this.sourceNode!==a?(this.mouseUpNode=!0,this.targetNode=a,this.click=!1):this.click=!0,this},b.prototype.nodeMouseOut=function(){var a;return d3.select(this).select("circle").empty()||(a=d3.select(this).select("circle").attr("r"),d3.select(this).select("circle").attr("r",a/3)),this},b.prototype.nodeClick=function(a){var b;return d3.event.stopPropagation(),alchemy.vis.select("#node-"+a.id).empty()||(b=alchemy.vis.select("#node-"+a.id).classed("selected"),alchemy.vis.select("#node-"+a.id).classed("selected",!b)),this.editor.editorClear(),this.editor.nodeEditor(a)},b.prototype.edgeClick=function(a){return d3.event.stopPropagation(),this.editor.editorClear(),this.editor.edgeEditor(a)},b.prototype.addNodeStart=function(a){return d3.event.sourceEvent.stopPropagation(),this.sourceNode=a,d3.select("#dragline").classed({hidden:!1}),this},b.prototype.addNodeDragging=function(){var a,b;return a=d3.event.x,b=d3.event.y,d3.select("#dragline").attr("x1",this.sourceNode.x).attr("y1",this.sourceNode.y).attr("x2",a).attr("y2",b).attr("style","stroke: #FFF"),this},b.prototype.addNodeDragended=function(){var a,b,c;return this.click||(this.mouseUpNode||(a=d3.select("#dragline"),b=a.attr("x2"),c=a.attr("y2"),this.targetNode={id:""+_.uniqueId("addedNode_"),x:parseFloat(b),y:parseFloat(c),caption:"node added"}),this.newEdge={id:""+this.sourceNode.id+"-"+this.targetNode.id,source:this.sourceNode.id,target:this.targetNode.id,caption:"edited"},alchemy.editor.update(this.targetNode,this.newEdge)),this.reset(),this},b.prototype.deleteSelected=function(){switch(d3.event.keyCode){case 8:case 46:if("INPUT"!==d3.select(d3.event.target).node().tagName)return d3.event.preventDefault(),alchemy.editor.remove()}},b.prototype.reset=function(){return this.mouseUpNode=null,this.sourceNode=null,this.targetNode=null,this.newEdge=null,this.click=null,d3.select("#dragline").classed({hidden:!0}).attr("x1",0).attr("y1",0).attr("x2",0).attr("y2",0),this},b}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.editor.Utils=function(){function b(){this.enableEditor=a(this.enableEditor,this),this.drawNodes=new alchemy.drawing.DrawNodes,this.drawEdges=new alchemy.drawing.DrawEdges}return b.prototype.enableEditor=function(){var a,b,c;return alchemy.setState("interactions","editor"),a=alchemy.vis.append("line").attr("id","dragline"),this.drawNodes.updateNode(alchemy.node),this.drawEdges.updateEdge(alchemy.edge),c=d3.selectAll(".selected"),b=new alchemy.editor.Editor,c.empty()||1!==c.length?c.classed({selected:!1}):c.classed("node")?(b.nodeEditor(c.datum()),d3.select("#node-editor").attr("class","enabled").style("opacity",1)):c.classed("edge")?(b.edgeEditor(c.datum()),d3.select("#edge-editor").attr("class","enabled").style("opacity",1)):void 0},b.prototype.disableEditor=function(){return alchemy.setState("interactions","default"),alchemy.vis.select("#dragline").remove(),d3.select("#node-editor").transition().duration(300).style("opacity",0),d3.select("#node-editor").transition().delay(300).attr("class","hidden"),this.drawNodes.updateNode(alchemy.node),d3.selectAll(".node").classed({selected:!1})},b.prototype.remove=function(){var a,b,c,d,e,f,g,h,i,j,k,l;for(e=d3.selectAll(".selected.node"),j=e[0],l=[],f=0,h=j.length;h>f;f++)if(b=j[f],c=d3.select(b).data()[0].id,d=alchemy._nodes[c],null!=d){for(k=d.adjacentEdges,g=0,i=k.length;i>g;g++)a=k[g],alchemy._edges=_.omit(alchemy._edges,""+a),alchemy.edge=alchemy.edge.data(_.map(alchemy._edges,function(a){return a._d3}),function(a){return a.id}),d3.select("#edge-"+a).remove();alchemy._nodes=_.omit(alchemy._nodes,""+c),alchemy.node=alchemy.node.data(_.map(alchemy._nodes,function(a){return a._d3}),function(a){return a.id}),d3.select(b).remove(),l.push("editor"===alchemy.getState("interactions")?alchemy.modifyElements.nodeEditorClear():void 0)}else l.push(void 0);return l},b.prototype.addNode=function(a){var b;return b=alchemy._nodes[a.id]=new alchemy.models.Node({id:""+a.id}),b.setProperty("caption",a.caption),b.setD3Property("x",a.x),b.setD3Property("y",a.y),alchemy.node=alchemy.node.data(_.map(alchemy._nodes,function(a){return a._d3}),function(a){return a.id})},b.prototype.addEdge=function(a){var b;return b=alchemy._edges[a.id]=new alchemy.models.Edge(a),alchemy.edge=alchemy.edge.data(_.map(alchemy._edges,function(a){return a._d3}),function(a){return a.id})},b.prototype.update=function(a,b){return this.mouseUpNode?(alchemy.editor.addEdge(b),this.drawEdges.createEdge(alchemy.edge)):(alchemy.editor.addNode(a),alchemy.editor.addEdge(b),this.drawEdges.createEdge(alchemy.edge),this.drawNodes.createNode(alchemy.node)),alchemy.layout.tick()},b}()}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.models.Edge=function(){function b(b){this.allNodesActive=a(this.allNodesActive,this),this.getProperties=a(this.getProperties,this),this.setD3Property=a(this.setD3Property,this),this.setProperty=a(this.setProperty,this),this.toPublic=a(this.toPublic,this);var c,d;d=alchemy.conf,this.id=null!=b.id?b.id:""+b.source+"-"+b.target,this.edgeStyle=_.merge(d.edgeStyle,this.edgeStyle),this.state={active:!0},this.properties=b,this._edgeAttributes=new alchemy.models.EdgeAttributes,c=this._edgeAttributes.edgeCaption(this.properties),c&&(this.properties.caption=c),this._d3={id:this.id,source:alchemy._nodes[this.properties.source]._d3,target:alchemy._nodes[this.properties.target]._d3,caption:c},alchemy._nodes[""+b.source].addEdge(this.id),alchemy._nodes[""+b.target].addEdge(this.id)}return b.prototype.toPublic=function(){var a;return a=_.keys(this.properties),_.pick(this,a)},b.prototype.setProperty=function(a,b){return this.properties[a]=b,"source"===a||"target"===a?this.setD3Property(a,alchemy._nodes[b]._d3):void 0},b.prototype.setD3Property=function(a,b){return this._d3[a]=b},b.prototype.getProperties=function(){return this.properties},b.prototype.allNodesActive=function(){var a,b;return a=d3.select("#node-"+this.properties.source),b=d3.select("#node-"+this.properties.target),!a.classed("inactive")&&!b.classed("inactive")},b}()}.call(this),function(){alchemy.models.EdgeAttributes=function(){function a(){var a,b;b=alchemy.conf,a=b.edgeCaption,"string"==typeof a?this.edgeCaption=function(b){return b[a]}:"function"==typeof a&&(this.edgeCaption=function(b){return a(b)})}return a}()}.call(this),function(){}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};alchemy.models.Node=function(){function b(c){this.removeProperty=a(this.removeProperty,this),this.setD3Property=a(this.setD3Property,this),this.setProperty=a(this.setProperty,this),this.getProperties=a(this.getProperties,this);var d,e,f;d=alchemy.conf,e=new alchemy.models.NodeAttributes,f=e.nodeSize(c),this.id=c.id,this.properties=c,this.state={active:!0},this._d3={id:c.id,r:f,"stroke-width":e.strokeWidth(f),root:this.properties[d.rootNodes]},this.nodeStyle=_.merge(d.nodeStyle,this.nodeStyle),this.adjacentEdges=[],b.prototype.all.push(this.id),d.nodeTypes&&(this.nodeType=this.properties[Object.keys(alchemy.conf.nodeTypes)],this.nodeType&&(this._d3.nodeType=this.nodeType))}return b.prototype.addEdge=function(a){return this.adjacentEdges.push(a),this.adjacentEdges=_.uniq(this.adjacentEdges)},b.prototype.outDegree=function(){return this.adjacentEdges.length},b.prototype.neighbors=function(){var a;return a=new RegExp("[("+this.id+"\\-)(\\-"+this.id+")]","g"),_.map(this.adjacentEdges,function(b){return b.replace(a,"")})},b.prototype.getProperties=function(){return this.properties},b.prototype.setProperty=function(a,b){return this.properties[a]=b},b.prototype.setD3Property=function(a,b){return this._d3[a]=b},b.prototype.removeProperty=function(a){return null!=this.properties.property?_.omit(this.properties,a):void 0},b.prototype.all=[],b}()}.call(this),function(){alchemy.models.NodeAttributes=function(){function a(){var a;a=alchemy.conf.rootNodes,"function"==typeof alchemy.conf.nodeRadius?this.nodeSize=function(b){return null!=b[a]&&d[a]?alchemy.conf.rootNodeRadius(b):alchemy.conf.nodeRadius(b)}:"string"==typeof alchemy.conf.nodeRadius?this.nodeSize=function(b){var c;return c=alchemy.conf.nodeRadius,null!=b[a]?alchemy.conf.rootNodeRadius:null!=b[c]?b[c]:alchemy.defaults.rootNodeRadius}:"number"==typeof alchemy.conf.nodeRadius&&(this.nodeSize=function(b){return null!=b[a]?alchemy.conf.rootNodeRadius:alchemy.conf.nodeRadius})}return a.prototype.strokeWidth=function(a){return a/3},a}()}.call(this),function(){alchemy.utils.warnings={dataWarning:function(){var a;return alchemy.conf.dataWarning&&"function"==typeof alchemy.conf.dataWarning?alchemy.conf.dataWarning():void("default"===alchemy.conf.dataWarning&&(a='<div class="modal fade" id="no-results">\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n                <h4 class="modal-title">Sorry!</h4>\n            </div>\n            <div class="modal-body">\n                <p>'+alchemy.conf.warningMessage+'</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n            </div>\n        </div>\n    </div>\n</div>',$("body").append(a),$("#no-results").modal("show"),$("#loading-spinner").hide()))},divWarning:function(){return"create an element that matches the value for 'divSelector' in your conf.\nFor instance, if you are using the default 'divSelector' conf, simply provide\n<div id='#alchemy'></div>."}}}.call(this);