(function(){var t={};if(typeof module!=="undefined"){exports=module.exports=t}else{this.ss=t}function u(){var B={},C=[];B.data=function(D){if(!arguments.length){return C}C=D.slice();return B};B.mb=function(){var F,E;if(C.length==1){F=0;E=C[0][1]}else{var J=0,I=0,G=0,D=0;for(var H=0;H<C.length;H++){J+=C[H][0];I+=C[H][1];G+=C[H][0]*C[H][0];D+=C[H][0]*C[H][1]}F=((C.length*D)-(J*I))/((C.length*G)-(J*J));E=(I/C.length)-((F*J)/C.length)}return{m:F,b:E}};B.m=function(){return B.mb().m};B.b=function(){return B.mb().b};B.line=function(){var F=B.mb(),E=F.m,D=F.b;return function(G){return D+(E*G)}};return B}function q(G,I){if(G.length<2){return 1}var J=0,B;for(var H=0;H<G.length;H++){J+=G[H][1]}B=J/G.length;var E=0;for(var F=0;F<G.length;F++){E+=Math.pow(B-G[F][1],2)}var D=0;for(var C=0;C<G.length;C++){D+=Math.pow(G[C][1]-I(G[C][0]),2)}return 1-(D/E)}function w(){var B={},C=0,D={};B.train=function(H,G){if(!D[G]){D[G]={}}for(var F in H){var E=H[F];if(D[G][F]===undefined){D[G][F]={}}if(D[G][F][E]===undefined){D[G][F][E]=0}D[G][F][H[F]]++}C++};B.score=function(K){var E={},J;for(var G in K){var F=K[G];for(J in D){if(E[J]===undefined){E[J]={}}if(D[J][G]){E[J][G+"_"+F]=(D[J][G][F]||0)/C}else{E[J][G+"_"+F]=0}}}var H={};for(J in E){for(var I in E[J]){if(H[J]===undefined){H[J]=0}H[J]+=E[J][I]}}return H};return B}function c(B){var D=0;for(var C=0;C<B.length;C++){D+=B[C]}return D}function y(B){if(B.length===0){return null}return c(B)/B.length}function l(B){if(B.length===0){return null}var D=1;for(var C=0;C<B.length;C++){if(B[C]<=0){return null}D*=B[C]}return Math.pow(D,1/B.length)}function v(B){var D;for(var C=0;C<B.length;C++){if(B[C]<D||D===undefined){D=B[C]}}return D}function x(B){var D;for(var C=0;C<B.length;C++){if(B[C]>D||D===undefined){D=B[C]}}return D}function j(B){if(B.length===0){return null}var E=y(B),C=[];for(var D=0;D<B.length;D++){C.push(Math.pow(B[D]-E,2))}return y(C)}function p(B){if(B.length===0){return null}return Math.sqrt(j(B))}function d(B,F){var E=y(B),D=0;for(var C=0;C<B.length;C++){D+=Math.pow(B[C]-E,F)}return D}function m(B){if(B.length<=1){return null}var C=d(B,2);return C/(B.length-1)}function g(B){if(B.length<=1){return null}return Math.sqrt(m(B))}function i(B,G){if(B.length<=1||B.length!=G.length){return null}var F=y(B),C=y(G),E=0;for(var D=0;D<B.length;D++){E+=(B[D]-F)*(G[D]-C)}return E/(B.length-1)}function e(B,F){var E=i(B,F),D=g(B),C=g(F);if(E===null||D===null||C===null){return null}return E/D/C}function k(C){if(C.length===0){return null}var E=C.slice().sort(function(G,F){return G-F});if(E.length%2===1){return E[(E.length-1)/2]}else{var D=E[(E.length/2)-1];var B=E[(E.length/2)];return(D+B)/2}}function n(B){if(B.length===0){return null}else{if(B.length===1){return B[0]}}var C=B.slice().sort(function(J,I){return J-I});var G=C[0],H,F=0,E=1;for(var D=1;D<C.length+1;D++){if(C[D]!==G){if(E>F){F=E;E=1;H=G}G=C[D]}else{E++}}return H}function s(E,B){var C=y(E);var F=p(E);var D=Math.sqrt(E.length);return(C-B)/(F/D)}function a(D,E){if(D.length===0){return null}if(E>=1||E<=0){return null}var C=D.slice().sort(function(G,F){return G-F});var B=(C.length)*E;if(B%1!==0){return C[Math.ceil(B)-1]}else{if(D.length%2===0){return(C[B-1]+C[B])/2}else{return C[B]}}}function b(B){if(B.length===0){return null}return a(B,0.75)-a(B,0.25)}function f(B){if(!B||B.length===0){return null}var D=k(B),E=[];for(var C=0;C<B.length;C++){E.push(Math.abs(B[C]-D))}return k(E)}function A(M,Q){var P=[],B=[],N,L,C=0;for(N=0;N<M.length+1;N++){var K=[],J=[];for(L=0;L<Q+1;L++){K.push(0);J.push(0)}P.push(K);B.push(J)}for(N=1;N<Q+1;N++){P[1][N]=1;B[1][N]=0;for(L=2;L<M.length+1;L++){B[L][N]=Infinity}}for(var I=2;I<M.length+1;I++){var O=0,H=0,R=0,F=0;for(var G=1;G<I+1;G++){var E=I-G+1,D=M[E-1];R++;O+=D;H+=D*D;C=H-(O*O)/R;F=E-1;if(F!==0){for(L=2;L<Q+1;L++){if(B[I][L]>=(C+B[F][L-1])){P[I][L]=E;B[I][L]=C+B[F][L-1]}}}}P[I][1]=1;B[I][1]=C}return{lower_class_limits:P,variance_combinations:B}}function o(E,F,D){var C=E.length-1,B=[],G=D;B[D]=E[E.length-1];B[0]=E[0];while(G>1){B[G-1]=E[F[C][G]-2];C=F[C][G]-1;G--}return B}function h(D,B){if(B>D.length){return null}D=D.slice().sort(function(G,F){return G-F});var C=A(D,B),E=C.lower_class_limits;return o(D,E,B)}function z(B){if(B.length<3){return null}var E=B.length,C=Math.pow(g(B),3),D=d(B,3);return E*D/((E-1)*(E-2)*C)}function r(){var E=!!(Object.defineProperty&&Object.defineProperties);if(!E){throw new Error("without defineProperty, simple-statistics cannot be mixed in")}var B=["median","standard_deviation","sum","mean","min","max","quantile","geometric_mean"];function D(F){return function(){var G=Array.prototype.slice.apply(arguments);G.unshift(this);return t[F].apply(t,G)}}for(var C=0;C<B.length;C++){Object.defineProperty(Array.prototype,B[C],{value:D(B[C]),configurable:true,enumerable:false,writable:true})}}t.linear_regression=u;t.standard_deviation=p;t.r_squared=q;t.median=k;t.mean=y;t.mode=n;t.min=v;t.max=x;t.sum=c;t.quantile=a;t.iqr=b;t.mad=f;t.sample_covariance=i;t.sample_correlation=e;t.sample_variance=m;t.sample_standard_deviation=g;t.sample_skewness=z;t.geometric_mean=l;t.variance=j;t.t_test=s;t.jenksMatrices=A;t.jenksBreaks=o;t.jenks=h;t.bayesian=w;t.average=y;t.interquartile_range=b;t.mixin=r;t.median_absolute_deviation=f})(this);